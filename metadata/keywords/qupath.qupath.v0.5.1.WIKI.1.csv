quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Security,access,access,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Testability,log,log,"ject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for ima",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Usability,undo,undo,"ed for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Integrability,interface,interfaces,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
Modifiability,extend,extends,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
Security,hash,hashCode,"; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
Integrability,interface,interfaces,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
Modifiability,extend,extends,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
Security,hash,hashCode,"ted Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
Availability,avail,availableFonts,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Deployability,install,installStyles,"ble list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStylePr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Integrability,interface,interface,onstr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailab,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Modifiability,extend,extends,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Performance,perform,performed,"files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.Styl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Security,hash,hashCode,"athStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
Integrability,interface,interface,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
Usability,user-friendly,user-friendly,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
Modifiability,extend,extends,". SystemMenuBar (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class SystemMenuBar. java.lang.Object; qupath.lib.gui.prefs.SystemMenuBar. public class SystemMenuBar; extends Object; Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value.; ; The original plan was to make it easier to control if all windows, the main window only, or no windows should; use the system menubar.; . Alas, that doesn't work well - at least on macOS.; If a system menubar is set for the main window only, then its accelerators are still triggered even when; another window with a non-system menubar is active.; . For this reason, there is no option to use the system menubar for the main window only.; This will be reinstated in the future, if a workaround can be found.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; static BooleanProperty; overrideSystemMenuBar. Property requesting that the system menubar should never be used for managed menubars. static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar. Property used to specify whether the system menubar should be used for the main QuPath stage. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. Constructor Summary; Constructors. Constructor; Description; SystemMenuBar();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; getOverrideSystemMenuBar(). Get the current value of the override property, which specifies whether the system menubar should not be used; by any win",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
Security,hash,hashCode,"systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
Integrability,interface,interfaces,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
Modifiability,extend,extends,". SystemMenuBar.SystemMenuBarOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
Security,hash,hashCode,"tem menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
Integrability,interface,interface,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
Modifiability,extend,extends,". DefaultScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
Security,hash,hashCode,"getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
Testability,log,log,"ed on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
Usability,undo,undoAction," insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertQPExImportAction;  ; protected org.controlsfx.control.action.Action; insertQPImportAction;  ; protected org.controlsfx.control.action.Action; killRunningScriptAction;  ; protected org.controlsfx.control.action.Action; pasteAction;  ; protected org.controlsfx.control.action.Action; pasteAndEscapeAction;  ; protected org.controlsfx.control.action.Action; redoAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
Integrability,interface,interface,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
Usability,clear,clear,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
Integrability,interface,interface,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
Modifiability,extend,extends,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
Security,access,access,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
Modifiability,extend,extends,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
Testability,log,logging,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
Availability,down,downsampleFactor,"E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static F",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Deployability,update,update," data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException. Throws:; InterruptedException. runPlugin; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Modifiability,extend,extends,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Performance,load,loadDisplaySettings," static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurem",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Safety,detect,detection,"dDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(Im",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Security,access,access,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Usability,clear,clearAllObjects,"AllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensityClassifications, resetIntensityClassifications, r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
Integrability,interface,interface,". ScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditor. All Known Implementing Classes:; DefaultScriptEditor, RichScriptEditor. public interface ScriptEditor; Minimal interface for a script editor that the GUI can call. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Check if the script editor supports a particular file. Method Details. showEditor; void showEditor(); Show the script editor. showScript; void showScript(String name,; String script); Show the script editor, including a new script with the specified name. Parameters:; name - name of the script to show; script - content of the script. showScript; void showScript(File file); Show the script editor, opening an existing script file. Parameters:; file - the script file. supportsFile; boolean supportsFile(File file); Check if the script editor supports a particular file. Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html
Integrability,interface,interface,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
Modifiability,extend,extends,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
Testability,log,logging,"do' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionE",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
Usability,undo,undo,"dText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
Modifiability,extend,extends,". ScriptTab (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
Safety,detect,detected,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
Security,hash,hashCode,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
Integrability,wrap,wrapText,".5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
Modifiability,extend,extends,". TextAreaControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPositio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
Security,hash,hashCode,"if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
Usability,clear,clear,"area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
Integrability,interface,interface,". qupath.lib.gui.tma (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tma. package qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathTMAViewer. Standalone viewer for looking at TMA summary results. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMASummaryViewer; Deprecated.; since v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/package-summary.html
Integrability,interface,interfaces,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
Modifiability,extend,extends,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
Security,hash,hashCode,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
Availability,down,downsampleFactor," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
Modifiability,extend,extends,". TMADataIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
Security,hash,hashCode,"ma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
Integrability,interface,interface,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
Modifiability,extend,extends,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
Security,hash,hashCode,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
Usability,simpl,simply,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
Deployability,release,released,". TMASummaryViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
Modifiability,extend,extends,". TMASummaryViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
Security,hash,hashCode,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
Modifiability,extend,extends,". ColorToolsFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class ColorToolsFX. java.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
Performance,cache,cached,"ss for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
Safety,avoid,avoid,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class ColorToolsFX. java.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
Security,hash,hashCode,"nteger rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
Integrability,interface,interfaces,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
Modifiability,extend,extends,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
Security,hash,hashCode,"ble. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
Availability,avail,available,"CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
Integrability,wrap,wrap,". CommandFinderTools.CommandEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools.CommandEntry. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Enclosing class:; CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Method",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
Modifiability,extend,extends,". CommandFinderTools.CommandEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools.CommandEntry. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Enclosing class:; CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Method",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
Security,hash,hashCode,"Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the comma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
Integrability,wrap,wrap,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
Modifiability,extend,extends,". CommandFinderTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog show",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
Security,access,access,". CommandFinderTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog show",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
Integrability,interface,interface,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
Modifiability,extend,extends,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
Security,hash,hashCode,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
Availability,down,down,"I,String> menuitemText). Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicatable', without losing its key properties. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill). Ensure that a Glyph is 'duplicatable', optionally retaining any fill. static ImageData.ImageType; estimateImageType(ImageServer<BufferedImage> server,; BufferedImage imgThumbnail). Make a semi-educated guess at the image type of a PathImageServer. static String; getMagnificationString(QuPathViewer viewer). Get an appropriate String to represent the magnification of the image currently in the viewer. static WritableImage; getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight). Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. static void; installRangePrompt(Slider slider). Install a mouse click listener to prompt the user to input min/max values for a slider. static BufferedImage; makeFullScreenshot(). Make a BufferedImage snapshot of the full screen. static BufferedImage; makeSnapshot(). Make a BufferedImage snapshot of the current GUI. static BufferedImage; makeSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. static BufferedImage; makeSnapshot(QuPathGUI qupath,; QuPathViewer viewer,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot as a JavaFX Image, using the current viewer i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Deployability,install,installRangePrompt," form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicatable', without losing its key properties. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill). Ensure that a Glyph is 'duplicatable', optionally retaining any fill. static ImageData.ImageType; estimateImageType(ImageServer<BufferedImage> server,; BufferedImage imgThumbnail). Make a semi-educated guess at the image type of a PathImageServer. static String; getMagnificationString(QuPathViewer viewer). Get an appropriate String to represent the magnification of the image currently in the viewer. static WritableImage; getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight). Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. static void; installRangePrompt(Slider slider). Install a mouse click listener to prompt the user to input min/max values for a slider. static BufferedImage; makeFullScreenshot(). Make a BufferedImage snapshot of the full screen. static BufferedImage; makeSnapshot(). Make a BufferedImage snapshot of the current GUI. static BufferedImage; makeSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. static BufferedImage; makeSnapshot(QuPathGUI qupath,; QuPathViewer viewer,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot as a JavaFX Image, using the current viewer if a viewer is required. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Integrability,message,message,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Modifiability,extend,extends,". GuiTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class GuiTools. java.lang.Object; qupath.lib.gui.tools.GuiTools. public class GuiTools; extends Object; Assorted static methods to help with JavaFX and QuPath GUI-related tasks. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. Constructor Summary; Constructors. Constructor; Description; GuiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; browseDirectory(File file). Open the directory containing a file for browsing. static boolean; browseURI(URI uri). Try to open a URI in a web browser. static <T> org.controlsfx.control.ListSelectionView<T>; createListSelectionView(). Create a new ListSelectionView. static Button; createMoreButton(ContextMenu menu,; Side side). Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. static Menu; createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer). Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. static Menu; createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText). Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Safety,risk,risk,"tle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight); Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Parameters:; stage - ; maxWidth - ; maxHeight - ; See Also:. showWithScreenSizeConstraints(Stage, double). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Security,hash,hashCode,"es for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Testability,stub,stubbornly,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Usability,simpl,simply,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
Integrability,interface,interfaces,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
Modifiability,extend,extends,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
Security,hash,hashCode," Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
Modifiability,extend,extends,". IconFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class IconFactory. java.lang.Object; qupath.lib.gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon de",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html
Security,hash,hashCode,"gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type); Create a node from a default icon glyph. Parameters:; width - preferred",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html
Integrability,interface,interfaces,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
Modifiability,extend,extends,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
Security,hash,hashCode,"TION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
Modifiability,extend,extends,. MeasurementExporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementExporter. java.lang.Object; qupath.lib.gui.tools.MeasurementExporter. public class MeasurementExporter; extends Object; Helper class for exporting the measurements of one or more entries in a project. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExporter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. Measureme,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
Safety,avoid,avoid,"notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageList); Specify the list of images (ProjectImageEntry) to export. Parameters:; imageList - ; Returns:; this exporter. filter; public MeasurementExporter filter(Predicate<PathObject> filter); Filter the PathObjects before export (objects returning true for the predicate will be exported). Parameters:; filter - ; Returns:; this exporter; Since:; v0.3.2. getImageList; public List<ProjectImageEntry<BufferedImage>> getImageList(); Returns the list of images (ProjectImageEntry). Returns:; imageList. getExcludeColumns; public List<String> getExcludeColumns(); Returns the list of columns to exclude from export. Returns:; list of column names. getIncludeColumns; public List<String> getIncludeColumns(); Returns the list of columns to include in the export. Returns:; list of column names. getSeparator; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
Security,hash,hashCode,"lter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is rec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
Modifiability,extend,extends,". MeasurementMapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementMapper. java.lang.Object; qupath.lib.gui.tools.MeasurementMapper. public class MeasurementMapper; extends Object; Helpers class that can be used to map an object's measurement to a color (packed RGB int).; ; By passing a collection of objects, the minimum and maximum of all the measurements are found; and these used to determine the lookup table scaling; alternative minimum and maximum values can also; be set to override these extrema. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Integer; getColorForObject(PathObject pathObject). Get the display color for a specified object, according to the settings of this mapper. ColorMaps.ColorMap; getColorMapper(). Get the color mapper, which is effectively a lookup table. double; getDataMaxValue(). Get the maximum measurement value from the objects passed to the constructor of this mapper. double; getDataMinValue(). Get the minimum measurement value from the objects passed to the constructor of this mapper. double; getDisplayMaxValue(). Get the measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
Security,hash,hashCode,"he measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
Modifiability,extend,extends,". MenuTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MenuTools. java.lang.Object; qupath.lib.gui.tools.MenuTools. public class MenuTools; extends Object; Static methods to help with creating and populating JavaFX menus. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
Security,hash,hashCode,"hodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
Integrability,interface,interface,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
Security,access,access,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
Availability,avail,available,"illHeight(Node, Boolean) property for specified nodes. static void; setFillWidth(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
Modifiability,extend,extends,". PaneTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PaneTools. java.lang.Object; qupath.lib.gui.tools.PaneTools. @Deprecated; public class PaneTools; extends Object; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. Assorted static functions to help when working with a JavaFX panes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PaneTools(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes). Deprecated.; Add a row of nodes. static GridPane; createColumnGrid(int nCols). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGrid(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bound to their parent. static GridPane; createRowGrid(Node... nodes). Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). static GridPane; createRowGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. static Collection<Node>; getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive). Deprecated.; Get the nodes that are included within a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
Security,hash,hashCode,"height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setMaxWidth; public static void setMaxWidth(double width",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
Usability,simpl,simplifyTitledPane," for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
Modifiability,extend,extends,". PathObjectLabels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels. public class PathObjectLabels; extends Object; Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. Constructor Summary; Constructors. Constructor; Description; PathObjectLabels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ListCell<PathObject>; createListCell(). Create a ListCell for displaying a PathObject using the default PathObject.toString() method. static ListCell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html
Security,hash,hashCode,"Cell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. Parameter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html
Modifiability,extend,extends,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html
Security,hash,hashCode,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html
Deployability,update,update,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
Modifiability,extend,extends,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
Security,hash,hashCode,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
Integrability,interface,interface,". DragDropImportListener.DropHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface DragDropImportListener.DropHandler<T>. Type Parameters:; T - . Enclosing class:; DragDropImportListener. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface DragDropImportListener.DropHandler<T>; Interface to define a new drop handler. Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; handleDrop(QuPathViewer viewer,; List<T> list). Handle drop onto a viewer. Method Details. handleDrop; boolean handleDrop(QuPathViewer viewer,; List<T> list); Handle drop onto a viewer.; This makes it possible to drop images (for example) onto a specific viewer to open them in that viewer, ; irrespective of whether the viewer is active currently. Parameters:; viewer - the active viewer, or the viewer only which the object were dropped; list - the dropped objects; Returns:; true if the handler processed the drop event. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html
Integrability,interface,interface,". DragDropImportListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class DragDropImportListener. java.lang.Object; qupath.lib.gui.viewer.DragDropImportListener. All Implemented Interfaces:; EventListener, EventHandler<DragEvent>. public class DragDropImportListener; extends Object; implements EventHandler<DragEvent>; Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
Modifiability,extend,extends,". DragDropImportListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class DragDropImportListener. java.lang.Object; qupath.lib.gui.viewer.DragDropImportListener. All Implemented Interfaces:; EventListener, EventHandler<DragEvent>. public class DragDropImportListener; extends Object; implements EventHandler<DragEvent>; Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
Security,hash,hashCode,"define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
Integrability,wrap,wraps,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
Modifiability,extend,extends,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
Security,hash,hashCode,"r Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(double spaceY); Set the vertical spacing between lines for any counting gri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
Usability,simpl,simply,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
Integrability,interface,interfaces,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
Modifiability,extend,extends,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
Security,hash,hashCode,"iewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
Availability,avail,available,"ethod. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final Overlay",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
Integrability,interface,interfaces,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
Modifiability,extend,extends,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
Safety,detect,detections,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
Security,hash,hashCode,"onDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
Availability,down,downsample,"eanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the global opacity for overlay drawing. RegionFilter; getPixelClassificationRegionFilter();  ; boolean; getShowAnnotations();  ; boolean; getShowCellBoundaries(). Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. boolean; getShowCellNuclei(). Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. boolean; getShowConnections();  ; boolean; getShowDetections();  ; boolean; getShowGrid();  ; boolean; getShowNames();  ; boolean; getShowPixelClassification();  ; boolean; getShowTMACoreLabels();  ; boolean; getShowTMAGrid();  ; float; getThickStrokeWidth(double downsample). Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). ObjectProperty<GridLines>; gridLinesProperty();  ; ObservableSet<PathClass>; hiddenClassesProperty();  ; boolean; isPathClassHidden(PathClass pathClass). Query whether objects with a specified classification should be displayed or hidden. ReadOnlyLongProperty; lastChangeTimestamp(). Get a property representing the timestamp of the last recorded change for any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object col",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
Modifiability,extend,extends,". OverlayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class OverlayOptions. java.lang.Object; qupath.lib.gui.viewer.OverlayOptions. public class OverlayOptions; extends Object; Default class for storing overlay display options. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
Safety,detect,detectionDisplayMode,". OverlayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class OverlayOptions. java.lang.Object; qupath.lib.gui.viewer.OverlayOptions. public class OverlayOptions; extends Object; Default class for storing overlay display options. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
Security,hash,hashCode,"nnections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
Integrability,interface,interface,". qupath.lib.gui.viewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html
Safety,detect,detections,"on | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html
Availability,down,downsampleFactor,". PathObjectPainter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class PathObjectPainter. java.lang.Object; qupath.lib.gui.viewer.PathObjectPainter. public class PathObjectPainter; extends Object; Static methods to assist with painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
Modifiability,extend,extends,". PathObjectPainter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class PathObjectPainter. java.lang.Object; qupath.lib.gui.viewer.PathObjectPainter. public class PathObjectPainter; extends Object; Static methods to assist with painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
Security,hash,hashCode,"rStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
Availability,down,downsample,". DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerListener listener). Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Deployability,update,updated,"istener, PathObjectSelectionListener. Direct Known Subclasses:; QuPathViewerPlus. public class QuPathViewer; extends Object; implements TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener; JavaFX component for viewing a (possibly large) image, along with overlays. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; DoubleProperty; gamma. Get the gamma property for this viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Property for the image data currently being displayed within this viewer. DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerListener listener). Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Integrability,depend,depends,"ption; Set the current image for this viewer. Parameters:; imageDataNew - ; Throws:; IOException. resetImageData; public void resetImageData(); Reset the image data to null. fireImageDataChanged; protected void fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandle",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Modifiability,extend,extends,". QuPathViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewer. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. Direct Known Subclasses:; QuPathViewerPlus. public class QuPathViewer; extends Object; implements TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener; JavaFX component for viewing a (possibly large) image, along with overlays. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; DoubleProperty; gamma. Get the gamma property for this viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Property for the image data currently being displayed within this viewer. DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerLi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Performance,perform,perform,"erlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsamp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Safety,detect,detections,". Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Security,access,access,"protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this view",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Testability,log,logs,"andles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<Bu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Usability,simpl,simply,"Updated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that requ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
Integrability,interface,interface,". QuPathViewerListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface QuPathViewerListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; UndoRedoManager, ViewerManager, ViewTracker. public interface QuPathViewerListener; extends EventListener; Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Method Details. imageDataChanged; void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Called with the image data within a viewer has changed. Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Called when the visible region has changed in a viewer. Parameters:; viewer - the viewer whose visible region has c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html
Modifiability,extend,extends,". QuPathViewerListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface QuPathViewerListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; UndoRedoManager, ViewerManager, ViewTracker. public interface QuPathViewerListener; extends EventListener; Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Method Details. imageDataChanged; void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Called with the image data within a viewer has changed. Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Called when the visible region has changed in a viewer. Parameters:; viewer - the viewer whose visible region has c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html
Availability,down,down,"iewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLaye",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
Deployability,update,updateAffineTransform,"b.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLayers, getOverlayOptions, getRenderer, getRGBThumbnail, getROIEditor, getRotation, getSelectedObject, getServer,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
Modifiability,extend,extends,". QuPathViewerPlus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewerPlus. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer; qupath.lib.gui.viewer.QuPathViewerPlus. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. public class QuPathViewerPlus; extends QuPathViewer; A whole slide viewer with optional extras... i.e. an overview, scalebar, location string... Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.QuPathViewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
Security,hash,hashCode,"getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
Integrability,interface,interface,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
Modifiability,extend,extends,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
Safety,predict,prediction,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
Testability,test,test,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
Integrability,interface,interface,". RegionFilter.StandardRegionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
Modifiability,extend,extends,". RegionFilter.StandardRegionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
Security,hash,hashCode,"Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Acc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
Testability,test,test,"rdRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
Availability,down,downsamples,"r from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer). Detach the specified viewer from the viewer grid, if possible. QuPathViewer; getActiveViewer(). Get the value of activeViewerProperty(). ObservableList<QuPathViewer>; getAllViewers(). Get an observable list of viewers. OverlayOptions; getOverlayOptions(). Get the overlay options shared by all viewers created by this manager. Region; getRegion(). Get the region node that can be added to a scene graph to display the viewers. boolean; getSynchronizeViewers(). Gets the value of the synchronizeViewers property. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Sh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
Integrability,synchroniz,synchronizeViewers,"; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class ViewerManager. java.lang.Object; qupath.lib.gui.viewer.ViewerManager. All Implemented Interfaces:; EventListener, QuPathViewerListener. public class ViewerManager; extends Object; implements QuPathViewerListener; Class to manage multiple QuPathViewer instances in a UI region. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewer. Get a read-only property representing the currently active viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. BooleanProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. ReadOnlyBooleanProperty; synchronizeViewers;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewerProperty(). Get a read-only property representing the currently active viewer. void; addColumn(QuPathViewer viewer);  ; void; addRow(QuPathViewer viewer);  ; boolean; applyLastAnnotationToActiveViewer();  ; void; attachActiveViewerToGrid(). Insert the currently active viewer back into the viewer grid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). void; detachActiveViewerFromGrid(). Detach the currently active viewer from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
Modifiability,extend,extends,". ViewerManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class ViewerManager. java.lang.Object; qupath.lib.gui.viewer.ViewerManager. All Implemented Interfaces:; EventListener, QuPathViewerListener. public class ViewerManager; extends Object; implements QuPathViewerListener; Class to manage multiple QuPathViewer instances in a UI region. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewer. Get a read-only property representing the currently active viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. BooleanProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. ReadOnlyBooleanProperty; synchronizeViewers;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewerProperty(). Get a read-only property representing the currently active viewer. void; addColumn(QuPathViewer viewer);  ; void; addRow(QuPathViewer viewer);  ; boolean; applyLastAnnotationToActiveViewer();  ; void; attachActiveViewerToGrid(). Insert the currently active viewer back into the viewer grid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
Security,hash,hashCode,",; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
Modifiability,extend,extends,". ViewerPlusDisplayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class ViewerPlusDisplayOptions. java.lang.Object; qupath.lib.gui.viewer.ViewerPlusDisplayOptions. public class ViewerPlusDisplayOptions; extends Object; A group of properties determining what should be displayed for each viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. Constructor Summary; Constructors. Constructor; Description; ViewerPlusDisplayOptions();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getShowLocation(). Get the value of showLocationProperty(). boolean; getShowOverview(). Get the value of showOverviewProperty(). boolean; getShowScalebar(). Get the value of showScalebarProperty(). void; setShowLocation(boolean show). Set the value of showLocationProperty(). void; setShowOverview(boolean show). Set the value of showOverviewProperty(). void; setShowScalebar(boolean show). Set the value of showScalebarProperty(). BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. getShowOverview(); setShowOverview(boolean); showOverviewProperty(). showLoca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html
Security,hash,hashCode,"Overview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. Constructor Summary; Constructors. Constructor; Description; ViewerPlusDisplayOptions();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getShowLocation(). Get the value of showLocationProperty(). boolean; getShowOverview(). Get the value of showOverviewProperty(). boolean; getShowScalebar(). Get the value of showScalebarProperty(). void; setShowLocation(boolean show). Set the value of showLocationProperty(). void; setShowOverview(boolean show). Set the value of showOverviewProperty(). void; setShowScalebar(boolean show). Set the value of showScalebarProperty(). BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. getShowOverview(); setShowOverview(boolean); showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. getShowLocation(); setShowLocation(boolean); showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. getShowScalebar(); setShowScalebar(boolean); showScalebarProperty(). Constructor Details. ViewerPlusDisplayOptions; public ViewerPlusDisplayOptions(). Method Details. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:; See Also:. getShowOverview(); setShowOverview(boolean). showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:; See Also:. getShowLocation(); setShowLocation(boolean). showScalebarProperty; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html
Integrability,interface,interface,". ActionAccelerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionAccelerator. @Documented; @Retention(RUNTIME); @Target({METHOD,FIELD,TYPE}); public @interface ActionAccelerator; Annotation used to specify a preferred accelerator for an an action.; Examples include ""m"" (Move tool) or ""shortcut+c"" (Copy). Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String; value. String form of an accelerator, compatible with KeyCombination.valueOf(String). Element Details. value; String value; String form of an accelerator, compatible with KeyCombination.valueOf(String). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionAccelerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionAccelerator.html
Integrability,interface,interface,". ActionConfig (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionConfig. @Documented; @Retention(RUNTIME); @Target({TYPE,METHOD,FIELD}); public @interface ActionConfig; Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String; value. Key to external properties file. Optional Element Summary; Optional Elements. Modifier and Type; Optional Element; Description; boolean; bindLocale;  ; String; bundle;  ; String[]; menu;  . Element Details. bundle; String bundle. Default:; """". menu; String[] menu. Default:; {""""}. bindLocale; boolean bindLocale. Default:; true. value; String value; Key to external properties file. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionConfig.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionConfig.html
Integrability,interface,interface,". ActionIcon (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionIcon. @Documented; @Retention(RUNTIME); @Target({METHOD,FIELD}); public @interface ActionIcon; Default icon for an action. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; IconFactory.PathIcons; value. Icon to associate with the action's graphic property. Element Details. value; IconFactory.PathIcons value; Icon to associate with the action's graphic property. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionIcon.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionIcon.html
Deployability,install,installed,". ActionMenu (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionMenu. @Documented; @Retention(RUNTIME); @Target({TYPE,METHOD,FIELD}); public @interface ActionMenu; Annotation indicating the menu path where an action should be installed.; This may be used by QuPath to be able to assign the action automatically to the correct place, ; in the absence of further information. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String[]; value. Menu path, in the form ""Menu>Submenu>Command name"". Element Details. value; String[] value; Menu path, in the form ""Menu>Submenu>Command name"". Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html
Integrability,interface,interface,". ActionMenu (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionMenu. @Documented; @Retention(RUNTIME); @Target({TYPE,METHOD,FIELD}); public @interface ActionMenu; Annotation indicating the menu path where an action should be installed.; This may be used by QuPath to be able to assign the action automatically to the correct place, ; in the absence of further information. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String[]; value. Menu path, in the form ""Menu>Submenu>Command name"". Element Details. value; String[] value; Menu path, in the form ""Menu>Submenu>Command name"". Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html
Integrability,interface,interface,". ActionMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionMethod. @Documented; @Retention(RUNTIME); @Target(METHOD); public @interface ActionMethod; Annotation indicating that a method should be converted to an Action if possible.; Currently, only methods taking zero parameters may be converted automatically. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/ActionMethod.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMethod.html
Deployability,install,installed,". qupath.lib.gui.actions.annotations (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.annotations. package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. Annotation Interfaces. Class; Description; ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/package-summary.html
Modifiability,config,configure,". qupath.lib.gui.actions.annotations (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.annotations. package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. Annotation Interfaces. Class; Description; ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/annotations/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/package-summary.html
Modifiability,extend,extends,". AnalyzeMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions. Enclosing class:; AnalyzeMenuActions. @ActionMenu(""Menu.Analyze""); public class AnalyzeMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COLOR_DECONVOLUTION_REFINE;  ; final org.controlsfx.control.action.Action; CREATE_TILES;  ; final org.controlsfx.control.action.Action; DISTANCE_CENTROIDS;  ; final org.controlsfx.control.action.Action; DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; INTENSITY_FEATURES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SHAPE_FEATURES;  ; final org.controlsfx.control.action.Action; SIGNED_DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SMOOTHED_FEATURES;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COLOR_DECONVOLUTION_REFINE; @ActionConfig(""Action.Analyze.Preprocessing.estimateStainVectors""); public final org.controlsfx.control.action.Action COLOR_DECONVOLUTION_REFINE. CREATE_TILES; @ActionMenu(""Menu.Analyze.Tiles""); @ActionConfig(""Action.Analyze.Tiles.createTiles""); public final org.controlsfx.control.action.Action CREATE_TILES. SEP_0; @ActionMenu(""Menu.Analyze.CellDetection""); public final org.controlsfx.control.action.Action SEP_0. SMOOTHED_FEATURES; @ActionMenu(""M",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html
Security,hash,hashCode,"us.AnalyzeMenuActions.Actions. Enclosing class:; AnalyzeMenuActions. @ActionMenu(""Menu.Analyze""); public class AnalyzeMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COLOR_DECONVOLUTION_REFINE;  ; final org.controlsfx.control.action.Action; CREATE_TILES;  ; final org.controlsfx.control.action.Action; DISTANCE_CENTROIDS;  ; final org.controlsfx.control.action.Action; DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; INTENSITY_FEATURES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SHAPE_FEATURES;  ; final org.controlsfx.control.action.Action; SIGNED_DISTANCE_TO_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SMOOTHED_FEATURES;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COLOR_DECONVOLUTION_REFINE; @ActionConfig(""Action.Analyze.Preprocessing.estimateStainVectors""); public final org.controlsfx.control.action.Action COLOR_DECONVOLUTION_REFINE. CREATE_TILES; @ActionMenu(""Menu.Analyze.Tiles""); @ActionConfig(""Action.Analyze.Tiles.createTiles""); public final org.controlsfx.control.action.Action CREATE_TILES. SEP_0; @ActionMenu(""Menu.Analyze.CellDetection""); public final org.controlsfx.control.action.Action SEP_0. SMOOTHED_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.smoothedFeatures""); public final org.controlsfx.control.action.Action SMOOTHED_FEATURES. INTENSITY_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.intensityFeatures""); public final org.controlsfx.control.action.Action INTENSITY_FEATURES. SHAPE_FEATURES; @ActionMenu(""Menu.Analyze.Features""); @ActionConfig(""Action.Analyze.Features.shapeFeatures""); public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.Actions.html
Integrability,interface,interface,". AnalyzeMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions. All Implemented Interfaces:; MenuActions. public class AnalyzeMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AnalyzeMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html
Modifiability,extend,extends,". AnalyzeMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions. All Implemented Interfaces:; MenuActions. public class AnalyzeMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AnalyzeMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html
Security,hash,hashCode,". AnalyzeMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions. All Implemented Interfaces:; MenuActions. public class AnalyzeMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AnalyzeMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html
Modifiability,extend,extends,". AutomateMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions.Actions. Enclosing class:; AutomateMenuActions. @ActionMenu(""Menu.Automate""); public class AutomateMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  ; final org.controlsfx.control.action.Action; SEP_0;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. SEP_0; public final org.controlsfx.control.action.Action SEP_0. HISTORY_SHOW; public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html
Security,hash,hashCode,". AutomateMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions.Actions. Enclosing class:; AutomateMenuActions. @ActionMenu(""Menu.Automate""); public class AutomateMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  ; final org.controlsfx.control.action.Action; SEP_0;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. SEP_0; public final org.controlsfx.control.action.Action SEP_0. HISTORY_SHOW; public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html
Integrability,interface,interface,". AutomateMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions. All Implemented Interfaces:; MenuActions. public class AutomateMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AutomateMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html
Modifiability,extend,extends,". AutomateMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions. All Implemented Interfaces:; MenuActions. public class AutomateMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AutomateMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html
Security,hash,hashCode,". AutomateMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions. All Implemented Interfaces:; MenuActions. public class AutomateMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AutomateMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html
Modifiability,extend,extends,". ClassifyMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions. Enclosing class:; ClassifyMenuActions. @ActionMenu(""Menu.Classify""); public class ClassifyMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_DETECTION_CLASSIFICATIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_1; @ActionMenu(""Menu.Classify.ObjectClassification""); public final org.controlsfx.control.action.Action SEP_1. RESET_DETECTION_CLASSIFICATIONS; @ActionMenu(""Menu.Classify.ObjectClassification""); @ActionConfig(""Action.Classify.Objects.resetDetectionClassifications""); public final org.controlsfx.control.action.Action RESET_DETECTION_CLASSIFICATIONS. SEP_3; @ActionMenu(""Menu.Classify.PixelClassification""); public final org.controlsfx.control.action.Action SEP_3. SEP_4; public final org.controlsfx.control.action.Action SEP_4. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html
Security,hash,hashCode,". ClassifyMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions. Enclosing class:; ClassifyMenuActions. @ActionMenu(""Menu.Classify""); public class ClassifyMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_DETECTION_CLASSIFICATIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_1; @ActionMenu(""Menu.Classify.ObjectClassification""); public final org.controlsfx.control.action.Action SEP_1. RESET_DETECTION_CLASSIFICATIONS; @ActionMenu(""Menu.Classify.ObjectClassification""); @ActionConfig(""Action.Classify.Objects.resetDetectionClassifications""); public final org.controlsfx.control.action.Action RESET_DETECTION_CLASSIFICATIONS. SEP_3; @ActionMenu(""Menu.Classify.PixelClassification""); public final org.controlsfx.control.action.Action SEP_3. SEP_4; public final org.controlsfx.control.action.Action SEP_4. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html
Integrability,interface,interface,". ClassifyMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions. All Implemented Interfaces:; MenuActions. public class ClassifyMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ClassifyMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html
Modifiability,extend,extends,". ClassifyMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions. All Implemented Interfaces:; MenuActions. public class ClassifyMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ClassifyMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html
Security,hash,hashCode,". ClassifyMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions. All Implemented Interfaces:; MenuActions. public class ClassifyMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ClassifyMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html
Modifiability,extend,extends,". EditMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html
Security,hash,hashCode,"| ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreferences""); public final org.controlsfx.control.action.Action RESET_PREFERENCES",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html
Usability,undo,undo," Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreferences""); public final org.controlsfx.control.action.Action RESET_PREFERENCES. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html
Modifiability,extend,extends,". EditMenuActions.CopyActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.CopyActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions. Enclosing class:; EditMenuActions. public class EditMenuActions.CopyActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COPY_ANNOTATION_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_FULL_SCREENSHOT;  ; final org.controlsfx.control.action.Action; COPY_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_VIEW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW_SCREENSHOT;  ; final org.controlsfx.control.action.Action; SEP_00;  . Constructor Summary; Constructors. Constructor; Description; CopyActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COPY_SELECTED_OBJECTS; @ActionConfig(""Action.Edit.Copy.selectedObjects""); public final org.controlsfx.control.action.Action COPY_SELECTED_OBJECTS. COPY_ANNOTATION_OBJECTS; @ActionConfig(""Action.Edit.Copy.annotationObjects""); public final org.controlsfx.control.action.Action COPY_ANNOTATION_OBJECTS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. COPY_VIEW; @ActionConfig(""Action.Edit.Copy.currentViewer""); public final org.controlsfx.control.action.Action COPY_VIEW. COPY_WINDOW; @ActionConfig(""Action.Edit.Copy.mainWindowContent""); public final org.controlsfx.control.action.Action COPY_WINDOW. COPY_WINDOW_SCREENSHOT; @ActionConf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html
Security,hash,hashCode," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.CopyActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions. Enclosing class:; EditMenuActions. public class EditMenuActions.CopyActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; COPY_ANNOTATION_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_FULL_SCREENSHOT;  ; final org.controlsfx.control.action.Action; COPY_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; COPY_VIEW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW;  ; final org.controlsfx.control.action.Action; COPY_WINDOW_SCREENSHOT;  ; final org.controlsfx.control.action.Action; SEP_00;  . Constructor Summary; Constructors. Constructor; Description; CopyActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. COPY_SELECTED_OBJECTS; @ActionConfig(""Action.Edit.Copy.selectedObjects""); public final org.controlsfx.control.action.Action COPY_SELECTED_OBJECTS. COPY_ANNOTATION_OBJECTS; @ActionConfig(""Action.Edit.Copy.annotationObjects""); public final org.controlsfx.control.action.Action COPY_ANNOTATION_OBJECTS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. COPY_VIEW; @ActionConfig(""Action.Edit.Copy.currentViewer""); public final org.controlsfx.control.action.Action COPY_VIEW. COPY_WINDOW; @ActionConfig(""Action.Edit.Copy.mainWindowContent""); public final org.controlsfx.control.action.Action COPY_WINDOW. COPY_WINDOW_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.mainWindowScreenshot""); public final org.controlsfx.control.action.Action COPY_WINDOW_SCREENSHOT. COPY_FULL_SCREENSHOT; @ActionConfig(""Action.Edit.Copy.fullScreenshot""); public final org.controlsfx.control.action.Action COPY_FULL_SCREENSHOT. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.CopyActions.html
Integrability,interface,interface,". EditMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions. All Implemented Interfaces:; MenuActions. public class EditMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; EditMenuActions.Actions;  ; class ; EditMenuActions.CopyActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html
Modifiability,extend,extends,". EditMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions. All Implemented Interfaces:; MenuActions. public class EditMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; EditMenuActions.Actions;  ; class ; EditMenuActions.CopyActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html
Security,hash,hashCode,". EditMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions. All Implemented Interfaces:; MenuActions. public class EditMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; EditMenuActions.Actions;  ; class ; EditMenuActions.CopyActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html
Deployability,install,installed,". ExtensionsMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions. Enclosing class:; ExtensionsMenuActions. @ActionMenu(""Menu.Extensions""); public class ExtensionsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXTENSIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXTENSIONS; @ActionConfig(""Action.Extensions.installed""); public final org.controlsfx.control.action.Action EXTENSIONS. SEP_1; @ActionMenu(""""); public final org.controlsfx.control.action.Action SEP_1. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html
Modifiability,extend,extends,". ExtensionsMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions. Enclosing class:; ExtensionsMenuActions. @ActionMenu(""Menu.Extensions""); public class ExtensionsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXTENSIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXTENSIONS; @ActionConfig(""Action.Extensions.installed""); public final org.controlsfx.control.action.Action EXTENSIONS. SEP_1; @ActionMenu(""""); public final org.controlsfx.control.action.Action SEP_1. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html
Security,hash,hashCode,". ExtensionsMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions. Enclosing class:; ExtensionsMenuActions. @ActionMenu(""Menu.Extensions""); public class ExtensionsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXTENSIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXTENSIONS; @ActionConfig(""Action.Extensions.installed""); public final org.controlsfx.control.action.Action EXTENSIONS. SEP_1; @ActionMenu(""""); public final org.controlsfx.control.action.Action SEP_1. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html
Integrability,interface,interface,". ExtensionsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions. All Implemented Interfaces:; MenuActions. public class ExtensionsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ExtensionsMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html
Modifiability,extend,extends,". ExtensionsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions. All Implemented Interfaces:; MenuActions. public class ExtensionsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ExtensionsMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html
Security,hash,hashCode,". ExtensionsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions. All Implemented Interfaces:; MenuActions. public class ExtensionsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ExtensionsMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html
Modifiability,extend,extends,". FileMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.Actions. Enclosing class:; FileMenuActions. @ActionMenu(""Menu.File""); public class FileMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXPORT_GEOJSON;  ; final FileMenuActions.ExportImageActions; exportImageActions;  ; final FileMenuActions.ExportSnapshotActions; exportSnapshotActions;  ; final org.controlsfx.control.action.Action; OBJECT_IMPORT;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE_OR_URL;  ; final FileMenuActions.ProjectActions; projectActions;  ; final org.controlsfx.control.action.Action; QUIT;  ; final org.controlsfx.control.action.Action; RELOAD_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA_AS;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final FileMenuActions.TmaActions; tmaActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. projectActions; @ActionMenu(""Menu.File.Project""); pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html
Security,hash,hashCode,".action.Action; OBJECT_IMPORT;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE_OR_URL;  ; final FileMenuActions.ProjectActions; projectActions;  ; final org.controlsfx.control.action.Action; QUIT;  ; final org.controlsfx.control.action.Action; RELOAD_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA_AS;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final FileMenuActions.TmaActions; tmaActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. projectActions; @ActionMenu(""Menu.File.Project""); public final FileMenuActions.ProjectActions projectActions. SEP_3; public final org.controlsfx.control.action.Action SEP_3. OPEN_IMAGE; @ActionConfig(""Action.File.open""); @ActionAccelerator(""shortcut+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE. OPEN_IMAGE_OR_URL; @ActionConfig(""Action.File.openUri""); @ActionAccelerator(""shortcut+shift+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE_OR_URL. RELOAD_DATA; @ActionConfig(""Action.File.reloadData""); @ActionAccelerator(""shortcut+r""); public final org.controlsfx.control.action.Action RELOAD_DATA. SEP_4; public final org.controlsfx.control.action.Action SEP_4. SAVE_DATA_AS; @ActionConfig(""Action.File.saveAs""); @ActionAccelerator(""shortcut+shift+s""); public final org.controlsfx.control.action.Action SAVE_DATA_AS. SAVE_DATA; @ActionConfig(""Action.File.save""); @ActionAccelerator(""shortcut+s""); pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html
Modifiability,extend,extends,". FileMenuActions.ExportImageActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportImageActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportImageActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXPORT_ORIGINAL;  ; final org.controlsfx.control.action.Action; EXPORT_RENDERED;  . Constructor Summary; Constructors. Constructor; Description; ExportImageActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXPORT_ORIGINAL; @ActionConfig(""Action.File.ExportImage.original""); public final org.controlsfx.control.action.Action EXPORT_ORIGINAL. EXPORT_RENDERED; @ActionConfig(""Action.File.ExportImage.rendered""); public final org.controlsfx.control.action.Action EXPORT_RENDERED. Constructor Details. ExportImageActions; public ExportImageActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html
Security,hash,hashCode,". FileMenuActions.ExportImageActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportImageActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportImageActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXPORT_ORIGINAL;  ; final org.controlsfx.control.action.Action; EXPORT_RENDERED;  . Constructor Summary; Constructors. Constructor; Description; ExportImageActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXPORT_ORIGINAL; @ActionConfig(""Action.File.ExportImage.original""); public final org.controlsfx.control.action.Action EXPORT_ORIGINAL. EXPORT_RENDERED; @ActionConfig(""Action.File.ExportImage.rendered""); public final org.controlsfx.control.action.Action EXPORT_RENDERED. Constructor Details. ExportImageActions; public ExportImageActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html
Modifiability,extend,extends,". FileMenuActions.ExportSnapshotActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportSnapshotActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportSnapshotActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SNAPSHOT_VIEWER_CONTENT;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW_CONTENT;  . Constructor Summary; Constructors. Constructor; Description; ExportSnapshotActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SNAPSHOT_WINDOW; @ActionConfig(""Action.File.ExportSnapshot.windowScreenshot""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW. SNAPSHOT_WINDOW_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.windowContent""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW_CONTENT. SNAPSHOT_VIEWER_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.viewerContent""); public final org.controlsfx.control.action.Action SNAPSHOT_VIEWER_CONTENT. Constructor Details. ExportSnapshotActions; public ExportSnapshotActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html
Security,hash,hashCode,". FileMenuActions.ExportSnapshotActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportSnapshotActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportSnapshotActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SNAPSHOT_VIEWER_CONTENT;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW_CONTENT;  . Constructor Summary; Constructors. Constructor; Description; ExportSnapshotActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SNAPSHOT_WINDOW; @ActionConfig(""Action.File.ExportSnapshot.windowScreenshot""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW. SNAPSHOT_WINDOW_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.windowContent""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW_CONTENT. SNAPSHOT_VIEWER_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.viewerContent""); public final org.controlsfx.control.action.Action SNAPSHOT_VIEWER_CONTENT. Constructor Details. ExportSnapshotActions; public ExportSnapshotActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html
Integrability,interface,interface,". FileMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions. All Implemented Interfaces:; MenuActions. public class FileMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; FileMenuActions.Actions;  ; class ; FileMenuActions.ExportImageActions;  ; class ; FileMenuActions.ExportSnapshotActions;  ; class ; FileMenuActions.ProjectActions;  ; class ; FileMenuActions.TmaActions;  . Constructor Summary; Constructors. Constructor; Description; FileMenuActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileMenuActions; public FileMenuActions(QuPathGUI qupath). Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html
Modifiability,extend,extends,". FileMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions. All Implemented Interfaces:; MenuActions. public class FileMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; FileMenuActions.Actions;  ; class ; FileMenuActions.ExportImageActions;  ; class ; FileMenuActions.ExportSnapshotActions;  ; class ; FileMenuActions.ProjectActions;  ; class ; FileMenuActions.TmaActions;  . Constructor Summary; Constructors. Constructor; Description; FileMenuActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileMenuActions; public FileMenuActions(QuPathGUI qupath). Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html
Security,hash,hashCode,". FileMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions. All Implemented Interfaces:; MenuActions. public class FileMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; FileMenuActions.Actions;  ; class ; FileMenuActions.ExportImageActions;  ; class ; FileMenuActions.ExportSnapshotActions;  ; class ; FileMenuActions.ProjectActions;  ; class ; FileMenuActions.TmaActions;  . Constructor Summary; Constructors. Constructor; Description; FileMenuActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileMenuActions; public FileMenuActions(QuPathGUI qupath). Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html
Modifiability,extend,extends,". FileMenuActions.ProjectActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ProjectActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ProjectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CHECK_URIS;  ; final org.controlsfx.control.action.Action; EXPORT_IMAGE_LIST;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES_LEGACY;  ; final org.controlsfx.control.action.Action; METADATA;  ; final org.controlsfx.control.action.Action; PROJECT_CLOSE;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_22;  . Constructor Summary; Constructors. Constructor; Description; ProjectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_CLOSE; @ActionConfig(""Action.File.Project.closeProject""); public final org.controlsfx.control.action.Action PROJECT_CLOSE. SEP_1; public final org.controlsfx.control.ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html
Security,hash,hashCode,"losing class:; FileMenuActions. public class FileMenuActions.ProjectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CHECK_URIS;  ; final org.controlsfx.control.action.Action; EXPORT_IMAGE_LIST;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES_LEGACY;  ; final org.controlsfx.control.action.Action; METADATA;  ; final org.controlsfx.control.action.Action; PROJECT_CLOSE;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_22;  . Constructor Summary; Constructors. Constructor; Description; ProjectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_CLOSE; @ActionConfig(""Action.File.Project.closeProject""); public final org.controlsfx.control.action.Action PROJECT_CLOSE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. IMPORT_IMAGES; @ActionConfig(""Action.File.Project.addImages""); public final org.controlsfx.control.action.Action IMPORT_IMAGES. EXPORT_IMAGE_LIST; @ActionConfig(""Action.File.Project.exportImageList""); public final org.controlsfx.control.action.Action EXPORT_IMAGE_LIST. SEP_2; public final org.controlsfx.control.action.Action SEP_2. METADATA; @ActionConfig(""Action.File.Project.editMetadata""); public final org.controlsfx.control.action.Action METADATA. CHECK_URIS; @ActionConfig(""Ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html
Modifiability,extend,extends,". FileMenuActions.TmaActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.TmaActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.TmaActions. Enclosing class:; FileMenuActions. public class FileMenuActions.TmaActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; TMA_EXPORT;  ; final org.controlsfx.control.action.Action; TMA_IMPORT;  ; final org.controlsfx.control.action.Action; TMA_VIEWER;  . Constructor Summary; Constructors. Constructor; Description; TmaActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_IMPORT; @ActionConfig(""Action.File.TMA.importMap""); public final org.controlsfx.control.action.Action TMA_IMPORT. TMA_EXPORT; @ActionConfig(""Action.File.TMA.exportData""); public final org.controlsfx.control.action.Action TMA_EXPORT. TMA_VIEWER; @ActionConfig(""Action.File.TMA.dataViewer""); public final org.controlsfx.control.action.Action TMA_VIEWER. Constructor Details. TmaActions; public TmaActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html
Security,hash,hashCode,". FileMenuActions.TmaActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.TmaActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.TmaActions. Enclosing class:; FileMenuActions. public class FileMenuActions.TmaActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; TMA_EXPORT;  ; final org.controlsfx.control.action.Action; TMA_IMPORT;  ; final org.controlsfx.control.action.Action; TMA_VIEWER;  . Constructor Summary; Constructors. Constructor; Description; TmaActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_IMPORT; @ActionConfig(""Action.File.TMA.importMap""); public final org.controlsfx.control.action.Action TMA_IMPORT. TMA_EXPORT; @ActionConfig(""Action.File.TMA.exportData""); public final org.controlsfx.control.action.Action TMA_EXPORT. TMA_VIEWER; @ActionConfig(""Action.File.TMA.dataViewer""); public final org.controlsfx.control.action.Action TMA_VIEWER. Constructor Details. TmaActions; public TmaActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html
Deployability,update,updates,"n.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.control.action.Action DOCS. DEMOS; @ActionConfig(""Action.Help.video""); public final org.controlsfx.control.action.Action DEMOS. UPDATE; @ActionConfig(""Action.Help.updates""); public final org.controlsfx.control.action.Action UPDATE. SEP_2; public final org.controlsfx.control.action.Action SEP_2. CITE; @ActionConfig(""Action.Help.cite""); public final org.controlsfx.control.action.Action CITE. BUGS; @ActionConfig(""Action.Help.issues""); public final org.controlsfx.control.action.Action BUGS. FORUM; @ActionConfig(""Action.Help.forum""); public final org.controlsfx.control.action.Action FORUM. SOURCE; @ActionConfig(""Action.Help.source""); public final org.controlsfx.control.action.Action SOURCE. SEP_3; public final org.controlsfx.control.action.Action SEP_3. LICENSE; @ActionConfig(""Action.Help.license""); public final org.controlsfx.control.action.Action LICENSE. INFO; @ActionConfig(""Action.Help.systemInfo""); public final org.controlsfx.control.action.Action INFO. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html
Modifiability,extend,extends,". HelpMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions.Actions. Enclosing class:; HelpMenuActions. @ActionMenu(""Menu.Help""); public class HelpMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BUGS;  ; final org.controlsfx.control.action.Action; CITE;  ; final org.controlsfx.control.action.Action; DEMOS;  ; final org.controlsfx.control.action.Action; DOCS;  ; final org.controlsfx.control.action.Action; FORUM;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html
Security,hash,hashCode,"y; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BUGS;  ; final org.controlsfx.control.action.Action; CITE;  ; final org.controlsfx.control.action.Action; DEMOS;  ; final org.controlsfx.control.action.Action; DOCS;  ; final org.controlsfx.control.action.Action; FORUM;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.control.action.Action DOCS. DEMOS; @ActionConfig(""Action.Help.video""); public final org.controlsfx.control.action.Action DEMOS. UPDATE; @ActionConfig(""Action.Help.updates""); public final org.controlsfx.control.action.Action UPDATE. SEP_2; public final org.controlsfx.control.action.Action SEP_2. CITE; @ActionConfig(""Action.Help.cite""); public final org.controlsfx.control.action.Action CITE. BUGS; @ActionConfig(""Action.Help.issues""); public final org.controlsfx.control.action.Action BUGS. FORUM; @ActionConfig(""Action.Help.forum""); public final org.controlsfx.control.action.Action FORUM. SOURCE; @Actio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html
Integrability,interface,interface,". HelpMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions. All Implemented Interfaces:; MenuActions. public class HelpMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; HelpMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html
Modifiability,extend,extends,". HelpMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions. All Implemented Interfaces:; MenuActions. public class HelpMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; HelpMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html
Security,hash,hashCode,". HelpMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions. All Implemented Interfaces:; MenuActions. public class HelpMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; HelpMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html
Modifiability,extend,extends,". MeasureMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions.Actions. Enclosing class:; MeasureMenuActions. @ActionMenu(""Menu.Measure""); public class MeasureMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATIONS;  ; final org.controlsfx.control.action.Action; DETECTIONS;  ; final org.controlsfx.control.action.Action; EXPORT;  ; final org.controlsfx.control.action.Action; GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; GRID_TMA;  ; final org.controlsfx.control.action.Action; MANAGER;  ; final org.controlsfx.control.action.Action; MAPS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; TMA;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MAPS; @ActionAccelerator(""shortcut+shift+m""); @ActionConfig(""Action.Measure.maps""); public final org.controlsfx.control.action.Action MAPS. MANAGER; @ActionConfig(""Action.Measure.manager""); public final org.controlsfx.control.action.Action MANAGER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. TMA; public final org.controlsfx.control.action.Action TMA. ANNOTATIONS; public final org.controlsfx.control.action.Action ANNOTATIONS. DETECTIONS; public final org.controlsfx.control.action.Action DETECTIONS. GRID_ANNOTATIONS; @ActionMenu(""Menu.Measure.GridViews""); public final",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html
Security,hash,hashCode,"RCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions.Actions. Enclosing class:; MeasureMenuActions. @ActionMenu(""Menu.Measure""); public class MeasureMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATIONS;  ; final org.controlsfx.control.action.Action; DETECTIONS;  ; final org.controlsfx.control.action.Action; EXPORT;  ; final org.controlsfx.control.action.Action; GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; GRID_TMA;  ; final org.controlsfx.control.action.Action; MANAGER;  ; final org.controlsfx.control.action.Action; MAPS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; TMA;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MAPS; @ActionAccelerator(""shortcut+shift+m""); @ActionConfig(""Action.Measure.maps""); public final org.controlsfx.control.action.Action MAPS. MANAGER; @ActionConfig(""Action.Measure.manager""); public final org.controlsfx.control.action.Action MANAGER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. TMA; public final org.controlsfx.control.action.Action TMA. ANNOTATIONS; public final org.controlsfx.control.action.Action ANNOTATIONS. DETECTIONS; public final org.controlsfx.control.action.Action DETECTIONS. GRID_ANNOTATIONS; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_ANNOTATIONS. GRID_TMA; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_TMA. SEP_2; public final org.controlsfx.control.action.Action SEP_2. EXPORT; @ActionConfig(""Action.Measure.export""); public final org.controlsfx.control.action.Action EXPORT. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html
Integrability,interface,interface,". MeasureMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions. All Implemented Interfaces:; MenuActions. public class MeasureMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; MeasureMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html
Modifiability,extend,extends,". MeasureMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions. All Implemented Interfaces:; MenuActions. public class MeasureMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; MeasureMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html
Security,hash,hashCode,". MeasureMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions. All Implemented Interfaces:; MenuActions. public class MeasureMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; MeasureMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html
Integrability,interface,interface,". MenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Interface MenuActions. All Known Implementing Classes:; AnalyzeMenuActions, AutomateMenuActions, ClassifyMenuActions, EditMenuActions, ExtensionsMenuActions, FileMenuActions, HelpMenuActions, MeasureMenuActions, ObjectsMenuActions, TMAMenuActions, ViewMenuActions. public interface MenuActions; Common interface to define the contents of a menu in terms of actions.; This can be used to generate the actual menu by using the actions to configure the menu items. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Method Details. getActions; List<org.controlsfx.control.action.Action> getActions(); Get all the actions to include in the menu, in order. Returns:. getName; String getName(); Get the name of the menu. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html
Modifiability,config,configure,". MenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Interface MenuActions. All Known Implementing Classes:; AnalyzeMenuActions, AutomateMenuActions, ClassifyMenuActions, EditMenuActions, ExtensionsMenuActions, FileMenuActions, HelpMenuActions, MeasureMenuActions, ObjectsMenuActions, TMAMenuActions, ViewMenuActions. public interface MenuActions; Common interface to define the contents of a menu in terms of actions.; This can be used to generate the actual menu by using the actions to configure the menu items. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Method Details. getActions; List<org.controlsfx.control.action.Action> getActions(); Get all the actions to include in the menu, in order. Returns:. getName; String getName(); Get the name of the menu. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html
Deployability,install,installation,". Menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class Menus. java.lang.Object; qupath.lib.gui.actions.menus.Menus. public class Menus; extends Object; Generate actions for installation in QuPath's main menubar. Constructor Summary; Constructors. Constructor; Description; Menus();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<org.controlsfx.control.action.Action>; createAllMenuActions(QuPathGUI qupath). Create a collection of all the actions that should be installed in QuPath's main menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Menus; public Menus(). Method Details. createAllMenuActions; public static Collection<org.controlsfx.control.action.Action> createAllMenuActions(QuPathGUI qupath); Create a collection of all the actions that should be installed in QuPath's main menubar.; The actions are configured for installation through QuPathGUI.installActions(Collection). Parameters:; qupath - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/Menus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/Menus.html
Modifiability,extend,extends,". Menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class Menus. java.lang.Object; qupath.lib.gui.actions.menus.Menus. public class Menus; extends Object; Generate actions for installation in QuPath's main menubar. Constructor Summary; Constructors. Constructor; Description; Menus();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<org.controlsfx.control.action.Action>; createAllMenuActions(QuPathGUI qupath). Create a collection of all the actions that should be installed in QuPath's main menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Menus; public Menus(). Method Details. createAllMenuActions; public static Collection<org.controlsfx.control.action.Action> createAllMenuActions(QuPathGUI qupath); Create a collection of all the actions that should be installed in QuPath's main menubar.; The actions are configured for installation through QuPathGUI.installActions(Collection). Parameters:; qupath - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/Menus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/Menus.html
Security,hash,hashCode,". Menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class Menus. java.lang.Object; qupath.lib.gui.actions.menus.Menus. public class Menus; extends Object; Generate actions for installation in QuPath's main menubar. Constructor Summary; Constructors. Constructor; Description; Menus();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<org.controlsfx.control.action.Action>; createAllMenuActions(QuPathGUI qupath). Create a collection of all the actions that should be installed in QuPath's main menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Menus; public Menus(). Method Details. createAllMenuActions; public static Collection<org.controlsfx.control.action.Action> createAllMenuActions(QuPathGUI qupath); Create a collection of all the actions that should be installed in QuPath's main menubar.; The actions are configured for installation through QuPathGUI.installActions(Collection). Parameters:; qupath - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/Menus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/Menus.html
Modifiability,extend,extends,". ObjectsMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions. Enclosing class:; ObjectsMenuActions. @ActionMenu(""Menu.Objects""); public class ObjectsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectsMenuActions.AnnotationActions; annotationActions;  ; final ObjectsMenuActions.DeleteActions; deleteActions;  ; final ObjectsMenuActions.LockActions; lockActions;  ; final org.controlsfx.control.action.Action; REFRESH_DUPLICATE_OBJECT_IDS;  ; final org.controlsfx.control.action.Action; REFRESH_OBJECT_IDS;  ; final ObjectsMenuActions.SelectActions; selectActions;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. deleteActions; @ActionMenu(""Menu.Objects.Delete""); public final ObjectsMenuActions.DeleteActions deleteActions. selectActions; @ActionMenu(""Menu.Objects.Select""); public final ObjectsMenuActions.SelectActions selectActions. lockActions; @ActionMenu(""Menu.Objects.Lock""); public final ObjectsMenuActions.LockActions lockActions. SHOW_OBJECT_DESCRIPTIONS; public final org.controlsfx.control.action.Action SHOW_OBJECT_DESCRIPTIONS. SEP_4; public final org.controlsfx.control.action.Action SEP_4. annotationActions; @ActionMenu(""Menu.Objects.Annotations""); public final ObjectsM",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html
Security,hash,hashCode,"gui.actions.menus; Class ObjectsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions. Enclosing class:; ObjectsMenuActions. @ActionMenu(""Menu.Objects""); public class ObjectsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectsMenuActions.AnnotationActions; annotationActions;  ; final ObjectsMenuActions.DeleteActions; deleteActions;  ; final ObjectsMenuActions.LockActions; lockActions;  ; final org.controlsfx.control.action.Action; REFRESH_DUPLICATE_OBJECT_IDS;  ; final org.controlsfx.control.action.Action; REFRESH_OBJECT_IDS;  ; final ObjectsMenuActions.SelectActions; selectActions;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. deleteActions; @ActionMenu(""Menu.Objects.Delete""); public final ObjectsMenuActions.DeleteActions deleteActions. selectActions; @ActionMenu(""Menu.Objects.Select""); public final ObjectsMenuActions.SelectActions selectActions. lockActions; @ActionMenu(""Menu.Objects.Lock""); public final ObjectsMenuActions.LockActions lockActions. SHOW_OBJECT_DESCRIPTIONS; public final org.controlsfx.control.action.Action SHOW_OBJECT_DESCRIPTIONS. SEP_4; public final org.controlsfx.control.action.Action SEP_4. annotationActions; @ActionMenu(""Menu.Objects.Annotations""); public final ObjectsMenuActions.AnnotationActions annotationActions. REFRESH_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshIds""); public final org.controlsfx.control.action.Action REFRESH_OBJECT_IDS. REFRESH_DUPLICATE_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshDuplicateIds""); public final org.controlsfx.control.action.Action REFRESH_DUPLICATE_OBJECT_IDS. Constructor Det",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html
Modifiability,extend,extends,. ObjectsMenuActions.AnnotationActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.AnnotationActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.AnnotationActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATION_COPY_TO_PLANE;  ; final org.controlsfx.control.action.Action; ANNOTATION_DUPLICATE;  ; final org.controlsfx.control.action.Action; EXPAND_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; FILL_HOLES;  ; final org.controlsfx.control.action.Action; INSERT_INTO_HIERARCHY;  ; final org.controlsfx.control.action.Action; MAKE_INVERSE;  ; final org.controlsfx.control.action.Action; MERGE_SELECTED;  ; final org.controlsfx.control.action.Action; REMOVE_FRAGMENTS;  ; final org.controlsfx.control.action.Action; RESOLVE_HIERARCHY;  ; final org.controlsfx.control.action.Action; RIGID_OBJECT_EDITOR;  ; final org.controlsfx.control.action.Action; SELECT_ALL_ANNOTATION;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.control.action.Action; SIMPLIFY_SHAPE;  ; final org.controlsfx.control.action.Action; SPECIFY_ANNOTATION;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS_BY_LINES;  ; final org.controlsfx.control.action.Action; TRANSFER_ANNOTATION;  . Constructor Summary; Construct,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html
Security,hash,hashCode,"trolsfx.control.action.Action; REMOVE_FRAGMENTS;  ; final org.controlsfx.control.action.Action; RESOLVE_HIERARCHY;  ; final org.controlsfx.control.action.Action; RIGID_OBJECT_EDITOR;  ; final org.controlsfx.control.action.Action; SELECT_ALL_ANNOTATION;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.control.action.Action; SIMPLIFY_SHAPE;  ; final org.controlsfx.control.action.Action; SPECIFY_ANNOTATION;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS_BY_LINES;  ; final org.controlsfx.control.action.Action; TRANSFER_ANNOTATION;  . Constructor Summary; Constructors. Constructor; Description; AnnotationActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SPECIFY_ANNOTATION; @ActionConfig(""Action.Objects.Annotation.specify""); public final org.controlsfx.control.action.Action SPECIFY_ANNOTATION. SELECT_ALL_ANNOTATION; @ActionAccelerator(""shortcut+shift+a""); @ActionConfig(""Action.Objects.Annotation.fullImage""); public final org.controlsfx.control.action.Action SELECT_ALL_ANNOTATION. SEP_5; public final org.controlsfx.control.action.Action SEP_5. INSERT_INTO_HIERARCHY; @ActionAccelerator(""shortcut+shift+i""); @ActionConfig(""Action.Objects.Annotation.hierarchyInsert""); public final org.controlsfx.control.action.Action INSERT_INTO_HIERARCHY. RESOLVE_HIERARCHY; @ActionAccelerator(""shortcut+shift+r""); @ActionConfig(""Action.Objects.Annotation.hierarchyResolve""); public final org.controlsfx.control.action.Action RESOLVE_HIERARCHY. SEP_6; public final org.controlsfx.control.action.Action SEP_6. RIGID_OBJECT_EDITOR; @ActionAccelerator(""shortcut+shift+t""); @ActionConfig(""Action.Objects",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html
Usability,simpl,simplify,"on.Objects.Annotation.transform""); public final org.controlsfx.control.action.Action RIGID_OBJECT_EDITOR. ANNOTATION_DUPLICATE; @ActionAccelerator(""shift+d""); @ActionConfig(""Action.Objects.Annotation.duplicate""); public final org.controlsfx.control.action.Action ANNOTATION_DUPLICATE. ANNOTATION_COPY_TO_PLANE; @ActionAccelerator(""shortcut+shift+v""); @ActionConfig(""Action.Objects.Annotation.copyToCurrentPlane""); public final org.controlsfx.control.action.Action ANNOTATION_COPY_TO_PLANE. TRANSFER_ANNOTATION; @ActionAccelerator(""shift+e""); @ActionConfig(""Action.Objects.Annotation.transferLast""); public final org.controlsfx.control.action.Action TRANSFER_ANNOTATION. SEP_7; public final org.controlsfx.control.action.Action SEP_7. EXPAND_ANNOTATIONS; @ActionConfig(""Action.Objects.Annotation.expand""); public final org.controlsfx.control.action.Action EXPAND_ANNOTATIONS. SPLIT_ANNOTATIONS; @ActionConfig(""Action.Objects.Annotation.split""); public final org.controlsfx.control.action.Action SPLIT_ANNOTATIONS. SPLIT_ANNOTATIONS_BY_LINES; @ActionConfig(""Action.Objects.Annotation.splitByLines""); public final org.controlsfx.control.action.Action SPLIT_ANNOTATIONS_BY_LINES. REMOVE_FRAGMENTS; @ActionConfig(""Action.Objects.Annotation.removeFragmentsFillHoles""); public final org.controlsfx.control.action.Action REMOVE_FRAGMENTS. FILL_HOLES; @ActionConfig(""Action.Objects.Annotation.fillHoles""); public final org.controlsfx.control.action.Action FILL_HOLES. SEP_8; public final org.controlsfx.control.action.Action SEP_8. MAKE_INVERSE; @ActionConfig(""Action.Objects.Annotation.makeInverse""); public final org.controlsfx.control.action.Action MAKE_INVERSE. MERGE_SELECTED; @ActionConfig(""Action.Objects.Annotation.mergeSelected""); public final org.controlsfx.control.action.Action MERGE_SELECTED. SIMPLIFY_SHAPE; @ActionConfig(""Action.Objects.Annotation.simplify""); public final org.controlsfx.control.action.Action SIMPLIFY_SHAPE. Constructor Details. AnnotationActions; public AnnotationActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html
Modifiability,extend,extends,". ObjectsMenuActions.DeleteActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.DeleteActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.DeleteActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CLEAR_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; CLEAR_DETECTIONS;  ; final org.controlsfx.control.action.Action; CLEAR_HIERARCHY;  ; final org.controlsfx.control.action.Action; DELETE_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; DeleteActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DELETE_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Delete.selected""); public final org.controlsfx.control.action.Action DELETE_SELECTED_OBJECTS. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CLEAR_HIERARCHY; @ActionConfig(""Action.Objects.Delete.all""); public final org.controlsfx.control.action.Action CLEAR_HIERARCHY. CLEAR_ANNOTATIONS; @ActionConfig(""Action.Objects.Delete.annotations""); public final org.controlsfx.control.action.Action CLEAR_ANNOTATIONS. CLEAR_DETECTIONS; @ActionConfig(""Action.Objects.Delete.detections""); public final org.controlsfx.control.action.Action CLEAR_DETECTIONS. Constructor Details. DeleteActions; public DeleteActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html
Safety,detect,detections,". ObjectsMenuActions.DeleteActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.DeleteActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.DeleteActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CLEAR_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; CLEAR_DETECTIONS;  ; final org.controlsfx.control.action.Action; CLEAR_HIERARCHY;  ; final org.controlsfx.control.action.Action; DELETE_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; DeleteActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DELETE_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Delete.selected""); public final org.controlsfx.control.action.Action DELETE_SELECTED_OBJECTS. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CLEAR_HIERARCHY; @ActionConfig(""Action.Objects.Delete.all""); public final org.controlsfx.control.action.Action CLEAR_HIERARCHY. CLEAR_ANNOTATIONS; @ActionConfig(""Action.Objects.Delete.annotations""); public final org.controlsfx.control.action.Action CLEAR_ANNOTATIONS. CLEAR_DETECTIONS; @ActionConfig(""Action.Objects.Delete.detections""); public final org.controlsfx.control.action.Action CLEAR_DETECTIONS. Constructor Details. DeleteActions; public DeleteActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html
Security,hash,hashCode,". ObjectsMenuActions.DeleteActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.DeleteActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.DeleteActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CLEAR_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; CLEAR_DETECTIONS;  ; final org.controlsfx.control.action.Action; CLEAR_HIERARCHY;  ; final org.controlsfx.control.action.Action; DELETE_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; DeleteActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DELETE_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Delete.selected""); public final org.controlsfx.control.action.Action DELETE_SELECTED_OBJECTS. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CLEAR_HIERARCHY; @ActionConfig(""Action.Objects.Delete.all""); public final org.controlsfx.control.action.Action CLEAR_HIERARCHY. CLEAR_ANNOTATIONS; @ActionConfig(""Action.Objects.Delete.annotations""); public final org.controlsfx.control.action.Action CLEAR_ANNOTATIONS. CLEAR_DETECTIONS; @ActionConfig(""Action.Objects.Delete.detections""); public final org.controlsfx.control.action.Action CLEAR_DETECTIONS. Constructor Details. DeleteActions; public DeleteActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html
Integrability,interface,interface,". ObjectsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions. All Implemented Interfaces:; MenuActions. public class ObjectsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ObjectsMenuActions.Actions;  ; class ; ObjectsMenuActions.AnnotationActions;  ; class ; ObjectsMenuActions.DeleteActions;  ; class ; ObjectsMenuActions.LockActions;  ; class ; ObjectsMenuActions.SelectActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html
Modifiability,extend,extends,". ObjectsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions. All Implemented Interfaces:; MenuActions. public class ObjectsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ObjectsMenuActions.Actions;  ; class ; ObjectsMenuActions.AnnotationActions;  ; class ; ObjectsMenuActions.DeleteActions;  ; class ; ObjectsMenuActions.LockActions;  ; class ; ObjectsMenuActions.SelectActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html
Security,hash,hashCode,". ObjectsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions. All Implemented Interfaces:; MenuActions. public class ObjectsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ObjectsMenuActions.Actions;  ; class ; ObjectsMenuActions.AnnotationActions;  ; class ; ObjectsMenuActions.DeleteActions;  ; class ; ObjectsMenuActions.LockActions;  ; class ; ObjectsMenuActions.SelectActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html
Deployability,toggle,toggleSelected,". ObjectsMenuActions.LockActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.LockActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.LockActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; LOCK_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; TOGGLE_SELECTED_OBJECTS_LOCKED;  ; final org.controlsfx.control.action.Action; UNLOCK_SELECTED_OBJECTS;  . Constructor Summary; Constructors. Constructor; Description; LockActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. LOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.lockSelected""); @ActionAccelerator(""shortcut+shift+k""); public final org.controlsfx.control.action.Action LOCK_SELECTED_OBJECTS. UNLOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.unlockSelected""); @ActionAccelerator(""shortcut+alt+k""); public final org.controlsfx.control.action.Action UNLOCK_SELECTED_OBJECTS. TOGGLE_SELECTED_OBJECTS_LOCKED; @ActionConfig(""Action.Objects.Lock.toggleSelected""); @ActionAccelerator(""shortcut+k""); public final org.controlsfx.control.action.Action TOGGLE_SELECTED_OBJECTS_LOCKED. Constructor Details. LockActions; public LockActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html
Modifiability,extend,extends,". ObjectsMenuActions.LockActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.LockActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.LockActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; LOCK_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; TOGGLE_SELECTED_OBJECTS_LOCKED;  ; final org.controlsfx.control.action.Action; UNLOCK_SELECTED_OBJECTS;  . Constructor Summary; Constructors. Constructor; Description; LockActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. LOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.lockSelected""); @ActionAccelerator(""shortcut+shift+k""); public final org.controlsfx.control.action.Action LOCK_SELECTED_OBJECTS. UNLOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.unlockSelected""); @ActionAccelerator(""shortcut+alt+k""); public final org.controlsfx.control.action.Action UNLOCK_SELECTED_OBJECTS. TOGGLE_SELECTED_OBJECTS_LOCKED; @ActionConfig(""Action.Objects.Lock.toggleSelected""); @ActionAccelerator(""shortcut+k""); public final org.controlsfx.control.action.Action TOGGLE_SELECTED_OBJECTS_LOCKED. Constructor Details. LockActions; public LockActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html
Security,hash,hashCode,". ObjectsMenuActions.LockActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.LockActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.LockActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; LOCK_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; TOGGLE_SELECTED_OBJECTS_LOCKED;  ; final org.controlsfx.control.action.Action; UNLOCK_SELECTED_OBJECTS;  . Constructor Summary; Constructors. Constructor; Description; LockActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. LOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.lockSelected""); @ActionAccelerator(""shortcut+shift+k""); public final org.controlsfx.control.action.Action LOCK_SELECTED_OBJECTS. UNLOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.unlockSelected""); @ActionAccelerator(""shortcut+alt+k""); public final org.controlsfx.control.action.Action UNLOCK_SELECTED_OBJECTS. TOGGLE_SELECTED_OBJECTS_LOCKED; @ActionConfig(""Action.Objects.Lock.toggleSelected""); @ActionAccelerator(""shortcut+k""); public final org.controlsfx.control.action.Action TOGGLE_SELECTED_OBJECTS_LOCKED. Constructor Details. LockActions; public LockActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html
Modifiability,extend,extends,". ObjectsMenuActions.SelectActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.SelectActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.SelectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_SELECTION;  ; final org.controlsfx.control.action.Action; SELECT_ALL_DETECTIONS;  ; final org.controlsfx.control.action.Action; SELECT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SELECT_BY_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SELECT_BY_PLANE;  ; final org.controlsfx.control.action.Action; SELECT_CELLS;  ; final org.controlsfx.control.action.Action; SELECT_TILES;  ; final org.controlsfx.control.action.Action; SELECT_TMA_CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.O",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html
Safety,detect,detections,"CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.cells""); @ActionAccelerator(""shortcut+alt+c""); public final org.controlsfx.control.action.Action SELECT_CELLS. SELECT_TILES; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.tiles""); public final org.controlsfx.control.action.Action SELECT_TILES. SEP_3; public final org.controlsfx.control.action.Action SEP_3. SELECT_BY_CLASSIFICATION; @ActionConfig(""Action.Objects.Select.selectByClassification""); public final org.controlsfx.control.action.Action SELECT_BY_CLASSIFICATION. SELECT_BY_PLANE; @ActionConfig(""Action.Objects.Select.selectOnCurrentPlane""); public final org.controlsfx.control.action.Action SELECT_BY_PLANE. Constructor Details. SelectActions; public SelectActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html
Security,hash,hashCode,"ons.SelectActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.SelectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_SELECTION;  ; final org.controlsfx.control.action.Action; SELECT_ALL_DETECTIONS;  ; final org.controlsfx.control.action.Action; SELECT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SELECT_BY_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SELECT_BY_PLANE;  ; final org.controlsfx.control.action.Action; SELECT_CELLS;  ; final org.controlsfx.control.action.Action; SELECT_TILES;  ; final org.controlsfx.control.action.Action; SELECT_TMA_CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.cells""); @ActionAcce",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html
Deployability,install,installation,. qupath.lib.gui.actions.menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.menus. package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus.; ; Representing the menus in this way is intended to make it easier to find core functionality. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. All Classes and InterfacesInterfacesClasses. Class; Description; AnalyzeMenuActions;  ; AutomateMenuActions;  ; ClassifyMenuActions;  ; EditMenuActions;  ; ExtensionsMenuActions;  ; FileMenuActions;  ; HelpMenuActions;  ; MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. ObjectsMenuActions;  ; TMAMenuActions;  ; ViewMenuActions;  . ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html
Integrability,interface,interface,. qupath.lib.gui.actions.menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.menus. package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus.; ; Representing the menus in this way is intended to make it easier to find core functionality. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. All Classes and InterfacesInterfacesClasses. Class; Description; AnalyzeMenuActions;  ; AutomateMenuActions;  ; ClassifyMenuActions;  ; EditMenuActions;  ; ExtensionsMenuActions;  ; FileMenuActions;  ; HelpMenuActions;  ; MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. ObjectsMenuActions;  ; TMAMenuActions;  ; ViewMenuActions;  . ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html
Modifiability,config,configure,. qupath.lib.gui.actions.menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.menus. package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus.; ; Representing the menus in this way is intended to make it easier to find core functionality. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. All Classes and InterfacesInterfacesClasses. Class; Description; AnalyzeMenuActions;  ; AutomateMenuActions;  ; ClassifyMenuActions;  ; EditMenuActions;  ; ExtensionsMenuActions;  ; FileMenuActions;  ; HelpMenuActions;  ; MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. ObjectsMenuActions;  ; TMAMenuActions;  ; ViewMenuActions;  . ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html
Modifiability,extend,extends,". TMAMenuActions.Actions.AddActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.AddActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.AddActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ADD_COLUMN_AFTER;  ; final org.controlsfx.control.action.Action; ADD_COLUMN_BEFORE;  ; final org.controlsfx.control.action.Action; ADD_ROW_AFTER;  ; final org.controlsfx.control.action.Action; ADD_ROW_BEFORE;  . Constructor Summary; Constructors. Constructor; Description; AddActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ADD_ROW_BEFORE; @ActionConfig(""Action.TMA.addRowAbove""); public final org.controlsfx.control.action.Action ADD_ROW_BEFORE. ADD_ROW_AFTER; @ActionConfig(""Action.TMA.addRowBelow""); public final org.controlsfx.control.action.Action ADD_ROW_AFTER. ADD_COLUMN_BEFORE; @ActionConfig(""Action.TMA.addColumnBefore""); public final org.controlsfx.control.action.Action ADD_COLUMN_BEFORE. ADD_COLUMN_AFTER; @ActionConfig(""Action.TMA.addColumnAfter""); public final org.controlsfx.control.action.Action ADD_COLUMN_AFTER. Constructor Details. AddActions; public AddActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html
Security,hash,hashCode,". TMAMenuActions.Actions.AddActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.AddActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.AddActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ADD_COLUMN_AFTER;  ; final org.controlsfx.control.action.Action; ADD_COLUMN_BEFORE;  ; final org.controlsfx.control.action.Action; ADD_ROW_AFTER;  ; final org.controlsfx.control.action.Action; ADD_ROW_BEFORE;  . Constructor Summary; Constructors. Constructor; Description; AddActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ADD_ROW_BEFORE; @ActionConfig(""Action.TMA.addRowAbove""); public final org.controlsfx.control.action.Action ADD_ROW_BEFORE. ADD_ROW_AFTER; @ActionConfig(""Action.TMA.addRowBelow""); public final org.controlsfx.control.action.Action ADD_ROW_AFTER. ADD_COLUMN_BEFORE; @ActionConfig(""Action.TMA.addColumnBefore""); public final org.controlsfx.control.action.Action ADD_COLUMN_BEFORE. ADD_COLUMN_AFTER; @ActionConfig(""Action.TMA.addColumnAfter""); public final org.controlsfx.control.action.Action ADD_COLUMN_AFTER. Constructor Details. AddActions; public AddActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html
Modifiability,extend,extends,". TMAMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions. Enclosing class:; TMAMenuActions. @ActionMenu(""Menu.TMA""); public class TMAMenuActions.Actions; extends Object. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions.AddActions;  ; class ; TMAMenuActions.Actions.RemoveActions;  . Field Summary; Fields. Modifier and Type; Field; Description; final TMAMenuActions.Actions.AddActions; addActions;  ; final org.controlsfx.control.action.Action; CLEAR_CORES;  ; final org.controlsfx.control.action.Action; CONVEX_HULL;  ; final org.controlsfx.control.action.Action; CREATE_MANUAL;  ; final org.controlsfx.control.action.Action; RELABEL;  ; final TMAMenuActions.Actions.RemoveActions; removeActions;  ; final org.controlsfx.control.action.Action; RESET_METADATA;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CREATE_MANUAL; @ActionConfig(""Action.TMA.specifyGrid""); public final org.controlsfx.control.action.Action CREATE_MANUAL. SEP_0; public final org.controlsfx.control.action.Action SEP_0. addActions; @ActionMenu(""Menu.TMA.add""); public final TMAMenuActions.Actions.AddActions addActions. removeActions; @ActionMenu(""Menu.TMA.remove""); public final TMAMenuActions.Actions.RemoveActions removeActions. RELABEL; @",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html
Security,hash,hashCode,"TMA""); public class TMAMenuActions.Actions; extends Object. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions.AddActions;  ; class ; TMAMenuActions.Actions.RemoveActions;  . Field Summary; Fields. Modifier and Type; Field; Description; final TMAMenuActions.Actions.AddActions; addActions;  ; final org.controlsfx.control.action.Action; CLEAR_CORES;  ; final org.controlsfx.control.action.Action; CONVEX_HULL;  ; final org.controlsfx.control.action.Action; CREATE_MANUAL;  ; final org.controlsfx.control.action.Action; RELABEL;  ; final TMAMenuActions.Actions.RemoveActions; removeActions;  ; final org.controlsfx.control.action.Action; RESET_METADATA;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CREATE_MANUAL; @ActionConfig(""Action.TMA.specifyGrid""); public final org.controlsfx.control.action.Action CREATE_MANUAL. SEP_0; public final org.controlsfx.control.action.Action SEP_0. addActions; @ActionMenu(""Menu.TMA.add""); public final TMAMenuActions.Actions.AddActions addActions. removeActions; @ActionMenu(""Menu.TMA.remove""); public final TMAMenuActions.Actions.RemoveActions removeActions. RELABEL; @ActionConfig(""Action.TMA.relabel""); public final org.controlsfx.control.action.Action RELABEL. RESET_METADATA; @ActionConfig(""Action.TMA.resetMetadata""); public final org.controlsfx.control.action.Action RESET_METADATA. CLEAR_CORES; @ActionConfig(""Action.TMA.deleteGrid""); public final org.controlsfx.control.action.Action CLEAR_CORES. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CONVEX_HULL; @ActionConfig(""Action.TMA.findHull""); public final org.controlsfx.control.action.Action CONVEX_HULL. Constructor De",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html
Modifiability,extend,extends,". TMAMenuActions.Actions.RemoveActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.RemoveActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.RemoveActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; REMOVE_ROW;  . Constructor Summary; Constructors. Constructor; Description; RemoveActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. REMOVE_ROW; @ActionConfig(""Action.TMA.removeRow""); public final org.controlsfx.control.action.Action REMOVE_ROW. REMOVE_COLUMN; @ActionConfig(""Action.TMA.removeColumn""); public final org.controlsfx.control.action.Action REMOVE_COLUMN. Constructor Details. RemoveActions; public RemoveActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html
Security,hash,hashCode,". TMAMenuActions.Actions.RemoveActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.RemoveActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.RemoveActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; REMOVE_ROW;  . Constructor Summary; Constructors. Constructor; Description; RemoveActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. REMOVE_ROW; @ActionConfig(""Action.TMA.removeRow""); public final org.controlsfx.control.action.Action REMOVE_ROW. REMOVE_COLUMN; @ActionConfig(""Action.TMA.removeColumn""); public final org.controlsfx.control.action.Action REMOVE_COLUMN. Constructor Details. RemoveActions; public RemoveActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html
Integrability,interface,interface,". TMAMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions. All Implemented Interfaces:; MenuActions. public class TMAMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html
Modifiability,extend,extends,". TMAMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions. All Implemented Interfaces:; MenuActions. public class TMAMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html
Security,hash,hashCode,". TMAMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions. All Implemented Interfaces:; MenuActions. public class TMAMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html
Modifiability,extend,extends,". ViewMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.Actions. Enclosing class:; ViewMenuActions. @ActionMenu(""Menu.View""); public class ViewMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BRIGHTNESS_CONTRAST;  ; final ViewMenuActions.CellDisplayActions; cellDisplayActions;  ; final org.controlsfx.control.action.Action; CHANNEL_VIEWER;  ; final org.controlsfx.control.action.Action; COMMAND_LIST;  ; final org.controlsfx.control.action.Action; FILL_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; FILL_DETECTIONS;  ; final org.controlsfx.control.action.Action; GRID_SPACING;  ; final org.controlsfx.control.action.Action; INPUT_DISPLAY;  ; final org.controlsfx.control.action.Action; MEMORY_MONITORY;  ; final org.controlsfx.control.action.Action; MINI_VIEWER;  ; final ViewMenuActions.MultitouchActions; multitouchActions;  ; final ViewMenuActions.MultiviewActions; multiviewActions;  ; final org.controlsfx.control.action.Action; RECENT_COMMAND_LIST;  ; final org.controlsfx.control.action.Action; ROTATE_IMAGE;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.contro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html
Security,hash,hashCode,"trol.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  ; final org.controlsfx.control.action.Action; SLIDE_LABEL;  ; final org.controlsfx.control.action.Action; VIEW_TRACKER;  ; final Object; zoomActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_ANALYSIS_PANEL; public final org.controlsfx.control.action.Action SHOW_ANALYSIS_PANEL. COMMAND_LIST; @ActionConfig(""Action.View.commandList""); @ActionAccelerator(""shortcut+l""); public final org.controlsfx.control.action.Action COMMAND_LIST. RECENT_COMMAND_LIST; @ActionConfig(""Action.View.recentCommands""); @ActionAccelerator(""shortcut+p""); public final org.controlsfx.control.action.Action RECENT_COMMAND_LIST. SEP_0; public final org.controlsfx.control.action.Action SEP_0. BRIGHTNESS_CONTRAST; public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SEP_1; public final org.controlsfx.control.action.Action SEP_1. multiviewActions; @ActionMenu(""Menu.View.Multiview""); public final ViewMenuActions.MultiviewActions multiviewActions. CHANNEL_VIEWER; @ActionConfig(""Action.View.channelViewer""); public final org.controlsfx.control.action.Action CHANNEL_VIEWER. MINI_VIEWER; @ActionConfig(""Action.View.miniViewer""); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html
Modifiability,extend,extends,". ViewMenuActions.CellDisplayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.CellDisplayActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.CellDisplayActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  . Constructor Summary; Constructors. Constructor; Description; CellDisplayActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_CELL_BOUNDARIES; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES_AND_NUCLEI. SHOW_CELL_CENTROIDS; public final org.controlsfx.control.action.Action SHOW_CELL_CENTROIDS. Constructor Details. CellDisplayActions; public CellDisplayActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html
Security,hash,hashCode,". ViewMenuActions.CellDisplayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.CellDisplayActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.CellDisplayActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  . Constructor Summary; Constructors. Constructor; Description; CellDisplayActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_CELL_BOUNDARIES; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES_AND_NUCLEI. SHOW_CELL_CENTROIDS; public final org.controlsfx.control.action.Action SHOW_CELL_CENTROIDS. Constructor Details. CellDisplayActions; public CellDisplayActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html
Integrability,interface,interface,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html
Modifiability,extend,extends,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html
Security,hash,hashCode,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html
Modifiability,extend,extends,". ViewMenuActions.MultitouchActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultitouchActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultitouchActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; GESTURES_ALL;  ; final org.controlsfx.control.action.Action; GESTURES_NONE;  ; final org.controlsfx.control.action.Action; GESTURES_ROTATE;  ; final org.controlsfx.control.action.Action; GESTURES_SCROLL;  ; final org.controlsfx.control.action.Action; GESTURES_ZOOM;  ; final org.controlsfx.control.action.Action; SEP_9;  . Constructor Summary; Constructors. Constructor; Description; MultitouchActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GESTURES_ALL; @ActionConfig(""Action.View.Multitouch.allOn""); public final org.controlsfx.control.action.Action GESTURES_ALL. GESTURES_NONE; @ActionConfig(""Action.View.Multitouch.allOff""); public final org.controlsfx.control.action.Action GESTURES_NONE. SEP_9; public final org.controlsfx.control.action.Action SEP_9. GESTURES_SCROLL; @ActionConfig(""Action.View.Multitouch.scroll""); public final org.controlsfx.control.action.Action GESTURES_SCROLL. GESTURES_ZOOM; @ActionConfig(""Action.View.Multitouch.zoom""); public final org.controlsfx.control.action.Action GESTURES_ZOOM. GESTURES_ROTATE; @ActionConfig(""Action.View.Multitouch.rotate""); public final org.controlsfx.control.action.Action GESTURES_ROTATE. Co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html
Security,hash,hashCode,"isabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultitouchActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultitouchActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; GESTURES_ALL;  ; final org.controlsfx.control.action.Action; GESTURES_NONE;  ; final org.controlsfx.control.action.Action; GESTURES_ROTATE;  ; final org.controlsfx.control.action.Action; GESTURES_SCROLL;  ; final org.controlsfx.control.action.Action; GESTURES_ZOOM;  ; final org.controlsfx.control.action.Action; SEP_9;  . Constructor Summary; Constructors. Constructor; Description; MultitouchActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GESTURES_ALL; @ActionConfig(""Action.View.Multitouch.allOn""); public final org.controlsfx.control.action.Action GESTURES_ALL. GESTURES_NONE; @ActionConfig(""Action.View.Multitouch.allOff""); public final org.controlsfx.control.action.Action GESTURES_NONE. SEP_9; public final org.controlsfx.control.action.Action SEP_9. GESTURES_SCROLL; @ActionConfig(""Action.View.Multitouch.scroll""); public final org.controlsfx.control.action.Action GESTURES_SCROLL. GESTURES_ZOOM; @ActionConfig(""Action.View.Multitouch.zoom""); public final org.controlsfx.control.action.Action GESTURES_ZOOM. GESTURES_ROTATE; @ActionConfig(""Action.View.Multitouch.rotate""); public final org.controlsfx.control.action.Action GESTURES_ROTATE. Constructor Details. MultitouchActions; public MultitouchActions(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html
Modifiability,extend,extends,". ViewMenuActions.MultiviewActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultiviewActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MULTIVIEW_CLOSE_VIEWER;  ; final ViewMenuActions.MultiviewGridActions; MULTIVIEW_GRID_ACTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_MATCH_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_ACTIONS; @ActionMenu(""Action.View.Multiview.gridMenu""); public final ViewMenuActions.MultiviewGridActions MULTIVIEW_GRID_ACTIONS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_SYNCHRONIZE_VIEWERS; public final org.controlsfx.control.action.Action MULTIVIEW_SYNCHRONIZE_VIEWERS. MULTIVIEW_MATCH_RESOLUTIONS; public final org.controlsfx.control.action.Action MULTIVIEW_MATCH_RESOLUTIONS. SEP_01; public final org.controlsfx.control.action.Action SEP_01.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html
Security,hash,hashCode,"ct; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MULTIVIEW_CLOSE_VIEWER;  ; final ViewMenuActions.MultiviewGridActions; MULTIVIEW_GRID_ACTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_MATCH_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_ACTIONS; @ActionMenu(""Action.View.Multiview.gridMenu""); public final ViewMenuActions.MultiviewGridActions MULTIVIEW_GRID_ACTIONS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_SYNCHRONIZE_VIEWERS; public final org.controlsfx.control.action.Action MULTIVIEW_SYNCHRONIZE_VIEWERS. MULTIVIEW_MATCH_RESOLUTIONS; public final org.controlsfx.control.action.Action MULTIVIEW_MATCH_RESOLUTIONS. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_CLOSE_VIEWER; @ActionConfig(""Action.View.Multiview.closeViewer""); public final org.controlsfx.control.action.Action MULTIVIEW_CLOSE_VIEWER. SEP_02; public final org.controlsfx.control.action.Action SEP_02. DETACH_VIEWER; @ActionConfig(""ViewerActions.detachViewer""); public final org.controlsfx.control.action.Action DETACH_VIEWER. ATTACH_VIEWER; @ActionConfig(""ViewerActions.attachViewer""); public final org.controlsfx.control.a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html
Modifiability,extend,extends,". ViewMenuActions.MultiviewGridActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultiviewGridActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewGridActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_3x3;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_RESET_GRID;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewGridActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_1x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x1. MULTIVIEW_GRID_1x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x2. MULTIVIEW_GRID_2x1; public final org",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html
Security,hash,hashCode,"ction; MULTIVIEW_ADD_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_3x3;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_RESET_GRID;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewGridActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_1x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x1. MULTIVIEW_GRID_1x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x2. MULTIVIEW_GRID_2x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x1. MULTIVIEW_GRID_2x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x2. MULTIVIEW_GRID_3x3; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_3x3. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_ADD_ROW; @ActionConfig(""Action.View.Multiview.addRow""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_ROW. MULTIVIEW_ADD_COLUMN; @ActionConfig(""Action.View.Multiview.addColumn""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_COLUMN. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_REMOVE_ROW; @ActionConfig(""Action.View.Multiview.removeRow""); pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html
Modifiability,extend,extends,". ViewMenuActions.ZoomActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.ZoomActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.ZoomActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; ZOOM_1;  ; final org.controlsfx.control.action.Action; ZOOM_10;  ; final org.controlsfx.control.action.Action; ZOOM_100;  ; final org.controlsfx.control.action.Action; ZOOM_400;  ; final org.controlsfx.control.action.Action; ZOOM_IN;  ; final org.controlsfx.control.action.Action; ZOOM_OUT;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_400; @ActionConfig(""Action.View.Zoom.400""); public final org.controlsfx.control.action.Action ZOOM_400. ZOOM_100; @ActionConfig(""Action.View.Zoom.100""); public final org.controlsfx.control.action.Action ZOOM_100. ZOOM_10; @ActionConfig(""Action.View.Zoom.10""); public final org.controlsfx.control.action.Action ZOOM_10. ZOOM_1; @ActionConfig(""Action.View.Zoom.1""); public final org.controlsfx.control.action.Action ZOOM_1. SEP_3; public final org.controlsfx.control.action.Action SEP_3. ZOOM_IN; @ActionConfig(""Action.View.Zoom.zoomIn""); @ActionIcon(ZOOM_IN); public final org.controlsfx.control.action.Action ZOOM_IN. ZOOM_OUT; @ActionConfig(""Action.View.Zoom.zoomOut""); @ActionIcon(ZOOM_OUT); @ActionAccelerator(""-""); public fi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html
Security,hash,hashCode,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.ZoomActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.ZoomActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; ZOOM_1;  ; final org.controlsfx.control.action.Action; ZOOM_10;  ; final org.controlsfx.control.action.Action; ZOOM_100;  ; final org.controlsfx.control.action.Action; ZOOM_400;  ; final org.controlsfx.control.action.Action; ZOOM_IN;  ; final org.controlsfx.control.action.Action; ZOOM_OUT;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_400; @ActionConfig(""Action.View.Zoom.400""); public final org.controlsfx.control.action.Action ZOOM_400. ZOOM_100; @ActionConfig(""Action.View.Zoom.100""); public final org.controlsfx.control.action.Action ZOOM_100. ZOOM_10; @ActionConfig(""Action.View.Zoom.10""); public final org.controlsfx.control.action.Action ZOOM_10. ZOOM_1; @ActionConfig(""Action.View.Zoom.1""); public final org.controlsfx.control.action.Action ZOOM_1. SEP_3; public final org.controlsfx.control.action.Action SEP_3. ZOOM_IN; @ActionConfig(""Action.View.Zoom.zoomIn""); @ActionIcon(ZOOM_IN); public final org.controlsfx.control.action.Action ZOOM_IN. ZOOM_OUT; @ActionConfig(""Action.View.Zoom.zoomOut""); @ActionIcon(ZOOM_OUT); @ActionAccelerator(""-""); public final org.controlsfx.control.action.Action ZOOM_OUT. ZOOM_TO_FIT; @ActionConfig(""Action.View.Zoom.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html
Deployability,toggle,toggle," Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastChannelPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Integrability,interface,interface,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the visibility of channels. Returns:. currentChannelVisible; public Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Modifiability,extend,extends,". BrightnessContrastChannelPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastChannelPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNode",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Performance,cache,cacheShape,"play.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Security,access,accessibleHelp," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastChannelPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObj",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Usability,clear,clearConstraints,"visible,; i.e. BooleanProperty; disableToggleMenuItemsProperty(). Property to disable options to toggle the visibility of channels. MultipleSelectionModel<ChannelDisplayInfo>; getSelectionModel(). Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is hidden. void; setShowChannel(ChannelDisplayInfo channel). Request that the specified channel is shown. void; toggleShowHideChannel(ChannelDisplayInfo channel). Toggle the visibility of the specified channel. void; updateTable(). Ensure the table is up-to-date. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html
Deployability,update,updateHistogram,"ipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Integrability,interface,interface,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Modifiability,extend,extends,". BrightnessContrastHistogramPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Performance,cache,cacheShape,"vafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Security,access,accessibleHelp," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Testability,log,logarithm,"rightnessContrastHistogramPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, la",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Usability,clear,clearConstraints,"egion; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html
Deployability,update,updateBounds,"SnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Integrability,interface,interface,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Modifiability,extend,extends,". BrightnessContrastSettingsPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Performance,load,load,". BrightnessContrastSettingsPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Security,access,accessibleHelp,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance Method",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Usability,clear,clearConstraints,", USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html
Deployability,update,updateBounds,"SnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Integrability,interface,interface,"d, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maximum slider. See Also:. maxValueProperty(). minValue; public DoubleProperty minValueProperty; Value of the minimum slider. See Also:.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Modifiability,extend,extends,". BrightnessContrastSliderPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSliderPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSliderPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSliderPane; extends GridPane; A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, bou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Performance,cache,cacheShape,"nessContrastSliderPane; extends GridPane; A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Security,access,accessibleHelp,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Usability,clear,clearConstraints," the gamma slider. ObjectProperty<ImageDisplay>; imageDisplayProperty(). The image display to which the sliders are applied. DoubleProperty; maxValueProperty(). Value of the maximum slider. DoubleProperty; minValueProperty(). Value of the minimum slider. void; refreshSliders(). Refresh the sliders, to ensure they match with the current channel. void; resetAllSliders(). Reset all sliders to their default values. ObjectProperty<ChannelDisplayInfo>; selectedChannelProperty(). The channel to which the sliders are applied. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html
Integrability,interface,interface,". qupath.lib.gui.commands.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.display. package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command.; ; Important: This package is not expected to be public after modularization. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.objects;  . Classes. Class; Description; BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html
Performance,load,load,". qupath.lib.gui.commands.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.display. package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command.; ; Important: This package is not expected to be public after modularization. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.objects;  . Classes. Class; Description; BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html
Integrability,interface,interface,. qupath.lib.gui.commands.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.objects. package qupath.lib.gui.commands.objects. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. Classes. Class; Description; SplitAnnotationsByLineCommand. Command to split annotations using lines. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/package-summary.html
Modifiability,extend,extends,". SplitAnnotationsByLineCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.objects; Class SplitAnnotationsByLineCommand. java.lang.Object; qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand. public class SplitAnnotationsByLineCommand; extends Object; Command to split annotations using lines. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsByLineCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(ImageData<?> imageData). Run the command for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SplitAnnotationsByLineCommand; public SplitAnnotationsByLineCommand(). Method Details. run; public void run(ImageData<?> imageData); Run the command for the specified image data. Parameters:; imageData - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html
Security,hash,hashCode,". SplitAnnotationsByLineCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.objects; Class SplitAnnotationsByLineCommand. java.lang.Object; qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand. public class SplitAnnotationsByLineCommand; extends Object; Command to split annotations using lines. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsByLineCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(ImageData<?> imageData). Run the command for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SplitAnnotationsByLineCommand; public SplitAnnotationsByLineCommand(). Method Details. run; public void run(ImageData<?> imageData); Run the command for the specified image data. Parameters:; imageData - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html
Availability,down,downsample,"uilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html
Integrability,interface,interface,"of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be retur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html
Modifiability,extend,extends,". ChannelDisplayTransformServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class ChannelDisplayTransformServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.gui.images.servers.ChannelDisplayTransformServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>, PathObjectReader. public class ChannelDisplayTransformServer; extends TransformingImageServer<BufferedImage>; implements PathObjectReader; ImageServer that applies a color transform to an image. This can either be a single RGB transform, or one or more single-channel (float) transforms.; ; Note: This class may move or be removed in a later version. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageServer<BufferedImage>; createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels). Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html
Security,hash,hashCode,"rver. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html
Integrability,depend,depend,". qupath.lib.gui.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.servers. package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. Classes. Class; Description; ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html
Modifiability,layers,layers,". qupath.lib.gui.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.servers. package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. Classes. Class; Description; ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html
Safety,detect,detection,". qupath.lib.gui.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.servers. package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. Classes. Class; Description; ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html
Integrability,interface,interface,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Modifiability,extend,extends,". PathHierarchyImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class PathHierarchyImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.gui.images.servers.PathHierarchyImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class PathHierarchyImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; DEFAULT_PREFIX. Prefix used for the path of all instances of this class. Constructor Summary; Constructors. Constructor; Description; PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Col",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Performance,cache,caches,"ltThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Safety,detect,detection,". PathHierarchyImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class PathHierarchyImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.gui.images.servers.PathHierarchyImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class PathHierarchyImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; DEFAULT_PREFIX. Prefix used for the path of all instances of this class. Constructor Summary; Constructors. Constructor; Description; PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Col",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Security,hash,hashCode,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Usability,clear,clearing,"ltThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html
Availability,down,downsamples,"rendered images, with optional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html
Modifiability,extend,extends,". RenderedImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class RenderedImageServer.Builder. java.lang.Object; qupath.lib.gui.images.servers.RenderedImageServer.Builder. Enclosing class:; RenderedImageServer. public static class RenderedImageServer.Builder; extends Object; Builder to create an ImageServer to display rendered images, with optional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; lay",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html
Performance,perform,performed,". RenderedImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class RenderedImageServer.Builder. java.lang.Object; qupath.lib.gui.images.servers.RenderedImageServer.Builder. Enclosing class:; RenderedImageServer. public static class RenderedImageServer.Builder; extends Object; Builder to create an ImageServer to display rendered images, with optional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; lay",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html
Security,hash,hashCode,"nsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(Im",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html
Availability,down,downsample,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Deployability,continuous,continuously,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Energy Efficiency,adapt,adapt,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Integrability,interface,interface,"...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Modifiability,extend,extends,". RenderedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class RenderedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.gui.images.servers.RenderedImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class RenderedImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; An ImageServer that can display a rendered image, with optional overlays.; This is intended for use when exporting 'flattened' RGB images. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). static ImageServer<BufferedImage>; createRenderedServer(QuPathViewer viewer). Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. static ImageServer<BufferedImage>; createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer). Create an ImageServer that converts the image to RGB using the specified ImageRenderer. protected ImageServerBuilder.ServerBuil",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Security,hash,hashCode,"example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; ch",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Usability,simpl,simplest," values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html
Deployability,update,updated,". AbstractImageRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html
Integrability,interface,interface,"ores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html
Modifiability,extend,extends,". AbstractImageRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html
Security,hash,hashCode," Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a ti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html
Integrability,interface,interface,"rModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; public void setColorModel(ColorModel model); Set the color model to use. Parameters:; model - . getColorModel; public ColorModel getColorModel(); Get the ColorModel for this renderer (may be null). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html
Modifiability,extend,extends,". ColorModelRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ColorModelRenderer. java.lang.Object; qupath.lib.gui.images.stores.ColorModelRenderer. All Implemented Interfaces:; ImageRenderer. public class ColorModelRenderer; extends Object; implements ImageRenderer; An ImageRenderer that uses a ColorModel. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorModelRenderer(ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html
Security,hash,hashCode,"ui.images.stores.ColorModelRenderer. All Implemented Interfaces:; ImageRenderer. public class ColorModelRenderer; extends Object; implements ImageRenderer; An ImageRenderer that uses a ColorModel. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorModelRenderer(ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html
Availability,down,downsampleFactor,".images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileList",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Energy Efficiency,charge,charged,"e; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Parameters:; server - ; request - ; cache - ; ensureTileReturned - ; Returns:. createTileWorker; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage> createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). getThumbnail; public BufferedImage getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache). clearCache; public void clearCache(); Clear the cache, including thumbnails, and cancel any pending requests. clearCache; public void clearCache(boolean clearThumbnails,; boolean stopWaiting); Clear the cache, optionally including thumbnails and stopping any pending requests. Parameters:; clearThumbnails - ; stopWaiting - . clearCacheForServer; public void clearC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Integrability,interface,interface,"when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Modifiability,extend,extends,". DefaultImageRegionStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Performance,cache,cache,". DefaultImageRegionStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Safety,timeout,timeoutMilliseconds,"mage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Security,hash,hashCode,"redImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImage",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Usability,clear,clearCache,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html
Availability,down,downsampleFactor,". ImageRegionRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html
Integrability,interface,interface,". ImageRegionRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html
Safety,timeout,timeoutMilliseconds,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html
Availability,avail,available,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html
Modifiability,extend,extends,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html
Performance,cache,cache,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html
Security,hash,hashCode,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html
Availability,down,downsampleFactor,"Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreHelpers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given Image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html
Modifiability,extend,extends,". ImageRegionStoreHelpers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreHelpers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html
Performance,cache,cached,". ImageRegionStoreHelpers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreHelpers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html
Security,hash,hashCode,"le boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosition - The tPosition from which to request tiles; regions - regions The ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html
Integrability,interface,interface,". ImageRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRenderer. All Known Implementing Classes:; AbstractImageRenderer, ColorModelRenderer, ImageDisplay. public interface ImageRenderer; Interface for objects capable of converting a BufferedImage for rendering using Graphics2D.; This typically means applying any color transforms to produce an (A)RGB image.; ; A timestamp and ID are supplied to help with caching. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Method Details. applyTransforms; BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. getLastChangeTimestamp; long getLastChangeTimestamp(); Timestamp of the last change (probably in milliseconds).; ; This can be ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/ImageRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRenderer.html
Availability,avail,available,". qupath.lib.gui.images.stores (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.stores. package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. ColorModelRenderer. An ImageRenderer that uses a ColorModel. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. TileListener<T>. Interface for anything that needs to know when image tiles become available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/package-summary.html
Modifiability,variab,variable,". qupath.lib.gui.images.stores (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.stores. package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. ColorModelRenderer. An ImageRenderer that uses a ColorModel. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. TileListener<T>. Interface for anything that needs to know when image tiles become available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/package-summary.html
Availability,avail,available,". TileListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface TileListener<T>. Type Parameters:; T - . All Known Implementing Classes:; QuPathViewer, QuPathViewerPlus. public interface TileListener<T>; Interface for anything that needs to know when image tiles become available. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; requiresTileRegion(String serverPath,; ImageRegion region). Check if the listener requires a particular tile. void; tileAvailable(String serverPath,; ImageRegion region,; T tile). Notify a listener that an image tile has been received read & is available. Method Details. tileAvailable; void tileAvailable(String serverPath,; ImageRegion region,; T tile); Notify a listener that an image tile has been received read & is available. Parameters:; serverPath - ; region - ; tile - . requiresTileRegion; boolean requiresTileRegion(String serverPath,; ImageRegion region); Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Parameters:; serverPath - ; region - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html
Integrability,interface,interface,". TileListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface TileListener<T>. Type Parameters:; T - . All Known Implementing Classes:; QuPathViewer, QuPathViewerPlus. public interface TileListener<T>; Interface for anything that needs to know when image tiles become available. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; requiresTileRegion(String serverPath,; ImageRegion region). Check if the listener requires a particular tile. void; tileAvailable(String serverPath,; ImageRegion region,; T tile). Notify a listener that an image tile has been received read & is available. Method Details. tileAvailable; void tileAvailable(String serverPath,; ImageRegion region,; T tile); Notify a listener that an image tile has been received read & is available. Parameters:; serverPath - ; region - ; tile - . requiresTileRegion; boolean requiresTileRegion(String serverPath,; ImageRegion region); Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Parameters:; serverPath - ; region - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html
Integrability,interface,interface,"irect Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html
Modifiability,extend,extends,". DefaultAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class DefaultAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. Direct Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html
Security,hash,hashCode,"irect Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html
Modifiability,extend,extends,". GroovyAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class GroovyAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.GroovyAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class GroovyAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Groovy. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyAutoCompletor; public GroovyAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html
Security,hash,hashCode,". GroovyAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class GroovyAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.GroovyAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class GroovyAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Groovy. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyAutoCompletor; public GroovyAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html
Integrability,interface,interface,". qupath.lib.gui.scripting.completors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.completors. package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Classes. Class; Description; DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. GroovyAutoCompletor. Auto completion support for Groovy. PythonAutoCompletor. Auto completion support for Python. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/package-summary.html
Modifiability,extend,extends,". PythonAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class PythonAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.PythonAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class PythonAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Python. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PythonAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PythonAutoCompletor; public PythonAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html
Security,hash,hashCode,". PythonAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class PythonAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.PythonAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class PythonAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Python. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PythonAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PythonAutoCompletor; public PythonAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html
Modifiability,extend,extends,". CssLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class CssLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.CssLanguage. public class CssLanguage; extends ScriptLanguage; Class for representing CSS in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CssLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static CssLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. CssLanguage; public CssLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static CssLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLang",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html
Security,hash,hashCode,"aScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class CssLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.CssLanguage. public class CssLanguage; extends ScriptLanguage; Class for representing CSS in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CssLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static CssLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. CssLanguage; public CssLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static CssLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html
Integrability,interface,interface,". DefaultScriptLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class DefaultScriptLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage. All Implemented Interfaces:; ExecutableLanguage. Direct Known Subclasses:; GroovyLanguage. public class DefaultScriptLanguage; extends ScriptLanguage; implements ExecutableLanguage; Default implementation for a ScriptLanguage, based on a ScriptEngine. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; protected static interface ; DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. Field Summary; Fields. Modifier and Type; Field; Description; protected static final DefaultScriptLanguage.ImportStatementGenerator; JAVA_IMPORTER. Java-like import statements. protected static final DefaultScriptLanguage.ImportStatementGenerator; PYTHON_IMPORTER. Pythonic import statements. Constructor Summary; Constructors. Constructor; Description; DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor). Constructor for a ExecutableLanguage. DefaultScriptLanguage(ScriptEngineFactory factory). Constructor for a ExecutableLanguage based on a ScriptEngineFactory. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ScriptContext; createContext(ScriptParameters params). Create a ScriptContext containing information from the ScriptParameters. Object; execute(ScriptParameters params). Execute the given script String. Scr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html
Modifiability,extend,extends,". DefaultScriptLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class DefaultScriptLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage. All Implemented Interfaces:; ExecutableLanguage. Direct Known Subclasses:; GroovyLanguage. public class DefaultScriptLanguage; extends ScriptLanguage; implements ExecutableLanguage; Default implementation for a ScriptLanguage, based on a ScriptEngine. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; protected static interface ; DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. Field Summary; Fields. Modifier and Type; Field; Description; protected static final DefaultScriptLanguage.ImportStatementGenerator; JAVA_IMPORTER. Java-like import statements. protected static final DefaultScriptLanguage.ImportStatementGenerator; PYTHON_IMPORTER. Pythonic import statements. Constructor Summary; Constructors. Constructor; Description; DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor). Constructor for a ExecutableLanguage. DefaultScriptLanguage(ScriptEngineFactory factory). Constructor for a ExecutableLanguage based on a ScriptEngineFactory. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ScriptContext; createContext(ScriptParameters params). Create a ScriptContext containing information from the ScriptParameters. Object; execute(ScriptParameters params). Execute the given script String. Scr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html
Security,hash,hashCode," that takes care of this language's auto-completion. protected ScriptAutoCompletor; getDefaultAutoCompletor(String languageName). Default method to get a suitable auto completor for the given language name. protected String; getDefaultScriptName();  ; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. String; getImportStatements(Collection<Class<?>> classes). Get the import statements as a String, to add at the beginning of the executed script. String; getStaticImportStatements(Collection<Class<?>> classes). Get the static import statements as a String, to add at the beginning of the executed script. protected String; tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable);  . Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. JAVA_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator JAVA_IMPORTER; Java-like import statements. PYTHON_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator PYTHON_IMPORTER; Pythonic import statements. Constructor Details. DefaultScriptLanguage; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name; exts - the possible extensions for this language; completor - the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html
Integrability,interface,interface,. DefaultScriptLanguage.ImportStatementGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Interface DefaultScriptLanguage.ImportStatementGenerator. Enclosing class:; DefaultScriptLanguage. protected static interface DefaultScriptLanguage.ImportStatementGenerator; Interface defining how the import statements should be generated for the language.; The purpose of this is to enable standard methods for common languages (currently Java and Python). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getImportStatments(Collection<Class<?>> classes);  ; String; getStaticImportStatments(Collection<Class<?>> classes);  . Method Details. getImportStatments; String getImportStatments(Collection<Class<?>> classes). getStaticImportStatments; String getStaticImportStatments(Collection<Class<?>> classes). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.ImportStatementGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.ImportStatementGenerator.html
Integrability,interface,interfaces,". GroovyLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class GroovyLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage; qupath.lib.gui.scripting.languages.GroovyLanguage. All Implemented Interfaces:; ExecutableLanguage. public class GroovyLanguage; extends DefaultScriptLanguage; implements ExecutableLanguage; Class for the representation of the Groovy programming language in QuPath.; ; This class stores the QuPath implementation of Groovy syntaxing and Groovy auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.Scr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html
Modifiability,extend,extends,". GroovyLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class GroovyLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage; qupath.lib.gui.scripting.languages.GroovyLanguage. All Implemented Interfaces:; ExecutableLanguage. public class GroovyLanguage; extends DefaultScriptLanguage; implements ExecutableLanguage; Class for the representation of the Groovy programming language in QuPath.; ; This class stores the QuPath implementation of Groovy syntaxing and Groovy auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.Scr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html
Security,hash,hashCode,"DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. Constructor Details. GroovyLanguage; public GroovyLanguage(); Constructor for Groovy Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static GroovyLanguage getInstance(); Get the static instance of this class. Returns:; instance. getImportStatementGenerator; protected DefaultScriptLanguage.ImportStatementGenerator getImportStatementGenerator(); Description copied from class: DefaultScriptLanguage; Get an DefaultScriptLanguage.ImportStatementGenerator.; This attempts to make an educated guess, returning JAVA_IMPORTER or PYTHON_IMPORTER based on the ; name. Overrides:; getImportStatementGenerator in class DefaultScriptLanguage; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html
Integrability,interface,interface,. HtmlRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Interface HtmlRenderer. All Superinterfaces:; ExecutableLanguage. All Known Implementing Classes:; MarkdownLanguage. public interface HtmlRenderer; extends ExecutableLanguage; Marker interface that indicates an executable language renders HTML.; This really exists to support markdown rendering. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html
Modifiability,extend,extends,. HtmlRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Interface HtmlRenderer. All Superinterfaces:; ExecutableLanguage. All Known Implementing Classes:; MarkdownLanguage. public interface HtmlRenderer; extends ExecutableLanguage; Marker interface that indicates an executable language renders HTML.; This really exists to support markdown rendering. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html
Modifiability,extend,extends,". JsonLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class JsonLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.JsonLanguage. public class JsonLanguage; extends ScriptLanguage; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of JSON syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; JsonLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static JsonLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. JsonLanguage; public JsonLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static JsonLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html
Security,hash,hashCode,"ary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class JsonLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.JsonLanguage. public class JsonLanguage; extends ScriptLanguage; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of JSON syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; JsonLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static JsonLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. JsonLanguage; public JsonLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static JsonLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html
Integrability,interface,interface,"entation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in interface ExecutableLanguage; Parameters:; params - ; Returns:; Throws:; ScriptException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html
Modifiability,extend,extends,". MarkdownLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class MarkdownLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.MarkdownLanguage. All Implemented Interfaces:; HtmlRenderer, ExecutableLanguage. public class MarkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html
Security,hash,hashCode,"arkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html
Availability,avail,available,". qupath.lib.gui.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.languages. package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; CssLanguage. Class for representing CSS in QuPath. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. HtmlRenderer. Marker interface that indicates an executable language renders HTML. JsonLanguage. Class for the representation of JSON syntax in QuPath. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. PlainLanguage. Class for the representation of plain text in QuPath. PropertiesLanguage. Class for the representation of properties and config files in QuPath. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. XmlLanguage. Class for representing XML in QuPath. YamlLanguage. Class for the representation of YAML syntax in QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html
Integrability,interface,interface,". qupath.lib.gui.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.languages. package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; CssLanguage. Class for representing CSS in QuPath. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. HtmlRenderer. Marker interface that indicates an executable language renders HTML. JsonLanguage. Class for the representation of JSON syntax in QuPath. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. PlainLanguage. Class for the representation of plain text in QuPath. PropertiesLanguage. Class for the representation of properties and config files in QuPath. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. XmlLanguage. Class for representing XML in QuPath. YamlLanguage. Class for the representation of YAML syntax in QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html
Modifiability,config,config,". qupath.lib.gui.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.languages. package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; CssLanguage. Class for representing CSS in QuPath. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. HtmlRenderer. Marker interface that indicates an executable language renders HTML. JsonLanguage. Class for the representation of JSON syntax in QuPath. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. PlainLanguage. Class for the representation of plain text in QuPath. PropertiesLanguage. Class for the representation of properties and config files in QuPath. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. XmlLanguage. Class for representing XML in QuPath. YamlLanguage. Class for the representation of YAML syntax in QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html
Modifiability,extend,extends,". PlainLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that tak",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html
Security,hash,hashCode,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html
Usability,simpl,simple,". PlainLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that tak",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html
Modifiability,extend,extends,". PropertiesLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this languag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html
Security,hash,hashCode,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html
Availability,avail,available,". ScriptLanguageProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class ScriptLanguageProvider. java.lang.Object; qupath.lib.gui.scripting.languages.ScriptLanguageProvider. public class ScriptLanguageProvider; extends Object; Class with static methods to fetch all the available ScriptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associate",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html
Modifiability,extend,extends,". ScriptLanguageProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class ScriptLanguageProvider. java.lang.Object; qupath.lib.gui.scripting.languages.ScriptLanguageProvider. public class ScriptLanguageProvider; extends Object; Class with static methods to fetch all the available ScriptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associate",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html
Security,hash,hashCode,"criptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Parameters:; name - ; Returns:. fromString; public static ScriptLanguage fromString(String languageString); Get the ScriptLanguage object corresponding to the specified String. ; If the string cannot be matched, PlainLanguage is returned. Parameters:; languageString - ; Returns:; corresponding script language, or PlainLanguage if no match. getLanguageFromExtension; public static ScriptLanguage getLanguageFromExtension(String ext); Return the first ScriptLanguage compatible with the specified extension (can be runnable ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html
Modifiability,extend,extends,". XmlLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class XmlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.XmlLanguage. public class XmlLanguage; extends ScriptLanguage; Class for representing XML in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; XmlLanguage(). Constructor for XML Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static XmlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. XmlLanguage; public XmlLanguage(); Constructor for XML Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static XmlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLangua",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html
Security,hash,hashCode,"avaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class XmlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.XmlLanguage. public class XmlLanguage; extends ScriptLanguage; Class for representing XML in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; XmlLanguage(). Constructor for XML Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static XmlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. XmlLanguage; public XmlLanguage(); Constructor for XML Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static XmlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html
Modifiability,extend,extends,". YamlLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class YamlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. public class YamlLanguage; extends ScriptLanguage; Class for the representation of YAML syntax in QuPath. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's classes). Constructor Summary; Constructors. Constructor; Description; YamlLanguage(). Constructor for YAML language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static YamlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. YamlLanguage; public YamlLanguage(); Constructor for YAML language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static YamlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html
Security,hash,hashCode,"ks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class YamlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. public class YamlLanguage; extends ScriptLanguage; Class for the representation of YAML syntax in QuPath. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's classes). Constructor Summary; Constructors. Constructor; Description; YamlLanguage(). Constructor for YAML language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static YamlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. YamlLanguage; public YamlLanguage(); Constructor for YAML language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static YamlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html
Integrability,wrap,wrapText,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class CodeAreaControl. java.lang.Object; qupath.lib.gui.scripting.richtextfx.CodeAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html
Modifiability,extend,extends,". CodeAreaControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class CodeAreaControl. java.lang.Object; qupath.lib.gui.scripting.richtextfx.CodeAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html
Security,hash,hashCode,"he control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html
Usability,clear,clear,"ng.richtextfx.CodeAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html
Integrability,interface,interface,". qupath.lib.gui.scripting.richtextfx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.richtextfx. package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Classes. Class; Description; CodeAreaControl. Code area control using RichTextFX. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/package-summary.html
Modifiability,extend,extends,". RichScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor; qupath.lib.gui.scripting.richtextfx.RichScriptEditor. All Implemented Interfaces:; ScriptEditor. public class RichScriptEditor; extends DefaultScriptEditor; Rich script editor for QuPath, which can be used for handling different languages.; ; Makes use of RichTextFX, Copyright (c) 2013-2017, Tomas Mikula and contributors (BSD 2-clause license). Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; currentLanguage, currentSyntax, sendLogToConsole. Field Summary. Fields inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; beautifySourceAction, comboPasteEscape, completionCodeCombination, compressSourceAction, copyAction, cutAction, findAction, insertAllDefaultImportAction, insertDetectionMeasurementsAction, insertMuAction, insertObjectClassifiersAction, insertPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html
Security,hash,hashCode,"rtPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, getCurrentScriptTab, getCurrentSyntax, getCurrentText, getSelectedText, getStage, pasteFromClipboard, promptToSetFontSize, scriptRunning, sendLogToConsoleProperty, showEditor, showScript, showScript, supportsFile. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RichScriptEditor; public RichScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getNewEditor; protected ScriptEditorControl<? extends Region> getNewEditor(). Overrides:; getNewEditor in class DefaultScriptEditor. applyCompletion; protected void applyCompletion(EditableText control,; AutoCompletions.Completion completion); Insert the text from the completion to the editable text. Parameters:; control - ; completion - . getNewConsole; protected ScriptEditorControl<? extends Region> getNewConsole(). Overrides:; getNewConsole in class DefaultScriptEditor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html
Usability,undo,undoAction,"od. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor; qupath.lib.gui.scripting.richtextfx.RichScriptEditor. All Implemented Interfaces:; ScriptEditor. public class RichScriptEditor; extends DefaultScriptEditor; Rich script editor for QuPath, which can be used for handling different languages.; ; Makes use of RichTextFX, Copyright (c) 2013-2017, Tomas Mikula and contributors (BSD 2-clause license). Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; currentLanguage, currentSyntax, sendLogToConsole. Field Summary. Fields inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; beautifySourceAction, comboPasteEscape, completionCodeCombination, compressSourceAction, copyAction, cutAction, findAction, insertAllDefaultImportAction, insertDetectionMeasurementsAction, insertMuAction, insertObjectClassifiersAction, insertPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html
Deployability,install,installExtension,"ld | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditorExtension. java.lang.Object; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html
Integrability,interface,interface,"Extension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html
Modifiability,extend,extends,". RichScriptEditorExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditorExtension. java.lang.Object; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html
Security,hash,hashCode,"htextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html
Testability,test,test,"; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html
Availability,avail,available,. qupath.lib.gui.scripting.syntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.syntax. package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html
Integrability,interface,interface,. qupath.lib.gui.scripting.syntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.syntax. package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html
Integrability,interface,interface,". ScriptSyntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Interface ScriptSyntax. public interface ScriptSyntax; Interface for classes that apply some syntax formatting to an EditableText. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; beautify(String text). Beautifies the specified text, according to the syntax. default boolean; canBeautify(). Returns true if beautify(String) is capable of beautifying the text, false otherwise. default boolean; canCompress(). Returns true if compress(String) is capable of compressing the text, false otherwise. default String; compress(String text). Compresses the specified text by removing extra space, according to the syntax. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this syntax. default String; getLineCommentString(). Get the String that represents the start of a comment line. default String; getTabString(). String to insert when tab key pressed. default boolean; handleBackspace(EditableText control,; boolean smartEditing). Handle a backspace. default void; handleLeftParenthesis(EditableText control,; boolean smartEditing). Handle left parentheses (. default void; handleLineComment(EditableText control). Handle line comments. default void; handleNewLine(EditableText control,; boolean smartEditing). Handle a new line. default void; handleQuotes(EditableText control,; boolean isDoubleQuote,; boolean smartEditing). Handle single/double quotes. default void; handleRightParenthesis(EditableText control,; boolean smartEditing). Handle right parentheses )",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntax.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntax.html
Availability,avail,available,". ScriptSyntaxProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSynta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html
Modifiability,extend,extends,". ScriptSyntaxProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSynta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html
Security,hash,hashCode,"| ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSyntaxes(); Get the available script syntaxes. Returns:. getSyntaxFromName; public static ScriptSyntax getSyntaxFromName(String name); Get a script syntax from a specified language name.; If no specific syntax is found, then a general-purpose (plain) syntax will be returned. Parameters:; name - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html
Integrability,interface,interface,".lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html
Modifiability,extend,extends,". GroovyStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html
Security,hash,hashCode,"pting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html
Testability,log,logConsole,". GroovyStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html
Integrability,interface,interface,"etail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html
Modifiability,extend,extends,". JsonStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html
Security,hash,hashCode,"; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html
Integrability,interface,interface,"ipting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html
Modifiability,extend,extends,". MarkdownStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indic",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html
Security,hash,hashCode,"ail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptSty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html
Availability,avail,available,". qupath.lib.gui.scripting.richtextfx.stylers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers. package qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. PlainStyler. Styling for plain text (which really means no styling). PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. XmlStyler. Styling to apply to a CodeArea for XML. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/package-summary.html
Integrability,interface,interface,":. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html
Modifiability,extend,extends,". PlainStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, consider",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html
Security,hash,hashCode,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html
Integrability,interface,interface,"extfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html
Modifiability,extend,extends,". PropertiesStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html
Security,hash,hashCode,"ass PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html
Testability,log,logConsole,". PropertiesStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html
Integrability,interface,interface,"; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html
Modifiability,extend,extends,". PythonStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html
Security,hash,hashCode,"gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html
Testability,log,logConsole,". PythonStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html
Integrability,interface,interface,". ScriptStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Interface ScriptStyler. All Known Implementing Classes:; GroovyStyler, JsonStyler, MarkdownStyler, PlainStyler, PropertiesStyler, PythonStyler, XmlStyler, YamlStyler. public interface ScriptStyler; Interface for classes that apply some styling to a RichTextFX's CodeArea. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html
Testability,log,logConsole,". ScriptStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Interface ScriptStyler. All Known Implementing Classes:; GroovyStyler, JsonStyler, MarkdownStyler, PlainStyler, PropertiesStyler, PythonStyler, XmlStyler, YamlStyler. public interface ScriptStyler; Interface for classes that apply some styling to a RichTextFX's CodeArea. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html
Availability,avail,available,". ScriptStylerProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class ScriptStylerProvider. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. public class ScriptStylerProvider; extends Object; Class with static methods to fetch all the available ScriptStylers. Since:; v0.4.0; Author:; Melvin Gelbard. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html
Modifiability,extend,extends,". ScriptStylerProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class ScriptStylerProvider. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. public class ScriptStylerProvider; extends Object; Class with static methods to fetch all the available ScriptStylers. Since:; v0.4.0; Author:; Melvin Gelbard. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html
Security,hash,hashCode," for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the specified ScriptLanguage. ; If the language cannot be matched, PlainStyle",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html
Testability,log,logger,"ylerProvider; extends Object; Class with static methods to fetch all the available ScriptStylers. Since:; v0.4.0; Author:; Melvin Gelbard. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptSt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html
Usability,simpl,simple,"Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html
Availability,avail,available,". XmlStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class XmlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler. All Implemented Interfaces:; ScriptStyler. public class XmlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea for XML.; ; This is based on XMLEditorDemo.java from RichTextFX, available at ; https://github.com/FXMisc/RichTextFX/blob/master/richtextfx-demos/src/main/java/org/fxmisc/richtext/demo/XMLEditorDemo.java; and adapted for use in QuPath.; ; The license for RichTextFX is given below:; ; Copyright (c) 2013-2017, Tomas Mikula and contributors; ; All rights reserved.; ; Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:; ; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.; ; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.; ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAU",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html
Energy Efficiency,adapt,adapted,". XmlStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class XmlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler. All Implemented Interfaces:; ScriptStyler. public class XmlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea for XML.; ; This is based on XMLEditorDemo.java from RichTextFX, available at ; https://github.com/FXMisc/RichTextFX/blob/master/richtextfx-demos/src/main/java/org/fxmisc/richtext/demo/XMLEditorDemo.java; and adapted for use in QuPath.; ; The license for RichTextFX is given below:; ; Copyright (c) 2013-2017, Tomas Mikula and contributors; ; All rights reserved.; ; Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:; ; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.; ; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.; ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAU",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html
Integrability,interface,interface,"ECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING ; IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; . Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html
Modifiability,extend,extends,". XmlStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class XmlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler. All Implemented Interfaces:; ScriptStyler. public class XmlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea for XML.; ; This is based on XMLEditorDemo.java from RichTextFX, available at ; https://github.com/FXMisc/RichTextFX/blob/master/richtextfx-demos/src/main/java/org/fxmisc/richtext/demo/XMLEditorDemo.java; and adapted for use in QuPath.; ; The license for RichTextFX is given below:; ; Copyright (c) 2013-2017, Tomas Mikula and contributors; ; All rights reserved.; ; Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:; ; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.; ; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.; ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAU",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html
Security,hash,hashCode,"HT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING ; IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; . Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html
Integrability,interface,interface,"Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html
Modifiability,extend,extends,". YamlStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html
Security,hash,hashCode,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html
Availability,down,downsampleFactor,"ageOverlay; extends AbstractOverlay; Abstract PathOverlay with additional properties relevant when drawing BufferedImages. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageInterpolation>; interpolation. The preferred method of interpolation to use for display. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. Abstrac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html
Integrability,interface,interfaces,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; BufferedImageOverlay, PixelClassificationOverlay. public abstract class AbstractImageOverlay; extends AbstractOverlay; Abstract PathOverlay with additional properties relevant when drawing BufferedImages. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageInterpolation>; interpolation. The preferred method of interpolation to use for display. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverla",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html
Modifiability,extend,extends,". AbstractImageOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; BufferedImageOverlay, PixelClassificationOverlay. public abstract class AbstractImageOverlay; extends AbstractOverlay; Abstract PathOverlay with additional properties relevant when drawing BufferedImages. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageInterpolation>; interpolation. The preferred method of interpolation to use for display. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html
Performance,perform,performed,"terpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolation(Graphics2D g2d). paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html
Security,hash,hashCode,"r and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html
Integrability,interface,interface,". AbstractOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; AbstractImageOverlay, GridOverlay, HierarchyOverlay, TMAGridOverlay. public abstract class AbstractOverlay; extends Object; implements PathOverlay; Abstract class to help with implementing PathOverlays. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected AlphaComposite; getAlphaComposite();  ; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html
Modifiability,extend,extends,". AbstractOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; AbstractImageOverlay, GridOverlay, HierarchyOverlay, TMAGridOverlay. public abstract class AbstractOverlay; extends Object; implements PathOverlay; Abstract class to help with implementing PathOverlays. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected AlphaComposite; getAlphaComposite();  ; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html
Performance,perform,perform,". AbstractOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; AbstractImageOverlay, GridOverlay, HierarchyOverlay, TMAGridOverlay. public abstract class AbstractOverlay; extends Object; implements PathOverlay; Abstract class to help with implementing PathOverlays. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected AlphaComposite; getAlphaComposite();  ; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html
Security,hash,hashCode,"Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html
Integrability,interface,interface,". AbstractOverlay.LocationStringFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface AbstractOverlay.LocationStringFunction. Enclosing class:; AbstractOverlay. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface AbstractOverlay.LocationStringFunction; Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). See PathOverlay.getLocationString(ImageData, double, double, int, int). Method Details. getLocationString; String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); See PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; imageData - ; x - ; y - ; z - ; t - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html
Performance,perform,perform,". AbstractOverlay.LocationStringFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface AbstractOverlay.LocationStringFunction. Enclosing class:; AbstractOverlay. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface AbstractOverlay.LocationStringFunction; Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). See PathOverlay.getLocationString(ImageData, double, double, int, int). Method Details. getLocationString; String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); See PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; imageData - ; x - ; y - ; z - ; t - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html
Availability,down,downsampleFactor,"ent image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html
Integrability,interface,interfaces,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class BufferedImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends I",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html
Modifiability,extend,extends,". BufferedImageOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class BufferedImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html
Performance,perform,performed,"ionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html
Security,hash,hashCode,"ata<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empty overlay without any images to display. Parameters:; options - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html
Availability,down,downsampleFactor,"; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html
Integrability,interface,interfaces,". GridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check ove",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html
Modifiability,extend,extends,". GridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check ove",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html
Performance,perform,performed,"osite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html
Security,hash,hashCode,"ankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform alread",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html
Availability,down,downsampleFactor,"r.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - ove",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Energy Efficiency,adapt,adapt,"ion). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Integrability,interface,interfaces,". HierarchyOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Modifiability,extend,extends,". HierarchyOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Performance,cache,cached,"eld | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Const",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Security,hash,hashCode,"ptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Usability,clear,clearCachedOverlay,". Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html
Performance,perform,perform,". qupath.lib.gui.viewer.overlays (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer.overlays. package qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. Related Packages. Package; Description; qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. GridOverlay. An overlay used to show a (counting) grid on top of an image. HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). PathOverlay. Interface defining an overlay to paint on top of a viewer. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. TMAGridOverlay. An overlay capable of painting a TMA Grid. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/package-summary.html
Availability,down,downsampleFactor,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface PathOverlay. All Known Implementing Classes:; AbstractImageOverlay, AbstractOverlay, BufferedImageOverlay, GridOverlay, HierarchyOverlay, PixelClassificationOverlay, TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData asso",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html
Integrability,interface,interface,". PathOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface PathOverlay. All Known Implementing Classes:; AbstractImageOverlay, AbstractOverlay, BufferedImageOverlay, GridOverlay, HierarchyOverlay, PixelClassificationOverlay, TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thickness",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html
Performance,perform,performed,"TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. getLocationString; default String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Get a location string to display when showing a specified image.; ; The default i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html
Availability,down,downsampleFactor,"eredImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Integrability,interface,interfaces,"p navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Modifiability,extend,extends,". PixelClassificationOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Performance,cache,cached,"ewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Safety,predict,prediction,"mage that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Security,hash,hashCode,"a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier,; int nThreads); Create an overlay to display the live application of a PixelClassifier to an image. Parameters:; options - the options controlling the overlay display; classifier - the classifier; nThreads - number of parallel threads to use for",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Usability,clear,clearCache," Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html
Availability,down,downsampleFactor,"il:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html
Integrability,interface,interfaces,". TMAGridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description cop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html
Modifiability,extend,extends,". TMAGridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description cop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html
Performance,perform,performed,"nString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html
Security,hash,hashCode,"rlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html
Integrability,interface,interface,"es; protected List<qupath.lib.gui.viewer.recording.ViewRecordingFrame> getFrames(); Return an unmodifiable list of all the frames stored by this view tracker. Returns:. isLastFrame; public boolean isLastFrame(qupath.lib.gui.viewer.recording.ViewRecordingFrame frame); Return whether the specified frame is the last one recorded. Parameters:; frame - ; Returns:; whether it is the last frame. getFrameIndexForTime; public int getFrameIndexForTime(long timestamp); Return the index of the frame visible at the specified timestamp (in ms).; If the timestamp is lower than the first recorded frame, 0 will be returned. Parameters:; timestamp - ; Returns:; index of frame. getFrameForTime; public qupath.lib.gui.viewer.recording.ViewRecordingFrame getFrameForTime(long timestamp); Return the frame visible at the specified timestamp (in ms). Parameters:; timestamp - ; Returns:; the corresponding frame. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html
Modifiability,extend,extends,". ViewTracker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTracker. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTracker. All Implemented Interfaces:; EventListener, QuPathViewerListener. public class ViewTracker; extends Object; implements QuPathViewerListener; Default ViewTracker implementation.; ; This tracks only viewer location and cursor position (no eye tracking... because it can't see you). ; It does not handle viewer rotations.; . Author:; Pete Bankhead, Melvin Gelbard. Property Summary; Properties. Type; Property; Description; BooleanProperty; activeTool. Return the activeTool property of this tracker. BooleanProperty; cursorTracking. Return the cursorTracking property of this tracker. BooleanProperty; eyeTracking. Return the eyeTracking property of this tracker. StringProperty; name. Return the String property of this ViewTracker. BooleanProperty; recording. Return the recording property of this ViewTracker. Field Summary; Fields. Modifier and Type; Field; Description; protected static final DecimalFormat; df;  ; protected static final String; LOG_DELIMITER;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; activeToolProperty(). Return the activeTool property of this tracker. void; appendFrame(qupath.lib.gui.viewer.recording.ViewRecordingFrame frame). Append frame to the collection of frames. BooleanProperty; cursorTrackingProperty(). Return the cursorTracking property of this tracker. BooleanProperty; eyeTrackingProperty(). Return the eyeTracking property of this tracker. protected PathTool; getActiveToolIfRequired();  ; List<qupath.lib.gui.viewer.recording.ViewRec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html
Security,hash,hashCode,"ty(). Return the String property of this ViewTracker. int; nFrames(). Return the number of recorded frames. BooleanProperty; recordingProperty(). Return the recording property of this ViewTracker. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setFile(File file). Set the file for this ViewTracker. void; setName(String name). Set the name of this ViewTracker. void; setOptionalParameters(boolean ZandT,; boolean cursorTracking,; boolean activeToolTracking,; boolean eyeTracking). Set optional parameters for this ViewTracker. void; setRecording(boolean recording). Set the recording property of this ViewTracker. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. recording; public BooleanProperty recordingProperty; Return the recording property of this ViewTracker. See Also:. isRecording(); setRecording(boolean); recordingProperty(). name; public StringProperty nameProperty; Return the String property of this ViewTracker. See Also:. getName(); setName(String); nameProperty(). cursorTracking; public BooleanProperty cursorTrackingProperty; Return the cursorTracking property of this tracker. See Also:. cursorTrackingProperty(). activeTool; public BooleanProperty activeToolProperty; Return the activeTool property of this tracker. See Also:. activeToolProperty(). eyeTracking; public BooleanProperty eyeTrackingProperty; Return the eyeTracking property of this tracker. See Also:. eyeTrackingProperty(). Field Details. df; protected static final DecimalFormat df. LOG_DELIMITER; protected static final String LOG_DELIMITER. See Also:. Constant Field Values. Method Details. nFrames; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html
Integrability,interface,interface,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html
Modifiability,extend,extends,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html
Security,hash,hashCode,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html
Modifiability,extend,extends,". ViewTrackerDataMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerDataMap. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerDataMap. public class ViewTrackerDataMap; extends Object; Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. Author:; Melvin Gelbard. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html
Security,hash,hashCode,". ViewTrackerDataMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerDataMap. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerDataMap. public class ViewTrackerDataMap; extends Object; Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. Author:; Melvin Gelbard. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html
Integrability,interface,interface,"rfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html
Modifiability,extend,extends,". ExtendedPathTool (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class ExtendedPathTool. java.lang.Object; qupath.lib.gui.viewer.tools.ExtendedPathTool. All Implemented Interfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). regis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html
Security,hash,hashCode,"ct; qupath.lib.gui.viewer.tools.ExtendedPathTool. All Implemented Interfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html
Integrability,interface,interface,". PathTool (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Interface PathTool. All Known Implementing Classes:; ExtendedPathTool. public interface PathTool; Interface defining how a toolbar tool interacts with a viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. default Node; getIcon(). Get the icon of the tool. default String; getName(). Get the name of the tool. ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. Property Details. name; ReadOnlyStringProperty nameProperty; Property giving the name of the tool. See Also:. getName(); nameProperty(). icon; ReadOnlyObjectProperty<Node> iconProperty; Property giving the icon that should be used for the tool. See Also:. getIcon(); iconProperty(). Method Details. registerTool; void registerTool(QuPathViewer viewer); Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; void deregisterTool(QuPathViewer viewer); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/PathTool.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTool.html
Modifiability,extend,extends,". PathTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class PathTools. java.lang.Object; qupath.lib.gui.viewer.tools.PathTools. public class PathTools; extends Object; Default PathTool implementations. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final PathTool; ARROW_DOUBLE. Arrow drawing tool, with arrowhead at both ends. static final PathTool; ARROW_END. Arrow drawing tool, with arrowhead at the end. static final PathTool; ARROW_START. Arrow drawing tool, with arrowhead at the start. static final PathTool; BRUSH. Brush drawing tool. static final PathTool; ELLIPSE. Ellipse drawing tool. static final PathTool; LINE. Line drawing tool. static final PathTool; LINE_OR_ARROW. Extended PathTool that can switch between drawing lines or arrows. static final PathTool; MOVE. Move tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the Pat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html
Security,hash,hashCode,"ove tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the PathTool corresponding to the specified String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MOVE; public static final PathTool MOVE; Move tool. RECTANGLE; public static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended PathTool that can switch between drawing lines or arrows. POLYGON; public static final PathTool POLYGON; Polygon drawing tool (closed). POLYLINE; public static final PathTool POLYLINE; Polyline drawing tool (open). BRUSH; public static final PathTool BRUSH; Brush drawing tool. POINTS; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html
Integrability,interface,interface,". QuPathPenManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class QuPathPenManager. java.lang.Object; qupath.lib.gui.viewer.tools.QuPathPenManager. public class QuPathPenManager; extends Object; Helper class for managing pressure-sensitive input. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. Constructor Summary; Constructors. Constructor; Description; QuPathPenManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static QuPathPenManager.PenInputManager; getPenManager(). Get the current PenInputManager. static void; setPenManager(QuPathPenManager.PenInputManager manager). Set the PenInputManager. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathPenManager; public QuPathPenManager(). Method Details. getPenManager; public static QuPathPenManager.PenInputManager getPenManager(); Get the current PenInputManager. This is guaranteed to return a PenInputManager even if no ; pen is present - in this case, a default manager will be returned. Returns:. setPenManager; public static void setPenManager(QuPathPenManager.PenInputManager manager); Set the PenInputManager. If null, a default PenInputManager will be used. Parameters:; manager - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html
Modifiability,extend,extends,". QuPathPenManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class QuPathPenManager. java.lang.Object; qupath.lib.gui.viewer.tools.QuPathPenManager. public class QuPathPenManager; extends Object; Helper class for managing pressure-sensitive input. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. Constructor Summary; Constructors. Constructor; Description; QuPathPenManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static QuPathPenManager.PenInputManager; getPenManager(). Get the current PenInputManager. static void; setPenManager(QuPathPenManager.PenInputManager manager). Set the PenInputManager. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathPenManager; public QuPathPenManager(). Method Details. getPenManager; public static QuPathPenManager.PenInputManager getPenManager(); Get the current PenInputManager. This is guaranteed to return a PenInputManager even if no ; pen is present - in this case, a default manager will be returned. Returns:. setPenManager; public static void setPenManager(QuPathPenManager.PenInputManager manager); Set the PenInputManager. If null, a default PenInputManager will be used. Parameters:; manager - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html
Security,hash,hashCode,". QuPathPenManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class QuPathPenManager. java.lang.Object; qupath.lib.gui.viewer.tools.QuPathPenManager. public class QuPathPenManager; extends Object; Helper class for managing pressure-sensitive input. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. Constructor Summary; Constructors. Constructor; Description; QuPathPenManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static QuPathPenManager.PenInputManager; getPenManager(). Get the current PenInputManager. static void; setPenManager(QuPathPenManager.PenInputManager manager). Set the PenInputManager. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathPenManager; public QuPathPenManager(). Method Details. getPenManager; public static QuPathPenManager.PenInputManager getPenManager(); Get the current PenInputManager. This is guaranteed to return a PenInputManager even if no ; pen is present - in this case, a default manager will be returned. Returns:. setPenManager; public static void setPenManager(QuPathPenManager.PenInputManager manager); Set the PenInputManager. If null, a default PenInputManager will be used. Parameters:; manager - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html
Integrability,interface,interface,". QuPathPenManager.PenInputManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Interface QuPathPenManager.PenInputManager. Enclosing class:; QuPathPenManager. public static interface QuPathPenManager.PenInputManager; Interface defining minimal behavior for a pen input device. ; This can be used to support pressure sensitivity for some commands (e.g. brush). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getPressure(). Returns a pressure value, between 0 and 1. boolean; isEraser(). Query if there is a pen currently being used as an eraser. Method Details. isEraser; boolean isEraser(); Query if there is a pen currently being used as an eraser. Returns:; true if there is an active pen currently being used as an eraser, false otherwise. getPressure; double getPressure(); Returns a pressure value, between 0 and 1. Returns:; 1 if there is no pen or a pen being used with maximum pressure, otherwise a pressure value for the current pen. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.PenInputManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.PenInputManager.html
Energy Efficiency,adapt,adapting,". BrushToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class BrushToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Direct Known Subclasses:; WandToolEventHandler. public class BrushToolEventHandler; extends Object; Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BrushToolEventHandler();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected PathObject; createNewAnnotation(MouseEvent e,; double x,; double y). Create a new annotation and set it in the current viewer. protected ROI; createNewROI(MouseEvent e,; double x,; double y,; ImagePlane plane). Create a new ROI with the given starting coordinates. protected Geometry; createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape). Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. protected void; ensureCursorType(Cursor cursor). Ensure that the specified cursor is set in the current viewer. protected double; getBrushDiameter();  ; protected PathObject; getCurrentParent();  ; protected GeometryFactory; getGeometryFactory();  ; protected Cursor; getRequestedCursor();  ; protected QuPathViewer; getViewer();  ; void; handle(MouseEvent event);  ; protected boolean; isSubtractMode(MouseEvent e);  ; void; mouseClicked(MouseEvent e);  ; void; mouseDragged(MouseEvent e);  ; void; mouseEntered(MouseEvent e);  ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html
Integrability,depend,depend,"ouble x,; double y,; ImagePlane plane); Create a new ROI with the given starting coordinates. Parameters:; e - ; x - ; y - ; plane - ; Returns:. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html
Modifiability,extend,extends,". BrushToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class BrushToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Direct Known Subclasses:; WandToolEventHandler. public class BrushToolEventHandler; extends Object; Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BrushToolEventHandler();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected PathObject; createNewAnnotation(MouseEvent e,; double x,; double y). Create a new annotation and set it in the current viewer. protected ROI; createNewROI(MouseEvent e,; double x,; double y,; ImagePlane plane). Create a new ROI with the given starting coordinates. protected Geometry; createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape). Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. protected void; ensureCursorType(Cursor cursor). Ensure that the specified cursor is set in the current viewer. protected double; getBrushDiameter();  ; protected PathObject; getCurrentParent();  ; protected GeometryFactory; getGeometryFactory();  ; protected Cursor; getRequestedCursor();  ; protected QuPathViewer; getViewer();  ; void; handle(MouseEvent event);  ; protected boolean; isSubtractMode(MouseEvent e);  ; void; mouseClicked(MouseEvent e);  ; void; mouseDragged(MouseEvent e);  ; void; mouseEntered(MouseEvent e);  ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html
Safety,avoid,avoid,";  ; void; mouseExited(MouseEvent e);  ; protected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html
Security,hash,hashCode,"Event e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Parameters:; e - ; x - ; y - ; useTiles - I",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html
Integrability,depend,depend,"notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html
Modifiability,extend,extends,". MoveToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class MoveToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. public class MoveToolEventHandler; extends Object; The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. Constructor Summary; Constructors. Constructor; Description; MoveToolEventHandler();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; ensureCursorType(Cursor cursor). Ensure that the specified cursor is set in the current viewer. protected PathObject; getCurrentParent();  ; protected QuPathViewer; getViewer();  ; void; handle(MouseEvent event);  ; void; mouseClicked(MouseEvent e);  ; void; mouseDragged(MouseEvent e);  ; void; mouseEntered(MouseEvent e);  ; void; mouseExited(MouseEvent e);  ; protected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html
Safety,avoid,avoid,"agged(MouseEvent e);  ; void; mouseEntered(MouseEvent e);  ; void; mouseExited(MouseEvent e);  ; protected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html
Security,hash,hashCode,"Bounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html
Modifiability,extend,extends,". MoveToolEventHandler.ViewerMover (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class MoveToolEventHandler.ViewerMover. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Enclosing class:; MoveToolEventHandler. public static class MoveToolEventHandler.ViewerMover; extends Object; Helper class for panning a QuPathViewer (reasonably) smoothly. Constructor Summary; Constructors. Constructor; Description; ViewerMover(QuPathViewer viewer). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; cancelDirection(boolean xAxis). Cancel either the x- or y-axis direction of the movement. void; decelerate(). Stop moving, by smoothly decelerating. void; startMoving(double dx,; double dy,; boolean constantVelocity). Start moving, with initial velocity given by dx and dy. void; stopMoving(). Stop moving immediately. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewerMover; public ViewerMover(QuPathViewer viewer); Constructor. Parameters:; viewer - the viewer that will be controlled by this object. Method Details. startMoving; public void startMoving(double dx,; double dy,; boolean constantVelocity); Start moving, with initial velocity given by dx and dy. Parameters:; dx - ; dy - ; constantVelocity - . cancelDirection; public void cancelDirection(boolean xAxis); Cancel either the x- or y-axis direction of the movement. ; ; E.g. This can be used to change the direction from diagonal to straight ; (horizontal/vertical) when releasing an arrow key while another arr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html
Security,hash,hashCode," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class MoveToolEventHandler.ViewerMover. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Enclosing class:; MoveToolEventHandler. public static class MoveToolEventHandler.ViewerMover; extends Object; Helper class for panning a QuPathViewer (reasonably) smoothly. Constructor Summary; Constructors. Constructor; Description; ViewerMover(QuPathViewer viewer). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; cancelDirection(boolean xAxis). Cancel either the x- or y-axis direction of the movement. void; decelerate(). Stop moving, by smoothly decelerating. void; startMoving(double dx,; double dy,; boolean constantVelocity). Start moving, with initial velocity given by dx and dy. void; stopMoving(). Stop moving immediately. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewerMover; public ViewerMover(QuPathViewer viewer); Constructor. Parameters:; viewer - the viewer that will be controlled by this object. Method Details. startMoving; public void startMoving(double dx,; double dy,; boolean constantVelocity); Start moving, with initial velocity given by dx and dy. Parameters:; dx - ; dy - ; constantVelocity - . cancelDirection; public void cancelDirection(boolean xAxis); Cancel either the x- or y-axis direction of the movement. ; ; E.g. This can be used to change the direction from diagonal to straight ; (horizontal/vertical) when releasing an arrow key while another arrow key ; is pressed. Parameters:; xAxis - . decelerate; public void decelerate(); Stop moving, by smoothly decelerating. stopMoving; public void stopMoving(); Stop moving immediately. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html
Energy Efficiency,adapt,adapting,". qupath.lib.gui.viewer.tools.handlers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer.tools.handlers. package qupath.lib.gui.viewer.tools.handlers. Related Packages. Package; Description; qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. Classes. Class; Description; BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. PathToolEventHandlers;  . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/package-summary.html
Modifiability,adapt,adapting,". qupath.lib.gui.viewer.tools.handlers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer.tools.handlers. package qupath.lib.gui.viewer.tools.handlers. Related Packages. Package; Description; qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. Classes. Class; Description; BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. PathToolEventHandlers;  . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/package-summary.html
Modifiability,extend,extends,". PathToolEventHandlers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class PathToolEventHandlers. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers. public class PathToolEventHandlers; extends Object. Constructor Summary; Constructors. Constructor; Description; PathToolEventHandlers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowEndEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowStartEventHandler();  ; static EventHandler<MouseEvent>; createBrushEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createDoubleArrowEventHandler();  ; static EventHandler<MouseEvent>; createEllipseEventHandler();  ; static EventHandler<MouseEvent>; createLineEventHandler();  ; static EventHandler<MouseEvent>; createMoveEventHandler();  ; static EventHandler<MouseEvent>; createPointsEventHandler();  ; static EventHandler<MouseEvent>; createPolygonEventHandler();  ; static EventHandler<MouseEvent>; createPolylineEventHandler();  ; static EventHandler<MouseEvent>; createRectangleEventHandler();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathToolEventHandlers; public PathToolEventHandlers(). Method Details. createMoveEventHandler; public static EventHandler<MouseEvent> createMoveEventHandler(). createRectangleEventHandler; public static EventHandler<MouseEvent> createRectangleEventHandler(). createEllipseEventHandler; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html
Security,hash,hashCode," Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowEndEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowStartEventHandler();  ; static EventHandler<MouseEvent>; createBrushEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createDoubleArrowEventHandler();  ; static EventHandler<MouseEvent>; createEllipseEventHandler();  ; static EventHandler<MouseEvent>; createLineEventHandler();  ; static EventHandler<MouseEvent>; createMoveEventHandler();  ; static EventHandler<MouseEvent>; createPointsEventHandler();  ; static EventHandler<MouseEvent>; createPolygonEventHandler();  ; static EventHandler<MouseEvent>; createPolylineEventHandler();  ; static EventHandler<MouseEvent>; createRectangleEventHandler();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathToolEventHandlers; public PathToolEventHandlers(). Method Details. createMoveEventHandler; public static EventHandler<MouseEvent> createMoveEventHandler(). createRectangleEventHandler; public static EventHandler<MouseEvent> createRectangleEventHandler(). createEllipseEventHandler; public static EventHandler<MouseEvent> createEllipseEventHandler(). createLineEventHandler; public static EventHandler<MouseEvent> createLineEventHandler(). createPolygonEventHandler; public static EventHandler<MouseEvent> createPolygonEventHandler(). createPolylineEventHandler; public static EventHandler<MouseEvent> createPolylineEventHandler(). createPointsEventHandler; public static EventHandler<MouseEvent> createPointsEventHandler(). createBrushEventHandler; public static EventHandler<MouseEvent> createBrushEventHandler(). createArrowStartEventHandler; public static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler createA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html
Availability,down,downsample,"Path(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). Tru",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Energy Efficiency,efficient,efficiently,"mbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImage",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Integrability,interface,interface," the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilde",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Modifiability,extend,extends,". AbstractImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractImageServer<T>. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, ImageServer<T>. Direct Known Subclasses:; AbstractTileableImageServer, ImageJServer, TransformingImageServer. public abstract class AbstractImageServer<T>; extends Object; implements ImageServer<T>; Abstract implementation of ImageServer providing some common functionality. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageServer(Class<T> imageClass);  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected abstract String; createID(). Create a unique ID for the server, which can be returned as the default value of getPath(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefault",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Performance,cache,cache," common functionality. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageServer(Class<T> imageClass);  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected abstract String; createID(). Create a unique ID for the server, which can be returned as the default value of getPath(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsam",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Security,hash,hashCode,"e of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.S",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Usability,simpl,simpler,"lass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html
Availability,down,downsample,"hrows IOException; Read a single image tile. Parameters:; tileRequest - ; Returns:; Throws:; IOException. getTile; protected BufferedImage getTile(TileRequest tileRequest); throws IOException; Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int,",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Energy Efficiency,efficient,efficiently,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractTileableImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. Direct Known Subclasses:; BioFormatsImageServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RenderedImageServer, SparseImageServer, WrappedBufferedImageServer. public abstract class AbstractTileableImageServer; extends AbstractImageServer<BufferedImage>; Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles.; ; The actual request is then handled by assembling the tiles, resizing as required.; This makes it possible to cache tiles and reuse them more efficiently, and often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the c",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Integrability,interface,interface,"edImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; shou",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Modifiability,extend,extends,". AbstractTileableImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractTileableImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. Direct Known Subclasses:; BioFormatsImageServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RenderedImageServer, SparseImageServer, WrappedBufferedImageServer. public abstract class AbstractTileableImageServer; extends AbstractImageServer<BufferedImage>; Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles.; ; The actual request is then handled by assembling the tiles, resizing as required.; This makes it possible to cache tiles and reuse them more efficiently, and often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doC",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Performance,cache,cache,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractTileableImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. Direct Known Subclasses:; BioFormatsImageServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RenderedImageServer, SparseImageServer, WrappedBufferedImageServer. public abstract class AbstractTileableImageServer; extends AbstractImageServer<BufferedImage>; Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles.; ; The actual request is then handled by assembling the tiles, resizing as required.; This makes it possible to cache tiles and reuse them more efficiently, and often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the c",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Safety,avoid,avoid,"d BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). allowSmoothInterpolation; protected boolean allowSmoothInterpolation(); Returns true if this server is permitted to use smooth interpolation when resizing.; The default implementation returns true if the channel type is not ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Security,hash,hashCode,"this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html
Availability,down,downsample,"AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html
Integrability,interface,interface,"bing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified Reg",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html
Modifiability,extend,extends,". AffineTransformImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AffineTransformImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.AffineTransformImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class AffineTransformImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that dynamically applies an AffineTransform to an existing ImageServer.; ; Warning! This is incomplete and will be changed/removed in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.im",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html
Security,hash,hashCode,"tion of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html
Availability,down,downsample," from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html
Integrability,interface,interface,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html
Modifiability,extend,extends,". ChannelTransformFeatureServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ChannelTransformFeatureServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.ChannelTransformFeatureServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class ChannelTransformFeatureServer; extends TransformingImageServer<BufferedImage>; A TransformingImageServer that applies color transforms to generate channels. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). protected ColorModel; getColorModel();  ; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsamp",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html
Security,hash,hashCode,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specifi",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html
Integrability,interface,interface,". ColorTransforms.ColorTransform (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ColorTransforms.ColorTransform. Enclosing class:; ColorTransforms. public static interface ColorTransforms.ColorTransform; Interface defining a color transform that can extract a float values from a BufferedImage.; ; The simplest example of this is to extract a single channel (band) from an image. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels). Extract a (row-wise) array containing the pixels extracted from a BufferedImage. String; getName(). Get a displayable name for the transform. boolean; supportsImage(ImageServer<BufferedImage> server). Query whether this transform can be applied to the specified image. Method Details. extractChannel; float[] extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels); Extract a (row-wise) array containing the pixels extracted from a BufferedImage. Parameters:; server - the server from which the image was read; can be necessary for some transforms (e.g. to request color deconvolution stains); img - the image; pixels - optional preallocated array; will be used if it is long enough to hold the transformed pixels; Returns:. supportsImage; boolean supportsImage(ImageServer<BufferedImage> server); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; server - ; Returns:. getName; String getName(); Get a displayable name for the transform. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html
Usability,simpl,simplest,". ColorTransforms.ColorTransform (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ColorTransforms.ColorTransform. Enclosing class:; ColorTransforms. public static interface ColorTransforms.ColorTransform; Interface defining a color transform that can extract a float values from a BufferedImage.; ; The simplest example of this is to extract a single channel (band) from an image. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels). Extract a (row-wise) array containing the pixels extracted from a BufferedImage. String; getName(). Get a displayable name for the transform. boolean; supportsImage(ImageServer<BufferedImage> server). Query whether this transform can be applied to the specified image. Method Details. extractChannel; float[] extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels); Extract a (row-wise) array containing the pixels extracted from a BufferedImage. Parameters:; server - the server from which the image was read; can be necessary for some transforms (e.g. to request color deconvolution stains); img - the image; pixels - optional preallocated array; will be used if it is long enough to hold the transformed pixels; Returns:. supportsImage; boolean supportsImage(ImageServer<BufferedImage> server); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; server - ; Returns:. getName; String getName(); Get a displayable name for the transform. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html
Modifiability,extend,extends,". ColorTransforms.ColorTransformTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms.ColorTransformTypeAdapter. java.lang.Object; com.google.gson.TypeAdapter<ColorTransforms.ColorTransform>; qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter. Enclosing class:; ColorTransforms. public static class ColorTransforms.ColorTransformTypeAdapter; extends TypeAdapter<ColorTransforms.ColorTransform>; TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransformTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ColorTransforms.ColorTransform; read(JsonReader in);  ; void; write(JsonWriter out,; ColorTransforms.ColorTransform value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformTypeAdapter; public ColorTransformTypeAdapter(). Method Details. write; public void write(JsonWriter out,; ColorTransforms.ColorTransform value); throws IOException. Specified by:; write in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. read; public ColorTransforms.ColorTransform read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html
Security,hash,hashCode,". ColorTransforms.ColorTransformTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms.ColorTransformTypeAdapter. java.lang.Object; com.google.gson.TypeAdapter<ColorTransforms.ColorTransform>; qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter. Enclosing class:; ColorTransforms. public static class ColorTransforms.ColorTransformTypeAdapter; extends TypeAdapter<ColorTransforms.ColorTransform>; TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransformTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ColorTransforms.ColorTransform; read(JsonReader in);  ; void; write(JsonWriter out,; ColorTransforms.ColorTransform value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformTypeAdapter; public ColorTransformTypeAdapter(). Method Details. write; public void write(JsonWriter out,; ColorTransforms.ColorTransform value); throws IOException. Specified by:; write in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. read; public ColorTransforms.ColorTransform read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html
Energy Efficiency,adapt,adapted,"ransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform that applies color deconvolution. Parameters:; stains - the stains (this will be 'fixed', and not adapted for each image); stainNumber - number of the stain (1, 2 or 3); Returns:. createMaximumChannelTransform; public static ColorTransforms.ColorTransform createMaximumChannelTransform(); Create a ColorTransform that calculates the maximum of all channels. Returns:. createMinimumChannelTransform; public static ColorTransforms.ColorTransform createMinimumChannelTransform(); Create a ColorTransform that calculates the minimum of all channels. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html
Integrability,interface,interface,". ColorTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms. java.lang.Object; qupath.lib.images.servers.ColorTransforms. public class ColorTransforms; extends Object; Color transforms that may be used to extract single-channel images from BufferedImages.; These are JSON-serializable, and therefore can be used with pixel classifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. static class ; ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorTransforms.ColorTransform; createChannelExtractor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html
Modifiability,extend,extends,". ColorTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms. java.lang.Object; qupath.lib.images.servers.ColorTransforms. public class ColorTransforms; extends Object; Color transforms that may be used to extract single-channel images from BufferedImages.; These are JSON-serializable, and therefore can be used with pixel classifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. static class ; ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorTransforms.ColorTransform; createChannelExtractor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html
Security,hash,hashCode,"ctor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform th",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html
Availability,down,downsample,"n); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Integrability,interface,interface,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOExcept",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Modifiability,extend,extends,". CroppedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class CroppedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.CroppedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class CroppedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. it performs dynamic cropping, without a need to export the cropped region separately. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region). Create an ImageServer that represents a cropped region of another (larger) server. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageRegion; getCropRegion(). Get the region being cropped, in terms of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image reg",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Performance,perform,performs,". CroppedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class CroppedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.CroppedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class CroppedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. it performs dynamic cropping, without a need to export the cropped region separately. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region). Create an ImageServer that represents a cropped region of another (larger) server. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageRegion; getCropRegion(). Get the region being cropped, in terms of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image reg",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class Tran",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Security,hash,hashCode,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public Buff",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html
Integrability,interface,interface,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Modifiability,extend,extends,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Performance,perform,performing,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Safety,avoid,avoid,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Security,hash,hashCode,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Usability,usab,usable,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html
Availability,avail,available,". FileFormatInfo.ImageCheckType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface FileFormatInfo.ImageCheckType. Enclosing class:; FileFormatInfo. public static interface FileFormatInfo.ImageCheckType; Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get the image description, as stored in a TIFF, or null if no description is available. File; getFile(). Get a File object representing the local image file - or null if no file could be found. long; getLargestImageHeight(). Get the height of the largest image, if known. long; getLargestImageWidth(). Get the width of the largest image, if known. boolean; isBigTiff(). Returns true if URI is for a local file known/expected to be a BigTIFF image. boolean; isNotRGB(). Returns true if we can say with reasonable confidence that the image is not RGB. boolean; isTiff(). Returns true if URI is for a local file known/expected to be a TIFF image. boolean; isURL(). Return true if URI has a scheme beginning with http. int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html
Integrability,interface,interface,". FileFormatInfo.ImageCheckType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface FileFormatInfo.ImageCheckType. Enclosing class:; FileFormatInfo. public static interface FileFormatInfo.ImageCheckType; Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get the image description, as stored in a TIFF, or null if no description is available. File; getFile(). Get a File object representing the local image file - or null if no file could be found. long; getLargestImageHeight(). Get the height of the largest image, if known. long; getLargestImageWidth(). Get the width of the largest image, if known. boolean; isBigTiff(). Returns true if URI is for a local file known/expected to be a BigTIFF image. boolean; isNotRGB(). Returns true if we can say with reasonable confidence that the image is not RGB. boolean; isTiff(). Returns true if URI is for a local file known/expected to be a TIFF image. boolean; isURL(). Return true if URI has a scheme beginning with http. int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html
Safety,risk,risks,". int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to be a BigTIFF image. Returns:. getDescription; String getDescription(); Get the image description, as stored in a TIFF, or null if no description is available. Returns:. getFile; File getFile(); Get a File object representing the local image file - or null if no file could be found. Returns:. nImages; int nImages(); Return an estimate of the number of images if known, or -1 if unknown.; ; Note that the maximum value returned may be less than the total number of images, if scanning the full ; file risks being prohibitively expensive (this has been found to be the case with some non-standard TIFF ; images). Returns:. nImagesLargest; int nImagesLargest(); Return the number of images with the largest image size, if known, or -1 if unknown.; ; This can be used to help distinguish images that contain multiple images where each image is really ; another z-slice, channel or time point - rather than a macro or label, for example. Returns:. isNotRGB; boolean isNotRGB(); Returns true if we can say with reasonable confidence that the image is not RGB.; ; This information can be used to prevent readers that only support RGB images from trying to read this one.; However, note that it is permissible to return false in cases where the RGB status of the image is unclear. Returns:. getLargestImageWidth; long getLargestImageWidth(); Get the width of the largest image, if known. Returns:; the width of the largest image, or -1 if this is not known. getLargestImageHeight; long getLargestImageHeigh",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html
Integrability,interface,interface,". GeneratingImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface GeneratingImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. All Known Implementing Classes:; LabeledImageServer, PathHierarchyImageServer, RenderedImageServer. public interface GeneratingImageServer<T>; extends ImageServer<T>; Marker interface to indicate that this ImageServer generates tiles on request. Author:; Pete Bankhead. Method Summary. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html
Modifiability,extend,extends,". GeneratingImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface GeneratingImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. All Known Implementing Classes:; LabeledImageServer, PathHierarchyImageServer, RenderedImageServer. public interface GeneratingImageServer<T>; extends ImageServer<T>; Marker interface to indicate that this ImageServer generates tiles on request. Author:; Pete Bankhead. Method Summary. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html
Availability,avail,available,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Deployability,release,releases,"en channel for RGB images. BLUE; public static final ImageChannel BLUE; Default blue channel for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in clas",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Energy Efficiency,green,green,". ImageChannel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageChannel. java.lang.Object; qupath.lib.images.servers.ImageChannel. public class ImageChannel; extends Object; The name and display color for a single image channel. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; BLUE. Default blue channel for RGB images. static final ImageChannel; GREEN. Default green channel for RGB images. static final ImageChannel; RED. Default red channel for RGB images. static final Integer; TRANSPARENT. Special color indicating pixel values for a channel indicate levels of transparency. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ImageChannel>; getChannelList(String... names). Convert an array of channel names into a list of ImageChannel using default colors. Integer; getColor(). Color used to display the output channel. static Integer; getDefaultChannelColor(int channel). Get the default color for a specified channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toStr",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Integrability,depend,depend,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Modifiability,extend,extends,". ImageChannel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageChannel. java.lang.Object; qupath.lib.images.servers.ImageChannel. public class ImageChannel; extends Object; The name and display color for a single image channel. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; BLUE. Default blue channel for RGB images. static final ImageChannel; GREEN. Default green channel for RGB images. static final ImageChannel; RED. Default red channel for RGB images. static final Integer; TRANSPARENT. Special color indicating pixel values for a channel indicate levels of transparency. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ImageChannel>; getChannelList(String... names). Convert an array of channel names into a list of ImageChannel using default colors. Integer; getColor(). Color used to display the output channel. static Integer; getDefaultChannelColor(int channel). Get the default color for a specified channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toStr",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Security,hash,hashCode,"r indicating pixel values for a channel indicate levels of transparency. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ImageChannel>; getChannelList(String... names). Convert an array of channel names into a list of ImageChannel using default colors. Integer; getColor(). Color used to display the output channel. static Integer; getDefaultChannelColor(int channel). Get the default color for a specified channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. TRANSPARENT; public static final Integer TRANSPARENT; Special color indicating pixel values for a channel indicate levels of transparency. RED; public static final ImageChannel RED; Default red channel for RGB images. GREEN; public static final ImageChannel GREEN; Default green channel for RGB images. BLUE; public static final ImageChannel BLUE; Default blue channel for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Con",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html
Availability,down,downsample," try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. default ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metadata. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Get an array of downsample factors supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a Tile",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Deployability,update,updated,"sses:; AbstractImageServer, AbstractTileableImageServer, AffineTransformImageServer, BioFormatsImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, ImageJServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RearrangeRGBImageServer, RenderedImageServer, RotatedImageServer, SparseImageServer, TransformingImageServer, WrappedBufferedImageServer. public interface ImageServer<T>; extends AutoCloseable; Generic ImageServer, able to return pixels and metadata.; ; The idea behind making this generic was that it could be used on various platforms and with different UIs, e.g. Swing, JavaFX, ; or with different kinds of image reader.; In practice, the generic parameter is almost always BufferedImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. default ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice a",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Energy Efficiency,efficient,efficiently,"he lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metadata. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Get an array of downsample factors supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. Collection<URI>; getURIs(). Get the URIs for images required for this server. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoin",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Integrability,interface,interface," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable. All Known Subinterfaces:; GeneratingImageServer<T>, ImageDataServer<T>. All Known Implementing Classes:; AbstractImageServer, AbstractTileableImageServer, AffineTransformImageServer, BioFormatsImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, ImageJServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RearrangeRGBImageServer, RenderedImageServer, RotatedImageServer, SparseImageServer, TransformingImageServer, WrappedBufferedImageServer. public interface ImageServer<T>; extends AutoCloseable; Generic ImageServer, able to return pixels and metadata.; ; The idea behind making this generic was that it could be used on various platforms and with different UIs, e.g. Swing, JavaFX, ; or with different kinds of image reader.; In practice, the generic parameter is almost always BufferedImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associate",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Modifiability,extend,extends," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable. All Known Subinterfaces:; GeneratingImageServer<T>, ImageDataServer<T>. All Known Implementing Classes:; AbstractImageServer, AbstractTileableImageServer, AffineTransformImageServer, BioFormatsImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, ImageJServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RearrangeRGBImageServer, RenderedImageServer, RotatedImageServer, SparseImageServer, TransformingImageServer, WrappedBufferedImageServer. public interface ImageServer<T>; extends AutoCloseable; Generic ImageServer, able to return pixels and metadata.; ; The idea behind making this generic was that it could be used on various platforms and with different UIs, e.g. Swing, JavaFX, ; or with different kinds of image reader.; In practice, the generic parameter is almost always BufferedImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associate",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Performance,cache,cached,"edImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. default ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metad",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Safety,avoid,avoid,"eption. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the t",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Usability,simpl,simplest,",; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDownsamples; double[] getPreferredDownsamples(); Get an array of downsample factors supported by the server. Returns:. nResolutions; int nResolutions(); Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Returns:. getDownsampleForResolution; double getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int ge",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html
Deployability,update,updateURIs,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html
Integrability,interface,interface,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html
Modifiability,extend,extends,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html
Security,hash,hashCode,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html
Deployability,update,updateURIs,"Instance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html
Integrability,interface,interface,". ImageServerBuilder.DefaultImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.DefaultImageServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.DefaultImageServerBuilder<T>; extends ImageServerBuilder.AbstractServerBuilder<T>; Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashC",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html
Modifiability,extend,extends,". ImageServerBuilder.DefaultImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.DefaultImageServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.DefaultImageServerBuilder<T>; extends ImageServerBuilder.AbstractServerBuilder<T>; Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashC",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html
Security,hash,hashCode,"geServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html
Integrability,interface,interface,". ImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; BioFormatsServerBuilder, ImageJServerBuilder, JsonImageServerBuilder, OpenslideServerBuilder. public interface ImageServerBuilder<T>; Helper class for creating ImageServers from a given URI and optional argument list. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. static class ; ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. static interface ; ImageServerBuilder.ServerBuilder<T>. Interface that defines a class encapsulating all that is required to build an ImageServer. static class ; ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ImageServer<T>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<T>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<T>; getImageType(). Returns the base class for the images supported by",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html
Usability,simpl,simple,"pport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<T>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. default boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Method Details. checkImageSupport; ImageServerBuilder.UriImageSupport<T> checkImageSupport(URI uri,; String... args); throws IOException; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. buildServer; ImageServer<T> buildServer(URI uri,; String... args); throws Exception; Attempt to create ImageServer<T> from the specified path. Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; String getName(); Get a human-readable name for the kind of ImageServer this builds. Returns:. getDescription; String getDescription(); Get a short, human-readable description for display in a GUI. Returns:. getImageType; Class<T> getImageType(); Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Returns:. matchClassName; default boolean matchClassName(String... classNames); Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html
Deployability,update,updateURIs,". ImageServerBuilder.ServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder.ServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; ImageServerBuilder.AbstractServerBuilder, ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public static interface ImageServerBuilder.ServerBuilder<T>; Interface that defines a class encapsulating all that is required to build an ImageServer.; ; Instances should be sufficiently lightweight that they can be easily serialized to/from JSON ; for storage within projects.; ; Instances should also be immutable. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. Collection<URI>; getURIs(). Get a list of URIs required by this builder. ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Method Details. build; ImageServer<T> build(); throws Exception; Build a new ImageServer instance. Returns:; Throws:; Exception. getURIs; Collection<URI> getURIs(); Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. updateURIs(Map). updateURIs; ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. getURIs(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html
Integrability,interface,interface,". ImageServerBuilder.ServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder.ServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; ImageServerBuilder.AbstractServerBuilder, ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public static interface ImageServerBuilder.ServerBuilder<T>; Interface that defines a class encapsulating all that is required to build an ImageServer.; ; Instances should be sufficiently lightweight that they can be easily serialized to/from JSON ; for storage within projects.; ; Instances should also be immutable. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. Collection<URI>; getURIs(). Get a list of URIs required by this builder. ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Method Details. build; ImageServer<T> build(); throws Exception; Build a new ImageServer instance. Returns:; Throws:; Exception. getURIs; Collection<URI> getURIs(); Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. updateURIs(Map). updateURIs; ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. getURIs(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html
Integrability,interface,interface,". ImageServerBuilder.UriImageSupport (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.UriImageSupport<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.UriImageSupport<T>. Type Parameters:; T - . Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.UriImageSupport<T>; extends Object; Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values an",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html
Modifiability,extend,extends,". ImageServerBuilder.UriImageSupport (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.UriImageSupport<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.UriImageSupport<T>. Type Parameters:; T - . Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.UriImageSupport<T>; extends Object; Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values an",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html
Performance,perform,performance,"escription; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageSe",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html
Security,hash,hashCode,"). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html
Usability,simpl,simple,"r.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between 0 and 4. The following is a guide to its interpretation:; ; 4 - 'ideal' support, e.g. the image was written by the library behind the ImageServer; 3 - good support; 2 - unknown support, i.e. worth a try; 1 - partial/poor support, i.e. there are known limitations and all higher-scoring possibilities should be tried first; 0 - no support. The use of floating point enables subclasses to make more subtle evaluations of performance, e.g. if an ImageServer; is particularly strong for RGB images, but falls short of guaranteeing ideal performance.; ; In practice, this is used to rank potential builders so that the 'best' ones; are tried first fo",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html
Availability,down,downsamples,"w ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; build(). Build an ImageServerMetadata. ImageServerMetadata.Builder; channels(Collection<ImageChannel> channels). Specify the image channels. ImageServerMetadata.Builder; channelType(ImageServerMetadata.ChannelType type). Specify the interpretation of channels. ImageServerMetadata.Builder; classificationLabels(Map<Integer,PathClass> classificationLabels). Specify the interpretation of classification labels. ImageServerMetadata.Builder; height(int height). Specify the full-resolution image height. ImageServerMetadata.Builder; levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels). Specify resolution levels, where the largest image should come first. ImageServerMetadata.Builder; levelsFromDownsamples(double... downsamples). Specify downsample values for pyramidal levels. ImageServerMetadata.Builder; magnification(double magnification). Specify a magnification value for the highest-resolution image. ImageServerMetadata.Builder; maxValue(Number val). Specify the maximum value supported by this image. ImageServerMetadata.Builder; minValue(Number val). Specify the minimum value supported by this image. ImageServerMetadata.Builder; name(String name). Specify the image name. ImageServerMetadata.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time po",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html
Modifiability,extend,extends,". ImageServerMetadata.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.Builder. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.Builder. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.Builder; extends Object; Builder to create a new ImageServerMetadata object. Constructor Summary; Constructors. Constructor; Description; Builder(). Minimal builder for a new ImageServerMetadata; further properties must be set. Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height). Builder for a new ImageServerMetadata; further properties must be set. Builder(ImageServerMetadata metadata). Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; build(). Build an ImageServerMetadata. ImageServerMetadata.Builder; channels(Collection<ImageChannel> channels). Specify the image channels. ImageServerMetadata.Builder; channelType(ImageServerMetadata.ChannelType type). Specify the interpretation of channels. ImageServerMetadata.Builder; classificationLabels(Map<Integer,PathClass> classificationLabels). Specify the interpretation of classification labels. ImageServerMetadata.Builder; height(int height). Specify the full-resolution image height. ImageServerMetadata.Builder; levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels). Specify resolution levels, where the largest image should come first. ImageServerMetadata.Builder; levelsFromDownsamples(double",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html
Security,hash,hashCode," pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time points. ImageServerMetadata.Builder; sizeZ(int sizeZ). Specify the number of z-slices. ImageServerMetadata.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify the time unit and individual time points. ImageServerMetadata.Builder; width(int width). Specify the full-resolution image width. ImageServerMetadata.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify the spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServerMetadata metadata); Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden.; ; The existing metadata will be duplicated, therefore later changes in one metadata object will not be ; reflected in the other. Parameters:; metadata - . Builder; public Builder(); Minimal builder for a new ImageServerMetadata; further properties must be set. Builder; public Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height); Builder for a new ImageServerMetadata; further properties must be set. Parameters:; serverClass - ; path - ; width - ; height - . Method Details. width; public ImageServerMetadata.Builder width(int width); Specify the full-resolution image width. Parameters:; width - ; Returns:. height; public ImageServerMetadata.Builder height(int height); Sp",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html
Integrability,interface,interfaces,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class ImageServerMetadata.ChannelType. java.lang.Object; java.lang.Enum<ImageServerMetadata.ChannelType>; qupath.lib.images.servers.ImageServerMetadata.ChannelType. All Implemented Interfaces:; Serializable, Comparable<ImageServerMetadata.ChannelType>, Constable. Enclosing class:; ImageServerMetadata. public static enum ImageServerMetadata.ChannelType; extends Enum<ImageServerMetadata.ChannelType>; Enum representing possible channel (band) types for an image.; The purpose of this is to support images where channels have different interpretations, ; such as probabilities or classifications. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Each channel represents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html
Modifiability,extend,extends,". ImageServerMetadata.ChannelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class ImageServerMetadata.ChannelType. java.lang.Object; java.lang.Enum<ImageServerMetadata.ChannelType>; qupath.lib.images.servers.ImageServerMetadata.ChannelType. All Implemented Interfaces:; Serializable, Comparable<ImageServerMetadata.ChannelType>, Constable. Enclosing class:; ImageServerMetadata. public static enum ImageServerMetadata.ChannelType; extends Enum<ImageServerMetadata.ChannelType>; Enum representing possible channel (band) types for an image.; The purpose of this is to support images where channels have different interpretations, ; such as probabilities or classifications. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Each channel represents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static Im",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html
Security,hash,hashCode,"esents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final ImageServerMetadata.ChannelType DEFAULT; Default channel interpretation. This is true for most 'normal' images. FEATURE; public static final ImageServerMetadata.ChannelType FEATURE; Each channel represents a feature for a pixel classifier. PROBABILITY; public static final ImageServerMetadata.ChannelType PROBABILITY; Each channel represents a probability value, where it is assumed that there is only one true class per pixel. MULTICLASS_PROBABILITY; public static final ImageServerMetadata.ChannelType MULTICLASS_PROBABILITY; Each channel represents a probability value, where each pixel is potentially part of multiple classes. CLASSIFICATION; public static final ImageServerMetadata.ChannelType CLASSIFICATION; Each channel represents a classification, such as in a labelled image. DENSITY; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html
Availability,avail,available,"he metadata needs to be adjusted (e.g. to correct erroneous pixel sizes). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. static enum ; ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. static class ; ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; duplicate(). Duplicate this metatadata. boolean; equals(Object obj);  ; double; getAveragedPixelSize(). Get the averaged pixel size in microns, if available - or Double.NaN otherwise. ImageChannel; getChannel(int n). Get the specified channel. List<ImageChannel>; getChannels(). Get an unmodifiable list of all channels. ImageServerMetadata.ChannelType; getChannelType(). Get the channel type, which can be used to interpret the channels. Map<Integer,PathClass>; getClassificationLabels(). Get map between labels and classification names. double; getDownsampleForLevel(int level). Get the downsample factor for a specific resolution level. int; getHeight(). Get the full-resolution image height. ImageServerMetadata.ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the m",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html
Modifiability,extend,extends,". ImageServerMetadata (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata. public class ImageServerMetadata; extends Object; Class for storing primary ImageServer metadata fields.; ; Can be used when the metadata needs to be adjusted (e.g. to correct erroneous pixel sizes). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. static enum ; ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. static class ; ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; duplicate(). Duplicate this metatadata. boolean; equals(Object obj);  ; double; getAveragedPixelSize(). Get the averaged pixel size in microns, if available - or Double.NaN otherwise. ImageChannel; getChannel(int n). Get the specified channel. List<ImageChannel>; getChannels(). Get an unmodifiable list of all channels. ImageServerMetadata.ChannelType; getChannelType(). Get the channel type, which can be used to interpret the channels. Map<Integer,PathClass>; getClassificationLabels(). Get map between labels and classification names. double; get",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html
Performance,optimiz,optimize,"<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html
Security,hash,hashCode," for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html
Availability,down,downsample," ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel.Builder. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Enclosing class:; ImageServerMetadata.ImageResolutionLevel. public static class ImageServerMetadata.ImageResolutionLevel.Builder; extends Object; Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Constructor Summary; Constructors. Constructor; Description; Builder(int fullWidth,; int fullHeight). Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata.ImageResolutionLevel.Builder; addFullResolutionLevel(). Add the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Cons",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html
Modifiability,extend,extends,". ImageServerMetadata.ImageResolutionLevel.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel.Builder. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Enclosing class:; ImageServerMetadata.ImageResolutionLevel. public static class ImageServerMetadata.ImageResolutionLevel.Builder; extends Object; Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Constructor Summary; Constructors. Constructor; Description; Builder(int fullWidth,; int fullHeight). Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata.ImageResolutionLevel.Builder; addFullResolutionLevel(). Add the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutio",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html
Safety,avoid,avoids,"tify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a larger image, and not itself contain ; pixels at the highest resolution. Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(double downsample,; int levelWidth,; int levelHeight); Add a new level by providing a downsample value, width and height.; This avoids relying on any rounding decisions made when specifying the dimensions or downsample value only. Parameters:; downsample - ; levelWidth - ; levelHeight - ; Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(int levelWidth,; int levelHeight); Add a new level based on level dimensions, estimating the corresponding downsample value as required. Parameters:; levelWidth - ; levelHeight - ; Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(ImageServerMetadata.ImageResolutionLevel level); Add a new level directly. Parameters:; level - ; Returns:. build; public List<ImageServerMetadata.ImageResolutionLevel> build(); Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html
Security,hash,hashCode,"dd the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a larger image, and not itself contain ; pixels at the highest resolution. Re",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html
Availability,down,downsample,". ImageServerMetadata.ImageResolutionLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.ImageResolutionLevel; extends Object; Width and height of each resolution in a multi-level image pyramid. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample factor for this level. int; getHeight(). Get the image height at this level. int; getWidth(). Get the image width at this level. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getDownsample; public double getDownsample(); Get the downsample factor for this level. Returns:. getWidth; public int getWidth(); Get the image width at this level. Returns:. getHeight; public int getHeight(); Get the image height at this level. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html
Modifiability,extend,extends,". ImageServerMetadata.ImageResolutionLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.ImageResolutionLevel; extends Object; Width and height of each resolution in a multi-level image pyramid. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample factor for this level. int; getHeight(). Get the image height at this level. int; getWidth(). Get the image width at this level. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getDownsample; public double getDownsample(); Get the downsample factor for this level. Returns:. getWidth; public int getWidth(); Get the image width at this level. Returns:. getHeight; public int getHeight(); Get the image height at this level. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html
Security,hash,hashCode,". ImageServerMetadata.ImageResolutionLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.ImageResolutionLevel; extends Object; Width and height of each resolution in a multi-level image pyramid. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample factor for this level. int; getHeight(). Get the image height at this level. int; getWidth(). Get the image width at this level. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getDownsample; public double getDownsample(); Get the downsample factor for this level. Returns:. getWidth; public int getWidth(); Get the image width at this level. Returns:. getHeight; public int getHeight(); Get the image height at this level. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html
Availability,avail,available,"| ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerProvider. java.lang.Object; qupath.lib.images.servers.ImageServerProvider. public class ImageServerProvider; extends Object; Service provider for creating ImageServers from a given path - which may be a file path or URL.; ; This class is responsible for hunting through potential ImageServerBuilders, ranked by support level, to find the first that works. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html
Modifiability,extend,extends,". ImageServerProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerProvider. java.lang.Object; qupath.lib.images.servers.ImageServerProvider. public class ImageServerProvider; extends Object; Service provider for creating ImageServers from a given path - which may be a file path or URL.; ; This class is responsible for hunting through potential ImageServerBuilders, ranked by support level, to find the first that works. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuil",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html
Performance,cache,cache,"r; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerProvider. java.lang.Object; qupath.lib.images.servers.ImageServerProvider. public class ImageServerProvider; extends Object; Service provider for creating ImageServers from a given path - which may be a file path or URL.; ; This class is responsible for hunting through potential ImageServerBuilders, ranked by support level, to find the first that works. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html
Security,hash,hashCode,"s<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServe",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html
Availability,down,downsamples," all ImageServerBuilder.UriImageSupport that claim to be able to open the specified URI with optional args. static TypeAdapterFactory; getImageServerTypeAdapterFactory(boolean includeMetadata). Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. static TypeAdapterFactory; getServerBuilderFactory(). Get a TypeAdapterFactory to handle ServerBuilders. static ImageServer<BufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution r",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html
Integrability,wrap,wrap,"rap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; St",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html
Modifiability,extend,extends,". ImageServers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServers. java.lang.Object; qupath.lib.images.servers.ImageServers. public class ImageServers; extends Object; Helper class for working with ImageServer objects.; ; The main use is to convert ImageServers to and from serialized representations for use within a Project. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build a ImageServer for the specified URI path and optional args. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build a ImageServer for the specified URI and optional args. static List<ImageServerBuilder.UriImageSupport<BufferedImage>>; getAllImageSupports(URI uri,; String... args). Get all ImageServerBuilder.UriImageSupport that claim to be able to open the specified URI with optional args. static TypeAdapterFactory; getImageServerTypeAdapterFactory(boolean includeMetadata). Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the buil",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html
Performance,perform,performance," ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the d",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html
Security,hash,hashCode,"(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. static TypeAdapterFactory; getServerBuilderFactory(). Get a TypeAdapterFactory to handle ServerBuilders. static ImageServer<BufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> py",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ImageServers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html
Integrability,interface,interfaces,". JsonImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class JsonImageServerBuilder. java.lang.Object; qupath.lib.images.servers.JsonImageServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class JsonImageServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; ImageServerBuilder that constructs an ImageServer from a JSON representation. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Const",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html
Modifiability,extend,extends,". JsonImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class JsonImageServerBuilder. java.lang.Object; qupath.lib.images.servers.JsonImageServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class JsonImageServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; ImageServerBuilder that constructs an ImageServer from a JSON representation. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Const",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html
Security,hash,hashCode,"er; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServer",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html
Availability,down,downsample,"(Map<String,Integer> labelMap). Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. LabeledImageServer.Builder; addUnclassifiedLabel(int label). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; addUnclassifiedLabel(int label,; Integer color). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; backgroundLabel(int label). Specify the background label (0 by default). LabeledImageServer.Builder; backgroundLabel(int label,; Integer color). Specify the background label (0 by default) and color. LabeledImageServer; build(). Build the ImageServer with the requested parameters. LabeledImageServer.Builder; downsample(double downsample). Specify downsample factor. LabeledImageServer.Builder; grayscale(). Use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; grayscale(boolean grayscaleLut). Optionally use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; lineThickness(float thickness). Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. LabeledImageServer.Builder; maxOutputChannelLimit(int maxChannels). Specify the maximum number of output channels allowed before QuPath will throw an exception. LabeledImageServer.Builder; multichannelOutput(boolean doMultichannel). If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label). Set the classification and l",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html
Energy Efficiency,efficient,efficient,"l objects, rather than classifications.; If this flag is set, all other label requests are ignored. Parameters:; instanceLabels - ; Returns:; Since:; v0.4.0; See Also:. useInstanceLabels(); shuffleInstanceLabels(boolean). shuffleInstanceLabels; public LabeledImageServer.Builder shuffleInstanceLabels(boolean doShuffle); Optionally request that instance labels are shuffled.; Default is true.; Only has an effect if useInstanceLabels(boolean) is called with true. Parameters:; doShuffle - ; Returns:; Since:; v0.4.0; See Also:. useInstanceLabels(); useInstanceLabels(boolean). multichannelOutput; public LabeledImageServer.Builder multichannelOutput(boolean doMultichannel); If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification.; If false, the output image is a single-channel indexed image so that each pixel value relates to ; a classification.; Indexed images are much more efficient, but are unable to support more than one classification per pixel. Parameters:; doMultichannel - ; Returns:. backgroundLabel; public LabeledImageServer.Builder backgroundLabel(int label); Specify the background label (0 by default). Parameters:; label - ; Returns:. backgroundLabel; public LabeledImageServer.Builder backgroundLabel(int label,; Integer color); Specify the background label (0 by default) and color. Parameters:; label - ; color - ; Returns:. addLabelsByName; public LabeledImageServer.Builder addLabelsByName(Map<String,Integer> labelMap); Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. Parameters:; labelMap - ; Returns:. addLabels; public LabeledImageServer.Builder addLabels(Map<PathClass,Integer> labelMap); Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html
Modifiability,extend,extends,". LabeledImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class LabeledImageServer.Builder. java.lang.Object; qupath.lib.images.servers.LabeledImageServer.Builder. Enclosing class:; LabeledImageServer. public static class LabeledImageServer.Builder; extends Object; Helper class for building a LabeledImageServer. Constructor Summary; Constructors. Constructor; Description; Builder(ImageData<BufferedImage> imageData). Create a Builder for a LabeledImageServer for the specified ImageData. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; LabeledImageServer.Builder; addLabel(String pathClassName,; int label). Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. LabeledImageServer.Builder; addLabel(String pathClassName,; int label,; Integer color). Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. LabeledImageServer.Builder; addLabel(PathClass pathClass,; int label). Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. LabeledImageServer.Builder; addLabel(PathClass pathClass,; int label,; Integer color). Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. LabeledImageServer.Builder; addLabels(Map<PathClass,Integer> labelMap). Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html
Safety,detect,detections,"ImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label,; Integer color). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; shuffleInstanceLabels(boolean doShuffle). Optionally request that instance labels are shuffled. LabeledImageServer.Builder; tileSize(int tileSize). Set tile width and height (square tiles). LabeledImageServer.Builder; tileSize(int tileWidth,; int tileHeight). Set tile width and height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The defa",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html
Security,hash,hashCode,"height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotations for labels. This is the default. Returns:; See Also:. useDetections().",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html
Availability,avail,available,"onding ; stored and classified annotations.; ; Warning! This is intend for temporary use when exporting labelled images. No attempt is made to ; respond to changes within the hierarchy. For consistent results, the hierarchy must remain static for the ; time in which this server is being used. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LabeledImageServer.Builder. Helper class for building a LabeledImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). Map<PathClass,Integer>; getBoundaryLabels(). Get an unmodifiable map of classifications and their corresponding boundary labels, if available. Map<PathObject,Integer>; getInstanceLabels(). Get a mapping between objects and instance labels. Map<PathClass,Integer>; getLabels(). Get an unmodifiable map of classifications and their corresponding labels. List<PathObject>; getObjectsForRegion(ImageRegion region). Get the objects to be painted that fall within a specified region. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata shou",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html
Integrability,interface,interface,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html
Modifiability,extend,extends,". LabeledImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class LabeledImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.LabeledImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class LabeledImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations.; ; Warning! This is intend for temporary use when exporting labelled images. No attempt is made to ; respond to changes within the hierarchy. For consistent results, the hierarchy must remain static for the ; time in which this server is being used. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LabeledImageServer.Builder. Helper class for building a LabeledImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). Map<PathClass,Integer>; getBoundaryLabels(). Get an unmodifiable map of classifications and their corresponding bound",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html
Security,hash,hashCode,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of lab",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html
Usability,simpl,simplest,"fiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note t",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html
Integrability,interface,interface,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html
Performance,perform,perform,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html
Security,access,accessing,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html
Usability,simpl,simply,"geServers. Helper class for working with ImageServer objects. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelType. Image bit-depths and types. RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. ServerTools. Static methods helpful when dealing with ImageServers. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html
Modifiability,extend,extends,". PixelCalibration.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class PixelCalibration.Builder. java.lang.Object; qupath.lib.images.servers.PixelCalibration.Builder. Enclosing class:; PixelCalibration. public static class PixelCalibration.Builder; extends Object; Builder class for PixelCalibration objects. Constructor Summary; Constructors. Constructor; Description; Builder(). Create a new builder with default (uncalibrated) values. Builder(PixelCalibration cal). Create a new builder, initialized values of an existing PixelCalibration. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; build(). Build PixelCalibration object. PixelCalibration.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel width and height in microns (the most common calibration value). PixelCalibration.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify timepoints and units. PixelCalibration.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Create a new builder with default (uncalibrated) values. Builder; public Builder(PixelCalibration cal); Create a new builder, initialized values of an existing PixelCalibration. Parameters:; cal - . Method Details. pixelSizeMicrons; public PixelCalibration.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel width and height in microns (the most common",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html
Security,hash,hashCode,"bration. public static class PixelCalibration.Builder; extends Object; Builder class for PixelCalibration objects. Constructor Summary; Constructors. Constructor; Description; Builder(). Create a new builder with default (uncalibrated) values. Builder(PixelCalibration cal). Create a new builder, initialized values of an existing PixelCalibration. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; build(). Build PixelCalibration object. PixelCalibration.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel width and height in microns (the most common calibration value). PixelCalibration.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify timepoints and units. PixelCalibration.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Create a new builder with default (uncalibrated) values. Builder; public Builder(PixelCalibration cal); Create a new builder, initialized values of an existing PixelCalibration. Parameters:; cal - . Method Details. pixelSizeMicrons; public PixelCalibration.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel width and height in microns (the most common calibration value). Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; Returns:. timepoints; public PixelCalibration.Builder timepoints(TimeUnit timeUnit,; double... timepoints); Specify timepoints and units. Parameters:; timeUnit - ; timepoints - ; Returns:. zSpacingMicrons; public PixelCalibration.Builder zSpacingMicrons(Number zSpacingMicrons); Specify spacing between z-slices, in microns. Parameters:; zSpacingMicrons - ; Returns:. build; public PixelCalibration build(); Build PixelCalib",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html
Availability,avail,available,"er and Type; Field; Description; static final String; MICROMETER. String to represent 'micrometer' units. static final String; PIXEL. String to represent 'pixel' units. static final String; Z_SLICE. String to represent 'z-slice' units. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; createScaledInstance(double scaleX,; double scaleY). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x and y by the specified scale values. PixelCalibration; createScaledInstance(double scaleX,; double scaleY,; double scaleZ). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x, y and z by the specified scale values. boolean; equals(Object obj);  ; Number; getAveragedPixelSize(). Get an average of getPixelWidth() and getPixelHeight(). double; getAveragedPixelSizeMicrons(). Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. static PixelCalibration; getDefaultInstance(). Get the default PixelCalibration. Number; getPixelHeight(). Get the numeric value representing the pixel height, in the stored units. double; getPixelHeightMicrons(). Get the pixel height in microns, or Double.NaN if this is unknown. String; getPixelHeightUnit(). Get a String representation of the preferred pixel height unit. Number; getPixelWidth(). Get the numeric value representing the pixel width, in the stored units. double; getPixelWidthMicrons(). Get the pixel width in microns, or Double.NaN if this is unknown. String; getPixelWidthUnit(). Get a String representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in mi",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html
Modifiability,extend,extends,". PixelCalibration (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class PixelCalibration. java.lang.Object; qupath.lib.images.servers.PixelCalibration. public class PixelCalibration; extends Object; Class used to represent pixel sizes.; ; Currently only 'pixel' and 'µm' units are supported. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelCalibration.Builder. Builder class for PixelCalibration objects. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MICROMETER. String to represent 'micrometer' units. static final String; PIXEL. String to represent 'pixel' units. static final String; Z_SLICE. String to represent 'z-slice' units. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; createScaledInstance(double scaleX,; double scaleY). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x and y by the specified scale values. PixelCalibration; createScaledInstance(double scaleX,; double scaleY,; double scaleZ). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x, y and z by the specified scale values. boolean; equals(Object obj);  ; Number; getAveragedPixelSize(). Get an average of getPixelWidth() and getPixelHeight(). double; getAveragedPixelSizeMicrons(). Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. static PixelCalibration; getDefaultInstance(). Get the default PixelCalibration. Number; getPixelHeight(). Get the numeric value representing the pixel height, in the stored",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html
Security,hash,hashCode,"senting the pixel height, in the stored units. double; getPixelHeightMicrons(). Get the pixel height in microns, or Double.NaN if this is unknown. String; getPixelHeightUnit(). Get a String representation of the preferred pixel height unit. Number; getPixelWidth(). Get the numeric value representing the pixel width, in the stored units. double; getPixelWidthMicrons(). Get the pixel width in microns, or Double.NaN if this is unknown. String; getPixelWidthUnit(). Get a String representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in microns, or Double.NaN if this is unknown. String; getZSpacingUnit(). Get a String representation of the preferred z-spacing unit. int; hashCode();  ; boolean; hasPixelSizeMicrons(). Returns true if the pixel width and height information in microns is known. boolean; hasZSpacingMicrons(). Returns true if the z-spacing is known in microns. int; nTimepoints(). Get the number of known time points. String; toString();  ; boolean; unitsMatch2D(). Returns true if the units for pixel width and height are the same. boolean; unitsMatch3D(). Returns true if the units for pixel width, height and z-spacing are the same. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. PIXEL; public static final String PIXEL; String to represent 'pixel' units. This is the default when no pixel size calibration is known. See Also:. Constant Field Values. MICROMETER; public static final String MICROMETER; String to represent 'micrometer' units. Z_SLICE; public static final String Z_SLICE; String to represent 'z-slice' units. See Also:. Constant Field Values. Method Details. createScaledInstance",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html
Usability,simpl,simply,"crons(); Get the pixel height in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthUnit; public String getPixelWidthUnit(); Get a String representation of the preferred pixel width unit. Returns:; See Also:. getPixelWidthMicrons(); PIXEL; MICROMETER. unitsMatch2D; public boolean unitsMatch2D(); Returns true if the units for pixel width and height are the same. Returns:. unitsMatch3D; public boolean unitsMatch3D(); Returns true if the units for pixel width, height and z-spacing are the same. Returns:. getPixelHeightUnit; public String getPixelHeightUnit(); Get a String representation of the preferred pixel height unit. Returns:; See Also:. getPixelHeightMicrons(); PIXEL; MICROMETER. getZSpacingUnit; public String getZSpacingUnit(); Get a String representation of the preferred z-spacing unit. Returns:; See Also:. getZSpacing(); PIXEL; MICROMETER. getAveragedPixelSize; public Number getAveragedPixelSize(); Get an average of getPixelWidth() and getPixelHeight().; No check is made to ensure that these are returned in the same units; rather, the numbers are simply averaged. Returns:. getPixelWidth; public Number getPixelWidth(); Get the numeric value representing the pixel width, in the stored units. Returns:; See Also:. getPixelWidthUnit(). getPixelHeight; public Number getPixelHeight(); Get the numeric value representing the pixel height, in the stored units. Returns:; See Also:. getPixelHeightUnit(). getZSpacing; public Number getZSpacing(); Get the numeric value representing the z-spacing, in the stored units. Returns:; See Also:. getZSpacingUnit(). toString; public String toString(). Overrides:; toString in class Object. getDefaultInstance; public static PixelCalibration getDefaultInstance(); Get the default PixelCalibration.; This isn't terribly informative, giving pixel sizes in pixel units. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html
Integrability,interface,interfaces,". PixelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class PixelType. java.lang.Object; java.lang.Enum<PixelType>; qupath.lib.images.servers.PixelType. All Implemented Interfaces:; Serializable, Comparable<PixelType>, Constable. public enum PixelType; extends Enum<PixelType>; Image bit-depths and types. Not all may be well-supported; in general, ; expected image types are UINT8, UINT16 and FLOAT32. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLOAT32. 32-bit floating point. FLOAT64. 64-bit floating point. INT16. 16-bit signed integer. INT32. 32-bit signed integer. INT8. 8-bit signed integer. UINT16. 16-bit unsigned integer. UINT32. 32-bit unsigned integer (not supported by BufferedImage). UINT8. 8-bit unsigned integer. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of th",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html
Modifiability,extend,extends,". PixelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class PixelType. java.lang.Object; java.lang.Enum<PixelType>; qupath.lib.images.servers.PixelType. All Implemented Interfaces:; Serializable, Comparable<PixelType>, Constable. public enum PixelType; extends Enum<PixelType>; Image bit-depths and types. Not all may be well-supported; in general, ; expected image types are UINT8, UINT16 and FLOAT32. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLOAT32. 32-bit floating point. FLOAT64. 64-bit floating point. INT16. 16-bit signed integer. INT32. 32-bit signed integer. INT8. 8-bit signed integer. UINT16. 16-bit unsigned integer. UINT32. 32-bit unsigned integer (not supported by BufferedImage). UINT8. 8-bit unsigned integer. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of th",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html
Security,hash,hashCode,"hodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UINT8; public static final PixelType UINT8; 8-bit unsigned integer. INT8; public static final PixelType INT8; 8-bit signed integer. UINT16; public static final PixelType UINT16; 16-bit unsigned integer. INT16; public static final PixelType INT16; 16-bit signed integer. UINT32; public static final PixelType UINT32; 32-bit unsigned integer (not supported by BufferedImage). INT32; public static final PixelType INT32; 32-bit signed integer. FLOAT32; public static final PixelType FLOAT32; 32-bit floating point. FLOAT64; public static final PixelType FLOAT64; 64-bit floating point. Method Details. values; public static PixelType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they a",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/PixelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html
Availability,down,downsample,"mbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html
Integrability,interface,interface,"eServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it i",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html
Modifiability,extend,extends,". RearrangeRGBImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class RearrangeRGBImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.RearrangeRGBImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class RearrangeRGBImageServer; extends TransformingImageServer<BufferedImage>; Simple image server to swap the red and blue channels of an RGB image.; This is intended for use whenever an image has erroneously been read as RGB or BGR. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order);  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). static ImageServerBuilder.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods i",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the curre",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html
Security,hash,hashCode,"der.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html
Availability,down,downsample,"ring. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html
Integrability,wrap,wraps,". RotatedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class RotatedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.RotatedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class RotatedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. Constructor Summary; Constructors. Constructor; Description; RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation). Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. static ImageServerBuilder.ServerBuilder<BufferedImage>; getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedIma",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html
Modifiability,extend,extends,". RotatedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class RotatedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.RotatedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class RotatedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. Constructor Summary; Constructors. Constructor; Description; RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation). Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. static ImageServerBuilder.ServerBuilder<BufferedImage>; getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedIma",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html
Safety,avoid,avoid,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from cl",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html
Security,hash,hashCode,"r server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guarantee",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html
Integrability,interface,interfaces,". RotatedImageServer.Rotation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class RotatedImageServer.Rotation. java.lang.Object; java.lang.Enum<RotatedImageServer.Rotation>; qupath.lib.images.servers.RotatedImageServer.Rotation. All Implemented Interfaces:; Serializable, Comparable<RotatedImageServer.Rotation>, Constable. Enclosing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotat",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html
Modifiability,extend,extends,". RotatedImageServer.Rotation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class RotatedImageServer.Rotation. java.lang.Object; java.lang.Enum<RotatedImageServer.Rotation>; qupath.lib.images.servers.RotatedImageServer.Rotation. All Implemented Interfaces:; Serializable, Comparable<RotatedImageServer.Rotation>, Constable. Enclosing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotat",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html
Security,hash,hashCode,"closing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotate 90 degrees clockwise. ROTATE_180; public static final RotatedImageServer.Rotation ROTATE_180; Rotate 180 degrees. ROTATE_270; public static final RotatedImageServer.Rotation ROTATE_270; Rotate 270 degrees clockwise. Method Details. values; public static RotatedImageServer.Rotation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RotatedImageServer.Rotation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an ident",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html
Availability,down,downsample,"rTools. public class ServerTools; extends Object; Static methods helpful when dealing with ImageServers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ServerTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<ImageChannel>; classificationLabelsToChannels(Map<Integer,PathClass> classificationLabels,; boolean ignoredTransparent). Create a list of channels from classification labels. static int; getChannelIndex(ImageServer<?> server,; String channelName). Get the index of the first channel of a server with a specified channel name. static String; getDefaultShortServerName(URI uri). Get the default shortened server name given the server's path. static String; getDisplayableImageName(ImageServer<?> server). Get an ImageServer name suitable for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ServerTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html
Deployability,update,update,"uestedDownsample); Get the downsample factor supported by the server that is the best match for the requested downsample.; ; Generally, this will be <= the requested downsample (but it may be slightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, the name ; stored in the metadata is returned if not null, otherwise server.getShortServerName() is used. Parameters:; server - ; Returns:. setImageName; public static boolean setImageName(ImageServer<?> server,; String name); Set the name property of the metadata for an ImageServer. Parameters:; server - the server to update; name - the new name to use; Returns:; true if the metadata was updated, false otherwise (i.e. if the name is unchanged). getDownsampleFactor; public static double getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons); Calculate a downsample factor for a server given a preferred pixel size. Parameters:; server - ; preferredPixelSizeMicrons - ; Returns:. getPaddedRequest; public static BufferedImage getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding); throws IOException; Get a raster, padded by the specified amount, to the left, right, above and below.; ; Note that the padding is defined in terms of the destination pixels.; ; In other words, a specified padding of 5 should actually result in 20 pixels being added in each dimension ; if the request.getDownsample() == 4. Parameters:; server - ; request - ; padding - ; Returns:; Throws:; IOException. classificationLabelsToChannels; public static List<ImageChannel> classificationLabelsToChannels(Map",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ServerTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html
Modifiability,extend,extends,". ServerTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ServerTools. java.lang.Object; qupath.lib.images.servers.ServerTools. public class ServerTools; extends Object; Static methods helpful when dealing with ImageServers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ServerTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<ImageChannel>; classificationLabelsToChannels(Map<Integer,PathClass> classificationLabels,; boolean ignoredTransparent). Create a list of channels from classification labels. static int; getChannelIndex(ImageServer<?> server,; String channelName). Get the index of the first channel of a server with a specified channel name. static String; getDefaultShortServerName(URI uri). Get the default shortened server name given the server's path. static String; getDisplayableImageName(ImageServer<?> server). Get an ImageServer name suitable for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to req",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ServerTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html
Security,hash,hashCode,"ble for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsamp",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/ServerTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html
Availability,down,downsample,". SparseImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion regio",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html
Modifiability,extend,extends,". SparseImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion regio",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html
Security,hash,hashCode,"| ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; server - the server to i",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html
Integrability,interface,interface,"litConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenatin",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html
Modifiability,extend,extends,". SparseImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.SparseImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class SparseImageServer; extends AbstractTileableImageServer; An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view.; ; Regions are currently defined within a JSON file passed as the 'path' argument, ; and this also contains the full paths to the other ImageServers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SparseImageServer.Builder. Builder to create a new SparseImageServer. static class ; SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. SparseImageServer.SparseImageServerManager; getManager(). Get the manager, which defines from whence the regions originate. ImageServerMetadata; getOriginalMetadata(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html
Security,hash,hashCode,"Read a single image tile. static List<SparseImageServer>; splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html
Usability,simpl,simplest,"mepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html
Availability,avail,available,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.SparseImageServerManager. java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server s",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html
Integrability,interface,interface,"rseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDownsamples()); Returns:; Throws:; IOException. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html
Modifiability,extend,extends,". SparseImageServer.SparseImageServerManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.SparseImageServerManager. java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html
Security,hash,hashCode," java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDownsamples()); Returns:; Throws:; IOException. close; public void close(); throws Exception. Specified by:; close i",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html
Availability,down,downsamples,". TileRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html
Integrability,wrap,wrapper,". TileRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html
Modifiability,extend,extends,". TileRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html
Security,hash,hashCode,"le in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get the RegionRequest that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getTileX(). Get the x-coordinate of the bounding box for this tile at the tile resolution. int; getTileY(). Get the y-coordinate of the bounding box for this tile at the tile resolution. int; getZ(). Get the z-slice index for this request. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static TileRequest createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion); Create a new tile request for a specified region and resolution level of an image.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead ; to get the tiles that are actually available for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html
Availability,error,errors,". TileRequestManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface TileRequestManager. public interface TileRequestManager; Helper class to manage tile requests from an ImageServer.; ; The purpose of this is to make it possible to identify the 'optimal' regions to request ; for any particular pixels in the image, based on the resolution levels actually present. ; ; By contrast RegionRequest objects can be used to easily request any pixels at ; any desired resolution, but this flexibility means that one can easily requests pixels ; in an inefficient way - or even inadvertently request pixels multiple times ; (e.g. through rounding errors when requesting pixels at an arbitrary resolution). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<TileRequest>; getAllTileRequests(). Get TileRequest objects for all tiles that this server supports. TileRequest; getTileRequest(int level,; int x,; int y,; int z,; int t). Get the single TileRequest containing a specified pixel, or null if no such request exists. Collection<TileRequest>; getTileRequests(RegionRequest request). Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. Collection<TileRequest>; getTileRequestsForLevel(int level). Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. Method Details. getAllTileRequests; Collection<TileRequest> getAllTileRequests(); Get TileRequest objects for all tiles that this server supports.; ; This should return an exhaustive collection of non-overlapping tiles, such that ; making requests for each of these would result ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html
Integrability,interface,interface,". TileRequestManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface TileRequestManager. public interface TileRequestManager; Helper class to manage tile requests from an ImageServer.; ; The purpose of this is to make it possible to identify the 'optimal' regions to request ; for any particular pixels in the image, based on the resolution levels actually present. ; ; By contrast RegionRequest objects can be used to easily request any pixels at ; any desired resolution, but this flexibility means that one can easily requests pixels ; in an inefficient way - or even inadvertently request pixels multiple times ; (e.g. through rounding errors when requesting pixels at an arbitrary resolution). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<TileRequest>; getAllTileRequests(). Get TileRequest objects for all tiles that this server supports. TileRequest; getTileRequest(int level,; int x,; int y,; int z,; int t). Get the single TileRequest containing a specified pixel, or null if no such request exists. Collection<TileRequest>; getTileRequests(RegionRequest request). Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. Collection<TileRequest>; getTileRequestsForLevel(int level). Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. Method Details. getAllTileRequests; Collection<TileRequest> getAllTileRequests(); Get TileRequest objects for all tiles that this server supports.; ; This should return an exhaustive collection of non-overlapping tiles, such that ; making requests for each of these would result ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html
Integrability,wrap,wrapped,". TransformedServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TransformedServerBuilder. java.lang.Object; qupath.lib.images.servers.TransformedServerBuilder. public class TransformedServerBuilder; extends Object; Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer.; ; Note: This is an early-stage experimental class, which may well change!. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TransformedServerBuilder(ImageServer<BufferedImage> baseServer). Create a transformed ImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TransformedServerBuilder; averageChannelProject(). Perform an average (mean) projection of the channels. ImageServer<BufferedImage>; build(). Get the ImageServer that applies all the requested transforms. TransformedServerBuilder; concatChannels(Collection<ImageServer<BufferedImage>> additionalChannels). Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). TransformedServerBuilder; concatChannels(ImageServer<BufferedImage>... additionalChannels). Concatenate additional servers along the 'channels' dimension. TransformedServerBuilder; crop(ImageRegion region). Crop an specified region based on a bounding box. TransformedServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuil",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html
Modifiability,extend,extends,". TransformedServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TransformedServerBuilder. java.lang.Object; qupath.lib.images.servers.TransformedServerBuilder. public class TransformedServerBuilder; extends Object; Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer.; ; Note: This is an early-stage experimental class, which may well change!. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TransformedServerBuilder(ImageServer<BufferedImage> baseServer). Create a transformed ImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TransformedServerBuilder; averageChannelProject(). Perform an average (mean) projection of the channels. ImageServer<BufferedImage>; build(). Get the ImageServer that applies all the requested transforms. TransformedServerBuilder; concatChannels(Collection<ImageServer<BufferedImage>> additionalChannels). Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). TransformedServerBuilder; concatChannels(ImageServer<BufferedImage>... additionalChannels). Concatenate additional servers along the 'channels' dimension. TransformedServerBuilder; crop(ImageRegion region). Crop an specified region based on a bounding box. TransformedServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuil",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html
Security,hash,hashCode,"edServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuilder; extractChannels(String... names). Extract specified channels for an image. TransformedServerBuilder; maxChannelProject(). Perform a maximum projection of the channels. TransformedServerBuilder; minChannelProject(). Perform a minimum projection of the channels. TransformedServerBuilder; reorderRGB(String order). Rearrange the channel order of an RGB image. TransformedServerBuilder; rotate(RotatedImageServer.Rotation rotation). Rotate the image, using an increment of 90 degrees. TransformedServerBuilder; transform(AffineTransform transform). Apply an AffineTransform to the server. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TransformedServerBuilder; public TransformedServerBuilder(ImageServer<BufferedImage> baseServer); Create a transformed ImageServer. Parameters:; baseServer - the initial server that will be transformed. Method Details. crop; public TransformedServerBuilder crop(ImageRegion region); Crop an specified region based on a bounding box. Parameters:; region - ; Returns:. transform; public TransformedServerBuilder transform(AffineTransform transform); Apply an AffineTransform to the server. ; Note that the transform must be invertible, otherwise and IllegalArgumentException will be thrown. Parameters:; transform - ; Returns:. deconvolveStains; public TransformedServerBuilder deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers); Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. Parameters:; stains - the stains to apply for color deconvolution; stai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html
Availability,down,downsample,"ngImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int,",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Integrability,interface,interface,"erverMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Modifiability,extend,extends,". TransformingImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TransformingImageServer<T>. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<T>; qupath.lib.images.servers.TransformingImageServer<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, ImageServer<T>. Direct Known Subclasses:; AffineTransformImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, RearrangeRGBImageServer, RotatedImageServer. public abstract class TransformingImageServer<T>; extends AbstractImageServer<T>; An ImageServer implementation used to apply transforms to another ImageServer.; This might be a spatial or pixel intensity transformation, for example.; ; Subclasses may only implement the methods necessary to apply the required transform, ; such as readRegion(RegionRequest) since much of the remaining functionality ; is left up to the AbstractImageServer implementation. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; TransformingImageServer(ImageServer<T> server);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssoci",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Safety,avoid,avoid,"eton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Security,hash,hashCode,"rete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest requ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Usability,simpl,simplest,"aultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the req",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html
Integrability,wrap,wraps,". WrappedBufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image til",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html
Modifiability,extend,extends,". WrappedBufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image til",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html
Security,hash,hashCode,"erver, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageSe",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html
Usability,simpl,simply,". WrappedBufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image til",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html
Integrability,interface,interface,". ImageWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Interface ImageWriter<T>. Type Parameters:; T - . All Known Implementing Classes:; JpegWriter, OMETiffWriter, PngWriter, TiffWriterIJ, ZipWriterIJ. public interface ImageWriter<T>; Interface for defining class that can write images.; ; This may not have been a particularly good idea and may change in the future... (e.g. using services?).; ; As it is, it's best to avoid using it because the design is rather clumsy (and goes back to a day whenever ; external dependencies were avoided with an enthusiasm that may have been a bit too much). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getDefaultExtension(). Get the default extension. String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<T>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<T> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImageServer<T> server,; OutputS",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html
Safety,avoid,avoid,". ImageWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Interface ImageWriter<T>. Type Parameters:; T - . All Known Implementing Classes:; JpegWriter, OMETiffWriter, PngWriter, TiffWriterIJ, ZipWriterIJ. public interface ImageWriter<T>; Interface for defining class that can write images.; ; This may not have been a particularly good idea and may change in the future... (e.g. using services?).; ; As it is, it's best to avoid using it because the design is rather clumsy (and goes back to a day whenever ; external dependencies were avoided with an enthusiasm that may have been a bit too much). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getDefaultExtension(). Get the default extension. String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<T>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<T> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImageServer<T> server,; OutputS",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html
Modifiability,extend,extends,". ImageWriterTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class ImageWriterTools. java.lang.Object; qupath.lib.images.writers.ImageWriterTools. public class ImageWriterTools; extends Object; Static methods to access ImageWriter objects and write images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageWriterTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> List<ImageWriter<T>>; getCompatibleWriters(Class<T> imageClass,; String ext). Get a list of compatible ImageWriters for a specific image class. static <T> List<ImageWriter<T>>; getCompatibleWriters(ImageServer<T> server,; String ext). Get a list of compatible ImageWriters compatible with a specific server. static boolean; writeImage(BufferedImage img,; String path). Write a 2D image using the default writer based on the file path. static boolean; writeImage(ImageServer<BufferedImage> server,; String path). Write a (possibly multidimensional) image region using the default writer based on the file path. static boolean; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write a 2D image region using the default writer based on the file path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageWriterTools; public ImageWriterTools(). Method Details. getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(ImageServer<T> server,; String ext); Get a list of compatible ImageWriters compatible with a specific server. Type Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html
Security,access,access,". ImageWriterTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class ImageWriterTools. java.lang.Object; qupath.lib.images.writers.ImageWriterTools. public class ImageWriterTools; extends Object; Static methods to access ImageWriter objects and write images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageWriterTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> List<ImageWriter<T>>; getCompatibleWriters(Class<T> imageClass,; String ext). Get a list of compatible ImageWriters for a specific image class. static <T> List<ImageWriter<T>>; getCompatibleWriters(ImageServer<T> server,; String ext). Get a list of compatible ImageWriters compatible with a specific server. static boolean; writeImage(BufferedImage img,; String path). Write a 2D image using the default writer based on the file path. static boolean; writeImage(ImageServer<BufferedImage> server,; String path). Write a (possibly multidimensional) image region using the default writer based on the file path. static boolean; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write a 2D image region using the default writer based on the file path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageWriterTools; public ImageWriterTools(). Method Details. getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(ImageServer<T> server,; String ext); Get a list of compatible ImageWriters compatible with a specific server. Type Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html
Integrability,interface,interface,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html
Modifiability,extend,extends,". JpegWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class JpegWriter. java.lang.Object; qupath.lib.images.writers.JpegWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class JpegWriter; extends Object; ImageWriter implementation to write JPEG images using ImageIO. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; JpegWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html
Security,hash,hashCode,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without th",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html
Security,access,accessing,". qupath.lib.images.writers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.writers. package qupath.lib.images.writers. Supports for writing images of various kinds in various ways. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. PngWriter. ImageWriter implementation to write PNG images using ImageIO. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/package-summary.html
Integrability,interface,interface,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/PngWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html
Modifiability,extend,extends,". PngWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class PngWriter. java.lang.Object; qupath.lib.images.writers.PngWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class PngWriter; extends Object; ImageWriter implementation to write PNG images using ImageIO. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PngWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeI",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/PngWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html
Security,hash,hashCode,"ter can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOExc",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/PngWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html
Availability,down,downsample,"rter. java.lang.Object; qupath.lib.images.writers.TileExporter. public class TileExporter; extends Object; Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileExporter(ImageData<BufferedImage> imageData). Create a builder to export tiles. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TileExporter; annotatedCentroidTilesOnly(boolean annotatedCentroidTilesOnly). Specify whether tiles without any annotations over the tile centroid should be included. TileExporter; annotatedTilesOnly(boolean annotatedTilesOnly). Specify whether tiles that do not overlap with any annotations should be included. TileExporter; channels(int... channels). Export only specified channels. TileExporter; channels(String... channelNames). Export only specified channels, identified by name. TileExporter; downsample(double downsample). Define resolution as a downsample value. TileExporter; exportJson(boolean exportJson). Optionally export a JSON file that includes label information and image/label pairs, where available. TileExporter; fullImageTile(). Specify that a single tile should be generated corresponding to the full image. TileExporter; imageExtension(String ext). Specify a file extension for the original pixels, which determines the export file format. TileExporter; imageSubDir(String subdir). Specify a subdirectory within which image tiles should be saved. TileExporter; includePartialTiles(boolean includePartialTiles). Specify whether incomplete tiles at image boundaries should be included. TileExporter; labeledImageExtension(String ext). Specify a file extension for the labelled image, which determines the export file format. TileExporter; labeledImageId(String labelId). Specify an identifier appended to the filename for labeled images. TileExporter; labeledImageSubDir(String subdir).",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/TileExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html
Integrability,depend,depend,"is behavior may change in a future version of QuPath to preserve image type. Parameters:; channelNames - channels to export; Returns:; this exporter. overlap; public TileExporter overlap(int overlap); Define tile overlap (both x and y) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlap - ; Returns:; this exporter. overlap; public TileExporter overlap(int overlapX,; int overlapY); Define tile overlap (x and y separately) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlapX - ; overlapY - ; Returns:; this exporter. downsample; public TileExporter downsample(double downsample); Define resolution as a downsample value. Parameters:; downsample - ; Returns:; this exporter; See Also:. requestedPixelSize(double). requestedPixelSize; public TileExporter requestedPixelSize(double pixelSize); Define resolution as a pixel size in calibrated units. The actual units depend upon those stored within the server. Parameters:; pixelSize - ; Returns:; this exporter. includePartialTiles; public TileExporter includePartialTiles(boolean includePartialTiles); Specify whether incomplete tiles at image boundaries should be included.; ; If true, then when tiling the entire image some tiles may not have the specified tile width or height, ; or alternatively when creating tiles based upon object centroids then some zero-padding may be required ; to ensure the center is preserved along with the tile dimensions.; Default is false. Parameters:; includePartialTiles - ; Returns:; this exporter; See Also:. tileSize(int, int); parentObjects(Predicate); parentObjects(Collection); useROIBounds(boolean). region; public TileExporter region(RegionRequest region); Define the region to be processed, including downsample. Default is the full image. Parameters:; region - ; Returns:; this exporter; See Also:. region(ImageRegion). region; public TileExporter region(ImageRegion region); Define",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/TileExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html
Modifiability,extend,extends,". TileExporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class TileExporter. java.lang.Object; qupath.lib.images.writers.TileExporter. public class TileExporter; extends Object; Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileExporter(ImageData<BufferedImage> imageData). Create a builder to export tiles. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TileExporter; annotatedCentroidTilesOnly(boolean annotatedCentroidTilesOnly). Specify whether tiles without any annotations over the tile centroid should be included. TileExporter; annotatedTilesOnly(boolean annotatedTilesOnly). Specify whether tiles that do not overlap with any annotations should be included. TileExporter; channels(int... channels). Export only specified channels. TileExporter; channels(String... channelNames). Export only specified channels, identified by name. TileExporter; downsample(double downsample). Define resolution as a downsample value. TileExporter; exportJson(boolean exportJson). Optionally export a JSON file that includes label information and image/label pairs, where available. TileExporter; fullImageTile(). Specify that a single tile should be generated corresponding to the full image. TileExporter; imageExtension(String ext). Specify a file extension for the original pixels, which determines the export file format. TileExporter; imageSubDir(String subdir). Specify a subdirectory within which image tiles should be saved. TileExporter; includePartialTiles(boolean includePartialTiles",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/TileExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html
Safety,avoid,avoid,"erver(ImageServer<BufferedImage> server); Optional server providing image labels.; These may be export as corresponding images alongside the 'original' pixels, e.g. to create ; training data for an AI algorithm. Parameters:; server - the labeled server; Returns:; this exporter. imageSubDir; public TileExporter imageSubDir(String subdir); Specify a subdirectory within which image tiles should be saved.; By default, tiles are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories. Parameters:; subdir - ; Returns:; this exporter. labeledImageSubDir; public TileExporter labeledImageSubDir(String subdir); Specify a subdirectory within which labeled image tiles should be saved.; By default, tile labels are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; subdir - ; Returns:; this exporter. labeledImageId; public TileExporter labeledImageId(String labelId); Specify an identifier appended to the filename for labeled images.; The labeled image name will be in the format imageName + labeledImageId + labeledImageExtension.; ; This can be used to avoid name clashes with export image tiles.; If not specified, QuPath will generate a default ID if required.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; labelId - ; Returns:; this exporter. exportJson; public TileExporter exportJson(boolean exportJson); Optionally export a JSON file that includes label information and image/label pairs, where available. Parameters:; exportJson - ; Returns:; this exporter. writeTiles; public void writeTiles(String dirOutput); throws IOException; Export the image tiles to the specified directory. Parameters:; dirOutput - full path to the export directory; Throws:; IOException - if an error occurs during export. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/TileExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html
Security,hash,hashCode,". TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a builder to export tiles. Parameters:; imageData - . Method Details. parentObjects; public TileExporter parentObjects(Predicate<PathObject> filter); Specify a filter to extract parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; filter - ; Returns:; this exporter; See Also:. parentObjects(Collection); useROIBounds(boolean); includePartialTiles(boolean). parentObjects; public TileExporter parentObjects(Collection<? extends PathObject> parentObjects); Specify parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/TileExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html
Integrability,interface,interface,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from i",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html
Modifiability,extend,extends,". BioFormatsImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.bioformats.BioFormatsImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class BioFormatsImageServer; extends AbstractTileableImageServer; QuPath ImageServer that uses the Bio-Formats library to read image data.; ; See http://www.openmicroscopy.org/site/products/bio-formats; ; See also https://docs.openmicroscopy.org/bio-formats/6.5.1/developers/matlab-dev.html#improving-reading-performance. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BioFormatsImageServer(URI uri,; String... args). Create an ImageServer using the Bio-Formats library. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns a builder capable of creating a server like this one. String; dumpMetadata(). Retrieve a string representation of the metadata OME-XML. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. File; getFile(). Get the underlying file. String; getFormat(). Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). OMEPyramidSto",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html
Performance,perform,performance,". BioFormatsImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.bioformats.BioFormatsImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class BioFormatsImageServer; extends AbstractTileableImageServer; QuPath ImageServer that uses the Bio-Formats library to read image data.; ; See http://www.openmicroscopy.org/site/products/bio-formats; ; See also https://docs.openmicroscopy.org/bio-formats/6.5.1/developers/matlab-dev.html#improving-reading-performance. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BioFormatsImageServer(URI uri,; String... args). Create an ImageServer using the Bio-Formats library. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns a builder capable of creating a server like this one. String; dumpMetadata(). Retrieve a string representation of the metadata OME-XML. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. File; getFile(). Get the underlying file. String; getFormat(). Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). OMEPyramidSto",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html
Security,hash,hashCode,"s. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs;",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html
Usability,simpl,simplest,"structor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<Buffer",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html
Modifiability,extend,extends,". BioFormatsOptionsExtension.BioFormatsPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.BioFormatsPreferences. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences. Enclosing class:; BioFormatsOptionsExtension. @PrefCategory(""Prefs.BioFormats""); public static class BioFormatsOptionsExtension.BioFormatsPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; enableBioformats;  ; final BooleanProperty; filesOnly;  ; final IntegerProperty; memoizationTimeMillis;  ; final StringProperty; pathMemoization;  ; final StringProperty; skipExtensions;  ; final StringProperty; useExtensions;  ; final BooleanProperty; useParallelization;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. enableBioformats; @BooleanPref(""Prefs.BioFormats.enable""); public final BooleanProperty enableBioformats. filesOnly; @BooleanPref(""Prefs.BioFormats.localOnly""); public final BooleanProperty filesOnly. useParallelization; @BooleanPref(""Prefs.BioFormats.useParallelization""); public final BooleanProperty useParallelization. memoizationTimeMillis; @IntegerPref(""Prefs.BioFormats.memoizationTimeMillis""); public final IntegerProperty memoizationTimeMillis. pathMemoization; @DirectoryPref(""Prefs.BioFormats.pathMemoization""); public final StringProperty pathMemoization. useExtensions; @StringPref(""Prefs.BioFormats.alwaysUseExtensions""); public final StringProperty useExtensions. skipExtensions; @StringPref(""Prefs.BioFormats.skipExte",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html
Security,hash,hashCode,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.BioFormatsPreferences. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences. Enclosing class:; BioFormatsOptionsExtension. @PrefCategory(""Prefs.BioFormats""); public static class BioFormatsOptionsExtension.BioFormatsPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; enableBioformats;  ; final BooleanProperty; filesOnly;  ; final IntegerProperty; memoizationTimeMillis;  ; final StringProperty; pathMemoization;  ; final StringProperty; skipExtensions;  ; final StringProperty; useExtensions;  ; final BooleanProperty; useParallelization;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. enableBioformats; @BooleanPref(""Prefs.BioFormats.enable""); public final BooleanProperty enableBioformats. filesOnly; @BooleanPref(""Prefs.BioFormats.localOnly""); public final BooleanProperty filesOnly. useParallelization; @BooleanPref(""Prefs.BioFormats.useParallelization""); public final BooleanProperty useParallelization. memoizationTimeMillis; @IntegerPref(""Prefs.BioFormats.memoizationTimeMillis""); public final IntegerProperty memoizationTimeMillis. pathMemoization; @DirectoryPref(""Prefs.BioFormats.pathMemoization""); public final StringProperty pathMemoization. useExtensions; @StringPref(""Prefs.BioFormats.alwaysUseExtensions""); public final StringProperty useExtensions. skipExtensions; @StringPref(""Prefs.BioFormats.skipExtensions""); public final StringProperty skipExtensions. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html
Deployability,install,installExtension,"s.bioformats.BioFormatsOptionsExtension. All Implemented Interfaces:; QuPathExtension. public class BioFormatsOptionsExtension; extends Object; implements QuPathExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied fr",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html
Integrability,interface,interface,"FormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html
Modifiability,extend,extends,". BioFormatsOptionsExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension. All Implemented Interfaces:; QuPathExtension. public class BioFormatsOptionsExtension; extends Object; implements QuPathExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html
Security,hash,hashCode,"athExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html
Testability,test,test,"getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html
Modifiability,extend,extends,". BioFormatsOptionsExtension.OmeTiffWriterAction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.OmeTiffWriterAction. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.OmeTiffWriterAction. Enclosing class:; BioFormatsOptionsExtension. public static class BioFormatsOptionsExtension.OmeTiffWriterAction; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionWriter;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionWriter; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.BioFormats.exportOmeTif""); public final org.controlsfx.control.action.Action actionWriter. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html
Security,hash,hashCode,". BioFormatsOptionsExtension.OmeTiffWriterAction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.OmeTiffWriterAction. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.OmeTiffWriterAction. Enclosing class:; BioFormatsOptionsExtension. public static class BioFormatsOptionsExtension.OmeTiffWriterAction; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionWriter;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionWriter; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.BioFormats.exportOmeTif""); public final org.controlsfx.control.action.Action actionWriter. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html
Integrability,interface,interfaces,". BioFormatsServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerBuilder. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class BioFormatsServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that make use of the Bio-Formats library. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html
Modifiability,extend,extends,". BioFormatsServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerBuilder. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class BioFormatsServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that make use of the Bio-Formats library. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html
Security,hash,hashCode,"der.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String ar",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html
Usability,simpl,simple,"e used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html
Availability,avail,available,"upath.lib.images.servers.bioformats.BioFormatsServerOptions. public class BioFormatsServerOptions; extends Object; Container for various options that can customize the behavior of the BioFormatsImageServer. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; ALLOW_MEMOIZATION_PROPERTY. System property controlling whether memoization is allowed or not. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; allowMemoization(). Check whether memoization should be allowed or not. boolean; bioformatsEnabled(). Returns true if Bio-Formats is enabled and may be used to read images. void; clearReaderOptions(). Clear all reader options, returning these to their defaults. boolean; getFilesOnly(). Returns true if Bio-Formats is restricted to support only local files, not other URLs. static BioFormatsServerOptions; getInstance(). Get the static instance of BioFormatsServerOptions, available to servers being constructed. int; getMemoizationTimeMillis(). Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. String; getPathMemoization(). Get the path to the directory where memoization files should be written, or null if no path is set. Map<String,String>; getReaderOptions(). Get a map representing additional arguments that should be passed to readers. Set<String>; getSkipAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should not be used. Set<String>; getUseAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should always be used. boolean; requestParallelization(). Returns true if multiple readers may be created for different threads, to enable parallel image reading. void; setBioformatsEnabled(boolean bioformatsEnabled). Set whether Bio-Formats should be enabled or disabled (in favor of other readers). void; setFilesOnly(boolean filesOnly). Set wheth",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html
Modifiability,extend,extends,". BioFormatsServerOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerOptions. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerOptions. public class BioFormatsServerOptions; extends Object; Container for various options that can customize the behavior of the BioFormatsImageServer. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; ALLOW_MEMOIZATION_PROPERTY. System property controlling whether memoization is allowed or not. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; allowMemoization(). Check whether memoization should be allowed or not. boolean; bioformatsEnabled(). Returns true if Bio-Formats is enabled and may be used to read images. void; clearReaderOptions(). Clear all reader options, returning these to their defaults. boolean; getFilesOnly(). Returns true if Bio-Formats is restricted to support only local files, not other URLs. static BioFormatsServerOptions; getInstance(). Get the static instance of BioFormatsServerOptions, available to servers being constructed. int; getMemoizationTimeMillis(). Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. String; getPathMemoization(). Get the path to the directory where memoization files should be written, or null if no path is set. Map<String,String>; getReaderOptions(). Get a map representing additional arguments that should be passed to readers. Set<String>; getSkipAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should not be used. Set<String",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html
Security,hash,hashCode,"n; requestParallelization(). Returns true if multiple readers may be created for different threads, to enable parallel image reading. void; setBioformatsEnabled(boolean bioformatsEnabled). Set whether Bio-Formats should be enabled or disabled (in favor of other readers). void; setFilesOnly(boolean filesOnly). Set whether Bio-Formats should support only local files (rather than any URL). void; setMemoizationTimeMillis(int memoizationTimeMillis). Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. void; setPathMemoization(String pathMemoization). Set the directory where memoization files should be written. void; setReaderOptions(Map<String,String> options). Set additional arguments that should be passed to readers. void; setRequestParallelization(boolean requestParallelization). Optionally enable or disable parallelization when reading images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ALLOW_MEMOIZATION_PROPERTY; public static String ALLOW_MEMOIZATION_PROPERTY; System property controlling whether memoization is allowed or not.; If set to false, this is a hint that memoization should not be supported - but it is up to consumers to enforce that.; ; Default is to set status based upon Java version, with 17+ turning memoization off.; ; See https://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - . getReaderOptions; public Map<String,String> getReaderOptions(); Get a ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html
Usability,clear,clearReaderOptions,"Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerOptions. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerOptions. public class BioFormatsServerOptions; extends Object; Container for various options that can customize the behavior of the BioFormatsImageServer. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; ALLOW_MEMOIZATION_PROPERTY. System property controlling whether memoization is allowed or not. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; allowMemoization(). Check whether memoization should be allowed or not. boolean; bioformatsEnabled(). Returns true if Bio-Formats is enabled and may be used to read images. void; clearReaderOptions(). Clear all reader options, returning these to their defaults. boolean; getFilesOnly(). Returns true if Bio-Formats is restricted to support only local files, not other URLs. static BioFormatsServerOptions; getInstance(). Get the static instance of BioFormatsServerOptions, available to servers being constructed. int; getMemoizationTimeMillis(). Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. String; getPathMemoization(). Get the path to the directory where memoization files should be written, or null if no path is set. Map<String,String>; getReaderOptions(). Get a map representing additional arguments that should be passed to readers. Set<String>; getSkipAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should not be used. Set<String>; getUseAlwaysExtensions(). Query the set of file extensions for which Bio-Formats should always be used. boolean; requestParallelization(). Returns tru",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html
Modifiability,extend,extends,". OMEPixelParser.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class OMEPixelParser.Builder. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Enclosing class:; OMEPixelParser. public static class OMEPixelParser.Builder; extends Object; Builder for instances of OMEPixelParser. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPixelParser; build(). Creates a new OMEPixelParser instance. OMEPixelParser.Builder; byteOrder(ByteOrder byteOrder);  ; OMEPixelParser.Builder; effectiveNChannels(int effectiveNChannels);  ; OMEPixelParser.Builder; isInterleaved(boolean isInterleaved);  ; OMEPixelParser.Builder; normalizeFloats(boolean normalizeFloats);  ; OMEPixelParser.Builder; pixelType(PixelType pixelType);  ; OMEPixelParser.Builder; samplesPerPixel(int[] samplesPerPixel);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. isInterleaved; public OMEPixelParser.Builder isInterleaved(boolean isInterleaved). Parameters:; isInterleaved - whether pixel values are interleaved; Returns:; the current builder. pixelType; public OMEPixelParser.Builder pixelType(PixelType pixelType). Parameters:; pixelType - the bit-depth of the image pixels; Returns:; the current builder. byteOrder; public OMEPixelParser.Builder byteOrder(ByteOrder byteOrder). Parameters:; byteOrder - the byte order of each pixel; Returns:; the current builder. effectiveNChannels; public OMEPixelPa",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html
Security,hash,hashCode,"qupath.lib.images.servers.bioformats; Class OMEPixelParser.Builder. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Enclosing class:; OMEPixelParser. public static class OMEPixelParser.Builder; extends Object; Builder for instances of OMEPixelParser. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPixelParser; build(). Creates a new OMEPixelParser instance. OMEPixelParser.Builder; byteOrder(ByteOrder byteOrder);  ; OMEPixelParser.Builder; effectiveNChannels(int effectiveNChannels);  ; OMEPixelParser.Builder; isInterleaved(boolean isInterleaved);  ; OMEPixelParser.Builder; normalizeFloats(boolean normalizeFloats);  ; OMEPixelParser.Builder; pixelType(PixelType pixelType);  ; OMEPixelParser.Builder; samplesPerPixel(int[] samplesPerPixel);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. isInterleaved; public OMEPixelParser.Builder isInterleaved(boolean isInterleaved). Parameters:; isInterleaved - whether pixel values are interleaved; Returns:; the current builder. pixelType; public OMEPixelParser.Builder pixelType(PixelType pixelType). Parameters:; pixelType - the bit-depth of the image pixels; Returns:; the current builder. byteOrder; public OMEPixelParser.Builder byteOrder(ByteOrder byteOrder). Parameters:; byteOrder - the byte order of each pixel; Returns:; the current builder. effectiveNChannels; public OMEPixelParser.Builder effectiveNChannels(int effectiveNChannels). Parameters:; effectiveNChannels - the effective size of the C dimension of the image. This is not always; the number of channels, for example RGB values can be stored in one effective channel; Returns:; the current builder. normalizeFloats; public OMEPixelParser.Builder normalizeFloats(b",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html
Modifiability,extend,extends,". OMEPixelParser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class OMEPixelParser. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser. public class OMEPixelParser; extends Object; This class can parse raw bytes into a BufferedImage.; It is intended for use with non-RGB images; AWTImageTools can be used for RGB images. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPixelParser.Builder. Builder for instances of OMEPixelParser. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel). Creates a BufferedImage from a 2-dimensional byte array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. parse; public BufferedImage parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel); Creates a BufferedImage from a 2-dimensional byte array. Parameters:; pixels - the byte array containing the pixel values. The first dimension of the; array refers to the channel and the second dimension refers to the position; of the pixel; width - the width in pixels of the image; height - the height in pixels of the image; nChannels - the number of channels of this image; colorModel - the color model to use when creating the image; Returns:; the corresponding image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html
Security,hash,hashCode,". OMEPixelParser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class OMEPixelParser. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser. public class OMEPixelParser; extends Object; This class can parse raw bytes into a BufferedImage.; It is intended for use with non-RGB images; AWTImageTools can be used for RGB images. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPixelParser.Builder. Builder for instances of OMEPixelParser. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel). Creates a BufferedImage from a 2-dimensional byte array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. parse; public BufferedImage parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel); Creates a BufferedImage from a 2-dimensional byte array. Parameters:; pixels - the byte array containing the pixel values. The first dimension of the; array refers to the channel and the second dimension refers to the position; of the pixel; width - the width in pixels of the image; height - the height in pixels of the image; nChannels - the number of channels of this image; colorModel - the color model to use when creating the image; Returns:; the corresponding image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html
Security,access,accessing,. qupath.lib.images.servers.bioformats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.bioformats. package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Classes. Class; Description; BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html
Integrability,interface,interface,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Re",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html
Modifiability,extend,extends,". OpenslideImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide; Class OpenslideImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.openslide.OpenslideImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class OpenslideImageServer; extends AbstractTileableImageServer; ImageServer implementation using OpenSlide. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenslideImageServer(URI uri,; String... args). Create an ImageServer using OpenSlide for the specified file. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; dumpMetadata(). Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html
Security,hash,hashCode,"r. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html
Usability,simpl,simplest,"ownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the pr",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html
Integrability,interface,interfaces,". OpenslideServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide; Class OpenslideServerBuilder. java.lang.Object; qupath.lib.images.servers.openslide.OpenslideServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class OpenslideServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for Openslide ImageServer. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html
Modifiability,extend,extends,". OpenslideServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide; Class OpenslideServerBuilder. java.lang.Object; qupath.lib.images.servers.openslide.OpenslideServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class OpenslideServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for Openslide ImageServer. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html
Security,hash,hashCode,"lder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); R",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html
Usability,simpl,simple,"rgs - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html
Security,access,accessing,. qupath.lib.images.servers.openslide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide. package qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Classes. Class; Description; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenslideServerBuilder. Builder for Openslide ImageServer. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html
Availability,avail,available,"_POWER;  ; static final String; PROPERTY_NAME_QUICKHASH1;  ; static final String; PROPERTY_NAME_VENDOR;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NA",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html
Integrability,wrap,wrapper,". OpenSlide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlide. All Implemented Interfaces:; Closeable, AutoCloseable. public final class OpenSlide; extends Object; implements Closeable; Minimal Java wrapper for OpenSlide. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROPERTY_NAME_BACKGROUND_COLOR;  ; static final String; PROPERTY_NAME_BOUNDS_HEIGHT;  ; static final String; PROPERTY_NAME_BOUNDS_WIDTH;  ; static final String; PROPERTY_NAME_BOUNDS_X;  ; static final String; PROPERTY_NAME_BOUNDS_Y;  ; static final String; PROPERTY_NAME_COMMENT;  ; static final String; PROPERTY_NAME_MPP_X;  ; static final String; PROPERTY_NAME_MPP_Y;  ; static final String; PROPERTY_NAME_OBJECTIVE_POWER;  ; static final String; PROPERTY_NAME_QUICKHASH1;  ; static final String; PROPERTY_NAME_VENDOR;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html
Modifiability,extend,extends,". OpenSlide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlide. All Implemented Interfaces:; Closeable, AutoCloseable. public final class OpenSlide; extends Object; implements Closeable; Minimal Java wrapper for OpenSlide. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROPERTY_NAME_BACKGROUND_COLOR;  ; static final String; PROPERTY_NAME_BOUNDS_HEIGHT;  ; static final String; PROPERTY_NAME_BOUNDS_WIDTH;  ; static final String; PROPERTY_NAME_BOUNDS_X;  ; static final String; PROPERTY_NAME_BOUNDS_Y;  ; static final String; PROPERTY_NAME_COMMENT;  ; static final String; PROPERTY_NAME_MPP_X;  ; static final String; PROPERTY_NAME_MPP_Y;  ; static final String; PROPERTY_NAME_OBJECTIVE_POWER;  ; static final String; PROPERTY_NAME_QUICKHASH1;  ; static final String; PROPERTY_NAME_VENDOR;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html
Security,hash,hashCode,"iption; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NAME_MPP_Y. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_X; public static final String PROPERTY_NAME_BOUNDS_X. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_Y; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html
Modifiability,extend,extends,". OpenSlide.OpenSlideDisposedException (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide.OpenSlideDisposedException. java.lang.Object; java.lang.Throwable; java.lang.Exception; java.lang.RuntimeException; qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. All Implemented Interfaces:; Serializable. Enclosing class:; OpenSlide. public static class OpenSlide.OpenSlideDisposedException; extends RuntimeException; Exception thrown whenever a request is made after the OpenSlide object has been closed. See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; OpenSlideDisposedException();  . Method Summary. Methods inherited from class java.lang.Throwable; addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenSlideDisposedException; public OpenSlideDisposedException(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html
Security,hash,hashCode,". OpenSlide.OpenSlideDisposedException (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide.OpenSlideDisposedException. java.lang.Object; java.lang.Throwable; java.lang.Exception; java.lang.RuntimeException; qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. All Implemented Interfaces:; Serializable. Enclosing class:; OpenSlide. public static class OpenSlide.OpenSlideDisposedException; extends RuntimeException; Exception thrown whenever a request is made after the OpenSlide object has been closed. See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; OpenSlideDisposedException();  . Method Summary. Methods inherited from class java.lang.Throwable; addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenSlideDisposedException; public OpenSlideDisposedException(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html
Integrability,interface,interface,". OpenSlideJNA (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Interface OpenSlideJNA. All Superinterfaces:; com.sun.jna.Library. public interface OpenSlideJNA; extends com.sun.jna.Library; JNA interface for OpenSlide. Nested Class Summary. Nested classes/interfaces inherited from interface com.sun.jna.Library; com.sun.jna.Library.Handler. Field Summary. Fields inherited from interface com.sun.jna.Library; OPTION_ALLOW_OBJECTS, OPTION_CALLING_CONVENTION, OPTION_CLASSLOADER, OPTION_FUNCTION_MAPPER, OPTION_INVOCATION_MAPPER, OPTION_OPEN_FLAGS, OPTION_STRING_ENCODING, OPTION_STRUCTURE_ALIGNMENT, OPTION_SYMBOL_PROVIDER, OPTION_TYPE_MAPPER. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; openslide_close(long osr);  ; String; openslide_detect_vendor(String file);  ; void; openslide_get_associated_image_dimensions(long osr,; String name,; long[] w,; long[] h);  ; String[]; openslide_get_associated_image_names(long osr);  ; String; openslide_get_error(long osr);  ; long; openslide_get_icc_profile_size(long osr);  ; int; openslide_get_level_count(long osr);  ; void; openslide_get_level_dimensions(long osr,; int level,; long[] w,; long[] h);  ; double; openslide_get_level_downsample(long osr,; int level);  ; String[]; openslide_get_property_names(long osr);  ; String; openslide_get_property_value(long osr,; String name);  ; String; openslide_get_version();  ; long; openslide_open(String file);  ; void; openslide_read_associated_image(long osr,; String name,; int[] dest);  ; void; openslide_read_icc_profile(long osr,; byte[] bytes);  ; void; openslide_read_region(long osr,; int[] dest,; long x,; long y,; int leve",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html
Modifiability,extend,extends,". OpenSlideJNA (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Interface OpenSlideJNA. All Superinterfaces:; com.sun.jna.Library. public interface OpenSlideJNA; extends com.sun.jna.Library; JNA interface for OpenSlide. Nested Class Summary. Nested classes/interfaces inherited from interface com.sun.jna.Library; com.sun.jna.Library.Handler. Field Summary. Fields inherited from interface com.sun.jna.Library; OPTION_ALLOW_OBJECTS, OPTION_CALLING_CONVENTION, OPTION_CLASSLOADER, OPTION_FUNCTION_MAPPER, OPTION_INVOCATION_MAPPER, OPTION_OPEN_FLAGS, OPTION_STRING_ENCODING, OPTION_STRUCTURE_ALIGNMENT, OPTION_SYMBOL_PROVIDER, OPTION_TYPE_MAPPER. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; openslide_close(long osr);  ; String; openslide_detect_vendor(String file);  ; void; openslide_get_associated_image_dimensions(long osr,; String name,; long[] w,; long[] h);  ; String[]; openslide_get_associated_image_names(long osr);  ; String; openslide_get_error(long osr);  ; long; openslide_get_icc_profile_size(long osr);  ; int; openslide_get_level_count(long osr);  ; void; openslide_get_level_dimensions(long osr,; int level,; long[] w,; long[] h);  ; double; openslide_get_level_downsample(long osr,; int level);  ; String[]; openslide_get_property_names(long osr);  ; String; openslide_get_property_value(long osr,; String name);  ; String; openslide_get_version();  ; long; openslide_open(String file);  ; void; openslide_read_associated_image(long osr,; String name,; int[] dest);  ; void; openslide_read_icc_profile(long osr,; byte[] bytes);  ; void; openslide_read_region(long osr,; int[] dest,; long x,; long y,; int leve",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html
Availability,avail,available,"notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. dete",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html
Modifiability,extend,extends,". OpenSlideLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLi",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html
Performance,load,loading,". OpenSlideLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLi",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html
Safety,detect,detectVendor,". OpenSlideLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLi",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html
Security,access,access,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPa",MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html
Integrability,wrap,wrapper,. qupath.lib.images.servers.openslide.jna (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide.jna. package qupath.lib.images.servers.openslide.jna. Related Packages. Package; Description; qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). All Classes and InterfacesInterfacesClassesException Classes. Class; Description; OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html
Performance,load,loading,. qupath.lib.images.servers.openslide.jna (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide.jna. package qupath.lib.images.servers.openslide.jna. Related Packages. Package; Description; qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). All Classes and InterfacesInterfacesClassesException Classes. Class; Description; OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html
Integrability,interface,interface,". ConvertCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class ConvertCommand. java.lang.Object; qupath.lib.images.writers.ome.ConvertCommand. All Implemented Interfaces:; Runnable, Subcommand. public class ConvertCommand; extends Object; implements Runnable, Subcommand; Allows command line option to convert an input image to OME-TIFF. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ConvertCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvertCommand; public ConvertCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html
Modifiability,extend,extends,". ConvertCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class ConvertCommand. java.lang.Object; qupath.lib.images.writers.ome.ConvertCommand. All Implemented Interfaces:; Runnable, Subcommand. public class ConvertCommand; extends Object; implements Runnable, Subcommand; Allows command line option to convert an input image to OME-TIFF. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ConvertCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvertCommand; public ConvertCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html
Security,hash,hashCode,". ConvertCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class ConvertCommand. java.lang.Object; qupath.lib.images.writers.ome.ConvertCommand. All Implemented Interfaces:; Runnable, Subcommand. public class ConvertCommand; extends Object; implements Runnable, Subcommand; Allows command line option to convert an input image to OME-TIFF. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ConvertCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvertCommand; public ConvertCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html
Availability,down,downsamples,"are exported. OMEPyramidWriter.Builder; bigTiff(). Request that the image is written in BigTIFF format. OMEPyramidWriter.Builder; bigTiff(boolean doBigTiff). Specify whether the image should be written in BigTIFF format. OMEPyramidWriter.OMEPyramidSeries; build(). Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. OMEPyramidWriter.Builder; channels(int... channels). Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. OMEPyramidWriter.Builder; channelsImages(). Request that channels are written as separate images. OMEPyramidWriter.Builder; channelsInterleaved(). Request that channels are written interleaved within a single image plane. OMEPyramidWriter.Builder; channelsPlanar(). Request that channels are written as separate image planes. OMEPyramidWriter.Builder; compression(OMEPyramidWriter.CompressionType compression). Request the output compression type. OMEPyramidWriter.Builder; downsamples(double... downsamples). Specify downsample factors to use in the final pyramid. OMEPyramidWriter.Builder; dyadicDownsampling(). Downsample by factors of 2. OMEPyramidWriter.Builder; losslessCompression(). Request the default lossless compression method. OMEPyramidWriter.Builder; lossyCompression(). Request the default lossy compression method. OMEPyramidWriter.Builder; name(String name). Specify a series name. OMEPyramidWriter.Builder; parallelize(). Parallelize tile export, if possible. OMEPyramidWriter.Builder; parallelize(boolean doParallel). Specify if tile export should be parallelized if possible, with the default number of threads (current 4). OMEPyramidWriter.Builder; parallelize(int nThreads). Specify if tile export should be parallelized if possible, with the requested number of threads. OMEPyramidWriter.Builder; pixelType(String exportPixelType). Specify the output PixelType as a String, e.g. OMEPyramidWriter.Builder; pixelType(PixelType exportPixelType). Specify the ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html
Integrability,depend,depend,"(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html
Modifiability,extend,extends,". OMEPyramidWriter.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.Builder. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.Builder; extends Object; Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Builder(ImageServer<BufferedImage> server). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPyramidWriter.Builder; allTimePoints(). Request that all timepoints of a time series will be written. OMEPyramidWriter.Builder; allZSlices(). Request that all z-slices are exported. OMEPyramidWriter.Builder; bigTiff(). Request that the image is written in BigTIFF format. OMEPyramidWriter.Builder; bigTiff(boolean doBigTiff). Specify whether the image should be written in BigTIFF format. OMEPyramidWriter.OMEPyramidSeries; build(). Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. OMEPyramidWriter.Builder; channels(int... channels). Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. OMEPyramidWriter.Builder; channelsImages(). Request that channels are written as separate images. OMEPyramidWriter.Builder; channelsInterleaved(). Request that channels are written interleaved within a single image plane. OMEPyramidWriter.Builder; channelsPlanar(). Request that channels are written as separate image planes. OMEPyramidWriter.Builder; compression(OMEPyramid",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html
Performance,perform,performance,"; Request the default lossy compression method. Not all servers support lossy compression ; (e.g. non-RGB servers). Returns:; this builder. losslessCompression; public OMEPyramidWriter.Builder losslessCompression(); Request the default lossless compression method. Returns:. uncompressed; public OMEPyramidWriter.Builder uncompressed(); Request no compression. Returns:; Since:; v0.4.0. parallelize; public OMEPyramidWriter.Builder parallelize(); Parallelize tile export, if possible. Returns:; this builder. parallelize; public OMEPyramidWriter.Builder parallelize(boolean doParallel); Specify if tile export should be parallelized if possible, with the default number of threads (current 4). Parameters:; doParallel - ; Returns:; See Also:. parallelize(int). parallelize; public OMEPyramidWriter.Builder parallelize(int nThreads); Specify if tile export should be parallelized if possible, with the requested number of threads.; ; Note that increasing the number of threads may not give improved performance, since it I/O and compression may well ; become a bottleneck. The main purpose of this option is to parallelize requesting and writing tiles, which can ; be achieved with just a few threads. Parameters:; nThreads - number of threads for parallel export; use ≤ 1 to turn off parallelization.; Returns:; Since:; v0.4.0. pixelType; public OMEPyramidWriter.Builder pixelType(PixelType exportPixelType); Specify the output PixelType. Parameters:; exportPixelType - ; Returns:. pixelType; public OMEPyramidWriter.Builder pixelType(String exportPixelType); Specify the output PixelType as a String, e.g. ""UINT8"", ""FLOAT32"" etc. Parameters:; exportPixelType - ; Returns:. allZSlices; public OMEPyramidWriter.Builder allZSlices(); Request that all z-slices are exported. Returns:; this builder. zSlice; public OMEPyramidWriter.Builder zSlice(int z); Specify the z-slice to export. Parameters:; z - ; Returns:; this builder. zSlices; public OMEPyramidWriter.Builder zSlices(int zStart,; int zEnd); Sp",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html
Security,hash,hashCode,"asing factor each time (e.g. OMEPyramidWriter.Builder; scaledDownsampling(double minDownsample,; double scale). Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. OMEPyramidWriter.Builder; tileSize(int tileSize). Define the requested tile size (width == height). OMEPyramidWriter.Builder; tileSize(int tileWidth,; int tileHeight). Define the requested tile width and height. OMEPyramidWriter.Builder; timePoint(int t). Specify a single timepoint to be written from a time series. OMEPyramidWriter.Builder; timePoints(int tStart,; int tEnd). Specify a range of timepoints to be written from a time series. OMEPyramidWriter.Builder; uncompressed(). Request no compression. OMEPyramidWriter.Builder; zSlice(int z). Specify the z-slice to export. OMEPyramidWriter.Builder; zSlices(int zStart,; int zEnd). Specify the start (inclusive) and end (exclusive) z-slices. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServer<BufferedImage> server); Constructor. Parameters:; server - the ImageServer from which pixels will be requested and written to the OME-TIFF. Method Details. channelsPlanar; public OMEPyramidWriter.Builder channelsPlanar(); Request that channels are written as separate image planes. Returns:; this builder. channelsInterleaved; public OMEPyramidWriter.Builder channelsInterleaved(); Request that channels are written interleaved within a single image plane. Returns:; this builder. channelsImages; public OMEPyramidWriter.Builder channelsImages(); Request that channels are written as separate images. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(); Request that the image is written in BigTIFF format. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(boolean doBigTiff); Specify whether the image should be written in BigTIFF format. Paramet",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html
Integrability,interface,interfaces,". OMEPyramidWriter.ChannelExportType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.ChannelExportType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.ChannelExportType>; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.ChannelExportType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.ChannelExportType; extends Enum<OMEPyramidWriter.ChannelExportType>; Enum representing different ways in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html
Modifiability,extend,extends,". OMEPyramidWriter.ChannelExportType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.ChannelExportType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.ChannelExportType>; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.ChannelExportType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.ChannelExportType; extends Enum<OMEPyramidWriter.ChannelExportType>; Enum representing different ways in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html
Security,hash,hashCode,"s in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OMEPyramidWriter.ChannelExportType DEFAULT; Leave it up to the writer to choose the appropriate method. INTERLEAVED; public static final OMEPyramidWriter.ChannelExportType INTERLEAVED; Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR; public static final OMEPyramidWriter.ChannelExportType PLANAR; Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). IMAGES; public static final OMEPyramidWriter.ChannelExportType IMAGES; Channels are stored as separate images (this is not yet supported!). Method Details. values; public static OMEPyramidWriter.ChannelExportType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html
Integrability,interface,interfaces,". OMEPyramidWriter.CompressionType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.CompressionType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.CompressionType>; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.CompressionType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.CompressionType; extends Enum<OMEPyramidWriter.CompressionType>; Preferred compression type when using Bio-Formats. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). J2K. Lossless JPEG-2000 compression. J2K_LOSSY. Lossy JPEG-2000 compression. JPEG. JPEG compression (only for single channel or RGB 8-bit images). LZW. LZW compression. UNCOMPRESSED. No compression (faster to write, no loss of information, but large file sizes). ZLIB. ZLIB compression. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; fromFriendlyString(String friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; suppo",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html
Modifiability,extend,extends,". OMEPyramidWriter.CompressionType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.CompressionType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.CompressionType>; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.CompressionType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.CompressionType; extends Enum<OMEPyramidWriter.CompressionType>; Preferred compression type when using Bio-Formats. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). J2K. Lossless JPEG-2000 compression. J2K_LOSSY. Lossy JPEG-2000 compression. JPEG. JPEG compression (only for single channel or RGB 8-bit images). LZW. LZW compression. UNCOMPRESSED. No compression (faster to write, no loss of information, but large file sizes). ZLIB. ZLIB compression. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; fromFriendlyString(String friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; suppo",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html
Security,hash,hashCode,"g friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; supportsImage(PixelType pixelType,; int nChannels,; boolean isRGB). Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. String; toFriendlyString(). Get a friendlier string representation. static OMEPyramidWriter.CompressionType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.CompressionType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UNCOMPRESSED; public static final OMEPyramidWriter.CompressionType UNCOMPRESSED; No compression (faster to write, no loss of information, but large file sizes). DEFAULT; public static final OMEPyramidWriter.CompressionType DEFAULT; Default (QuPath will select compression option based on image size and type, may be lossless or lossy). JPEG; public static final OMEPyramidWriter.CompressionType JPEG; JPEG compression (only for single channel or RGB 8-bit images). J2K; public static final OMEPyramidWriter.CompressionType J2K; Lossless JPEG-2000 compression. J2K_LOSSY; public static final OMEPyramidWriter.CompressionType J2K_LOSSY; Lossy JPEG-2000 compression. LZW; public static final OMEPyramidWriter.CompressionType LZW; LZW compression. ZLIB; public static final OMEPyramidWriter.CompressionType ZLIB; ZLIB compres",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html
Availability,down,downsample,"; Static helper method to write an image using Bio-Formats with the specified compression.; This is primarily intended for saving whole slide images as pyramidal OME-TIFF, but other formats are supported. Parameters:; server - ; path - ; compression - ; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region); throws FormatException,; IOException; Static helper method to write an image region using Bio-Formats with the specified compression.; If region is null, the entire image will be written. If region is not null, it defines the bounding box of the exported ; pixels in addition to the z-slice and timepoint. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints.; This is intended primarily to write (possibly pyramidal) OME-TIFF images; other formats may support fewer image types and dimensions. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; allZ - if true, export all z-slices otherwise export slice defined by ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html
Modifiability,extend,extends,". OMEPyramidWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter. public class OMEPyramidWriter; extends Object; Write OME-TIFF files based on QuPath ImageServers.; ; The files may optionally be pyramidal TIFFs. Some key metadata is set (e.g. channel names/colors, pixel size), ; and an effort is made to support multidimensional images - but this has not been extensively checked. ; ; Currently the magnification is not written, nor is the full OME XML metadata, and images written using this class ; should not be assumed to contain all the necessary information, correctly or at all (i.e. always keep your original data files!).; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead; ; modified by @phaub , 04'2021 (JPEG support for nChannels > 1, sanity check). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. static enum ; OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. static enum ; OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. static class ; OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter; createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series). Create a writer capable of writing an image with ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html
Safety,sanity check,sanity check,"; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter. public class OMEPyramidWriter; extends Object; Write OME-TIFF files based on QuPath ImageServers.; ; The files may optionally be pyramidal TIFFs. Some key metadata is set (e.g. channel names/colors, pixel size), ; and an effort is made to support multidimensional images - but this has not been extensively checked. ; ; Currently the magnification is not written, nor is the full OME XML metadata, and images written using this class ; should not be assumed to contain all the necessary information, correctly or at all (i.e. always keep your original data files!).; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead; ; modified by @phaub , 04'2021 (JPEG support for nChannels > 1, sanity check). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. static enum ; OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. static enum ; OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. static class ; OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter; createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series). Create a writer capable of writing an image with a collection of series. static OMEPyramidWriter; createWriter(OMEPyramidWriter.OMEPyramidSeries... series). Create a writer cap",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html
Security,hash,hashCode,"tatic void; writeImage(ImageServer<BufferedImage> server,; String path). Static helper method to write an image using Bio-Formats. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression). Static helper method to write an image using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region). Static helper method to write an image region using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT). Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writeImage; public void writeImage(String path); throws FormatException,; IOException; Write an image consisting of one or more series to the specified path. Parameters:; path - ; Throws:; FormatException; IOException; See Also:. createWriter(Collection); createWriter(OMEPyramidSeries...). createWriter; public static OMEPyramidWriter createWriter(OMEPyramidWriter.OMEPyramidSeries... series); Create a writer capable of writing an image with one or more series. Parameters:; series - ; Returns:. createWriter; public static OMEPyramidWriter createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series); Create a writer capable of writing an image with a collection of series. Parameters:; series - ; Returns:. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats.; This is primarily intended ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html
Modifiability,extend,extends,". OMEPyramidWriter.OMEPyramidSeries (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.OMEPyramidSeries. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.OMEPyramidSeries; extends Object; Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; writePyramid(String path). Deprecated.; use writeSeries(String) instead. void; writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series). Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. void; writeSeries(String path). Write an image to the given file. void; writeSeries(IFormatWriter writer,; IMetadata meta,; int series). Append an image as a specific series. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writePyramid; @Deprecated; public void writePyramid(String path); throws FormatException,; IOException; Deprecated.; use writeSeries(String) instead. Write an OME-TIFF pyramidal image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writeSeries; public void writeSeries(String path); throws FormatException,; IOException; Write an image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writePyramid; @Deprecated; public void writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series); throws FormatException,; IOException; Deprecate",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html
Security,hash,hashCode,"r | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.OMEPyramidSeries. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.OMEPyramidSeries; extends Object; Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; writePyramid(String path). Deprecated.; use writeSeries(String) instead. void; writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series). Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. void; writeSeries(String path). Write an image to the given file. void; writeSeries(IFormatWriter writer,; IMetadata meta,; int series). Append an image as a specific series. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writePyramid; @Deprecated; public void writePyramid(String path); throws FormatException,; IOException; Deprecated.; use writeSeries(String) instead. Write an OME-TIFF pyramidal image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writeSeries; public void writeSeries(String path); throws FormatException,; IOException; Write an image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writePyramid; @Deprecated; public void writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series); throws FormatException,; IOException; Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. Append an image as a specific series to a pyramidal OME TIFF. Parameters:; writer - the current writer; it should already be initialized, with metadata and ID set; meta - the metadata, which should already have been initialized",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html
Integrability,interface,interface,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int getMinSizeForTiling(); Query the default minimum image size when writing OME-TIFF images.; This is used as a hint to disable tiling for images with widths and heights smaller than this value. Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html
Modifiability,extend,extends,". OMEPyramidWriterCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html
Security,hash,hashCode,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int getMinSizeForTiling(); Query the default minimum image size when writing OME-TIFF images.; This is used as a hint to disable tiling for images with widths and heights smaller than this value. Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html
Integrability,interface,interface,"upportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html
Modifiability,extend,extends,". OMETiffWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMETiffWriter. java.lang.Object; qupath.lib.images.writers.ome.OMETiffWriter. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class OMETiffWriter; extends Object; implements ImageWriter<BufferedImage>; ImageWriter for writing OME-TIFF images. For greater control, see OMEPyramidWriter. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMETiffWriter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> ser",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html
Security,hash,hashCode,"RGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supports",MatchSource.WIKI,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html
Availability,avail,available,"fault PathClass that represents no classification.; Usually no classification is represented by null, so this is not normally ; needed; however, sometimes it is required in contexts where a null is not permitted ; (e.g. some collections). Method Details. getParentClass; public PathClass getParentClass(); Get the parent classification, or null if this classification has no parent. Returns:. isDerivedClass; public boolean isDerivedClass(); Returns true if #getParentClass() != null. Returns:. isDerivedFrom; public boolean isDerivedFrom(PathClass parentClass); Returns true if this class, or any ancestor class, is equal to the specified parent class. Parameters:; parentClass - ; Returns:. isAncestorOf; public boolean isAncestorOf(PathClass childClass); Returns true if this class is equal to the specified child class, ; or an ancestor of that class. Parameters:; childClass - ; Returns:. getBaseClass; public PathClass getBaseClass(); Get the 'base' class, i.e. trace back through getParentClass() until no parent is available.; ; For a PathClass with no parent, this just returns itself. Returns:. setColor; public void setColor(Integer colorRGB); Set the color that should be used to display objects with this classification. Parameters:; colorRGB - color, as a packed (A)RGB value. setColor; public void setColor(int red,; int green,; int blue); Set the color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getColor; public Integer getColor(); Get the color that should be used to display objects with this classification. Returns:; packed (A)RGB value representing the classification color. getName; public String getName(); Get the name of this classification. ; Note that this does not incorporate information from any parent classifications; to access this, ; use toString() instead. Returns:. toString; public String toString(). Overrides:; toString in class Object. toString; public String toString(String delimiter); Create a string representation, using",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Deployability,release,release,"ring, Integer). getInstance; public static PathClass getInstance(String name). getInstance; public static PathClass getInstance(String name,; Integer color); Get a base PathClass instance, without any parent PathClass.; ; This is equivalent to calling getInstance(PathClass, String, Integer) with ; the first argument as null. Parameters:; name - ; color - ; Returns:; See Also:. getInstance(PathClass, String, Integer). getInstance; public static PathClass getInstance(PathClass parent,; String name,; Integer color); Get a derived PathClass instance with the specified parent.; ; This will be derived from the parent PathClass (if provided) and have the specified ; name, stripped to remove any leading or training whitespace.; ; Note that the name should generally be an alphanumeric string, optionally including ; punctuation symbols but not including DELIMITER.; ; The delimiter is currently a colon "":"" but it is advised not to rely upon ; this and to avoid punctuation where possible, because the delimiter may possibly change ; in a future release - primarily because the choice of colon can be problematic in some ; cases, e.g. when using ontologies. Parameters:; parent - parent class (optional, may be null); name - name of the PathClass; color - color to use if a new instance is created (may be null to use the default); Returns:; a PathClass instance; the same instance will be returned given the same parent and name; See Also:. fromString(String, Integer); fromCollection(Collection, Integer). getOnePlus; public static PathClass getOnePlus(PathClass parentClass); Get a standalone or derived 1+ classification, indicating weak positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getTwoPlus; public static PathClass getTwoPlus(PathClass parentClass); Get a standalone or derived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; public static PathClass getThree",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Energy Efficiency,green,green,"alone or derived Positive classification. static PathClass; getSingleton(PathClass pathClass). Get the singleton PathClass that is equivalent to the PathClass provided. static PathClass; getThreePlus(PathClass parentClass). Get a standalone or derived 3+ classification, indicating strong positivity. static PathClass; getTwoPlus(PathClass parentClass). Get a standalone or derived 2+ classification, indicating moderate positivity. boolean; isAncestorOf(PathClass childClass). Returns true if this class is equal to the specified child class, ; or an ancestor of that class. boolean; isDerivedClass(). Returns true if #getParentClass() != null. boolean; isDerivedFrom(PathClass parentClass). Returns true if this class, or any ancestor class, is equal to the specified parent class. boolean; isValid(). A PathClass is valid if its name is not null. protected Object; readResolve(). Called during deserialization to ensure that only a single instance of each PathClass exists. void; setColor(int red,; int green,; int blue). Set the color as 8-bit RGB values. void; setColor(Integer colorRGB). Set the color that should be used to display objects with this classification. Set<String>; toSet(). Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names. String; toString();  ; String; toString(String delimiter). Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. NAME_POSITIVE; public static final String NAME_POSITIVE; Default name for a class representing ""Positive"" staining intensity. See Also:. Constant Field Values. NAME_NEGATIVE; public static final String NAME_NEGATIVE; Default name for a class representing ""Negative"" staining intensity. See Also:. Constant Field Values. NAME_ONE_PLUS; public static final String NAM",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Integrability,interface,interface," the output will return the same PathClass object.; ; var pathClass = ...;; var pathClass2 = PathClass.getInstance(pathClass.toSet());; assert pathClass == pathClass2; // This may or may not be true!; . However the PathClass objects should be the same if the name components are all valid and ; there are no duplicates (which should normally be the case). Returns:. compareTo; public int compareTo(PathClass o); This is now equivalent to this.toString().compareTo(o.toString()).; ; Note that in previous versions (< 0.1.2), the comparison was made based on the name only.; ; This could result in unexpected behavior whenever comparing with equality and using ; derived PathClass objects, because only the (final) name part was being compared ; and this could potentially result in classifications (wrongly) being considered equal ; (e.g. ""Tumor: Positive"" and ""Stroma: Positive"").; ; This was most significant when working with Groovy, where == is replaced by compareTo. Specified by:; compareTo in interface Comparable<PathClass>. getNullClass; public static PathClass getNullClass(); Get the value of NULL_CLASS, used to represent no classification.; In most cases, null should be used instead; this exists only as a ; representation in cases where null is not permitted (e.g. in some collection ; implementations). Returns:. fromString; public static PathClass fromString(String string); Get a PathClass instance from a string representation, without specifying a default color.; ; This calls fromString(String, Integer) with the second argument as null. Parameters:; string - ; Returns:. fromString; public static PathClass fromString(String string,; Integer color); Get a PathClass instance from a string representation, optionally providing a default color ; if a new instance needs to be created.; ; This ultimately calls getInstance(PathClass, String, Integer) but differs in that it ; accepts a string representation that may include the DELIMITER.; If so, this is used to split the string in",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Modifiability,extend,extends,". PathClass (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. stati",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Safety,avoid,avoid,"ring, Integer). getInstance; public static PathClass getInstance(String name). getInstance; public static PathClass getInstance(String name,; Integer color); Get a base PathClass instance, without any parent PathClass.; ; This is equivalent to calling getInstance(PathClass, String, Integer) with ; the first argument as null. Parameters:; name - ; color - ; Returns:; See Also:. getInstance(PathClass, String, Integer). getInstance; public static PathClass getInstance(PathClass parent,; String name,; Integer color); Get a derived PathClass instance with the specified parent.; ; This will be derived from the parent PathClass (if provided) and have the specified ; name, stripped to remove any leading or training whitespace.; ; Note that the name should generally be an alphanumeric string, optionally including ; punctuation symbols but not including DELIMITER.; ; The delimiter is currently a colon "":"" but it is advised not to rely upon ; this and to avoid punctuation where possible, because the delimiter may possibly change ; in a future release - primarily because the choice of colon can be problematic in some ; cases, e.g. when using ontologies. Parameters:; parent - parent class (optional, may be null); name - name of the PathClass; color - color to use if a new instance is created (may be null to use the default); Returns:; a PathClass instance; the same instance will be returned given the same parent and name; See Also:. fromString(String, Integer); fromCollection(Collection, Integer). getOnePlus; public static PathClass getOnePlus(PathClass parentClass); Get a standalone or derived 1+ classification, indicating weak positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getTwoPlus; public static PathClass getTwoPlus(PathClass parentClass); Get a standalone or derived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; public static PathClass getThree",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Security,access,access,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_TH",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Testability,assert,assert,"een ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigned either a valid PathClass or null to indicate ; that they have no classification. Returns:. toSet; public Set<String> toSet(); Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names.; ; Important! If any path class component names are duplicates, these will ; (necessarily) be removed from the set. Therefore it is not guaranteed that ; calling fromCollection(Collection) on the output will return the same PathClass object.; ; var pathClass = ...;; var pathClass2 = PathClass.getInstance(pathClass.toSet());; assert pathClass == pathClass2; // This may or may not be true!; . However the PathClass objects should be the same if the name components are all valid and ; there are no duplicates (which should normally be the case). Returns:. compareTo; public int compareTo(PathClass o); This is now equivalent to this.toString().compareTo(o.toString()).; ; Note that in previous versions (< 0.1.2), the comparison was made based on the name only.; ; This could result in unexpected behavior whenever comparing with equality and using ; derived PathClass objects, because only the (final) name part was being compared ; and this could potentially result in classifications (wrongly) being considered equal ; (e.g. ""Tumor: Positive"" and ""Stroma: Positive"").; ; This was most significant when working with Groovy, where == is replaced by compareTo. Specified by:; compareTo in interface Comparable<PathClass>. getNullClass; public static PathClass getNullClass(); Get the value of NULL_CLASS, used to represent no classification.; In most cas",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Usability,simpl,simplify,"qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_THREE_PLUS. Default name for a class representing ""3+"" staining intensity (i.e. static final String; NAME_TWO_PLUS. Default name for a class representing ""2+"" staining intensity (i.e. static final PathClass",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html
Modifiability,extend,extends,". PathClass.StandardPathClasses (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClass.StandardPathClasses. java.lang.Object; qupath.lib.objects.classes.PathClass.StandardPathClasses. Enclosing class:; PathClass. public static class PathClass.StandardPathClasses; extends Object; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; IGNORE. Ignore classification, indicating what should not be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what sho",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html
Safety,detect,detected,"t be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClass POSITIVE; General class to represent something 'positive'. NEGATIVE; public static final PathClass NEGATIVE; General class to represent something 'negative'. Constructor Details. StandardPathClasses; public StandardPathClasses(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html
Security,hash,hashCode,"tions. Exists mostly to ensure consisting naming (including capitalization). Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; IGNORE. Ignore classification, indicating what should not be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClass POSITIVE; Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html
Availability,avail,available,"e v0.4.0, use PathClass.getOnePlus(PathClass). Get a standalone or derived 1+ classification, indicating weak positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getTwoPlus; @Deprecated; public static PathClass getTwoPlus(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). Get a standalone or derived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; @Deprecated; public static PathClass getThreePlus(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). Get a standalone or derived 3+ classification, indicating strong positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getNegative; @Deprecated; public static PathClass getNegative(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getNegative(PathClass). Get a standalone or derived Negative classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPositive; @Deprecated; public static PathClass getPositive(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). Get a standalone or derived Positive classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(PathClassFactory.StandardPathClasses pathClass); Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. Get a standard PathClass. Parameters:; pathClass - ; Returns:. getPathClassUnclassified; @Deprecated; public static PathClass getPathClassUnclassified(); Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. Return a special 'null' class to represent no classification.; ; This is useful for displaying available classes; it should not be set as the class for any object, ; rather an object that is unclassified should have a classification of null. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html
Modifiability,extend,extends,". PathClassFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClassFactory. java.lang.Object; qupath.lib.objects.classes.PathClassFactory. @Deprecated; public final class PathClassFactory; extends Object; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. Factory for creating PathClasses.; ; This must be used in favor of creating PathClass objects directly to ensure that ; only one PathClass with a specified name (and, optionally, ancestry) can exist at any time. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathClassFactory.StandardPathClasses. Deprecated.; Enum representing standard classifications. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static PathClass; getDerivedPathClass(PathClass parentClass,; String name,; Integer rgb). Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). static PathClass; getNegative(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getNegative(PathClass). static PathClass; getOnePlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). static PathClass; getPathClass(String name). Deprecated.; Get a PathClass, without specifying any color. static PathClass; getPathClass(String name,; Integer rgb). Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). static PathClass; getPathClass(String baseName,; String... names). Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). static PathClass; getPathClass(List<S",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html
Security,hash,hashCode," PathClass.fromArray(String...). static PathClass; getPathClass(List<String> names). Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). static PathClass; getPathClass(PathClassFactory.StandardPathClasses pathClass). Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. static PathClass; getPathClassUnclassified(). Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. static PathClass; getPositive(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). static PathClass; getSingletonPathClass(PathClass pathClass). Deprecated.; since v0.4.0 in favor of PathClass.getSingleton(PathClass). static PathClass; getThreePlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). static PathClass; getTwoPlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getPathClass; public static PathClass getPathClass(String name); Deprecated.; Get a PathClass, without specifying any color. Parameters:; name - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String name,; Integer rgb); Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). Get the PathClass object associated with a specific name. Note that this name must not contain newline; ; doing so will result in an IllegalArgumentException being thrown. If the name contains colon characters, ; it will be treated as a derived class. Parameters:; name - ; rgb - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String baseName,; String... names); Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). Get a derived PathClass object representing all the provided names, ; using default colors.; ; Note th",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html
Integrability,interface,interfaces,"ory.StandardPathClasses (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.classes; Enum Class PathClassFactory.StandardPathClasses. java.lang.Object; java.lang.Enum<PathClassFactory.StandardPathClasses>; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. All Implemented Interfaces:; Serializable, Comparable<PathClassFactory.StandardPathClasses>, Constable. Enclosing class:; PathClassFactory. public static enum PathClassFactory.StandardPathClasses; extends Enum<PathClassFactory.StandardPathClasses>; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clon",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html
Modifiability,extend,extends,". PathClassFactory.StandardPathClasses (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.classes; Enum Class PathClassFactory.StandardPathClasses. java.lang.Object; java.lang.Enum<PathClassFactory.StandardPathClasses>; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. All Implemented Interfaces:; Serializable, Comparable<PathClassFactory.StandardPathClasses>, Constable. Enclosing class:; PathClassFactory. public static enum PathClassFactory.StandardPathClasses; extends Enum<PathClassFactory.StandardPathClasses>; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html
Safety,detect,detected,"Factory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFactory.StandardPathClasses REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClassFactory.StandardPathClasses POSITIVE; General class to represent something 'positive'. NEGATIVE; public static final PathClassFactory.StandardPathClasses NEGATIVE; General class to represent something 'negative'. Method Details. values; public static PathClassFactory.StandardPathClasses[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathClassFactory.StandardPathClasses valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specif",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html
Security,hash,hashCode,"E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TUMOR; public static final PathClassFactory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFact",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html
Modifiability,extend,extends,". PathClassTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClassTools. java.lang.Object; qupath.lib.objects.classes.PathClassTools. public final class PathClassTools; extends Object; Static methods for use with PathClass objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsName(PathClass pathClass,; String name). Query whether a PathClass or any of its ancestor classes contains a specified name. static PathClass; getNonIntensityAncestorClass(PathClass pathClass). Get the first ancestor class that is not an intensity class (i.e. static boolean; isGradedIntensityClass(PathClass pathClass). Return true if the PathClass represents a built-in intensity class. static boolean; isIgnoredClass(PathClass pathClass). Return true if the PathClass should be ignored from some operations, or is null. static boolean; isNegativeClass(PathClass pathClass). Return true if the PathClass has the name ""Negative"". static boolean; isNullClass(PathClass pathClass). Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. static boolean; isOnePlus(PathClass pathClass). Returns true if the name of the class is ""1+"", indicating a weakly-positive staining. static boolean; isPositiveClass(PathClass pathClass). Return true if the PathClass has the name ""Positive"". static boolean; isPositiveOrGradedIntensityClass(PathClass pathClass). Return true if the name of the class is ""Positive"", ""1+"", ""2+"" or ""3+"", indicating positive staining. static boolean; isThreePlus(PathClass pathClass). Return true if the name of the class",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html
Safety,avoid,avoid,"athClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (or its name is null) to avoid ambiguity and potential exceptions in the future. Parameters:; pathClass - ; Returns:; See Also:. isNullClass(PathClass). isNullClass; public static boolean isNullClass(PathClass pathClass); Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. Parameters:; pathClass - ; Returns:. isValidClass; public static boolean isValidClass(PathClass pathClass); Returns true if the PathClass represents a valid (non-null) classification. Parameters:; pathClass - input classification to check; Returns:; true if the input re",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html
Security,hash,hashCode,"onalClass). Merge two classifications together. static PathClass; removeNames(PathClass pathClass,; String... namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; removeNames(PathClass pathClass,; Collection<String> namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; sortNames(PathClass pathClass). Create a PathClass with name elements sorted alphabetically. static PathClass; sortNames(PathClass pathClass,; Comparator<String> comparator). Create a PathClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html
Testability,test,test,"s; comparator - ; Returns:; a PathClass representing the same names sorted; See Also:. sortNames(PathClass). removeNames; public static PathClass removeNames(PathClass pathClass,; Collection<String> namesToRemove); Create a PathClass with specific name elements removed (if present) from an existing classification. Parameters:; pathClass - the input PathClass; namesToRemove - ; Returns:; a PathClass representing the classification with the required names removed; See Also:. removeNames(PathClass, String...). removeNames; public static PathClass removeNames(PathClass pathClass,; String... namesToRemove); Create a PathClass with specific name elements removed (if present) from an existing classification. Parameters:; pathClass - the input PathClass; namesToRemove - ; Returns:; a PathClass representing the classification with the required names removed; See Also:. removeNames(PathClass, Collection). mergeClasses; public static PathClass mergeClasses(PathClass baseClass,; PathClass additionalClass); Merge two classifications together.; Specifically, the name components of the additional class that are not already contained ; within the base class will be appended, deriving a new class as required.; ; Note that if the additional class contains duplicate names these will not automatically be stripped ; unless they are also present within the base class; use uniqueNames(PathClass) if this is required. Parameters:; baseClass - base class, all name components will be retained; additionalClass - ; Returns:; the merged classification, or null if both input classes are null. containsName; public static boolean containsName(PathClass pathClass,; String name); Query whether a PathClass or any of its ancestor classes contains a specified name.; ; For example a class ""CD3: CD8"" would return true for the name ""CD3"" or ""CD8"", but not anything else. Parameters:; pathClass - the classification to test; name - the name to search for; Returns:; true if the name is found, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html
Deployability,update,update,"ass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this and only update the base class. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability); Helper class to store an object prior to reclassifying it, including a classification probability. Parameters:; pathObject - an object whose classification may be set by a subsequent call to apply(); pathClass - the classification that may be applied to pathObject; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this and only update the base class.; probability - optional classification probability value to store in the object (may be Double.NaN if this should be ignored). Method Details. apply; public boolean apply(); Apply the stored classification. Returns:; true if the classification for the object changed, false otherwise. getPathObject; public",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html
Modifiability,extend,extends,". Reclassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class Reclassifier. java.lang.Object; qupath.lib.objects.classes.Reclassifier. public class Reclassifier; extends Object; Helper class when classifying PathObjects.; ; When applying a classifier to make objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this a",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html
Safety,abort,aborted,". Reclassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class Reclassifier. java.lang.Object; qupath.lib.objects.classes.Reclassifier. public class Reclassifier; extends Object; Helper class when classifying PathObjects.; ; When applying a classifier to make objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this a",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html
Security,hash,hashCode," objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this and only update the base class. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability); Helper class to store an object prior to reclassifying it, including a classification probability. Parameters:; pathObject - an object whose classification may be set by a subsequent call to apply(); pathClass - the classification that may be applied to pathObject; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optional",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html
Integrability,interface,interface,"f cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMAC",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html
Modifiability,extend,extends,". DefaultTMAGrid (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Class DefaultTMAGrid. java.lang.Object; qupath.lib.objects.hierarchy.DefaultTMAGrid. All Implemented Interfaces:; Serializable, TMAGrid. public class DefaultTMAGrid; extends Object; implements TMAGrid; Default implementation of a TMAGrid. Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; create(List<TMACoreObject> cores,; int gridWidth). Create a new TMAGrid based on a list of cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html
Security,hash,hashCode,"lizable, TMAGrid. public class DefaultTMAGrid; extends Object; implements TMAGrid; Default implementation of a TMAGrid. Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; create(List<TMACoreObject> cores,; int gridWidth). Create a new TMAGrid based on a list of cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html
Deployability,update,update,"ultiple objects to the hierarchy. boolean; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0; use addObject(PathObject) instead (for naming consistency). boolean; addPathObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate). Deprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). void; addPathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject>",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Modifiability,extend,extends,". PathObjectHierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Class PathObjectHierarchy. java.lang.Object; qupath.lib.objects.hierarchy.PathObjectHierarchy. All Implemented Interfaces:; Serializable. public final class PathObjectHierarchy; extends Object; implements Serializable; A basic hierarchy in which to store PathObjects.; ; This essentially contains a single PathRootObject from which all other objects can be reached using the child object lists.; However, by adding/removing objects via this hierarchy (rather than through the child lists directly), it is possible; to maintain a more consistent structure (e.g. by automatically inserting objects as children of the objects whose ROI completely; contains the object to be added), along with a spatial cache so that objects can be extracted if their ROIs overlap with a specified region.; ; Note: Be cautious when deserializing - it may not result in a hierarchy in a valid state.; As a workaround, you can construct a new PathObjectHierarchy and call setHierarchy(deserializedHierarchy) to; ensure that you have a properly-constructed hierarchy with the same data within it. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<PathObject>; HIERARCHY_COMPARATOR. Comparator to use when looking for a parent annotation in the hierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchy(). Default constructor, creates an empty hierarchy. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addListener(PathObjectHierarchyListener listener). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Performance,cache,cache,"ript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Class PathObjectHierarchy. java.lang.Object; qupath.lib.objects.hierarchy.PathObjectHierarchy. All Implemented Interfaces:; Serializable. public final class PathObjectHierarchy; extends Object; implements Serializable; A basic hierarchy in which to store PathObjects.; ; This essentially contains a single PathRootObject from which all other objects can be reached using the child object lists.; However, by adding/removing objects via this hierarchy (rather than through the child lists directly), it is possible; to maintain a more consistent structure (e.g. by automatically inserting objects as children of the objects whose ROI completely; contains the object to be added), along with a spatial cache so that objects can be extracted if their ROIs overlap with a specified region.; ; Note: Be cautious when deserializing - it may not result in a hierarchy in a valid state.; As a workaround, you can construct a new PathObjectHierarchy and call setHierarchy(deserializedHierarchy) to; ensure that you have a properly-constructed hierarchy with the same data within it. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<PathObject>; HIERARCHY_COMPARATOR. Comparator to use when looking for a parent annotation in the hierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchy(). Default constructor, creates an empty hierarchy. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addListener(PathObjectHierarchyListener listener). Add a hierarchy change listener. boolean; ad",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Safety,detect,detection,"ierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; g",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Security,hash,hashCode,"e 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v0.4.0; replaced addPathObjectListener(PathObjectHierarchyListener).",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Testability,log,logic,"tHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v0.4.0; replaced addPathObjectListener(PathObjectHierarchyListener). addPathObjectListener; @Deprecated; public void addPathObjectListener(PathObjectHierarchyListener listener); Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). Legacy method to add a hierarchy ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Usability,clear,clearAll,"te). Add path object as descendant of the requested parent. boolean; addObjects(Collection<? extends PathObject> pathObjects). Add multiple objects to the hierarchy. boolean; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0; use addObject(PathObject) instead (for naming consistency). boolean; addPathObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate). Deprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). void; addPathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fir",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html
Integrability,interface,interface,". TMAGrid (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Interface TMAGrid. All Superinterfaces:; Serializable. All Known Implementing Classes:; DefaultTMAGrid. public interface TMAGrid; extends Serializable; Interface defining a (rectangular) TMA grid. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. Method Details. nCores; int nCores(); Total number of cores in the TMA grid. Returns:. getGridWidth; int getGridWidth(); Number of cores along the horizontal axis of the grid. Returns:. getGridHeight; int getGridHeight(); Number of cores along the vertical axis of the grid. Returns:. getTMACore; TMACoreObject getTMACore(String coreName); Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the same name. Parameters:; coreName - ; Returns:. getTMACore; TMACoreObject getTMACore(int row,; int col); Get the TMACoreObject for a specified grid location. Parameters:; row - ; col - ; Returns:. getTMACoreList; List<TMACoreObject> getTMACoreList(); Get an unmodifiable list of all TMA core objects. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html
Modifiability,extend,extends,". TMAGrid (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Interface TMAGrid. All Superinterfaces:; Serializable. All Known Implementing Classes:; DefaultTMAGrid. public interface TMAGrid; extends Serializable; Interface defining a (rectangular) TMA grid. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. Method Details. nCores; int nCores(); Total number of cores in the TMA grid. Returns:. getGridWidth; int getGridWidth(); Number of cores along the horizontal axis of the grid. Returns:. getGridHeight; int getGridHeight(); Number of cores along the vertical axis of the grid. Returns:. getTMACore; TMACoreObject getTMACore(String coreName); Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the same name. Parameters:; coreName - ; Returns:. getTMACore; TMACoreObject getTMACore(int row,; int col); Get the TMACoreObject for a specified grid location. Parameters:; row - ; col - ; Returns:. getTMACoreList; List<TMACoreObject> getTMACoreList(); Get an unmodifiable list of all TMA core objects. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html
Availability,toler,tolerance," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.utils; Class ObjectMerger. java.lang.Object; qupath.lib.objects.utils.ObjectMerger. public class ObjectMerger; extends Object; Helper class for merging objects using different criteria.; ; This is designed to be used for post-processing a segmentation, to help resolve tile boundaries. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html
Modifiability,extend,extends,". ObjectMerger (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.utils; Class ObjectMerger. java.lang.Object; qupath.lib.objects.utils.ObjectMerger. public class ObjectMerger; extends Object; Helper class for merging objects using different criteria.; ; This is designed to be used for post-processing a segmentation, to help resolve tile boundaries. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned u",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html
Security,hash,hashCode,"thod Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and defaul",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html
Modifiability,extend,extends,. Tiler.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.utils; Class Tiler.Builder. java.lang.Object; qupath.lib.objects.utils.Tiler.Builder. Enclosing class:; Tiler. public static class Tiler.Builder; extends Object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Tiler.Builder; alignBottomCenter(). Start tiles at the bottom center of the ROI bounding box. Tiler.Builder; alignBottomLeft(). Match tiles to the bottom left of the ROI bounding box. Tiler.Builder; alignBottomRight(). Match tiles to the bottom right of the ROI bounding box. Tiler.Builder; alignCenter(). Center tiles within the ROI bounding box. Tiler.Builder; alignCenterLeft(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignCenterRight(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignment(Tiler.TileAlignment alignment). Set the tile alignment. Tiler.Builder; alignTopCenter(). Start tiles at the top center of the ROI bounding box. Tiler.Builder; alignTopLeft(). Start tiles at the top left of the ROI bounding box. Tiler.Builder; alignTopRight(). Match tiles to the top right of the ROI bounding box. Tiler; build(). Build a tiler object with the current settings. Tiler.Builder; cropTiles(boolean cropToParent). Set whether the tiler is set to crop the output to the input parent. Tiler.Builder; filterByCentroid(boolean filterByCentroid). Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Tiler.Builder; tileHeight(int tileHeight). Change the height of output tiles. Tiler.Builder; tileWidth(int tileWidth). Change the width of output tiles. Methods inherited ,MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html
Security,hash,hashCode,"alignCenterRight(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignment(Tiler.TileAlignment alignment). Set the tile alignment. Tiler.Builder; alignTopCenter(). Start tiles at the top center of the ROI bounding box. Tiler.Builder; alignTopLeft(). Start tiles at the top left of the ROI bounding box. Tiler.Builder; alignTopRight(). Match tiles to the top right of the ROI bounding box. Tiler; build(). Build a tiler object with the current settings. Tiler.Builder; cropTiles(boolean cropToParent). Set whether the tiler is set to crop the output to the input parent. Tiler.Builder; filterByCentroid(boolean filterByCentroid). Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Tiler.Builder; tileHeight(int tileHeight). Change the height of output tiles. Tiler.Builder; tileWidth(int tileWidth). Change the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. tileHeight; public Tiler.Builder tileHeight(int tileHeight); Change the height of output tiles. Parameters:; tileHeight - the new height in pixels; Returns:; this builder. tileWidth; public Tiler.Builder tileWidth(int tileWidth); Change the width of output tiles. Parameters:; tileWidth - the new width in pixels; Returns:; this builder. cropTiles; public Tiler.Builder cropTiles(boolean cropToParent); Set whether the tiler is set to crop the output to the input parent.; Using this option can result in smaller and non-rectangular tiles. Parameters:; cropToParent - the new setting; Returns:; this builder. alignment; public Tiler.Builder alignment(Tiler.TileAlignment alignment); Set the tile alignment. Parameters:; alignment - the new setting; Returns:; this builder. alignTopLeft; public Tiler.Builder alignTopLeft(); Start tiles at the top left of the ROI bounding box. Returns:; this builder. alignTopCenter; public Tiler.Buil",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html
Modifiability,extend,extends,". Tiler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.utils; Class Tiler. java.lang.Object; qupath.lib.objects.utils.Tiler. public class Tiler; extends Object; A class used to split ROI or Geometry objects into rectangular tiles.; This is useful for breaking up large images into manageable pieces.; ; The Tiler is immutable and threadsafe. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Tiler.Builder;  ; static enum ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.Builder; builder(int tileSize). Create a new builder to generate square tiles. static Tiler.Builder; builder(int tileWidth,; int tileHeight). Create a new builder to generate rectangular tiles. static Tiler.Builder; builder(Tiler tiler). Create a new builder initialized with the settings from an existing Tiler. List<PathObject>; createAnnotations(ROI parent). Create a list of PathAnnotationObject tiles from the input. List<Geometry>; createGeometries(Geometry parent). Create a list of Geometry tiles from the input. List<PathObject>; createObjects(ROI parent,; Function<ROI,PathObject> creator). Create a list of PathObject tiles from the input. List<ROI>; createROIs(ROI parent). Create a list of ROI tiles from the input. List<PathObject>; createTiles(ROI parent). Create a list of PathTileObject tiles from the input. Tiler.TileAlignment; getAlignment(). Get the tiling alignment. boolean; getCropToParent(). Check if the tiler is set to crop the output to the input parent. boolean; getFilterByCentroid(). Check if t",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html
Security,hash,hashCode,"st<PathObject>; createAnnotations(ROI parent). Create a list of PathAnnotationObject tiles from the input. List<Geometry>; createGeometries(Geometry parent). Create a list of Geometry tiles from the input. List<PathObject>; createObjects(ROI parent,; Function<ROI,PathObject> creator). Create a list of PathObject tiles from the input. List<ROI>; createROIs(ROI parent). Create a list of ROI tiles from the input. List<PathObject>; createTiles(ROI parent). Create a list of PathTileObject tiles from the input. Tiler.TileAlignment; getAlignment(). Get the tiling alignment. boolean; getCropToParent(). Check if the tiler is set to crop the output to the input parent. boolean; getFilterByCentroid(). Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. int; getTileHeight(). Get the height of output tiles. int; getTileWidth(). Get the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getTileWidth; public int getTileWidth(); Get the width of output tiles. Returns:; the width in pixels. getTileHeight; public int getTileHeight(); Get the height of output tiles. Returns:; the height in pixels. getCropToParent; public boolean getCropToParent(); Check if the tiler is set to crop the output to the input parent. Returns:; whether the tiler is set to crop output to the parent object. getAlignment; public Tiler.TileAlignment getAlignment(); Get the tiling alignment. Returns:; The current setting. getFilterByCentroid; public boolean getFilterByCentroid(); Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Returns:; The current setting. createGeometries; public List<Geometry> createGeometries(Geometry parent); Create a list of Geometry tiles from the input. These may; not all be rectangular based on the settings used. Parameters:; parent - the object that wi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html
Integrability,interface,interfaces,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.utils; Enum Class Tiler.TileAlignment. java.lang.Object; java.lang.Enum<Tiler.TileAlignment>; qupath.lib.objects.utils.Tiler.TileAlignment. All Implemented Interfaces:; Serializable, Comparable<Tiler.TileAlignment>, Constable. Enclosing class:; Tiler. public static enum Tiler.TileAlignment; extends Enum<Tiler.TileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tile",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html
Modifiability,extend,extends,". Tiler.TileAlignment (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.utils; Enum Class Tiler.TileAlignment. java.lang.Object; java.lang.Enum<Tiler.TileAlignment>; qupath.lib.objects.utils.Tiler.TileAlignment. All Implemented Interfaces:; Serializable, Comparable<Tiler.TileAlignment>, Constable. Enclosing class:; Tiler. public static enum Tiler.TileAlignment; extends Enum<Tiler.TileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Ti",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html
Security,hash,hashCode,"t of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static final Tiler.TileAlignment TOP_RIGHT. CENTER_LEFT; public static final Tiler.TileAlignment CENTER_LEFT. CENTER; public static final Tiler.TileAlignment CENTER. CENTER_RIGHT; public static final Tiler.TileAlignment CENTER_RIGHT. BOTTOM_LEFT; public static final Tiler.TileAlignment BOTTOM_LEFT. BOTTOM_CENTER; public static final Tiler.TileAlignment BOTTOM_CENTER. BOTTOM_RIGHT; public static final Tiler.TileAlignment BOTTOM_RIGHT. Method Details. values; public static Tiler.TileAlignment[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html
Deployability,update,updated,". qupath.lib.objects.hierarchy.events (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects.hierarchy.events. package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. Related Packages. Package; Description; qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathObjectHierarchyEvent. An event class for passing on information about modifications to a PathObjectHierarchy. PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. PathObjectHierarchyListener. A listener for modifications to a PathObjectHierarchy (i.e. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/package-summary.html
Deployability,update,updated,". PathObjectHierarchyEvent.HierarchyEventType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Enum Class PathObjectHierarchyEvent.HierarchyEventType. java.lang.Object; java.lang.Enum<PathObjectHierarchyEvent.HierarchyEventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum cl",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html
Integrability,interface,interfaces,".5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Enum Class PathObjectHierarchyEvent.HierarchyEventType. java.lang.Object; java.lang.Enum<PathObjectHierarchyEvent.HierarchyEventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html
Modifiability,extend,extends,". PathObjectHierarchyEvent.HierarchyEventType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Enum Class PathObjectHierarchyEvent.HierarchyEventType. java.lang.Object; java.lang.Enum<PathObjectHierarchyEvent.HierarchyEventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum cl",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html
Security,hash,hashCode,"t Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measurements. CHANGE_OTHER; public static final PathObjectHierarchyEvent.HierarchyEventType C",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html
Usability,simpl,simply,"ventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html
Deployability,update,updated,". PathObjectHierarchyEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectHierarchyEvent. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. public class PathObjectHierarchyEvent; extends Object; An event class for passing on information about modifications to a PathObjectHierarchy. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent; createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded). Create a hierarchy event indicated objects were added. static PathObjectHierarchyEvent; createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved). Create a hierarchy event indicating objects were removed. static PathObjectHierarchyEvent; createObjectsChangedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObjectHierarchyEvent.HierarchyEventType type,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. static PathObjectHierarchyEvent; createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject). Create a hierarchy event indicating that the hierarchy structure has been changed. List<PathObject>; getC",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html
Modifiability,extend,extends,". PathObjectHierarchyEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectHierarchyEvent. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. public class PathObjectHierarchyEvent; extends Object; An event class for passing on information about modifications to a PathObjectHierarchy. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent; createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded). Create a hierarchy event indicated objects were added. static PathObjectHierarchyEvent; createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved). Create a hierarchy event indicating objects were removed. static PathObjectHierarchyEvent; createObjectsChangedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObjectHierarchyEvent.HierarchyEventType type,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. static PathObjectHierarchyEvent; createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject). Create a hierarchy event indicating that the hierarchy structure has been changed. List<PathObject>; getC",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html
Security,hash,hashCode,"y whichever changes were made. PathObjectHierarchyEvent.HierarchyEventType; getEventType(). Get the hierarchy event type. PathObjectHierarchy; getHierarchy(). The hierarchy to which this event refers. Object; getSource(). Get the source that triggered the event. PathObject; getStructureChangeBase(). If this is a structure change event, return the base object, i.e. boolean; isAddedOrRemovedEvent(). Returns true if objects have been added or removed from the hierarchy. boolean; isChanging(). Returns true if changes are still being made, so more events will be fired. boolean; isObjectClassificationEvent(). Returns true if the event indicates that object classifications have changed. boolean; isObjectMeasurementEvent(). Returns true if the event indicates that object measurements have changed. boolean; isStructureChangeEvent(). Returns true if the hierarchy structure has changed, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createStructureChangeEvent; public static PathObjectHierarchyEvent createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject); Create a hierarchy event indicating that the hierarchy structure has been changed. Parameters:; source - ; hierarchy - ; parentObject - ; Returns:. createObjectAddedEvent; public static PathObjectHierarchyEvent createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded); Create a hierarchy event indicated objects were added. Parameters:; source - ; hierarchy - ; parentObject - ; pathObjectAdded - ; Returns:. createObjectRemovedEvent; public static PathObjectHierarchyEvent createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved); Create a hierarchy event ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html
Integrability,interface,interface,". PathObjectHierarchyListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectHierarchyListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, ImageData, PathObjectGridView, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView, UndoRedoManager. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface PathObjectHierarchyListener; extends EventListener; A listener for modifications to a PathObjectHierarchy (i.e. objects added, removed, classified etc.). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. Method Details. hierarchyChanged; void hierarchyChanged(PathObjectHierarchyEvent event); Notify listeners of a change in the hierarchy or its objects. Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html
Modifiability,extend,extends,". PathObjectHierarchyListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectHierarchyListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, ImageData, PathObjectGridView, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView, UndoRedoManager. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface PathObjectHierarchyListener; extends EventListener; A listener for modifications to a PathObjectHierarchy (i.e. objects added, removed, classified etc.). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. Method Details. hierarchyChanged; void hierarchyChanged(PathObjectHierarchyEvent event); Notify listeners of a change in the hierarchy or its objects. Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html
Integrability,interface,interface,". PathObjectSelectionListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectSelectionListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView. public interface PathObjectSelectionListener; extends EventListener; A listener to selection changes within a PathObjectSelectionModel. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Method Details. selectedPathObjectChanged; void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Fired when the selected objects have changed. Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html
Modifiability,extend,extends,". PathObjectSelectionListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectSelectionListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView. public interface PathObjectSelectionListener; extends EventListener; A listener to selection changes within a PathObjectSelectionModel. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Method Details. selectedPathObjectChanged; void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Fired when the selected objects have changed. Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html
Availability,avail,available," PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html
Modifiability,extend,extends,". PathObjectSelectionModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectSelectionModel. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. public class PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be s",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html
Security,access,accessible,"f the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html
Usability,clear,clearSelection,". PathObjectSelectionModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectSelectionModel. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. public class PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be s",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html
Integrability,interface,interface,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Modifiability,plugin,plugins,". DilateAnnotationPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class DilateAnnotationPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class DilateAnnotationPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedP",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Performance,perform,perform,"hod; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Safety,detect,detected,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to crea",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Security,hash,hashCode,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Usability,simpl,simply," should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html
Integrability,interface,interfaces,"Plugin.LineCap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins.objects; Enum Class DilateAnnotationPlugin.LineCap. java.lang.Object; java.lang.Enum<DilateAnnotationPlugin.LineCap>; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. All Implemented Interfaces:; Serializable, Comparable<DilateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.Lin",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html
Modifiability,plugin,plugins,". DilateAnnotationPlugin.LineCap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins.objects; Enum Class DilateAnnotationPlugin.LineCap. java.lang.Object; java.lang.Enum<DilateAnnotationPlugin.LineCap>; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. All Implemented Interfaces:; Serializable, Comparable<DilateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAn",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html
Security,hash,hashCode,"gin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateAnnotationPlugin.LineCap SQUARE; Square cap. Method Details. values; public static DilateAnnotationPlugin.LineCap[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static DilateAnnotationPlugin.LineCap valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html
Integrability,interface,interface,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & o",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Modifiability,plugin,plugins,". FillAnnotationHolesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FillAnnotationHolesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FillAnnotationHolesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Performance,perform,perform,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotati",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Safety,detect,detected,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Security,hash,hashCode,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from inte",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Usability,simpl,simply,"rList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html
Deployability,update,update,"idden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Overrides:; runPlugin in class AbstractPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html
Integrability,interface,interface,"bject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root o",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html
Modifiability,plugin,plugins,". FindConvexHullDetectionsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FindConvexHullDetectionsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, base",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html
Safety,detect,detections,". FindConvexHullDetectionsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FindConvexHullDetectionsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, base",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html
Security,hash,hashCode,"lugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(I",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html
Integrability,interface,interfaces,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html
Safety,detect,detections,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html
Testability,log,logging,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.plugins.objects. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>. qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-tree.html
Integrability,interface,interface,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & opera",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Modifiability,plugin,plugins,". RefineAnnotationsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class RefineAnnotationsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class RefineAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RefineAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Performance,perform,perform,"hod; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Safety,detect,detected,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to crea",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Security,hash,hashCode,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interfac",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Usability,simpl,simply," should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html
Integrability,interface,interface,"ription of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> get",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html
Modifiability,plugin,plugins,". ShapeFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class ShapeFeaturesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class ShapeFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Add shape measurements. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeFeaturesPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParamet",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html
Safety,detect,detected,"ierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; task",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html
Security,hash,hashCode,"to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedP",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html
Integrability,interface,interface,"of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathOb",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html
Modifiability,plugin,plugins,". SmoothFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class SmoothFeaturesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SmoothFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function.; ; This effectively adds in some contextual information. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SmoothFeaturesPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParen",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html
Safety,detect,detection,". SmoothFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class SmoothFeaturesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SmoothFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function.; ; This effectively adds in some contextual information. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SmoothFeaturesPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParen",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html
Security,hash,hashCode,"eData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. get",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html
Integrability,interface,interface,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Modifiability,plugin,plugins,". SplitAnnotationsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class SplitAnnotationsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SplitAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> i",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Performance,perform,perform,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Safety,detect,detected,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Security,hash,hashCode,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface:",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Usability,simpl,simply,"rList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html
Integrability,interface,interface,"ription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<?",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html
Modifiability,plugin,plugins,". TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class TileClassificationsToAnnotationsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class TileClassificationsToAnnotationsPlugin<T>; extends AbstractDetectionPlugin<T>; Plugin to merge classified tiles into annotation objects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileClassificationsToAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could h",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html
Safety,detect,detected,". Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html
Security,hash,hashCode,"information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html
Availability,avail,available,"Code, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html
Integrability,interface,interface," if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html
Modifiability,plugin,plugins,". BooleanParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class BooleanParameter. java.lang.Object; qupath.lib.plugins.parameters.BooleanParameter. All Implemented Interfaces:; Serializable, Parameter<Boolean>. public class BooleanParameter; extends Object; Parameter that can take on true of false value - or null.; ; May be displayed as a checkbox. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Boolean; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Boolean>; duplicate(). Create a new Parameter with the same text and value. Boolean; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. bool",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html
Security,hash,hashCode,"layed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameter",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html
Availability,down,down,". ChoiceParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class ChoiceParameter<S>. java.lang.Object; qupath.lib.plugins.parameters.ChoiceParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. public class ChoiceParameter<S>; extends Object; Parameter that supports a list of choices.; ; May be displayed as a drop-down list. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected List<S>; choices;  ; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. List<S>; getChoices(). Get a list of available choices. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html
Integrability,interface,interface,"xt(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html
Modifiability,plugin,plugins,". ChoiceParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class ChoiceParameter<S>. java.lang.Object; qupath.lib.plugins.parameters.ChoiceParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. public class ChoiceParameter<S>; extends Object; Parameter that supports a list of choices.; ; May be displayed as a drop-down list. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected List<S>; choices;  ; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. List<S>; getChoices(). Get a list of available choices. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html
Security,hash,hashCode,"a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should n",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html
Availability,avail,available,"setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html
Integrability,interface,interface,"lasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be display",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html
Modifiability,plugin,plugins,". DoubleParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class DoubleParameter. java.lang.Object; qupath.lib.plugins.parameters.NumericParameter<Double>; qupath.lib.plugins.parameters.DoubleParameter. All Implemented Interfaces:; Serializable, Parameter<Double>. public class DoubleParameter; extends NumericParameter<Double>; Parameter to represent a floating point numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Double; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Double>; duplicate(). Create a new Parameter with the same text and value. Double; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Double; getValue(). Get the current set value (may be null). Double; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; th",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html
Security,hash,hashCode,"a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html
Availability,avail,available,". Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html
Integrability,interface,interface,"(so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValu",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html
Modifiability,plugin,plugins,". EmptyParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class EmptyParameter. java.lang.Object; qupath.lib.plugins.parameters.EmptyParameter. All Implemented Interfaces:; Serializable, Parameter<String>. public class EmptyParameter; extends Object; Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; isTitle;  ; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; St",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html
Security,hash,hashCode,"some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html
Availability,avail,available,"alueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html
Integrability,interface,interface,"s should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be di",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html
Modifiability,plugin,plugins,". IntParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class IntParameter. java.lang.Object; qupath.lib.plugins.parameters.NumericParameter<Integer>; qupath.lib.plugins.parameters.IntParameter. All Implemented Interfaces:; Serializable, Parameter<Integer>. public class IntParameter; extends NumericParameter<Integer>; Parameter to represent an integer numeric value.; ; May be bounded. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected Integer; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<Integer>; duplicate(). Create a new Parameter with the same text and value. Integer; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Integer; getValue(). Get the current set value (may be null). Integer; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will a",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html
Security,hash,hashCode,"meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html
Availability,avail,available,"ber>. java.lang.Object; qupath.lib.plugins.parameters.NumericParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. Direct Known Subclasses:; DoubleParameter, IntParameter. public abstract class NumericParameter<S extends Number>; extends Object; Abstract parameter to represent a numeric value. Author:; Pete Bankhead; See Also:. DoubleParameter; IntParameter; Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. double; getLowerBound(). Retrieve the lower bound. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getUnit(). Get the unit to display for this parameter (may be null if no unit is available). double; getUpperBound(). Retrieve the upper bound. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; hasLowerAndUpperBounds(). Returns true if this parameter has both lower and upper bounds constraining valid values. boolean; hasLowerBound(). Returns true if the parameter has a valid lower bound. boolean; hasUpperBound(). Returns true if the parameter has a valid upper bound. boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isUnbounded(). Returns true if this neither a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(do",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html
Integrability,interface,interface,"n; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPan",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html
Modifiability,plugin,plugins,". NumericParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class NumericParameter<S extends Number>. java.lang.Object; qupath.lib.plugins.parameters.NumericParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. Direct Known Subclasses:; DoubleParameter, IntParameter. public abstract class NumericParameter<S extends Number>; extends Object; Abstract parameter to represent a numeric value. Author:; Pete Bankhead; See Also:. DoubleParameter; IntParameter; Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. double; getLowerBound(). Retrieve the lower bound. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getUnit(). Get the unit to display for this parameter (may be null if no unit is available). double; getUpperBound(). Retrieve the upper bound. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; hasLowerAndUpperBounds(). Returns true if this parameter has both lower and upper bounds constraining valid values. boolean; hasLowerBound(). Returns true if the parameter has a valid lower bound. boolean; hasUpperBound(). Returns true if the ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html
Security,hash,hashCode,"ther a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html
Integrability,interface,interfaces,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html
Testability,log,logging,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html
Modifiability,plugin,plugins,. qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.plugins.parameters. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.parameters.BooleanParameter; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.lib.plugins.parameters.EmptyParameter; qupath.lib.plugins.parameters.NumericParameter<S>. qupath.lib.plugins.parameters.DoubleParameter; qupath.lib.plugins.parameters.IntParameter. qupath.lib.plugins.parameters.ParameterList (implements java.io.Serializable); qupath.lib.plugins.parameters.StringParameter. Interface Hierarchy. qupath.lib.plugins.parameters.ParameterChangeListener; qupath.lib.plugins.parameters.Parameterizable; java.io.Serializable. qupath.lib.plugins.parameters.Parameter<S>. ,MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-tree.html
Availability,avail,available,"implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so default can be used). getValue; S getValue(); Get the current set value (may be null). Returns:; See Also:. setValue(S); getValueOrDefault(). getValueOrDefault; S getValueOrDefault(); Get the current set value, or any default if no value has been set. Returns:; See Also:. setValue(S); getValue(). getPrompt; String getPrompt(); Get some prompt text that may be displayed to a user. Returns:. isValidInput; boolean isValidInput(S value); Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setHidden; void setHidden(boolean hidden); Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Parameters:; hidden - . isHidden; boolean isHidden(); Test is the 'hidden' flag is set for the parameter. Returns:. duplicate; Parameter<S> duplicate(); Create a new Parameter with the same text and value. Returns:. hasHelpText; boolean hasHelpText(); Query whether getHelpText() returns a meaningful String (as opposed to null). Returns:. getHelpText; String getHelpText(); Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html
Integrability,interface,interface,". Parameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameter<S>. Type Parameters:; S - . All Superinterfaces:; Serializable. All Known Implementing Classes:; BooleanParameter, ChoiceParameter, DoubleParameter, EmptyParameter, IntParameter, NumericParameter, StringParameter. public interface Parameter<S>; extends Serializable; Interface defining algorithm parameters, which need to be displayed to users somehow. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html
Modifiability,plugin,plugins,". Parameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameter<S>. Type Parameters:; S - . All Superinterfaces:; Serializable. All Known Implementing Classes:; BooleanParameter, ChoiceParameter, DoubleParameter, EmptyParameter, IntParameter, NumericParameter, StringParameter. public interface Parameter<S>; extends Serializable; Interface defining algorithm parameters, which need to be displayed to users somehow. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html
Integrability,interface,interface,". ParameterChangeListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface ParameterChangeListener. All Known Implementing Classes:; HistogramDisplay. public interface ParameterChangeListener; Interface for objects that need to be notified when parameters have their values changed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. Method Details. parameterChanged; void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Notify listener that a parameter value has changed. Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html
Modifiability,plugin,plugins,". ParameterChangeListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface ParameterChangeListener. All Known Implementing Classes:; HistogramDisplay. public interface ParameterChangeListener; Interface for objects that need to be notified when parameters have their values changed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. Method Details. parameterChanged; void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Notify listener that a parameter value has changed. Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html
Integrability,interface,interface,. Parameterizable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameterizable. public interface Parameterizable; Interface for indicating that the implementing class takes adjustable parameters. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ParameterList; getParameterList(). Get the parameter list associated with the class. Method Details. getParameterList; ParameterList getParameterList(); Get the parameter list associated with the class. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html
Modifiability,plugin,plugins,. Parameterizable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameterizable. public interface Parameterizable; Interface for indicating that the implementing class takes adjustable parameters. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ParameterList; getParameterList(). Get the parameter list associated with the class. Method Details. getParameterList; ParameterList getParameterList(); Get the parameter list associated with the class. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html
Deployability,update,updateParameterList,"ey). Get a integer parameter value (or its default) for the specified key. Map<String,Object>; getKeyValueParameters(boolean includeHidden). Returns a map of keys and their corresponding parameter values. static String; getParameterListJSON(Map<String,?> map,; String delimiter). Deprecated.; use convertToJson(Map) instead. static String; getParameterListJSON(ParameterList params,; String delimiter). Deprecated.; use convertToJson(ParameterList) instead. Map<String,Parameter<?>>; getParameters(). Returns a map of keys and their corresponding parameters. String; getStringParameterValue(String key). Get a String parameter value (or its default) for the specified key. boolean; removeEmptyParameters(). Remove all empty parameters from this list. Parameter<?>; removeParameter(String key). Remove a parameter from this list. void; setHiddenParameters(boolean hidden,; String... keys). Set the 'hidden' flag for parameters with the specified keys. static void; updateParameterList(ParameterList params,; Map<String,String> mapNew,; Locale locale). Update a ParameterList with the values specified in a map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterList; public ParameterList(). Method Details. setHiddenParameters; public void setHiddenParameters(boolean hidden,; String... keys); Set the 'hidden' flag for parameters with the specified keys.; This can be used to notify any consumer that certain parameters are not required, ; or otherwise should not be presented to the user. Parameters:; hidden - ; keys - . duplicate; public ParameterList duplicate(); Create a deep copy of this parameter list. Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue); Add a double parameter to this list. Parameters:; key - ; prompt - ; defaultValue - ; Returns:. addDoubleParameter; public ParameterList addDoublePar",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html
Modifiability,plugin,plugins,". ParameterList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class ParameterList. java.lang.Object; qupath.lib.plugins.parameters.ParameterList. All Implemented Interfaces:; Serializable. public class ParameterList; extends Object; implements Serializable; A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs.; ; Each Parameter requires a key to be associated with it.; ; The order or parameters is maintained. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; ParameterList();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; ParameterList; addBooleanParameter(String key,; String prompt,; boolean defaultValue). Add a boolean parameter. ParameterList; addBooleanParameter(String key,; String prompt,; boolean defaultValue,; String helpText). Add a boolean parameter, with help text. <S> ParameterList; addChoiceParameter(String key,; String prompt,; S defaultValue,; List<S> choices). Add a choice parameter, with an list of choices. <S> ParameterList; addChoiceParameter(String key,; String prompt,; S defaultValue,; List<S> choices,; String helpText). Add a choice parameter, with an list of choices and help text. ParameterList; addDoubleParameter(String key,; String prompt,; double defaultValue). Add a double parameter to this list. ParameterList; addDoubleParameter(String key,; String prompt,; double defaultValue,; String unit,; double lowerBound,; double upperBound,; String helpText). Add a bounded double parameter to this list. ParameterList; addDoubleParameter(String key,; String p",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html
Security,hash,hashCode,"alues. static String; getParameterListJSON(Map<String,?> map,; String delimiter). Deprecated.; use convertToJson(Map) instead. static String; getParameterListJSON(ParameterList params,; String delimiter). Deprecated.; use convertToJson(ParameterList) instead. Map<String,Parameter<?>>; getParameters(). Returns a map of keys and their corresponding parameters. String; getStringParameterValue(String key). Get a String parameter value (or its default) for the specified key. boolean; removeEmptyParameters(). Remove all empty parameters from this list. Parameter<?>; removeParameter(String key). Remove a parameter from this list. void; setHiddenParameters(boolean hidden,; String... keys). Set the 'hidden' flag for parameters with the specified keys. static void; updateParameterList(ParameterList params,; Map<String,String> mapNew,; Locale locale). Update a ParameterList with the values specified in a map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterList; public ParameterList(). Method Details. setHiddenParameters; public void setHiddenParameters(boolean hidden,; String... keys); Set the 'hidden' flag for parameters with the specified keys.; This can be used to notify any consumer that certain parameters are not required, ; or otherwise should not be presented to the user. Parameters:; hidden - ; keys - . duplicate; public ParameterList duplicate(); Create a deep copy of this parameter list. Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue); Add a double parameter to this list. Parameters:; key - ; prompt - ; defaultValue - ; Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue,; String unit,; String helpText); Add a double parameter to this list, optionally including a unit and help text. Parameters:; key - ; prompt -",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html
Availability,avail,available,"ashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html
Integrability,interface,interface,"et value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html
Modifiability,plugin,plugins,". StringParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class StringParameter. java.lang.Object; qupath.lib.plugins.parameters.StringParameter. All Implemented Interfaces:; Serializable, Parameter<String>. public class StringParameter; extends Object; Parameter to represent a String value. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected String; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<String>; duplicate(). Create a new Parameter with the same text and value. String; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html
Security,hash,hashCode,"displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters t",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html
Integrability,interface,interface,"ctor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html
Modifiability,plugin,plugins,". DefaultScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class DefaultScriptableWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. All Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class DefaultScriptableWorkflowStep; extends Object; implements ScriptableWorkflowStep; A scriptable workflow step where the script is provided directly as an argument. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; DefaultScriptableWorkflowStep(String name,; String script). Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script). Constructor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html
Security,hash,hashCode,"; Serializable, ScriptableWorkflowStep, WorkflowStep. public class DefaultScriptableWorkflowStep; extends Object; implements ScriptableWorkflowStep; A scriptable workflow step where the script is provided directly as an argument. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; DefaultScriptableWorkflowStep(String name,; String script). Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script). Constructor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowS",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html
Energy Efficiency,adapt,adapted,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Integrability,interface,interfaces,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Performance,perform,perform,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Safety,avoid,avoid,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Testability,log,logging,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.plugins.workflow. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.plugins.workflow.SimplePluginWorkflowStep (implements java.io.Externalizable, qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.plugins.workflow.Workflow (implements java.io.Externalizable). Interface Hierarchy. java.io.Serializable. qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.plugins.workflow.WorkflowListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-tree.html
Integrability,interface,interface,". Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html
Modifiability,plugin,plugins,". RunSavedClassifierWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class RunSavedClassifierWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. All Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class RunSavedClassifierWorkflowStep; extends Object; implements ScriptableWorkflowStep; WorkflowStep for running a saved PathObjectClassifier. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html
Security,hash,hashCode,"ll Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class RunSavedClassifierWorkflowStep; extends Object; implements ScriptableWorkflowStep; WorkflowStep for running a saved PathObjectClassifier. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toSt",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html
Integrability,interface,interface,". ScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface ScriptableWorkflowStep. All Superinterfaces:; Serializable, WorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface ScriptableWorkflowStep; extends WorkflowStep; A WorkflowStep that can also return some Javascript that, if run, would perform the step. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getScript(). Get one or more script lines that may be used to apply the step. Methods inherited from interface qupath.lib.plugins.workflow.WorkflowStep; getName, getParameterMap. Method Details. getScript; String getScript(); Get one or more script lines that may be used to apply the step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html
Modifiability,plugin,plugins,". ScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface ScriptableWorkflowStep. All Superinterfaces:; Serializable, WorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface ScriptableWorkflowStep; extends WorkflowStep; A WorkflowStep that can also return some Javascript that, if run, would perform the step. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getScript(). Get one or more script lines that may be used to apply the step. Methods inherited from interface qupath.lib.plugins.workflow.WorkflowStep; getName, getParameterMap. Method Details. getScript; String getScript(); Get one or more script lines that may be used to apply the step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html
Performance,perform,perform,". ScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface ScriptableWorkflowStep. All Superinterfaces:; Serializable, WorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface ScriptableWorkflowStep; extends WorkflowStep; A WorkflowStep that can also return some Javascript that, if run, would perform the step. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getScript(). Get one or more script lines that may be used to apply the step. Methods inherited from interface qupath.lib.plugins.workflow.WorkflowStep; getName, getParameterMap. Method Details. getScript; String getScript(); Get one or more script lines that may be used to apply the step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html
Energy Efficiency,adapt,adapted,". SimplePluginWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html
Integrability,interface,interface,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundExc",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html
Modifiability,plugin,plugins,". SimplePluginWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html
Safety,avoid,avoid,". SimplePluginWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html
Security,hash,hashCode," SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html
Availability,avail,available,"used to implement a 'command history'.; ; Where the WorkflowSteps contained in the Workflow are scriptable, then a ; script can be created automatically. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Workflow();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addStep(WorkflowStep step). Append a new step to the end of the workflow, firing an update event. void; addSteps(Collection<WorkflowStep> steps). Append multiple steps to the end of the workflow, firing a single update event. void; addWorkflowListener(WorkflowListener listener). Add a listener for changes to the workflow. void; clear(). Remove all steps, firing an update event if the workflow was not previously empty. String; createScript(). Generate a script from the current workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructo",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Deployability,update,update,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class Workflow. java.lang.Object; qupath.lib.plugins.workflow.Workflow. All Implemented Interfaces:; Externalizable, Serializable. public class Workflow; extends Object; implements Externalizable; A collection of steps that relate to how an image has been - or should be - processed.; ; This can also be used to implement a 'command history'.; ; Where the WorkflowSteps contained in the Workflow are scriptable, then a ; script can be created automatically. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Workflow();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addStep(WorkflowStep step). Append a new step to the end of the workflow, firing an update event. void; addSteps(Collection<WorkflowStep> steps). Append multiple steps to the end of the workflow, firing a single update event. void; addWorkflowListener(WorkflowListener listener). Add a listener for changes to the workflow. void; clear(). Remove all steps, firing an update event if the workflow was not previously empty. String; createScript(). Generate a script from the current workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collect",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Integrability,interface,interface,"wStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> steps); Remove a collection of steps, firing an update event if the workflow was changed. Parameters:; steps - . replaceLastStep; public void replaceLastStep(WorkflowStep step); Replace the most recently added step with this one. Parameters:; step - . size; public int size(); Total number of steps in the workflow. Returns:. isEmpty; public boolean isEmpty(); Returns true if the workflow does not contain any steps. Returns:. clear; public void clear(); Remove all steps, firing an update event if the workflow was not previously empty. fireWorkflowUpdatedEvent; protected void fireWorkflowUpdatedEvent(). addWorkflowListener; public void addWorkflowListener(WorkflowListener listener); Add a listener for changes to the workflow. Parameters:; listener - . removeWorkflowListener; public void removeWorkflowListener(WorkflowListener listener); Remove a listener for changes to the workflow. Parameters:; listener - . createScript; public String createScript(); Generate a script from the current workflow steps. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Modifiability,plugin,plugins,". Workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class Workflow. java.lang.Object; qupath.lib.plugins.workflow.Workflow. All Implemented Interfaces:; Externalizable, Serializable. public class Workflow; extends Object; implements Externalizable; A collection of steps that relate to how an image has been - or should be - processed.; ; This can also be used to implement a 'command history'.; ; Where the WorkflowSteps contained in the Workflow are scriptable, then a ; script can be created automatically. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Workflow();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addStep(WorkflowStep step). Append a new step to the end of the workflow, firing an update event. void; addSteps(Collection<WorkflowStep> steps). Append multiple steps to the end of the workflow, firing a single update event. void; addWorkflowListener(WorkflowListener listener). Add a listener for changes to the workflow. void; clear(). Remove all steps, firing an update event if the workflow was not previously empty. String; createScript(). Generate a script from the current workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep s",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Security,hash,hashCode,"owStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Workflow; public Workflow(). Method Details. getSteps; public List<WorkflowStep> getSteps(); Get an unmodifiable list of the steps. Returns:. getLastStep; public WorkflowStep getLastStep(); Get the last WorkflowStep in the workflow, or null if no steps are available. Returns:. addStep; public void addStep(WorkflowStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> ste",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Usability,clear,clear,"ng.Object; qupath.lib.plugins.workflow.Workflow. All Implemented Interfaces:; Externalizable, Serializable. public class Workflow; extends Object; implements Externalizable; A collection of steps that relate to how an image has been - or should be - processed.; ; This can also be used to implement a 'command history'.; ; Where the WorkflowSteps contained in the Workflow are scriptable, then a ; script can be created automatically. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Workflow();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addStep(WorkflowStep step). Append a new step to the end of the workflow, firing an update event. void; addSteps(Collection<WorkflowStep> steps). Append multiple steps to the end of the workflow, firing a single update event. void; addWorkflowListener(WorkflowListener listener). Add a listener for changes to the workflow. void; clear(). Remove all steps, firing an update event if the workflow was not previously empty. String; createScript(). Generate a script from the current workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the mos",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html
Deployability,update,updated,". WorkflowListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowListener. All Known Implementing Classes:; ImageData, WorkflowCommandLogView. public interface WorkflowListener; Interface for listening to changes in Workflows, e.g. adding/removing steps. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Method Details. workflowUpdated; void workflowUpdated(Workflow workflow); Called whenever a Workflow has been updated in some way, such as a new step added. Parameters:; workflow - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html
Integrability,interface,interface,". WorkflowListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowListener. All Known Implementing Classes:; ImageData, WorkflowCommandLogView. public interface WorkflowListener; Interface for listening to changes in Workflows, e.g. adding/removing steps. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Method Details. workflowUpdated; void workflowUpdated(Workflow workflow); Called whenever a Workflow has been updated in some way, such as a new step added. Parameters:; workflow - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html
Modifiability,plugin,plugins,". WorkflowListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowListener. All Known Implementing Classes:; ImageData, WorkflowCommandLogView. public interface WorkflowListener; Interface for listening to changes in Workflows, e.g. adding/removing steps. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Method Details. workflowUpdated; void workflowUpdated(Workflow workflow); Called whenever a Workflow has been updated in some way, such as a new step added. Parameters:; workflow - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html
Integrability,interface,interface,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html
Modifiability,plugin,plugins,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html
Testability,log,loggable,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html
Integrability,interface,interfaces,". qupath.lib.roi.interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi.interfaces. package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs).; ; In the past, there were multiple interfaces to define ROIs of different types.; This has now been simplified with more methods added to ROI itself instead. Related Packages. Package; Description; qupath.lib.roi. Classes that define regions of interest (ROIs). All Classes and InterfacesInterfacesEnum Classes. Class; Description; ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html
Usability,simpl,simplified,". qupath.lib.roi.interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi.interfaces. package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs).; ; In the past, there were multiple interfaces to define ROIs of different types.; This has now been simplified with more methods added to ROI itself instead. Related Packages. Package; Description; qupath.lib.roi. Classes that define regions of interest (ROIs). All Classes and InterfacesInterfacesEnum Classes. Class; Description; ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html
Integrability,interface,interfaces,". qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.roi.interfaces. Package Hierarchies:. All Packages. Interface Hierarchy. qupath.lib.roi.interfaces.ROI. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.roi.interfaces.ROI.RoiType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-tree.html
Availability,avail,available,"of pixels ; from the top left of the full-resolution image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; ROI.RoiType. Enum representing the major different types of ROI. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Get a ROI representing the convex hull of this ROI. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Get the number of points, as would be returned by getAllPoints(). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. S",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html
Deployability,update,updatePlane," sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). Returns true if the ROI bounds have zero width and height. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. default ROI; scale(double scaleX,; double scaleY). Create a scaled version of this ROI. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Method Details. getRoiName; String getRoiName(); Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Returns:. getC; int getC(); Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Returns:. getT; int getT(); Get time point index.; ; Default is 0 if the image it relates to is not a time series. Returns:. getZ; int getZ(); Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Returns:. getImagePlane; ImagePlane getImagePlane(); Get the ImagePlane, which contains the values for c, z and t in a single object. Returns:. getCentroidX; double getCentroidX(); Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; double getCentroidY(); Returns the y coordinate for the ROI centroid. Returns:. getBoundsX; double getBoundsX(); Returns the x",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html
Integrability,interface,interfaces,". ROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Interface ROI. All Known Implementing Classes:; AreaROI, EllipseROI, GeometryROI, LineROI, PointsROI, PolygonROI, PolylineROI, RectangleROI. public interface ROI; Base interface for defining regions of interest (ROIs) within QuPath.; ; In general, anything that returns a coordinate should be defined in terms of pixels ; from the top left of the full-resolution image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; ROI.RoiType. Enum representing the major different types of ROI. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Get a ROI representing the convex hull of this ROI. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html
Integrability,interface,interfaces,". ROI.RoiType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Enum Class ROI.RoiType. java.lang.Object; java.lang.Enum<ROI.RoiType>; qupath.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of th",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html
Modifiability,extend,extends,". ROI.RoiType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Enum Class ROI.RoiType. java.lang.Object; java.lang.Enum<ROI.RoiType>; qupath.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of th",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html
Security,hash,hashCode,"th.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ROI.RoiType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html
Integrability,interface,interface,". AutoCompletions.Completion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface AutoCompletions.Completion. Enclosing class:; AutoCompletions. public static interface AutoCompletions.Completion; A single completion.; Instances must be able to determine whether they can provide a valid autocompletion, ; given an input string and a caret position - and, if so, also supply the completion text to insert. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getCompletionText(). Get the text that should be inserted for the full completion. String; getDisplayText(). Get the text that should be displayed for this completion. String; getInsertion(String text,; int pos,; String lastToken). Get the string to insert, given the provided text and position. default AutoCompletions.CompletionTokenizer; getTokenizer(). Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. boolean; isCompatible(String text,; int pos,; String lastToken). Test if this completion is compatible with the provided text. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any o",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html
Performance,perform,performance,"idity and/or ; insertion for the completion. boolean; isCompatible(String text,; int pos,; String lastToken). Test if this completion is compatible with the provided text. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any overlapping part of the completion, ; so that it can be inserted at pos. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:; the text to insert. isCompatible; boolean isCompatible(String text,; int pos,; String lastToken); Test if this completion is compatible with the provided text. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:. getTokenizer; default AutoCompletions.CompletionTokenizer getTokenizer(); Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion.; ; Important! This exists for efficiency, so that if many completions use the same tokenizer, ; the (possibly long) text does not need to be re-tokenized each time.; It is therefore important to return a shared instance, rather than a new ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html
Integrability,interface,interface,". AutoCompletions.CompletionTokenizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface AutoCompletions.CompletionTokenizer. Enclosing class:; AutoCompletions. public static interface AutoCompletions.CompletionTokenizer; Functional interface to extract a token from a string needed to determine ; a completion.; For example, given the string var pathObject = PathObjects.crea ; the token would be ""PathObjects.crea"". Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getToken(String text,; int pos). Get the token needed for the completion. Method Details. getToken; String getToken(String text,; int pos); Get the token needed for the completion. Parameters:; text - ; pos - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.CompletionTokenizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.CompletionTokenizer.html
Integrability,interface,interface,". AutoCompletions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class AutoCompletions. java.lang.Object; qupath.lib.scripting.languages.AutoCompletions. public class AutoCompletions; extends Object; Class to deal with script auto-completions. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AutoCompletions.Completion. A single completion. static interface ; AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. Field Summary; Fields. Modifier and Type; Field; Description; static final AutoCompletions.CompletionTokenizer; JAVA_TOKENIZER. A completion tokenizer that extracts a token used to determine Java completions. static final AutoCompletions.CompletionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion tex",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html
Modifiability,extend,extends,". AutoCompletions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class AutoCompletions. java.lang.Object; qupath.lib.scripting.languages.AutoCompletions. public class AutoCompletions; extends Object; Class to deal with script auto-completions. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AutoCompletions.Completion. A single completion. static interface ; AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. Field Summary; Fields. Modifier and Type; Field; Description; static final AutoCompletions.CompletionTokenizer; JAVA_TOKENIZER. A completion tokenizer that extracts a token used to determine Java completions. static final AutoCompletions.CompletionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion tex",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html
Security,hash,hashCode,"takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SUBSTRING_TOKENIZER; public static final AutoCompletions.CompletionTokenizer SUBSTRING_TOKENIZER; A completion tokenizer that simply takes the first part of the text up to the caret position. JAVA_TOKENIZER; public static final AutoCompletions.CompletionTokenizer JAVA_TOKENIZER; A completion tokenizer that extracts a token used to determine Java completions. Constructor Details. AutoCompletions; public AutoCompletions(). Method Details. getComparator; public static Comparator<AutoCompletions.Completion> getComparator(); Get a comparator to order completions. Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText); Create a new completion with fixed display and completion text. Parameters:; declaringClass - the declaring class; choose null for static imports; displayText - the text to display; completionText - the te",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html
Usability,simpl,simply,":. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class AutoCompletions. java.lang.Object; qupath.lib.scripting.languages.AutoCompletions. public class AutoCompletions; extends Object; Class to deal with script auto-completions. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AutoCompletions.Completion. A single completion. static interface ; AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. Field Summary; Fields. Modifier and Type; Field; Description; static final AutoCompletions.CompletionTokenizer; JAVA_TOKENIZER. A completion tokenizer that extracts a token used to determine Java completions. static final AutoCompletions.CompletionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify,",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html
Integrability,interface,interface,". ExecutableLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface ExecutableLanguage. All Known Subinterfaces:; HtmlRenderer. All Known Implementing Classes:; DefaultScriptLanguage, GroovyLanguage, MarkdownLanguage. public interface ExecutableLanguage; Functional interface for scripting languages that are runnable (e.g. Groovy, JavaScript). Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. Method Details. execute; Object execute(ScriptParameters params); throws ScriptException; Execute the given script String. Parameters:; params - ; Returns:; Throws:; ScriptException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/ExecutableLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ExecutableLanguage.html
Integrability,interface,interface,. qupath.lib.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.scripting.languages. package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. Related Packages. Package; Description; qupath.lib.scripting. Defines helper class for running scripts. All Classes and InterfacesInterfacesClasses. Class; Description; AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptLanguage. Abstract class to represent languages supported by the script editor. ,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/package-summary.html
Integrability,interface,interface,". ScriptAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface ScriptAutoCompletor. All Known Implementing Classes:; DefaultAutoCompletor, GroovyAutoCompletor, PythonAutoCompletor. public interface ScriptAutoCompletor; Interface for classes that implement auto-completion (e.g. styling classes). Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Method Details. getCompletions; List<AutoCompletions.Completion> getCompletions(String text,; int pos); Get a list of possible auto-completions for the given text ; with the caret at the specified position. Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/ScriptAutoCompletor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptAutoCompletor.html
Modifiability,extend,extends,". ScriptLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class ScriptLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage. Direct Known Subclasses:; CssLanguage, DefaultScriptLanguage, JsonLanguage, MarkdownLanguage, PlainLanguage, PropertiesLanguage, XmlLanguage, YamlLanguage. public abstract class ScriptLanguage; extends Object; Abstract class to represent languages supported by the script editor. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; ScriptLanguage(String name,; String ext). Default constructor for a ScriptLanguage. protected ; ScriptLanguage(String name,; Collection<String> exts). Default constructor for a ScriptLanguage. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. Set<String>; getExtensions(). Get an unmodifiable set containing the possible extensions for this language. String; getName(). Get the name of this language. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ScriptLanguage; protected ScriptLanguage(String name,; Collection<String> exts); Default constructor for a ScriptLanguage. Parameters:; name - the language name; exts - all supported file extensions for this language, in the form .ext (lowercase). ScriptLanguage; protected ScriptLanguage(String name,; String ext); Default constructor for a ScriptLanguage. Parameters:; na",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html
Security,hash,hashCode,"ge, PropertiesLanguage, XmlLanguage, YamlLanguage. public abstract class ScriptLanguage; extends Object; Abstract class to represent languages supported by the script editor. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; ScriptLanguage(String name,; String ext). Default constructor for a ScriptLanguage. protected ; ScriptLanguage(String name,; Collection<String> exts). Default constructor for a ScriptLanguage. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. Set<String>; getExtensions(). Get an unmodifiable set containing the possible extensions for this language. String; getName(). Get the name of this language. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ScriptLanguage; protected ScriptLanguage(String name,; Collection<String> exts); Default constructor for a ScriptLanguage. Parameters:; name - the language name; exts - all supported file extensions for this language, in the form .ext (lowercase). ScriptLanguage; protected ScriptLanguage(String name,; String ext); Default constructor for a ScriptLanguage. Parameters:; name - the language name; ext - the file extensions for this language, in the form .ext (lowercase). Method Details. getName; public String getName(); Get the name of this language. Returns:; name. getExtensions; public Set<String> getExtensions(); Get an unmodifiable set containing the possible extensions for this language. Returns:; extension array. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html
Deployability,pipeline,pipeline,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Integrability,interface,interface,". Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<S",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Modifiability,extend,extends,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Safety,predict,predict,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Security,hash,hashCode,"d Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFuncti",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Usability,learn,learning,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html
Integrability,interface,interface,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html
Safety,predict,prediction,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html
Usability,learn,learning,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html
Deployability,pipeline,pipeline,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html
Integrability,interface,interface,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html
Modifiability,extend,extends,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html
Safety,predict,predict,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html
Usability,learn,learning,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html
Integrability,interface,interface,". DnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModelBuilder. All Known Implementing Classes:; OpenCVDnnModelBuilder. public interface DnnModelBuilder; Builder to create a DnnModel from DnnModelParams.; This exists to allow different implementations to be added via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Method Details. buildModel; DnnModel buildModel(DnnModelParams params); Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Parameters:; params - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelBuilder.html
Availability,avail,available,"ublic DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework that can use the model.; ; It is recommended to use one of the default names available as static variables; in DnnModelParams.; However, an extension might use some other unique identifier to ensure that it is ; used in preference to some other implementation. Parameters:; framework - ; Returns:. layout; public DnnModelParams.Builder layout(String layout); Specify a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Parameters:; layout - ; Returns:. inputShape; public DnnModelParams.Builder inputShape(long... shape); Specify the shape for a single input, with the default input name. Parameters:; shape - ; Returns:. input; public DnnModelParams.Builder input(String name,; long... shape); Specify the shape as a long array for a single input with a specified name. Parameters:; name - ; shape - ; Returns:. input; public DnnModelParams.Builder input(String name,; DnnShape shape); Specify the shape for a single input with a specified name. Parameters:; name",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html
Modifiability,extend,extends,". DnnModelParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams.Builder. java.lang.Object; qupath.opencv.dnn.DnnModelParams.Builder. Enclosing class:; DnnModelParams. public static class DnnModelParams.Builder; extends Object; Builder for DnnModelParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModelParams; build(). Build the params. DnnModelParams.Builder; files(File... files). Specify the URIs as files. DnnModelParams.Builder; framework(String framework). Specify the deep learning framework that can use the model. DnnModelParams.Builder; input(String name,; long... shape). Specify the shape as a long array for a single input with a specified name. DnnModelParams.Builder; input(String name,; DnnShape shape). Specify the shape for a single input with a specified name. DnnModelParams.Builder; inputs(Map<String,DnnShape> inputs). Specify the shapes for one or more inputs. DnnModelParams.Builder; inputShape(long... shape). Specify the shape for a single input, with the default input name. DnnModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape)",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html
Security,hash,hashCode,"nModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape). Specify the shape for a single output, with the default output name. DnnModelParams.Builder; paths(Path... paths). Specify the URIs as path objects. DnnModelParams.Builder; URIs(URI... uris). Specify the URIs. DnnModelParams.Builder; URIs(Collection<URI> uris). Specify the URIs as a collection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. files; public DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html
Usability,learn,learning,". DnnModelParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams.Builder. java.lang.Object; qupath.opencv.dnn.DnnModelParams.Builder. Enclosing class:; DnnModelParams. public static class DnnModelParams.Builder; extends Object; Builder for DnnModelParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModelParams; build(). Build the params. DnnModelParams.Builder; files(File... files). Specify the URIs as files. DnnModelParams.Builder; framework(String framework). Specify the deep learning framework that can use the model. DnnModelParams.Builder; input(String name,; long... shape). Specify the shape as a long array for a single input with a specified name. DnnModelParams.Builder; input(String name,; DnnShape shape). Specify the shape for a single input with a specified name. DnnModelParams.Builder; inputs(Map<String,DnnShape> inputs). Specify the shapes for one or more inputs. DnnModelParams.Builder; inputShape(long... shape). Specify the shape for a single input, with the default input name. DnnModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape)",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html
Availability,avail,available,". DnnModelParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams. java.lang.Object; qupath.opencv.dnn.DnnModelParams. public class DnnModelParams; extends Object; Parameters to build a DnnModel.; These are used via DnnModels.buildModel(DnnModelParams).; ; Many parameters are optional.; However as many as are available should be set, to maximize the chances ; of a DnnModelBuilder being available to build a model from the parameters.; ; Warning! The API for this class is unstable; it is likely to change in ; future releases. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<Str",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Deployability,release,releases,". DnnModelParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams. java.lang.Object; qupath.opencv.dnn.DnnModelParams. public class DnnModelParams; extends Object; Parameters to build a DnnModel.; These are used via DnnModels.buildModel(DnnModelParams).; ; Many parameters are optional.; However as many as are available should be set, to maximize the chances ; of a DnnModelBuilder being available to build a model from the parameters.; ; Warning! The API for this class is unstable; it is likely to change in ; future releases. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<Str",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Modifiability,extend,extends,". DnnModelParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams. java.lang.Object; qupath.opencv.dnn.DnnModelParams. public class DnnModelParams; extends Object; Parameters to build a DnnModel.; These are used via DnnModels.buildModel(DnnModelParams).; ; Many parameters are optional.; However as many as are available should be set, to maximize the chances ; of a DnnModelBuilder being available to build a model from the parameters.; ; Warning! The API for this class is unstable; it is likely to change in ; future releases. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<Str",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Performance,load,loaded,"e to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant F",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Safety,avoid,avoid,"final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framework that may be used.; If null, consumers may try to infer this from any URIs. Returns:. getURIs; public List<URI> getURIs(); Get the URIs associated with the model (e.g. weights and/or config files). Returns:. getInputs; public Map<String,DnnShape> getInputs(); Get the requested inputs and their shapes. Returns:; the inputs, if known, or null otherwise. getOutputs; public Map<String,DnnShape> getOutputs(); Get the expected outputs and their shapes. Returns:; the outputs, if known, or null otherwise. getLayout; public String getLayout(); Get a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Returns:. requestLazyInitialize; public boolean requestLazyInitialize(); Request that any model is loaded lazily on demand.; ; This can be useful to avoid blocking at some inopportune point in the code, ; but means that any exceptions associated with model initialization will ; probably not be thrown until the model is used. Returns:. builder; public static DnnModelParams.Builder builder(DnnModelParams params); Create a new params builder, initialized with the values from existing ; params. Parameters:; params - ; Returns:; a new builder. builder; public static DnnModelParams.Builder builder(); Create a new params builder, with default values. Returns:; a new builder. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Security,hash,hashCode," String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framewor",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Usability,learn,learning,"ic class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. C",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html
Availability,avail,available,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html
Modifiability,extend,extends,". DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built.",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html
Performance,load,loader,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html
Security,hash,hashCode,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html
Availability,down,downsample,"r; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Deployability,patch,patch-based,". DnnObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.DnnObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; doubl",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Integrability,interface,interface,". DnnObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.DnnObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; doubl",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Modifiability,extend,extends,". DnnObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.DnnObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; doubl",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Safety,predict,predicted,". protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Security,hash,hashCode,"Features(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interfac",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Testability,test,test," tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html
Modifiability,extend,extends,". DnnShape (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnShape. java.lang.Object; qupath.opencv.dnn.DnnShape. public final class DnnShape; extends Object; Helper class to represent input and output shapes associated with PredictionFunction.; ; In general, the shape is expected to be in the format NCHW.; ; NCHW is used by OpenCV https://docs.opencv.org/4.5.2/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7; and also by PyTorch; for TensorFlow some rearrangement may be needed.; ; Note: NDCHW support may be added in the future, but is not currently supported. Field Summary; Fields. Modifier and Type; Field; Description; static long; UNKNOWN_LENGTH. Constant to represent an unknown dimension length. static DnnShape; UNKNOWN_SHAPE. Constant to represent an unknown shape. static long; UNKNOWN_SIZE. Constant to represent an unknown size (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final long; get(int i). Get the length of the specified dimension. final long[]; getShape(). Get a copy of the internal dimensions array. final boolean; isUnknown(). Returns true if the shape is unknown. final int; numDimensions(). The total number of dimensions, i.e. static DnnShape; of(long... shape). Create a new DnnShape with the specified dimension lengths. final long; size(). Total number of elements in a blob with this shape; This is the product of the lengths returned by getShape() or UNKNOWN_SHAPE. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. UNKNOWN_SHAPE; public static DnnShape UNKNOWN_S",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnShape.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html
Security,hash,hashCode,"ds. Modifier and Type; Field; Description; static long; UNKNOWN_LENGTH. Constant to represent an unknown dimension length. static DnnShape; UNKNOWN_SHAPE. Constant to represent an unknown shape. static long; UNKNOWN_SIZE. Constant to represent an unknown size (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final long; get(int i). Get the length of the specified dimension. final long[]; getShape(). Get a copy of the internal dimensions array. final boolean; isUnknown(). Returns true if the shape is unknown. final int; numDimensions(). The total number of dimensions, i.e. static DnnShape; of(long... shape). Create a new DnnShape with the specified dimension lengths. final long; size(). Total number of elements in a blob with this shape; This is the product of the lengths returned by getShape() or UNKNOWN_SHAPE. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. UNKNOWN_SHAPE; public static DnnShape UNKNOWN_SHAPE; Constant to represent an unknown shape. UNKNOWN_LENGTH; public static long UNKNOWN_LENGTH; Constant to represent an unknown dimension length. UNKNOWN_SIZE; public static long UNKNOWN_SIZE; Constant to represent an unknown size (i.e. number of elements within a blob, mat or tensor). Method Details. getShape; public final long[] getShape(); Get a copy of the internal dimensions array. Returns:. get; public final long get(int i); Get the length of the specified dimension. Parameters:; i - ; Returns:. of; public static DnnShape of(long... shape); Create a new DnnShape with the specified dimension lengths. Parameters:; shape - ; Returns:. numDimensions; public final int numDimensions(); The total number of dimensions, i.e. the length of the array returned by getShape(). Returns:. isUnknown; public final boolean isUnknown(); Returns true if the shape is unknown. Returns:. size; pu",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnShape.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html
Integrability,depend,depend,". DnnTools.DNNLayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools.DNNLayer. java.lang.Object; qupath.opencv.dnn.DnnTools.DNNLayer. Enclosing class:; DnnTools. public static class DnnTools.DNNLayer; extends Object; Helper class to summarize a DNN layer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getID(). Layer ID. List<DnnShape>; getInputShapes(). Layer input shape. String; getName(). Layer name. List<DnnShape>; getOutputShapes(). Layer output shape. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Layer name. Returns:. getID; public int getID(); Layer ID. Returns:. getInputShapes; public List<DnnShape> getInputShapes(); Layer input shape. This may depend on the input shape provided when summarizing the model. Returns:. getOutputShapes; public List<DnnShape> getOutputShapes(); Layer output shape. This may depend on the input shape provided when summarizing the model. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html
Modifiability,extend,extends,". DnnTools.DNNLayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools.DNNLayer. java.lang.Object; qupath.opencv.dnn.DnnTools.DNNLayer. Enclosing class:; DnnTools. public static class DnnTools.DNNLayer; extends Object; Helper class to summarize a DNN layer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getID(). Layer ID. List<DnnShape>; getInputShapes(). Layer input shape. String; getName(). Layer name. List<DnnShape>; getOutputShapes(). Layer output shape. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Layer name. Returns:. getID; public int getID(); Layer ID. Returns:. getInputShapes; public List<DnnShape> getInputShapes(); Layer input shape. This may depend on the input shape provided when summarizing the model. Returns:. getOutputShapes; public List<DnnShape> getOutputShapes(); Layer output shape. This may depend on the input shape provided when summarizing the model. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html
Security,hash,hashCode,". DnnTools.DNNLayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools.DNNLayer. java.lang.Object; qupath.opencv.dnn.DnnTools.DNNLayer. Enclosing class:; DnnTools. public static class DnnTools.DNNLayer; extends Object; Helper class to summarize a DNN layer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getID(). Layer ID. List<DnnShape>; getInputShapes(). Layer input shape. String; getName(). Layer name. List<DnnShape>; getOutputShapes(). Layer output shape. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Layer name. Returns:. getID; public int getID(); Layer ID. Returns:. getInputShapes; public List<DnnShape> getInputShapes(); Layer input shape. This may depend on the input shape provided when summarizing the model. Returns:. getOutputShapes; public List<DnnShape> getOutputShapes(); Layer output shape. This may depend on the input shape provided when summarizing the model. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html
Availability,down,downsample,"(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Deployability,patch,patch,"ols();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Mat; blobFromImage(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Func",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Integrability,depend,depending,"el model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. Parameters:; mat - input image; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. blobFromImages; public static Mat blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. Parameters:; mats - input images; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. imagesFromBlob; public static List<Mat> imagesFromBlob(Mat blob); Extract images from an OpenCV blob. Parameters:; blob - ; Returns:; a list of of images, with length depending upon batch size. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Modifiability,extend,extends,". DnnTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools. java.lang.Object; qupath.opencv.dnn.DnnTools. public class DnnTools; extends Object; Tools for working with OpenCV's DNN module. Since:; 0.3.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnTools.DNNLayer. Helper class to summarize a DNN layer. Constructor Summary; Constructors. Constructor; Description; DnnTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Mat; blobFromImage(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictio",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Performance,load,loading,". Parameters:; net - ; inputShape - ; Returns:. parseLayers; public static List<DnnTools.DNNLayer> parseLayers(Net net,; int width,; int height,; int channels,; int batchSize); Parse the layers for a Net, which allows inspection of names and sizes. Parameters:; net - the Net to parse; width - input width; height - input height; channels - input channels; batchSize - input batch size; Returns:. parseStrings; public static List<String> parseStrings(StringVector vector); Extract Strings from a StringVector. Parameters:; vector - ; Returns:. parseShape; public static List<DnnShape> parseShape(MatShapeVector vector); Extract Mat dimensions from a MatShapeVector. Parameters:; vector - ; Returns:. summarize; public static String summarize(Net net,; int width,; int height,; int nChannels); throws IOException; Create a (multiline) summary String for a Net, given the specified image input dimensions. Parameters:; net - the Net to summarize; width - input width; height - input height; nChannels - input channel count; Returns:; Throws:; IOException - if an error occurs when loading the model. readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height); throws IOException; Read an image patch, optionally with a fixed size and using zero-padding if required.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int, int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPa",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Safety,predict,predictionMeasurement,"s.DNNLayer. Helper class to summarize a DNN layer. Constructor Summary; Constructors. Constructor; Description; DnnTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Mat; blobFromImage(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(Detec",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Security,hash,hashCode,"Server<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCu",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/DnnTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html
Availability,avail,available,"    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html
Modifiability,extend,extends,". OpenCVDnn.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer output",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html
Performance,load,loader,"ng class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html
Safety,detect,detection,"eld | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html
Security,hash,hashCode,"VDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Return",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html
Deployability,configurat,configuration,"opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from cla",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html
Integrability,interface,interface,". Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<Mat>; qupath.opencv.dnn.OpenCVDnn. All Implemented Interfaces:; AutoCloseable, UriResource, DnnModel. public class OpenCVDnn; extends AbstractDnnModel<Mat>; implements UriResource; Wrapper for an OpenCV Net, including essential metadata about how it should be used.; ; The main purpose of this is to support serializing models to JSON... kind of. In truth currently the paths ; to the original model files are serialized, since (to my knowledge) there is no way to save and reload a Net directly. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get th",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html
Modifiability,extend,extends,". OpenCVDnn (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<Mat>; qupath.opencv.dnn.OpenCVDnn. All Implemented Interfaces:; AutoCloseable, UriResource, DnnModel. public class OpenCVDnn; extends AbstractDnnModel<Mat>; implements UriResource; Wrapper for an OpenCV Net, including essential metadata about how it should be used.; ; The main purpose of this is to support serializing models to JSON... kind of. In truth currently the paths ; to the original model files are serialized, since (to my knowledge) there is no way to save and reload a Net directly. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or onl",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html
Safety,predict,prediction,". Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource.",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html
Security,hash,hashCode,"amework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Pa",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html
Integrability,interface,interfaces,". OpenCVDnn.ModelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.dnn; Enum Class OpenCVDnn.ModelType. java.lang.Object; java.lang.Enum<OpenCVDnn.ModelType>; qupath.opencv.dnn.OpenCVDnn.ModelType. All Implemented Interfaces:; Serializable, Comparable<OpenCVDnn.ModelType>, Constable. Enclosing class:; OpenCVDnn. public static enum OpenCVDnn.ModelType; extends Enum<OpenCVDnn.ModelType>; Enum representing different classes of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html
Modifiability,extend,extends,". OpenCVDnn.ModelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.dnn; Enum Class OpenCVDnn.ModelType. java.lang.Object; java.lang.Enum<OpenCVDnn.ModelType>; qupath.opencv.dnn.OpenCVDnn.ModelType. All Implemented Interfaces:; Serializable, Comparable<OpenCVDnn.ModelType>, Constable. Enclosing class:; OpenCVDnn. public static enum OpenCVDnn.ModelType; extends Enum<OpenCVDnn.ModelType>; Enum representing different classes of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html
Safety,predict,predictions,". OpenCVDnn.ModelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.dnn; Enum Class OpenCVDnn.ModelType. java.lang.Object; java.lang.Enum<OpenCVDnn.ModelType>; qupath.opencv.dnn.OpenCVDnn.ModelType. All Implemented Interfaces:; Serializable, Comparable<OpenCVDnn.ModelType>, Constable. Enclosing class:; OpenCVDnn. public static enum OpenCVDnn.ModelType; extends Enum<OpenCVDnn.ModelType>; Enum representing different classes of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html
Security,hash,hashCode,"predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OpenCVDnn.ModelType DEFAULT; Default Model class. DETECTION; public static final OpenCVDnn.ModelType DETECTION; Refers to DetectionModel. SEGMENTATION; public static final OpenCVDnn.ModelType SEGMENTATION; Refers to SegmentationModel. CLASSIFICATION; public static final OpenCVDnn.ModelType CLASSIFICATION; Refers to ClassificationModel. KEYPOINTS; public static final OpenCVDnn.ModelType KEYPOINTS; Refers to KeypointsModel. TEXT_RECOGNITION; public static final OpenCVDnn.ModelType TEXT_RECOGNITION; Refers to TextRecognitionModel. TEXT_DETECTION_DB; public static final OpenCVDnn.ModelType TEXT_DETECTION_DB; Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST; public static final OpenCVDnn.ModelType TEXT_DETECTION_EAST; Refers to TextDetectionModel_EAST. Method Details. values; public",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html
Integrability,interface,interface,". OpenCVDnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnnModelBuilder. java.lang.Object; qupath.opencv.dnn.OpenCVDnnModelBuilder. All Implemented Interfaces:; DnnModelBuilder. public class OpenCVDnnModelBuilder; extends Object; implements DnnModelBuilder; A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenCVDnnModelBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVDnnModelBuilder; public OpenCVDnnModelBuilder(). Method Details. buildModel; public DnnModel buildModel(DnnModelParams params); Description copied from interface: DnnModelBuilder; Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Specified by:; buildModel in interface DnnModelBuilder; Parameters:; params - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html
Modifiability,extend,extends,". OpenCVDnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnnModelBuilder. java.lang.Object; qupath.opencv.dnn.OpenCVDnnModelBuilder. All Implemented Interfaces:; DnnModelBuilder. public class OpenCVDnnModelBuilder; extends Object; implements DnnModelBuilder; A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenCVDnnModelBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVDnnModelBuilder; public OpenCVDnnModelBuilder(). Method Details. buildModel; public DnnModel buildModel(DnnModelParams params); Description copied from interface: DnnModelBuilder; Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Specified by:; buildModel in interface DnnModelBuilder; Parameters:; params - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html
Security,hash,hashCode,". OpenCVDnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnnModelBuilder. java.lang.Object; qupath.opencv.dnn.OpenCVDnnModelBuilder. All Implemented Interfaces:; DnnModelBuilder. public class OpenCVDnnModelBuilder; extends Object; implements DnnModelBuilder; A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenCVDnnModelBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVDnnModelBuilder; public OpenCVDnnModelBuilder(). Method Details. buildModel; public DnnModel buildModel(DnnModelParams params); Description copied from interface: DnnModelBuilder; Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Specified by:; buildModel in interface DnnModelBuilder; Parameters:; params - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html
Availability,down,downsample,"Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch ",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Deployability,patch,patch-based,". OpenCVModelObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVModelObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.OpenCVModelObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObj",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Integrability,interface,interface,". OpenCVModelObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVModelObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.OpenCVModelObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObj",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Modifiability,extend,extends,". OpenCVModelObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVModelObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.OpenCVModelObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObj",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Safety,predict,predicted,"tionModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Security,hash,hashCode," imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathCl",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Testability,test,test,"bjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html
Deployability,pipeline,pipeline,". qupath.opencv.dnn (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Ope",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html
Integrability,interface,interface,"ion; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectCla",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html
Modifiability,plugin,plugins,". qupath.opencv.dnn (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Ope",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html
Usability,learn,learning,". qupath.opencv.dnn (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Ope",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html
Deployability,integrat,integrate,". PredictionFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface PredictionFunction<T>. Type Parameters:; T - . public interface PredictionFunction<T>; Prediction function, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T>",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html
Integrability,interface,interface,". PredictionFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface PredictionFunction<T>. Type Parameters:; T - . public interface PredictionFunction<T>; Prediction function, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T>",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html
Safety,predict,predict,"ion, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T> predict(Map<String,T> input); Call a function that takes one or more inputs to produce zero or more outputs. Parameters:; input - map of input names and blobs; Returns:; map of output names and blobs. predict; T predict(T input); Call a function that takes a single input and provides a single output. Parameters:; input - input to the function; Returns:; output of the function. getInputs; Map<String,DnnShape> getInputs(); Get the required inputs.; ; Often, this is a si",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html
Usability,learn,learning,". PredictionFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface PredictionFunction<T>. Type Parameters:; T - . public interface PredictionFunction<T>; Prediction function, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T>",MatchSource.WIKI,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html
Integrability,interface,interface,"et a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteract",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html
Modifiability,plugin,plugins,". DelaunayClusteringPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.features; Class DelaunayClusteringPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.opencv.features.DelaunayClusteringPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class DelaunayClusteringPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin for calculating Delaunay clustering, and associated features.; ; Warning! Because the implementation will have to change in the future, it is best not to rely on this class!. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DelaunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collecti",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html
Safety,detect,detected,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to crea",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html
Security,hash,hashCode,"ion<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupported",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html
Integrability,interface,interface,"hObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html
Modifiability,extend,extends,". DelaunayTriangulation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.features; Class DelaunayTriangulation. java.lang.Object; qupath.opencv.features.DelaunayTriangulation. All Implemented Interfaces:; PathObjectConnectionGroup. public class DelaunayTriangulation; extends Object; implements PathObjectConnectionGroup; Compute Delaunay triangulation using OpenCV. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass). Compute Delaunay triangulation - optionally omitting links above a fixed distance. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addClusterMeasurements(). Compute mean measurements from clustering all connected objects. void; addNodeMeasurements(). Add Delaunay measurements to each pathObject. boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Coll",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html
Performance,cache,cached,"ll, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to avoid too much recomputation. Returns:. addClusterMeasurements; public void addClusterMeasurements(); Compute mean measurements from clustering all connected objects. addNodeMeasurements; public void addNodeMeasurements(); Add Delaunay measurements to each pathObject. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html
Safety,avoid,avoid,"ll, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to avoid too much recomputation. Returns:. addClusterMeasurements; public void addClusterMeasurements(); Compute mean measurements from clustering all connected objects. addNodeMeasurements; public void addNodeMeasurements(); Add Delaunay measurements to each pathObject. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html
Security,hash,hashCode," Delaunay measurements to each pathObject. boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in inte",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html
Modifiability,plugin,plugins,". qupath.opencv.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.features. package qupath.opencv.features. Classes for feature calculation using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/package-summary.html
Usability,learn,learning,". qupath.opencv.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.features. package qupath.opencv.features. Classes for feature calculation using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/package-summary.html
Modifiability,plugin,plugins,. qupath.opencv.features Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv.features. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.opencv.features.DelaunayClusteringPlugin<T>. qupath.opencv.features.DelaunayTriangulation (implements qupath.lib.objects.PathObjectConnectionGroup). ,MatchSource.WIKI,javadoc/docs/qupath/opencv/features/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/package-tree.html
Availability,avail,available,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html
Energy Efficiency,adapt,adapter,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html
Integrability,adapter,adapter,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html
Modifiability,extend,extends,". OpenCVTypeAdapters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters. public class OpenCVTypeAdapters; extends Object; Helper classes for combining OpenCV's JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html
Security,hash,hashCode,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html
Modifiability,extend,extends,". OpenCVTypeAdapters.OpenCVTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdapter<T>. java.lang.Object; com.google.gson.TypeAdapter<T>; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter<T>. Type Parameters:; T - . Enclosing class:; OpenCVTypeAdapters. public abstract static class OpenCVTypeAdapters.OpenCVTypeAdapter<T>; extends TypeAdapter<T>; TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; read(JsonReader in);  ; void; write(JsonWriter out,; T value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapter; public OpenCVTypeAdapter(). Method Details. write; public void write(JsonWriter out,; T value); throws IOException. Specified by:; write in class TypeAdapter<T>; Throws:; IOException. read; public T read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<T>; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html
Security,hash,hashCode,". OpenCVTypeAdapters.OpenCVTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdapter<T>. java.lang.Object; com.google.gson.TypeAdapter<T>; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter<T>. Type Parameters:; T - . Enclosing class:; OpenCVTypeAdapters. public abstract static class OpenCVTypeAdapters.OpenCVTypeAdapter<T>; extends TypeAdapter<T>; TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; read(JsonReader in);  ; void; write(JsonWriter out,; T value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapter; public OpenCVTypeAdapter(). Method Details. write; public void write(JsonWriter out,; T value); throws IOException. Specified by:; write in class TypeAdapter<T>; Throws:; IOException. read; public T read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<T>; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html
Integrability,interface,interface,". OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; OpenCVTypeAdapters. public static class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdaptorFactory();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdaptorFactory; public OpenCVTypeAdaptorFactory(). Method Details. create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html
Modifiability,extend,extends,". OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; OpenCVTypeAdapters. public static class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdaptorFactory();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdaptorFactory; public OpenCVTypeAdaptorFactory(). Method Details. create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html
Security,hash,hashCode,". OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; OpenCVTypeAdapters. public static class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdaptorFactory();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdaptorFactory; public OpenCVTypeAdaptorFactory(). Method Details. create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html
Modifiability,plugin,plugins,". qupath.opencv.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.io. package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/package-summary.html
Usability,learn,learning,". qupath.opencv.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.io. package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/package-summary.html
Availability,avail,available,".BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; modelSpec - the model spec to initialize the parameters; preferredTileWidth - preferred tile width, or -1 to automatically determine this; the width will be updated based on the spec; preferredTileHeight - preferred tile height, or -1 to automatically determine this; the height will be updated based on the spec; inputOps - optional additional preprocessing ops to apply, before any in the model spec are added; Returns:. transformsToOp; public static ImageOp transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms); Create an ImageOp that applies the specified transforms sequentially.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; sometimes require global statistics (e.g. for normalization).; ; This method will make an attempt to return a suitable op, but it may ; not be able to incorporate all steps. Parameters:; transforms - ; Returns:. transformToOp; public static ImageOp transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform); Create an ImageOp that applies the specified transforms, if possible.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; sometimes require global statistics (e.g. for normalization).; ; This method will make an attempt to return a suitable op, but may ; return null if no such op is available. Parameters:; transform - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html
Deployability,update,updated,"ing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools(). Method Details. buildDnnModel; public static DnnModel buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec); Attempt to build a DnnModel that follows this spec as closely as possible.; ; In some instances, the processing steps requires by the spec might not currently be ; supported by QuPath - see transformToOp(Processing) for more information. Parameters:; spec - ; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; model - the model spec to initialize the parameters; inputOps - optional additional preprocessing ops to apply, before any in the model spec are added; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; modelSpec - the model spec to initialize the parameters; preferredTileWidth - preferred tile width, or -1 to automatically determine this; the width will be updated based on the spec; preferredTileHeight - preferred tile height, or -1 to automatically determine this; the height will be update",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html
Modifiability,extend,extends,". BioimageIoTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class BioimageIoTools. java.lang.Object; qupath.opencv.ml.BioimageIoTools. public class BioimageIoTools; extends Object; Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BioimageIoTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec). Attempt to build a DnnModel that follows this spec as closely as possible. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static ImageOp; transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms). Create an ImageOp that applies the specified transforms sequentially. static ImageOp; transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools().",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html
Security,hash,hashCode,"Spec.BioimageIoModel spec). Attempt to build a DnnModel that follows this spec as closely as possible. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static ImageOp; transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms). Create an ImageOp that applies the specified transforms sequentially. static ImageOp; transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools(). Method Details. buildDnnModel; public static DnnModel buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec); Attempt to build a DnnModel that follows this spec as closely as possible.; ; In some instances, the processing steps requires by the spec might not currently be ; supported by QuPath - see transformToOp(Processing) for more information. Parameters:; spec - ; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; model - the model spec to initialize the parameters; inputOps - optional additional pr",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html
Energy Efficiency,reduce,reduce,"ser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingD",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html
Modifiability,extend,extends,". FeaturePreprocessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is exp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html
Security,hash,hashCode,"iew; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingData - ; applyToTraining - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html
Modifiability,extend,extends,". FeaturePreprocessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor. public class FeaturePreprocessor; extends Object; Create a preprocessor for an image or training matrix.; This can include simple normalization (rescaling) and PCA projection. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html
Security,hash,hashCode," static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise, treat each column as a feature. apply; public void apply(Mat mat); Apply preprocessing in-place.; If the Mat has multiple channels, each channel is treated as a feature.; Otherwise, each row is treated as a feature. Parameters:; mat - . doesFeatureTransform; public boolean doesFeatureTransform(); Returns true if this preprocessor transforms the features beyond a simple normalization.; In practice, for the current implementation this means PCA. Returns:. doesSomething; public boolean doesSomething(); Returns true if this preprocessor has any effect. Returns:. getInputLength; public int getInputLength(); Get the number of features required of the input. Returns:. getOutputLength; public",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html
Usability,simpl,simple,". FeaturePreprocessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor. public class FeaturePreprocessor; extends Object; Create a preprocessor for an image or training matrix.; This can include simple normalization (rescaling) and PCA projection. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html
Modifiability,extend,extends,". OpenCVClassifiers.BoostClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.BoostClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html
Safety,predict,predict,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.BoostClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html
Modifiability,extend,extends,". OpenCVClassifiers.DTreesClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.DTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier u",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
Safety,predict,predict,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.DTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html
Modifiability,extend,extends,". OpenCVClassifiers.EMClusterer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropria",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
Safety,predict,predict,"d. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html
Integrability,wrap,wrappers,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
Modifiability,extend,extends,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
Performance,perform,performed,"assifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassif",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
Security,hash,hashCode,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html
Modifiability,extend,extends,". OpenCVClassifiers.LogisticRegressionClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
Safety,predict,predict,"onstr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsPro",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html
Modifiability,extend,extends,". OpenCVClassifiers.NormalBayesClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData t",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
Safety,predict,predict," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
Security,hash,hashCode,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifie",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html
Modifiability,extend,extends,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
Performance,perform,performed,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
Safety,predict,predict,"sifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supp",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
Security,hash,hashCode,"eterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise.",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html
Availability,avail,available,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
Modifiability,extend,extends,". OpenCVClassifiers.RTreesClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default va",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
Safety,predict,predict,"l; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
Security,hash,hashCode,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html
Modifiability,extend,extends,". OpenCVClassifiers.SVMClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using da",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
Safety,predict,predict,"eld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html
Modifiability,extend,extends,". OpenCVClassifiers.SVMSGDClassifierCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the clas",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
Safety,predict,predict," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
Security,hash,hashCode,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html
Deployability,patch,patch,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
Integrability,wrap,wrappers,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
Modifiability,plugin,plugins,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
Performance,perform,performed,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
Usability,learn,learning,". qupath.opencv.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClass",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html
Availability,down,downsample,"uilder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
Deployability,patch,patch,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
Modifiability,extend,extends,". PatchClassifierParams.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; output",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
Safety,predict,prediction,"cations for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChanne",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
Security,hash,hashCode,"tch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html
Deployability,patch,patch,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
Modifiability,extend,extends,". PatchClassifierParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams. java.lang.Object; qupath.opencv.ml.PatchClassifierParams. public class PatchClassifierParams; extends Object; Parameters required to build a classifier that operates on an image patch.; ; This is typically used to create a PixelClassifier.; It can also be used to create an ObjectClassifier that takes image patches as input ; (rather that features extracted from object ROIs or measurement lists). Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PatchClassifierParams.Builder; builder(). Create a builder to generate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; g",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
Safety,predict,prediction,"enerate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Retu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
Security,hash,hashCode,"PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally chan",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html
Availability,avail,available," Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to reflect the output of this transform, given the input. Parameters:; imageData - ; Returns:. appendOps; ImageDataOp appendOps(ImageOp... ops); Append one or more additional ImageOps sequentially.; This ImageDataOp is unchanged, and a new one is created with the additional op appended. Parameters:; ops - ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
Deployability,update,updateUris," Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to refle",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
Integrability,interface,interface,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
Modifiability,extend,extends,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html
Integrability,interface,interface,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
Modifiability,extend,extends,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html
Deployability,update,updateURIs,"c interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the paddin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
Integrability,interface,interface,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
Modifiability,extend,extends,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
Performance,perform,perform,"rride this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOExceptio",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
Usability,simpl,simple,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html
Modifiability,extend,extends,". ImageOps.Channels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Channels. java.lang.Object; qupath.opencv.ops.ImageOps.Channels. Enclosing class:; ImageOps. public static class ImageOps.Channels; extends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. rep",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html
Security,hash,hashCode,"xtends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a single-channel output. Returns:. minimum; public static ImageOp minimum(",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html
Energy Efficiency,power,power,"nstr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Core. java.lang.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
Modifiability,extend,extends,". ImageOps.Core (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Core. java.lang.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collect",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
Performance,perform,performed,"the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
Security,hash,hashCode,"p; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constan",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
Testability,log,log,"g.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the re",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html
Modifiability,extend,extends,". ImageOps.Filters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Filters. java.lang.Object; qupath.opencv.ops.ImageOps.Filters. Enclosing class:; ImageOps. public static class ImageOps.Filters; extends Object; Filtering operations. Constructor Summary; Constructors. Constructor; Description; Filters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; closing(int radius). Apply a 2D morphological closing filter. static ImageOp; features(Collection<MultiscaleFeatures.MultiscaleFeature> features,; double sigmaX,; double sigmaY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters()",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html
Security,hash,hashCode,"aY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters(). Method Details. gaussianBlur; public static ImageOp gaussianBlur(double sigmaX,; double sigmaY); Apply a (possibly anisotropic) 2D Gaussian filter. Parameters:; sigmaX - ; sigmaY - ; Returns:. gaussianBlur; public static ImageOp gaussianBlur(double sigma); Apply a 2D Gaussian filter. Parameters:; sigma - ; Returns:. filter2D; public static ImageOp filter2D(Mat kernel); Apply a 2D filter. Parameters:; kernel - ; Returns:. mean; public static ImageOp mean(int radius); Apply a 2D circular mean filter. Parameters:; radius - filter radius; Returns:. sum; public static ImageOp sum(int radius); Apply a 2D circular sum filter. Parameters:; radius - filter radius; Returns:. variance; public static ImageOp variance(int radius); Apply a 2D circular variance filter. Parameters:; radius - filter radius; Returns:. stdDev; public static ImageOp stdDev(int radius); Apply a 2D circular standard deviation f",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html
Integrability,wrap,wrap,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Modifiability,extend,extends,". ImageOps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applyin",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Performance,perform,performing,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Security,hash,hashCode,"ageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Testability,log,logged," for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Usability,learn,learning,"5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps. java.lang.Object; qupath.opencv.ops.ImageOps. public class ImageOps; extends Object; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. sta",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html
Modifiability,extend,extends,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
Safety,predict,prediction,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
Security,hash,hashCode," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreproce",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
Usability,learn,learning,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html
Modifiability,extend,extends,". ImageOps.Normalize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Normalize. java.lang.Object; qupath.opencv.ops.ImageOps.Normalize. Enclosing class:; ImageOps. public static class ImageOps.Normalize; extends Object; Normalization operations. Constructor Summary; Constructors. Constructor; Description; Normalize();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; channelSoftmax(double maxValue). Apply softmax, with the specified output maxValue. static ImageOp; channelSum(double maxValue). Normalize channels so that they sum to the specified value. static ImageOp; localNormalization(double sigmaMean,; double sigmaVariance). Apply local 2D normalization using Gaussian-weighted mean subtraction and (optionally) variance ; estimation. static ImageOp; minMax(). Normalize the minimum and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html
Security,hash,hashCode,"um and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This method is applied per-channel, with no eps added to the denominator if m",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html
Deployability,update,updateURIs,"ps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Energy Efficiency,efficient,efficient," Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndAppl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Integrability,interface,interface," | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Des",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Modifiability,extend,extends,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Performance,perform,perform,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Security,hash,hashCode,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Pa",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Usability,simpl,simplify,". ImageOps.PaddedOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since th",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html
Modifiability,extend,extends,". ImageOps.Threshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html
Security,hash,hashCode,"w; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Threshold. java.lang.Object; qupath.opencv.ops.ImageOps.Threshold. Enclosing class:; ImageOps. public static class ImageOps.Threshold; extends Object; Thresholding operations. Constructor Summary; Constructors. Constructor; Description; Threshold();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; threshold(double... thresholds). Apply a fixed threshold. static ImageOp; thresholdMeanStd(double... k). Threshold each channel based upon the channel mean and standard deviation. static ImageOp; thresholdMedianAbsDev(double... k). Threshold each channel based upon the channel median and median absolute deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Threshold; public Threshold(). Method Details. threshold; public static ImageOp threshold(double... thresholds); Apply a fixed threshold. Parameters:; thresholds - either a single-element array (to set the same threshold everywhere), or an array with ; one element per channel.; Returns:. thresholdMeanStd; public static ImageOp thresholdMeanStd(double... k); Threshold each channel based upon the channel mean and standard deviation.; The threshold is mean + k * std.dev.. Parameters:; k - ; Returns:. thresholdMedianAbsDev; public static ImageOp thresholdMedianAbsDev(double... k); Threshold each channel based upon the channel median and median absolute deviation.; The threshold is median + k * MAD / 0.6750., where the normalizing factor enables ; k to be comparable to a scale factor applied to a standard deviation (assuming a roughly normal distribution). Parameters:; k - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Threshold.html
Integrability,wrap,wraps,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
Modifiability,plugin,plugins,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
Usability,learn,learning,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ops/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html
Deployability,release,releases,". GroovyCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class GroovyCV. java.lang.Object; qupath.opencv.tools.GroovyCV. public class GroovyCV; extends Object; Category class for enhanced Groovy scripting with OpenCV.; ; See https://docs.groovy-lang.org/latest/html/api/groovy/lang/Category.html; ; Warning! This is experimental and likely to change between QuPath releases.; Use with caution and discuss on http://forum.image.sc/tag/qupath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Mat; abs(Mat mat). Compute the absolute value of all elements in an array. static Mat; and(Mat m1,; Mat m2). Compute the bitwise AND of two arrays. static <T> T; asType(ImagePlus imp,; Class<T> cls). Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. static <T> T; asType(ImageProcessor ip,; Class<T> cls). Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. static <T> T; asType(BufferedImage img,; Class<T> cls). Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. static <T> T; asType(Number n,; Class<T> cls). Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. static <T> T; asType(Mat mat,; Class<T> cls). Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's 'as' syntax. static Mat; bitwiseNegate(Mat m1). Compute the bitwise NOT of an array. static Mat; clip(Mat mat,; double min,; double max). Clip values of a Mat to be withi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
Energy Efficiency,power,power,"Mat mat). Find the minimum of all elements in a Mat, ignoring NaNs. static Mat; minimum(Mat m1,; double d). Get the per-element minimum value between an array and a scalar. static Mat; minimum(Mat m1,; Mat m2). Get the per-element minimum value for two arrays. static Mat; minus(Mat m1,; Number s). Subtract a constant from an array. static Mat; minus(Mat m1,; Mat m2). Subtract one array from another. static Mat; minus(Mat m1,; Scalar s). Subtract a scalar from an array. static Mat; multiply(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the s",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
Modifiability,extend,extends,". GroovyCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class GroovyCV. java.lang.Object; qupath.opencv.tools.GroovyCV. public class GroovyCV; extends Object; Category class for enhanced Groovy scripting with OpenCV.; ; See https://docs.groovy-lang.org/latest/html/api/groovy/lang/Category.html; ; Warning! This is experimental and likely to change between QuPath releases.; Use with caution and discuss on http://forum.image.sc/tag/qupath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Mat; abs(Mat mat). Compute the absolute value of all elements in an array. static Mat; and(Mat m1,; Mat m2). Compute the bitwise AND of two arrays. static <T> T; asType(ImagePlus imp,; Class<T> cls). Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. static <T> T; asType(ImageProcessor ip,; Class<T> cls). Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. static <T> T; asType(BufferedImage img,; Class<T> cls). Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. static <T> T; asType(Number n,; Class<T> cls). Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. static <T> T; asType(Mat mat,; Class<T> cls). Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's 'as' syntax. static Mat; bitwiseNegate(Mat m1). Compute the bitwise NOT of an array. static Mat; clip(Mat mat,; double min,; double max). Clip values of a Mat to be withi",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
Security,hash,hashCode," multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. max; public static double max(Mat mat); Find the maximum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. min; public static double min(Mat mat); Find the minimum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. flatten; public static Mat flatten(Mat mat); Flatten a Mat to give a single column. Parameters:; mat - ; Returns:. shape; public static long[] shape(Mat mat); Get the shape of a multidimensional Mat. Parameters:; mat -",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/GroovyCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html
Modifiability,extend,extends,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Interpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html
Security,hash,hashCode,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Interpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html
Energy Efficiency,efficient,efficient,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
Modifiability,extend,extends,". LocalNormalization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization. java.lang.Object; qupath.opencv.tools.LocalNormalization. public class LocalNormalization; extends Object; Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance.; Calculations are made using Gaussian filters to give a smooth result. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
Security,hash,hashCode,"cal normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted f",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
Usability,simpl,simple,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html
Modifiability,extend,extends,". LocalNormalization.LocalNormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.LocalNormalizationType. java.lang.Object; qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Enclosing class:; LocalNormalization. public static class LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html
Security,hash,hashCode," LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance); Get an object containing the parameters necessary for normalization. Parameters:; scale - Gaussian sigma value used for initial filters (mean subtraction); scaleVariance - sigma value used for variance estimation (may be null to apply subtraction only); Returns:. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio); Get an object containing the parameters necessary for normalization. Parameters:; sc",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html
Integrability,interface,interfaces,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
Modifiability,extend,extends,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
Security,hash,hashCode,"enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of t",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html
Integrability,depend,depending,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
Modifiability,extend,extends,". LocalNormalization.SmoothingScale (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
Security,hash,hashCode," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D an",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html
Integrability,interface,interface,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
Modifiability,extend,extends,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html
Integrability,interface,interface,".opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
Modifiability,extend,extends,". MultiscaleFeatures.Hessian2D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
Security,hash,hashCode,"nstr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html
Integrability,interface,interface,"ls.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
Modifiability,extend,extends,". MultiscaleFeatures.Hessian3D (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian;",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
Security,hash,hashCode,"thod. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html
Integrability,interface,interface,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
Modifiability,extend,extends,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
Security,hash,hashCode,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html
Integrability,depend,dependent,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
Modifiability,extend,extends,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
Security,hash,hashCode,"_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDD",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html
Availability,avail,available,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
Integrability,interface,interfaces,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
Modifiability,extend,extends,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
Security,access,access,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
Usability,clear,clear,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html
Availability,down,downsampleXY,"slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.MultiscaleResultsBuilder; hessianDeterminant(boolean calculate). Calculate the determinant of the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; hessianEigenvalues(boolean calculate). Calculate the eigenvalues of the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; laplacianOfGaussian(boolean calculate). Calculate the Laplacian of Gaussian image. MultiscaleFeatures.MultiscaleResultsBuilder; paddingXY(int padding). Specify the number of pixels that the input image is padded (left, right, above, below). MultiscaleFeatures.MultiscaleResultsBuilder; pixelCalibration(PixelCalibration cal,; double downsampleXY). Set the pixel calibration, with optional x,y scaling. MultiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standar",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
Modifiability,extend,extends,". MultiscaleFeatures.MultiscaleResultsBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.MultiscaleResultsBuilder; extends Object; Helper-class for computing pixel-features at a specified scale. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Constructor Summary; Constructors. Constructor; Description; MultiscaleResultsBuilder(). Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features). Constructor prepared to calculate specified features. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap>; build(List<Mat> mats). Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(List<Mat> mats,; int ind). Calculate results for a map of features and Mats for one slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.M",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
Security,access,access,". MultiscaleFeatures.MultiscaleResultsBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.MultiscaleResultsBuilder; extends Object; Helper-class for computing pixel-features at a specified scale. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Constructor Summary; Constructors. Constructor; Description; MultiscaleResultsBuilder(). Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features). Constructor prepared to calculate specified features. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap>; build(List<Mat> mats). Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(List<Mat> mats,; int ind). Calculate results for a map of features and Mats for one slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.M",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html
Modifiability,extend,extends,". NumpyTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class NumpyTools. java.lang.Object; qupath.opencv.tools.NumpyTools. public class NumpyTools; extends Object; Read .npy and .npz files from NumPy.; ; Note that only a subset of files are supported.; Specifically, each .npy file should contain a single (possibly multidimensional) ; array with a type supported by OpenCV.; ; Structured, complex and object arrays are not supported.; ; See ; https://numpy.org/devdocs/reference/generated/numpy.lib.format.html; for more information about the format. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; NumpyTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Map<String,Mat>; readAllMats(String path). Read a all Mats from an .npy or .npz file. static Map<String,Mat>; readAllMats(String path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz file, optionally squeezing singleton dimensions. static Map<String,Mat>; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optiona",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/NumpyTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html
Security,hash,hashCode,">; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; Throws:; IOException. readAllMats; public static Map<String,Mat> readAll",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/NumpyTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html
Availability,mask,mask," merging the result and storing the result in-place. static void; ceil(Mat mat). Ceil values in a floating point Mat. static double[]; channelMaximum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelMean(Mat mat). Get the mean of an image channel, ignoring NaNs. static double[]; channelMinimum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; c",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Deployability,continuous,continuous,"cing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extra",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Modifiability,extend,extends,". OpenCVTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools. java.lang.Object; qupath.opencv.tools.OpenCVTools. public class OpenCVTools; extends Object; Collection of static methods to help with using OpenCV from Java. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. Constructor Summary; Constructors. Constructor; Description; OpenCVTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addNoise(Mat mat,; double mean,; double stdDev). Add Gaussian noise with specified mean and standard deviation to all channels of a Mat. static void; apply(Mat mat,; DoubleUnaryOperator operator). Apply an operation to the pixels of an image. static Mat; applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType). Apply a function to a Mat that strictly requires a specific input size. static void; applyToChannels(Mat input,; Consumer<Mat> fun). Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. static void; ceil(Mat mat). Ceil values in a floating point Mat. static double[]; channelMaximum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelMean(Mat mat). Get the mean of an image channel, ignoring NaNs. static double[]; channelMinimum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignor",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Safety,detect,detection,", ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creatin",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Security,hash,hashCode,"aCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no ma",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Testability,log,logged,"enCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the pre",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Usability,guid,guided," a circular 2D sum filter to all channels of an image. static String; trackedMemory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int get",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html
Modifiability,extend,extends,". OpenCVTools.IndexedPixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public l",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
Safety,avoid,avoids,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
Security,hash,hashCode,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html
Integrability,depend,dependent," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
Modifiability,plugin,plugins,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
Security,access,access," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
Usability,learn,learning,". qupath.opencv.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.tools. package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html
Modifiability,extend,extends,". ProcessingCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); App",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html
Security,hash,hashCode," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html
Modifiability,extend,extends,". Thinning (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
Performance,optimiz,optimizations,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (ty",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
Security,hash,hashCode,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/tools/Thinning.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html
Availability,avail,available,"turning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; path",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Integrability,interface,interface,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Modifiability,extend,extends,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Safety,predict,prediction,"turning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; path",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Security,hash,hashCode,"; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collecti",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Testability,test,test,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html
Usability,learn,learning,. qupath.opencv.ml.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects. package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Classes. Class; Description; OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/package-summary.html
Usability,learn,learning,. qupath.opencv.ml.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.pixel. package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. Related Packages. Package; Description; qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesClassesEnum Classes. Class; Description; PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/package-summary.html
Modifiability,extend,extends,". PixelClassificationMeasurementManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
Performance,cache,cached,"Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) inst",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
Security,hash,hashCode,"he names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. P",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html
Modifiability,extend,extends,". PixelClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
Security,hash,hashCode,"ageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
Usability,simpl,simple," Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifiers. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifiers. public class PixelClassifiers; extends Object; Static methods and classes for working with pixel classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelClassifier; createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit). Create a PixelClassifier based on an OpenCV StatModel and feature calculator. static PixelClassifier; createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata). Convert an ImageDataOp into a simple classifier. static PixelClassifier; createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClas",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html
Integrability,interface,interfaces," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAl",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
Modifiability,extend,extends,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
Safety,avoid,avoid,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
Security,hash,hashCode," a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PixelClassifierToo",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html
Availability,mask,mask,"plying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the thresholded server. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one channel of another server. Parameters:; server - the server to threshold; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); aboveEquals - the classification for pixels greater than or equal to the threshol",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
Modifiability,extend,extends,". PixelClassifierTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifierTools. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifierTools. public class PixelClassifierTools; extends Object; Helper methods for working with pixel classification. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifie",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
Performance,cache,cacheAllTiles,"ver<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Const",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
Safety,predict,prediction,"; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions...",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
Security,hash,hashCode,"ePixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifi",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html
Integrability,interface,interface,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
Modifiability,extend,extends,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
Testability,test,test,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html
Modifiability,extend,extends,". FeatureExtractors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class FeatureExtractors. java.lang.Object; qupath.opencv.ml.objects.features.FeatureExtractors. public class FeatureExtractors; extends Object; Helper class for extracting features from objects, used along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
Security,hash,hashCode,"mary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - or",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html
Modifiability,extend,extends,". Normalizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Normalizer. java.lang.Object; qupath.opencv.ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeatur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
Security,hash,hashCode," Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeature(int idx,; double originalValue); Normalize a single feature. Parameters:; idx - the index of the feature; this is required to identify the corresponding offset and scale; originalValue - the original value of the feature; Returns:; the normalized value of the feature. isIdentity; public boolean isIdentity(); Returns true if this normalizer does not actually do anything.; This is the case if all offsets are zero and all scales are 1. Returns:. getMissingValue; public double getMissing",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
Usability,simpl,simple,". Normalizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Normalizer. java.lang.Object; qupath.opencv.ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeatur",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html
Usability,simpl,simple,". qupath.opencv.ml.objects.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ml.objects.features. package qupath.opencv.ml.objects.features. Extract object features using OpenCV. Related Packages. Package; Description; qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. All Classes and InterfacesInterfacesClasses. Class; Description; FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/package-summary.html
Energy Efficiency,reduce,reduce,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale i",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
Modifiability,extend,extends,". Preprocessing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the outpu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
Security,hash,hashCode,"g; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. miss",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
Usability,learn,learning,". Preprocessing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the outpu",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html
Integrability,interface,interface,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
Modifiability,extend,extends,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
Security,hash,hashCode,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html
Usability,learn,learning,". qupath.process.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui. package qupath.process.gui. General-purpose image processing and machine learning commands.; These make use of the OpenCV library for image processing (https://opencv.org). Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. All Classes and InterfacesClassesEnum Classes. Class; Description; ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/package-summary.html
Deployability,install,installExtension,"n. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Integrability,interface,interface,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Modifiability,extend,extends,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Security,hash,hashCode,"y; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the exten",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Testability,test,test," Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Return",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Usability,learn,learning,". ProcessingExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension. java.lang.Object; qupath.process.gui.ProcessingExtension. All Implemented Interfaces:; QuPathExtension. public class ProcessingExtension; extends Object; implements QuPathExtension; General-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands t",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html
Modifiability,extend,extends,". ProcessingExtension.ObjectClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Cl",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
Performance,load,loadObjectClassifier,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
Security,hash,hashCode,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html
Modifiability,extend,extends,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
Performance,load,load,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
Security,hash,hashCode,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html
Modifiability,extend,extends,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html
Security,hash,hashCode,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html
Modifiability,extend,extends,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
Performance,load,loadPixelClassifier,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
Security,hash,hashCode,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html
Integrability,depend,depend,"y need the diameter for calculations here, but it's helpful for setting the cursor. Overrides:; getBrushDiameter in class BrushToolEventHandler. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
Modifiability,extend,extends,". WandToolEventHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; qupath.process.gui.WandToolEventHandler. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. public class WandToolEventHandler; extends BrushToolEventHandler; Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; wandSensitivity. Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixels. Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandType. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlays. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; WandToolEventHandler.WandPreferences;  ; static enum ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Constructor Summary; Constructors. Constructor; Description; WandToolEventHandler(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected PathObj",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
Safety,avoid,avoid,"ng based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. static void; setWandSensitivity(double sensitivity). Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static void; setWandSigmaPixels(double sigma). Set the Gaussian sigma value used to smooth the image when applying the wand. static void; setWandUseOverlays(boolean useOverlays). Set whether the wand tool should be influenced by pixel values painted on image overlays. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, pref",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
Security,hash,hashCode,"; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity value, which influences how similar local intensity values must be for ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html
Modifiability,extend,extends,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html
Security,hash,hashCode,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html
Integrability,interface,interfaces,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
Modifiability,extend,extends,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
Security,hash,hashCode,"oolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum consta",MatchSource.WIKI,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html
Integrability,interface,interface,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
Modifiability,extend,extends,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
Security,hash,hashCode,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html
Integrability,interface,interface,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
Modifiability,extend,extends,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
Safety,detect,detection,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
Security,hash,hashCode,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html
Integrability,interface,interface,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
Modifiability,extend,extends,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
Security,hash,hashCode,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html
Integrability,interface,interface,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
Modifiability,extend,extends,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
Security,hash,hashCode,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html
Availability,avail,availableClasses,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
Modifiability,extend,extends,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
Security,hash,hashCode,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html
Integrability,interface,interface,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
Modifiability,extend,extends,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
Safety,detect,detections,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
Security,hash,hashCode,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html
Integrability,interface,interface,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
Modifiability,extend,extends,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
Security,hash,hashCode,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html
Integrability,interface,interface,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
Modifiability,extend,extends,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
Safety,detect,detection,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
Security,hash,hashCode,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html
Integrability,interface,interface,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
Modifiability,extend,extends,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
Security,hash,hashCode,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html
Safety,detect,detections," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
Security,validat,validation," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
Testability,test,test," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
Usability,learn,learning,". qupath.process.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands. package qupath.process.gui.commands. QuPath commands relevant for machine learning. Related Packages. Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html
Integrability,interface,interface,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
Modifiability,extend,extends,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
Security,hash,hashCode,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html
Integrability,interface,interface,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
Modifiability,extend,extends,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
Security,hash,hashCode,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
Usability,simpl,simple,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html
Integrability,interface,interface,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
Modifiability,extend,extends,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
Security,hash,hashCode,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html
Integrability,interface,interface,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
Modifiability,extend,extends,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
Security,validat,validation,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
Testability,test,test,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html
Deployability,update,updateDefaults,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
Modifiability,extend,extends,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
Security,hash,hashCode,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html
Availability,avail,available,"all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton); Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map).; ; Note that because density maps need to reflect the current hierarchy, but should be relatively fast to compute (at low resolution), ; the full density map is generated upon request. Parameters:; qupath - QuPathGUI instance, used to identify viewers; imageData - expression returning the ImageData to use; builder - expression returning the DensityMaps.DensityMapBuilder to use; densityMapName - name of the density map, if it has been saved (otherwise null). This is used for writing workflow steps.; overlay - optional overlay; if present, this could be used by commands to update display (e.g. by temporarily setting a color model).; enableUnsavedButton - add button to enable buttons even if no name is available (indicating the map has not been saved).; Returns:; a pane that may be added to a stage. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
Deployability,update,update,"all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton); Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map).; ; Note that because density maps need to reflect the current hierarchy, but should be relatively fast to compute (at low resolution), ; the full density map is generated upon request. Parameters:; qupath - QuPathGUI instance, used to identify viewers; imageData - expression returning the ImageData to use; builder - expression returning the DensityMaps.DensityMapBuilder to use; densityMapName - name of the density map, if it has been saved (otherwise null). This is used for writing workflow steps.; overlay - optional overlay; if present, this could be used by commands to update display (e.g. by temporarily setting a color model).; enableUnsavedButton - add button to enable buttons even if no name is available (indicating the map has not been saved).; Returns:; a pane that may be added to a stage. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
Modifiability,extend,extends,". DensityMapUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapUI. java.lang.Object; qupath.process.gui.commands.density.DensityMapUI. public class DensityMapUI; extends Object; UI elements associated with density maps. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; ANY_CLASS. Ignore classification (accept all objects). static final PathClass; ANY_POSITIVE_CLASS. Accept any positive classification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
Security,hash,hashCode,"lassification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<Ima",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html
Usability,learn,learning,. qupath.process.gui.commands.density (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.density. package qupath.process.gui.commands.density. UI classes to support density maps. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; DensityMapDialog. Dialog for interactively generating a custom density map. DensityMapUI. UI elements associated with density maps. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/density/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/package-summary.html
Modifiability,extend,extends,". BoundaryStrategy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class BoundaryStrategy. java.lang.Object; qupath.process.gui.commands.ml.BoundaryStrategy. public class BoundaryStrategy; extends Object; Helper class for handling the boundaries of training annotations when creating a pixel classifier.; ; The purpose of this is to provide a mechanism for learning the separation between densely packed objects (e.g. nuclei). Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getB",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
Security,hash,hashCode,"r:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassif",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
Usability,learn,learning,". BoundaryStrategy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class BoundaryStrategy. java.lang.Object; qupath.process.gui.commands.ml.BoundaryStrategy. public class BoundaryStrategy; extends Object; Helper class for handling the boundaries of training annotations when creating a pixel classifier.; ; The purpose of this is to provide a mechanism for learning the separation between densely packed objects (e.g. nuclei). Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; PathClass; getBoundaryClass(PathClass pathClass). Get the classification to be used for the annotation boundary, given the classification of the annotated region. double; getBoundaryThickness(). Get the boundary thickness, in pixels. static BoundaryStrategy; getClassifyBoundaryStrategy(PathClass pathClass,; double thickness). Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. static BoundaryStrategy; getDerivedBoundaryStrategy(double thickness). Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getB",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html
Modifiability,extend,extends,". ClassificationResolution (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageDa",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
Security,hash,hashCode,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
Usability,simpl,simple,"x; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html
Integrability,interface,interface,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
Usability,learn,learning,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html
Availability,avail,available,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
Deployability,install,installDefaultFeatureClassificationBuilder,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
Integrability,interface,interface,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
Modifiability,extend,extends,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
Security,hash,hashCode,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html
Modifiability,extend,extends,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
Security,hash,hashCode,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html
Availability,avail,available,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate f",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
Modifiability,extend,extends,". PixelClassifierTraining (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at whic",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
Security,hash,hashCode,"automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTraining; public PixelClassifierTraining(ImageDataOp featureCalculator); Create a new pixel classifier helper, to support generating training data. Parameters:; featureCalculator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public Boundar",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html
Availability,avail,available,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
Modifiability,extend,extends,". PixelClassifierUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierUI. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierUI. public class PixelClassifierUI; extends Object; Helper class for generating standardized UI components for pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<Region",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
Security,hash,hashCode,"e; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
Testability,log,logged,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html
Modifiability,extend,extends,". ProjectClassifierBindings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project.",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html
Security,hash,hashCode,"). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project. Parameters:; textField - ; project - . ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html
Integrability,interface,interface,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
Modifiability,extend,extends,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
Performance,load,load,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
Security,hash,hashCode,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html
Usability,learn,learning,. qupath.process.gui.commands.ui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ui. package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Classes. Class; Description; LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ,MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/package-summary.html
Modifiability,extend,extends,". SaveResourcePaneBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class SaveResourcePaneBuilder<T>. java.lang.Object; qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>. Type Parameters:; T - . public class SaveResourcePaneBuilder<T>; extends Object; Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way.; This is not intended for use by external code. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Paramete",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
Security,hash,hashCode,"onstructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; ",MatchSource.WIKI,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html
