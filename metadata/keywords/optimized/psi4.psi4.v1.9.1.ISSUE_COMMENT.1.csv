quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962#issuecomment-384487129:29,error,errors,29,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129,2,['error'],"['error', 'errors']"
Availability,"Please guys, I am still battling with how I can generate potential energy curves for the CF molecule for at 5 excited states. Here's the code I am trying to debug it's error.; import numpy as np; import matplotlib.pyplot as plt; import psi4. def compute_energy(bond_length):; molecule = psi4.geometry(f""""""; 0 2; C 0.000000000 0.000000000 0.000000000; F 0.000000000 0.000000000 {bond_length:.6f}; """"""). psi4.set_options({; 'basis': 'cc-pVTZ',; 'reference': 'rohf',; 'maxiter': 500,; 'restricted_docc': [1, 0, 1, 0],; 'active': [3, 1, 2, 2],; 'mcscf_max_iter': 1000,; 'num_roots': 1,; 'avg_states': [0],; 'avg_weights': [1],; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'guess': 'sad'; }). try:; energy = psi4.energy('scf'); return energy; except Exception as e:; print(f""Error computing ground state energy at bond length {bond_length}: {str(e)}""); return float('nan'). def compute_energies(bond_length, num_states, methods_to_try):; psi4.core.set_output_file('output.dat', False); ; cf_molecule = psi4.geometry(f""""""; 0 2; C; F 1 {bond_length}; symmetry c1; units angstrom; """"""). psi4.set_options({; 'basis': 'cc-pvtz',; 'reference': 'uhf',; 'scf_type': 'pk',; 'e_convergence': 1e-8,; 'd_convergence': 1e-8,; 'maxiter': 500,; }). energies = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}; wfns = {method: {state: [] for state in range(1, num_states + 1)} for method in methods_to_try}. try:; scf_e, scf_wfn = psi4.energy('scf', return_wfn=True). for method in methods_to_try:; psi4.set_options({f'{method.lower()}__nroots': num_states}); energy, wfn = psi4.energy(method, return_wfn=True); for state in range(1, num_states + 1):; if energy is not None: # Check if energy calculation was successful; energies[method][state].append(energy[state - 1]); wfns[method][state].append(wfn[state - 1]); else:; energies[method][state].append(float('nan')); wfns[method][state].append(None). except Exception as e:; print(f""Error computing energies at bond length {bo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:168,error,error,168,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,2,"['Error', 'error']","['Error', 'error']"
Availability,"Please let us know how you installed Psi4. In particular, we need to know the version number that should appear in the header of your input file. @loriab, I hate to keep pinging you on things, but I feel that the CFOUR interface is your department.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155129126:170,ping,pinging,170,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155129126,1,['ping'],['pinging']
Availability,Please ping me for review once Lori approves. She knows this part of the code better than I do.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1261118004:7,ping,ping,7,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1261118004,1,['ping'],['ping']
Availability,"Please post the other systems as well. For a normal organic molecule one should not need 0.0 tolerance. ; Looking at the `screen_zero.out.txt` output I see negative virtual orbital energies in the converged SCF, which tells me something is still wrong. Zwitterionic system?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2114#issuecomment-779484366:93,toler,tolerance,93,https://psicode.org,https://github.com/psi4/psi4/issues/2114#issuecomment-779484366,1,['toler'],['tolerance']
Availability,Please rebase and push again. The test failure (unrelated to this PR) should be fixed.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2761#issuecomment-1302395632:39,failure,failure,39,https://psicode.org,https://github.com/psi4/psi4/pull/2761#issuecomment-1302395632,1,['failure'],['failure']
Availability,"Please update the error message to say that the grid is unusable with COSX, rather than ""better fix"" incoming.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906#issuecomment-1497949553:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/pull/2906#issuecomment-1497949553,1,['error'],['error']
Availability,"Possible, but I really doubt it, as glibc mismatches aren't usually healable. Usually this is a symptom of packages depending on different versions of a library and symbols getting sometimes loaded one way and sometimes another depending on import order. Often fixable by swapping import order, but in the psi-in-jupyter case, there's simply nothing to swap. I thoroughly expected this to be fixed when I built with the newer compilers and was alarmed when it wasn't. @sergsb, would you want to try the conda env line in https://github.com/psi4/psi4/issues/862#issuecomment-347074303 ? Possibly more defaults packages have been updated to the new compilers since November and healed the problem. Only thing else I can think of is that I'm still linking libc++ statically (which it should be entirely safe to do, being the least-fundamental of the `glibc`, `libgcc_s`, `libstdc++` trio) and that's running into a symbol error with the jupyter stack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369640226:919,error,error,919,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369640226,2,['error'],['error']
Availability,"Posting Dom's very nice summary for easier perusal and searchability. Effective `scf_type df` Testing: `mem_df` & `disk_df`; =====================================================. All tests listed below examine calls to both `energy()` and `gradient()` when; employing the `scf_type mem_df` and `scf_type disk_df` settings. Each test; employs a different model chemistry (indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:525,Error,Error,525,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['Error'],['Error']
Availability,"Pretty sure I'm using the homebrew boost, but that could still be the; problem. I upgraded homebrew a few days ago, but I didn't recompile PSI; since. The current homebrew boost is 1.60.0, and cmake sees it when it; configures. Everything compiles smoothly, but I get the following error; immediately on any attempt to execute with any input file:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""/Users/crawdad/psi4/share/psi4/python/aliases.py"", line 39, in; <module>. ```; from wrappers import *; ```. File ""/Users/crawdad/psi4/share/psi4/python/wrappers.py"", line 39, in; <module>. ```; from driver import *; ```. File ""/Users/crawdad/psi4/share/psi4/python/driver.py"", line 265, in; <module>. ```; for ssuper in superfunctional_list():; ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 3365, in; superfunctional_list. ```; sup = superfunctionals[key](key, 1, 1); ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 1910, in; build_b3lypd1_superfunctional. ```; sup = build_b3lyp_superfunctional(name, npoints, deriv); ```. File ""/Users/crawdad/psi4/share/psi4/python/functional.py"", line 1224, in; build_b3lyp_superfunctional. ```; sup = psi4.SuperFunctional.blank(); ```. TypeError: No to_python (by-value) converter found for C++ type:; boost::shared_ptrpsi::SuperFunctional. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Tue, Feb 2, 2016 at 2:39 PM, Andy Simmonett notifications@github.com; wrote:. > Messaging from 30000 feet, @lothian https://github.com/lothian . Fancy!; > I bet the problem you're seeing is due to some incompatibility between the; > way boost and psi4 are compiled. On the Mac I had a hard time getting a GCC; > version to compile. I had to compile boost with some modified settings to; > get the code to link, but it failed in the way that you described when it; > did link. I had no problems using the Homebrew (or the Psi4 bundled) Boost; > if I used clang.; > ; > —; > Reply to this emai",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178853828:282,error,error,282,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178853828,1,['error'],['error']
Availability,"Proposal for keyword reorganization, replacing `DFT_PRUNING_SCHEME` like so:. ```; DFT_PRUNING_SCHEME = 'FUNCTION' 'REGION'; DFT_PRUNING_FUNCTION = 'FLAT' 'P-SLATER' '...' ; DFT_PRUNING_REGION = 'ROBUST' 'TREUTLER'; ```. Maybe current `DFT_PRUNING_SCHEME` could handle both sub-options somehow? but I don't see an easy way to do it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494350678:196,ROBUST,ROBUST,196,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494350678,1,['ROBUST'],['ROBUST']
Availability,"Provided your `ldd -v /miniconda/envs/psi4-env/lib/python2.7/site-packages/psi4.so` is actually `ldd -v /home/artfin/miniconda/envs/psi4-env/lib/python2.7/site-packages/psi4.so`, then your `ldd` trace looks good. I'd like to see your `gcc --version` return the `/home/artfin/miniconda/envs/psi4-env/bin/gcc`, though. Could you `source activate psi4-env` and try running psi4 again. Failing that, try the `export LD_LIBRARY_PATH=/home/artfin/miniconda/envs/psi4-env/lib:$LD_LIBRARY_PATH`. And supply your exact error, please.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675#issuecomment-296875163:510,error,error,510,https://psicode.org,https://github.com/psi4/psi4/issues/675#issuecomment-296875163,1,['error'],['error']
Availability,"Psi has a mechanism to make VV10 a post-iteration correction. How about allowing stability analysis / TDDFT if VV10 is post-iterative, and raising an error otherwise, directing users to make VV10 post-iterative?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2849#issuecomment-1380313699:150,error,error,150,https://psicode.org,https://github.com/psi4/psi4/pull/2849#issuecomment-1380313699,1,['error'],['error']
Availability,"Psi's default behavior is to default to the LibXC density tolerance, although this can be overridden if the user supplies the `DFT_DENSITY_TOLERANCE` keyword. This is a large cutoff indeed, and I have not found any mention in DFT hessian papers of special recommendations for screening based on density, only recommendations for screening of AO-indexed quantities. (See Sec. IIIA [here](https://aip.scitation.org/doi/10.1063/1.466887). Sadly, I have found no record of Ref. 48 ever being published.) This seems large to me, but I'd rather not touch it too much without either an expert opinion or word from @dgasmith on what the impetus for this cutoff was.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1351452556:58,toler,tolerance,58,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1351452556,1,['toler'],['tolerance']
Availability,"Psi4 is really only safe to install with a defaults base, not a c-f base, on Linux. If you added `defaults` to the channel list or `anaconda::intel-openmp`, it'd likely solve, but I think you'd get a runtime error related to symbols and/or mkl- vs openblas-based environment. It's possible to get it working through a careful install order (iirc) or to run two conda envs at once (one defaults-based with psi4 and one c-f based with others) as the ecosystem GHA does. But on the whole, Linux psi4 in c-f env is not suggested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1164880108:208,error,error,208,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1164880108,1,['error'],['error']
Availability,"Psi4 version 0.4.186 was installed using miniconda on Linux 4.4.5-200.fc22.x86_64 #1 SMP Thu Mar 10 17:54:17 UTC 2016 x86_64 x86_64. Parenthetical polarization qualifiers in Pople basis set names do not parse reliably. While 6-31G(d), 6-31G(d,p) names are accepted, more elaborately polarized basis set names fail unless [+,()] conversion to _underscore_ is already done. ""set basis **6-311G(2d,2p)**"" is in the attached example. ; Instead of seeking file **6- 311g_2d_2p_.gbs**, it aborts from the boost-python module (instead of from ./share/psi4/python/inputparser.py or similar):. > _An error has occurred. Traceback:; > <class 'Boost.Python.ArgumentError'>: Python argument types in; > psi4.set_global_option(str, str, str); > did not match C++ signature:; > set_global_option(Ss, N5boost6python4listE); > set_global_option(Ss, N5boost6python4listE, PN3psi8DataTypeE); > set_global_option(Ss, i); > set_global_option(Ss, d); > set_global_option(Ss, Ss): File ""<string>"", line 28, in <module>_. [h2o.zip](https://github.com/psi4/psi4/files/190703/h2o.zip)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-201953614:209,reliab,reliably,209,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-201953614,2,"['error', 'reliab']","['error', 'reliably']"
Availability,"Psi4 was changing Libint2 requirements a good deal in mid-2021 through early-2022. So if your environment is from before, say, April 2022, but your psi4 src is newer, it's better to create a fresh psi4-dev env. At present you should be using one of. * [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2); * [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); * [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2). You can see what you've got with `conda list`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2879#issuecomment-1437802626:337,down,download,337,https://psicode.org,https://github.com/psi4/psi4/issues/2879#issuecomment-1437802626,3,['down'],['download']
Availability,"Py 3.6 is now available on anaconda as well, see #1827.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1825#issuecomment-594346555:14,avail,available,14,https://psicode.org,https://github.com/psi4/psi4/pull/1825#issuecomment-594346555,1,['avail'],['available']
Availability,"Quite right on the chicken/egg problem. One approach I considered was to get normal 3-round approval of this PR with the current scf-only changes. The re-rebase it, `c-f` it, and post it to psi4/psi4 as a branch. _Then_ ppl can make additional EFP/PCM/etc. PRs to that branch rather than master, so all the discussion will stay on psi4/psi4 but we won't have an enormous final PR that no one wants to review. For longer term, though, yes, if we had a stable, vetted, low-key release every couple months, there wouldn't be this considerable pressure to maintain master in top-notch working order. And if we wanted to deprecate something, wouldn't take 2 years to get through warning release, then error release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/847#issuecomment-347013624:696,error,error,696,https://psicode.org,https://github.com/psi4/psi4/pull/847#issuecomment-347013624,1,['error'],['error']
Availability,"Ran into this issue myself a week ago. It turns out that you need to patch a few file in the MRCC tarball and recompile to make it work (and this has to be done independently of the Psi4 interface) I couldn't see this info advertised on the MRCC website, I happened to browse the ""Patches"" section in their download page and noticed that there were few patches more recent than the tarball I had just downloaded.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866#issuecomment-613267151:307,down,download,307,https://psicode.org,https://github.com/psi4/psi4/issues/1866#issuecomment-613267151,2,['down'],"['download', 'downloaded']"
Availability,Re-pinging @bozkaya. Even an estimate on when you can look at this would be helpful.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1809#issuecomment-590992084:3,ping,pinging,3,https://psicode.org,https://github.com/psi4/psi4/pull/1809#issuecomment-590992084,1,['ping'],['pinging']
Availability,"Rebasing is not trivial for some reason, I am getting this error on force-push. > refusing to allow an OAuth App to create or update workflow `.github/workflows/ecosystem.yml` without `workflow` scope. Tried a few things to get a new token, etc. with no avail. I can work around this, but only a bit later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2813#issuecomment-1333565864:59,error,error,59,https://psicode.org,https://github.com/psi4/psi4/pull/2813#issuecomment-1333565864,2,"['avail', 'error']","['avail', 'error']"
Availability,"Recompiling, I’ll let you know what I find. On Jul 16, 2015, at 10:48 AM, T. Daniel Crawford <notifications@github.com<mailto:notifications@github.com>> wrote:. I believe this is corrected. Please test @fevangelistahttps://github.com/fevangelista . Thanks!. —; Reply to this email directly or view it on GitHubhttps://github.com/psi4/psi4public/issues/132#issuecomment-121978883. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/132#issuecomment-121991365:782,error,error,782,https://psicode.org,https://github.com/psi4/psi4/issues/132#issuecomment-121991365,1,['error'],['error']
Availability,"Recording all the reference values should cover the type-of-calc-being-run logic, as that won't be changing for a given infile. So it should be down to if-present-in-`ref_vals`-then-compare being sufficient. And thanks, @amjames, getting some cc* module psivars onto wfn, as opposed to `P::e` can be tricky, as I learned from cctriples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943#issuecomment-376674410:144,down,down,144,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376674410,2,['down'],['down']
Availability,"Regarding the general case `MultipoleInt` vs. special routines like `DipoleInt`. Keep in mind that asking for `MultipoleInt`s with order=2 will give overlap, dipole, quadrupole. Asking for `QuadrupoleInt`s will only give quadrupoles. Computing the extra integrals isn't really a big deal in terms of efficiency, but it might be a little surprising for the user to find that the indexing doesn't start from zero. The current quadrupole integral implementation just calls Libint2 and picks out only the quadrupole components. Going with only MultipoleInts is better for maintenance, but changes the API and could lead to some surprises. However, there isn't really any efficiency penalty for doing that, so I don't really have a strong opinion either way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2496#issuecomment-1077806309:568,mainten,maintenance,568,https://psicode.org,https://github.com/psi4/psi4/pull/2496#issuecomment-1077806309,1,['mainten'],['maintenance']
Availability,"Regardless of the Python API failures, this merge is good to go...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1260#issuecomment-425814786:29,failure,failures,29,https://psicode.org,https://github.com/psi4/psi4/pull/1260#issuecomment-425814786,1,['failure'],['failures']
Availability,"Regrettably, this is expected. From https://www.basissetexchange.org/ (choose role: JK-fitting and element He), you can see that there isn't a Dunning cc-pVNZ basis defined for Helium. Usually what psi4 does is use the universal def2-universal-JKFIT when there isn't a JKfit designed for the orbital basis. But this is turned off above quad-zeta b/c (1) the universal basis is quad-zeta itself and (2) if you're in 5-zeta territory you might not appreciate the density-fitting error anyways. You'll have to decide if you want the quad-zeta fitting basis anyways or want to turn off DF or downgrade the basis for He, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2989#issuecomment-1606221049:477,error,error,477,https://psicode.org,https://github.com/psi4/psi4/issues/2989#issuecomment-1606221049,2,"['down', 'error']","['downgrade', 'error']"
Availability,"Reproach well deserved, @jgonthier. Info has been in [CMakeLists.txt](https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L71), but that admittedly is an awful error message. I've figured out how to hit it locally (conda directory structure bypasses it all), and a fix will appear soon to a PR near you. Thanks for the report. @edeustua, `-DOpenMP_LIBRARY-DIRS` probably _is_ the intended solution. The usual case where this issue appears is you're building Psi with GCC compilers and MKL LAPACK. For a usual from-intel (as opposed to from-conda) MKL installation, libraries mkl_rt and iomp5 are in different locations. With GCC+MKL, Psi needs to explicitly use iomp5 to suppress the tenacious gomp. But unless the location of iomp5 is already known to CMake through another detection sequence, it can't find the library, hence the (poor) error message you got. `OpenMP_LIBRARY_DIRS` is the intended solution. If I'm misunderstanding your circumstance, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-410467976:164,error,error,164,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-410467976,2,['error'],['error']
Availability,"Rethinking this, I think the MPI process ID would be a better labeling system than process ID. On a Linux box, the max process ID is 32,768 by default (although it can be made higher if you know your machine tolerates integers larger than 16-bit). Anyways, assuming each MPI process spawns on a separate node, and that the node determines the process ID independently of the other nodes, it's straightforward to show that given n nodes, the probability, p, of two MPI processes having the same process ID is given by: p=1-exp(-(n)(n-1)/65,536). Of note, 213 nodes lead to a 50% probability and 550 nodes lead to a 99% probability. Hence, if we are going to be massively parallel I think we have to be careful about our usage of process IDs, as they will not be as unique as we are used to thinking they are.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/81#issuecomment-104680424:208,toler,tolerates,208,https://psicode.org,https://github.com/psi4/psi4/issues/81#issuecomment-104680424,1,['toler'],['tolerates']
Availability,"Right, @jturney, this is just making the `save_natom`-enabled `save_xyz()` available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/518#issuecomment-260985650:75,avail,available,75,https://psicode.org,https://github.com/psi4/psi4/pull/518#issuecomment-260985650,1,['avail'],['available']
Availability,"Right, I guess I was a bit tired. The Taylor expansion of the energy in the orbital rotation. $$ E(\boldsymbol{\theta})=E_{0}+\boldsymbol{\theta}\cdot\boldsymbol{g}+\frac{1}{2}\boldsymbol{\theta}\cdot\boldsymbol{H}\cdot\boldsymbol{\theta} + \mathcal{O}(\boldsymbol{\theta}^3) $$. where . $$ \boldsymbol{g} = \nabla_{\boldsymbol{\theta}}E\Big|_{\boldsymbol{\theta}=\boldsymbol{0}} $$. is the orbital gradient and. $$ \boldsymbol{H} = \nabla_{\boldsymbol{\theta}}\nabla_{\boldsymbol{\theta}}E\Big|_{\boldsymbol{\theta}=\boldsymbol{0}} $$. is the orbital Hessian reduces to . $$ E(\boldsymbol{\theta}) \approx E_{0} + \frac{1}{2}\boldsymbol{\theta}\cdot\boldsymbol{H}\cdot\boldsymbol{\theta} $$. around a SCF solution determined by $\boldsymbol{g}=\boldsymbol{0}$. Diagonalizing $\boldsymbol{H}$ only gives you directions $\boldsymbol{\theta}$ in which the energy goes up or down, and you need to conduct a line search to find the minimum along a direction of descent. The line search is pretty simple to carry out, though; you can use the quasiperiodicity of the orthogonal rotation matrix to determine a good trial step size, see e.g. our work on self-interaction corrected calculations in [J. Chem. Theory Comput. 12, 3195 (2016)](https://doi.org/10.1021/acs.jctc.6b00347). In my experience, a trial step of 1/5 of the shortest period of oscillation (see [Abrudan et al](https://doi.org/10.1016/j.sigpro.2009.03.015)) works well; this is slightly shorter than the theoretical value of 1/4: since you know that the function value is going down at zero step length (it is a descent direction), the minimum would be at pi/2 which is 1/4. Because of non-linear effects, the actual step should be shorter. Employing this trick is key to achieving robust convergence for orbital rotation techniques, and will be used throughout in my upcoming orbital optimizer library.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045#issuecomment-1707919955:872,down,down,872,https://psicode.org,https://github.com/psi4/psi4/issues/3045#issuecomment-1707919955,6,"['down', 'robust']","['down', 'robust']"
Availability,"Right, the psi4 conda package is built to link to Mac native Accelerate blas/lapack, not MKL. The MKL is present in the conda env for numpy's benefit. The reason for this is that until very recently all the supporting language libraries and headers for MKL weren't available on conda – they seem to be now through packages on the Intel conda channel, but I haven't switched over. I was thinking that when psi4 is imported before numpy that the latter may be trying to match symbols in the already loaded Accelerate when it should instead be importing mkl.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311738398:265,avail,available,265,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311738398,1,['avail'],['available']
Availability,"Right, without more information, the most I'm expecting is to update the error message with something that makes clear whether this is something the user can fix by changing settings as well as what the problem is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1682#issuecomment-515464684:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/issues/1682#issuecomment-515464684,2,['error'],['error']
Availability,"Run.log was a dirty hack that I came up with, to allow the test info to stream to stdout, but have a file to be able to parse to identify failures after the fact. The PIPE machinery in Python's subprocess will allow the same behavior.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/247#issuecomment-183716956:138,failure,failures,138,https://psicode.org,https://github.com/psi4/psi4/pull/247#issuecomment-183716956,1,['failure'],['failures']
Availability,"Running my example with a debug build and #2700 results in this log:; ```; LSEEK failed. Error description from the OS: : Bad file descriptor; Error in PSIO_WT_TOCLEN()! Cannot seek vol[0] to its beginning, unit 102. Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:89,Error,Error,89,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,5,['Error'],['Error']
Availability,"Ryan has seen some test case failures because of IO issues from tests running in parallel. This is (T), so a possibility. I've set the nightly build script to run in serial tonight, so we'll see if this gets pinned down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/121#issuecomment-123504435:29,failure,failures,29,https://psicode.org,https://github.com/psi4/psi4/issues/121#issuecomment-123504435,2,"['down', 'failure']","['down', 'failures']"
Availability,"Ryzen 5 1600, but probably not from the faulty early batches. Anyway I see the same behaviour on an Intel E5-2667v4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-441105852:40,fault,faulty,40,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-441105852,1,['fault'],['faulty']
Availability,"SAD is annoying :-(. Maybe it is best to keep printing zeros for SAD (somehow) and additional a note saying that no occupations are available yet. For difficult open-shell systems, where this table becomes interesting, people might switch the guess anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1711#issuecomment-528355257:132,avail,available,132,https://psicode.org,https://github.com/psi4/psi4/issues/1711#issuecomment-528355257,1,['avail'],['available']
Availability,"SOSCF is not implemented for DFT as we do not have exact DFT Hessians yet. That's odd that it seg faults however, it should call the base HF SOSCF method and throw an error. I'll see if I can fix this. . -Daniel Smith; Sent from my iPhone. . > On Feb 16, 2016, at 05:21, Holger Kruse notifications@github.com wrote:; > ; > version: Rev {master} 0d10de8; > ; > After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF.; > ; > I don't know if SOSCF should work with DFT or not.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256#issuecomment-184648840:98,fault,faults,98,https://psicode.org,https://github.com/psi4/psi4/issues/256#issuecomment-184648840,3,"['error', 'fault']","['error', 'fault', 'faults']"
Availability,"Same here, just ; /edfs/users/deprince/software/psi4/psi4/src/psi4/dcft/dcft_gradient_UHF.cc(3903) (col. 72): internal error: 20000_6805. > On Feb 27, 2018, at 11:34 AM, Robert T. McGibbon <notifications@github.com> wrote:; > ; > Any error message on the crash?; > ; > No.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/923#issuecomment-368940098>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGpwnGu_Xbo1lZTU4IJZALbsctYGNks5tZC6bgaJpZM4SPiMy>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923#issuecomment-368940820:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940820,2,['error'],['error']
Availability,Seems to be a numpy error.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465#issuecomment-452113236:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/issues/1465#issuecomment-452113236,1,['error'],['error']
Availability,Segmentation fault (core dumped) for v1.2 also on my cluster. v1.1 works well.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088#issuecomment-405799617:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/1088#issuecomment-405799617,1,['fault'],['fault']
Availability,"Setting TargetLAPACK_DIR (as you suggested) didn't seem to help: it still couldn't find MathOpenMP. However, adding; `-DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}` to external/downstream/gpu_dfcc seems to do the trick and gpu_dfcc builds OK (within the psi4 tree). It does also need CMAKE_CUDA_COMPILER and CUDA_TOOLKIT_ROOT_DIR defining before it's happy (rather than having defaults). I added them to CMakeCache.txt but presumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:176,down,downstream,176,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,3,"['Error', 'down']","['Error', 'downstream']"
Availability,"Should be doable: in ERKALE I run an eigendecomposition of a 100x100 random matrix in sequential mode and repeat the calculation in a parallel OpenMP section. If the decompositions of the individual threads don’t match the sequential one, then LAPACK is not thread safe. Susi Lehtola; Sent from my phone so excuse my brevity. On 20 Jan 2019, at 15.03, Michael Banck <notifications@github.com<mailto:notifications@github.com>> wrote:. Couldn't you have a configure-time check for this (in case it can be broken down to a very small testcase), same as is usual in autoconf-world?. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1461#issuecomment-455864865>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ2QSkRaIyanSHwFBRQyrKH2-9W1_ks5vFGkggaJpZM4ZxGFP>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461#issuecomment-455865306:510,down,down,510,https://psicode.org,https://github.com/psi4/psi4/issues/1461#issuecomment-455865306,1,['down'],['down']
Availability,Should we have a section about new features/improvements for users ?. # Changes since Psi4 1.0. High-spin open-shell SAPT0 computations are now available,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/485#issuecomment-258077480:144,avail,available,144,https://psicode.org,https://github.com/psi4/psi4/issues/485#issuecomment-258077480,1,['avail'],['available']
Availability,"Show seg faults, buffer overflows, and doubly linked list errors: https://travis-ci.org/psi4/psi4/jobs/471402754. Azure Gibbs failure looks like:; ```; 2018-12-23T01:04:44.9842835Z 61/142 Test #210: gibbs ............................***Failed 33.09 sec; 2018-12-23T01:04:44.9843015Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843106Z 	N2 Gibbs Free Energy..............................................PASSED; 2018-12-23T01:04:44.9843160Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843216Z 	H2O Gibbs Free Energy.............................................PASSED; 2018-12-23T01:04:44.9843489Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843563Z 	NH3 Gibbs Free Energy.............................................PASSED; 2018-12-23T01:04:44.9843609Z Traceback (most recent call last):; 2018-12-23T01:04:44.9843656Z File ""D:/a/1/b/build/stage/bin/psi4"", line 287, in <module>; 2018-12-23T01:04:44.9843903Z exec(content); 2018-12-23T01:04:44.9843947Z File ""<string>"", line 71, in <module>; 2018-12-23T01:04:44.9843996Z File ""D:\a\1\b\build\stage\lib\psi4\driver\driver.py"", line 1096, in optimize; 2018-12-23T01:04:44.9844066Z moleculeclone.update_geometry(); 2018-12-23T01:04:44.9844095Z ; 2018-12-23T01:04:44.9844134Z RuntimeError: ; 2018-12-23T01:04:44.9844201Z Fatal Error: User specified point group (C2v(Z)) is not a subgroup of the highest detected point group (Cs(Z)). If this is because the symmetry increased, try to start the calculation again from the last geometry, after checking any symmetry-dependent input, such as DOCC.; 2018-12-23T01:04:44.9844301Z Error occurred in file: D:\a\1\s\psi4\src\psi4\libmints\molecule.cc on line: 2016; 2018-12-23T01:04:44.9844337Z ; 2018-12-23T01:04:44.9844403Z Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```. as shown in the logs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-449670954:9,fault,faults,9,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-449670954,5,"['Error', 'error', 'failure', 'fault']","['Error', 'errors', 'failure', 'faults']"
Availability,"Since `cppe` has its own Python interface now (which it did not when I started this PR), I guess there is no reason to interface with psi4 on the C++ layer?. I guess it would be much simpler wrt maintenance of the code to refactor everything and use the `cppe` Python interface directly. What do you think, @loriab, @dgasmith, @robertodr ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-498431596:195,mainten,maintenance,195,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-498431596,2,['mainten'],['maintenance']
Availability,"Since ddLPB has the electric field as RHS, it may be that the error in the numerical derivatives (numerical Fock) is higher than in ddPCM/ddCOSMO. To be sure, you could try to lower the step size, you should observe a decreasing error in the analytical-numerical Fock comparison (at least until it hits the finite numerical precision), if it is not like that, there may be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2952#issuecomment-1537967934:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/pull/2952#issuecomment-1537967934,2,['error'],['error']
Availability,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-874494530:266,down,down,266,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530,1,['down'],['down']
Availability,"Since there are basically no reference data available for UHF, I guess the only thing one could do is to add Psi4-generated data for consistency tests...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447:44,avail,available,44,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447,1,['avail'],['available']
Availability,"Since we are only interested in the density with a SAD guess we can lower our expectations in terms of accuracy. So lets just do the easy solution: I trimmed `AM=5` out of the Weigend basis to make a `SAD-FIT` basis. While the energy of a given atom can deviate up to 1% (!) due to the errors in the fitting basis the densities look similar. For example, hydrobromic acid/aug-cc-pV5Z:. ```; SAD DF-basis aug-cc-pV5Z-jkfit; @DF-RHF iter 0: -2573.11546127243219 -2.57312e+03 1.30325e-02; @DF-RHF iter 6: -2573.05212026634626 -9.92310e-06 3.01845e-06 DIIS; ```. ```; SAD DF-basis SAD-FIT; @DF-RHF iter 0: -2572.77288633232229 -2.57277e+03 2.28224e-02; @DF-RHF iter 6: -2573.05212044674045 -2.02440e-07 7.83243e-07 DIIS; ```. This represents a worst-case example as the `SAD-FIT` basis is 10x smaller than `aug-cc-pV5Z-jkfit` for bromine. I think this represents a happy medium, 150 orbital basis functions on a single atom runs in about 3 seconds and we neatly circumvent the AM issues (Psi4 minimal AM is 4). As a note this optimization takes 11 iterations with a CORE guess to achieve the same level of convergence. Going to run with this for now. Unless someone has ideas of what went wrong with the CDJK spherical vs cartesian issue I'm just going to rip this out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/400#issuecomment-224644390:286,error,errors,286,https://psicode.org,https://github.com/psi4/psi4/pull/400#issuecomment-224644390,1,['error'],['errors']
Availability,"Since you got v1.7 from conda with `-c psi4`, you can get v1.8a1.dev37 (for Linux) from conda with `-c psi4/label/dev`. It will have Jonathon's fix. Thanks for the nicely prepared error report, btw.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916#issuecomment-1496078211:180,error,error,180,https://psicode.org,https://github.com/psi4/psi4/issues/2916#issuecomment-1496078211,1,['error'],['error']
Availability,"So @loriab pointed this out initially (thank you for that!), and the CI seems to confirm that there's something suspect going on with the `test_gauxc_writer.py` test. I'll work on recreating the error locally on my end and fixing whatever is going on with the test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794:195,error,error,195,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794,1,['error'],['error']
Availability,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:279,toler,tolerances,279,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215,4,['toler'],['tolerances']
Availability,"So are we. We can see that it passed for Andy and failed for us. We cannot reproduce the issue with a icc or clang build. From travis:. ```; DLU 11 1 3 3.776E-06; DLU 12 1 4 2.292E-06; DLU 13 2 5 8.987E-07. DLUSolver converged. Wavefunction stable under totally symmetric rotations.; Lowest totally symmetric eigenvalue: -0.131403 ; Lowest UHF->UHF stability eigenvalues: ; B1 -0.131403 A2 -0.000000 A2 0.000000 A1 0.163530 ; B2 0.248212 A1 0.385029 B1 0.390496 B2 0.493736 ; ```. from master:. ```; DLU 11 1 3 3.776E-06; DLU 12 1 4 1.870E-06; DLU 13 2 5 7.332E-07. DLUSolver converged. Wavefunction stable under totally symmetric rotations.; Lowest totally symmetric eigenvalue: -0.131403; Lowest UHF->UHF stability eigenvalues:; B1 -0.131403 A2 0.000000 A1 0.163530 B2 0.248212; A1 0.385029 B1 0.390496 B2 0.493736 A2 0.523085; ```. Notice the last two iterations slightly diverge from each other. This seems to cause the A2 ordering to differ and causes a matrix comparison fail down the line. Could be a convergence issue, the way its dividing by a small number, or many things. Extra fun to debug as we do not have a compiled gcc 5.0 around. This is a downside of travis. @jgonthier Tagging Jerome in so he can have a look.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182595256:982,down,down,982,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182595256,2,['down'],"['down', 'downside']"
Availability,"So as to not ping everybody in this thread every time I've done some little thing, I'm tracking my current progress on porting upstreams here: https://github.com/mattwthompson/mattwthompson/projects/1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-986950887:13,ping,ping,13,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-986950887,1,['ping'],['ping']
Availability,"So here is the output file for 64 GB:. [formaldimine.txt](https://github.com/psi4/psi4/files/4948227/formaldimine.txt). and the error:. ```; PSIO_ERROR: unit = 51, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""/marisdata/senjean/Git_repo/SA-OO-VQE//intersection_coniques.py"", line 47, in <module>; en0_casci,en1_casci = get_energies_formaldimine(alpha,phi); File ""/marisdata/senjean/Git_repo/SA-OO-VQE//intersection_coniques.py"", line 35, in get_energies_formaldimine; E0_casci = psi4.energy('fci'); File ""/home/senjean/psi4conda/lib/python3.7/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/senjean/psi4conda/lib/python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 2998, in run_detci; ciwfn = core.detci(ref_wfn); RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); ```. and I confirm the 64 GB used : ` Memory set to 64.000 GiB by Python driver.`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959#issuecomment-661069874:128,error,error,128,https://psicode.org,https://github.com/psi4/psi4/issues/1959#issuecomment-661069874,6,"['Error', 'error']","['Error', 'error']"
Availability,"So the CI error here is... interesting. `FAILED: src/psi4/libdpd/CMakeFiles/dpd.dir/buf4_mat_irrep_wrt.cc.obj ; C:\PROGRA~1\LLVM\bin\clang-cl.exe /nologo -TP -DUSING_LAPACK_MKL -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_SECURE_NO_WARNINGS -D_USE_MATH_DEFINES -ID:\a\1\s\psi4\include -ID:\a\1\s\psi4\src -imsvc C:\tools\miniconda3\include -imsvc C:\tools\miniconda3\Library\include -imsvc C:\tools\miniconda3\Library\include\eigen3 /arch:AVX /O2 /Ob2 /DNDEBUG -MD /EHsc -Xclang -fopenmp -std:c++17 /showIncludes /Fosrc\psi4\libdpd\CMakeFiles\dpd.dir\buf4_mat_irrep_wrt.cc.obj /Fdsrc\psi4\libdpd\CMakeFiles\dpd.dir\dpd.pdb -c -- D:\a\1\s\psi4\src\psi4\libdpd\buf4_mat_irrep_wrt.cc; In file included from D:\a\1\s\psi4\src\psi4\libdpd\buf4_mat_irrep_wrt.cc:33:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.34.31933\include\cstdio:9:; C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.34.31933\include\yvals_core.h(784,1): error: static_assert failed ""Error in C++ Standard Library usage.""; _EMIT_STL_ERROR(STL1000, ""Unexpected compiler version, expected Clang 14.0.0 or newer."");; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.34.31933\include\yvals_core.h(456,5): note: expanded from macro '_EMIT_STL_ERROR'; static_assert(false, ""Error in C++ Standard Library usage.""); ^ ~~~~~; 1 error generated.`. Two overall errors on the Windows Psi4 build in this vein.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2808#issuecomment-1332580612:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/pull/2808#issuecomment-1332580612,6,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"So, next error; ```; CMake Warning (dev) at cmake/FindPythonLibsNew.cmake:59 (find_package):; Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules; are removed. Run ""cmake --help-policy CMP0148"" for policy details. Use; the cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; CMakeLists.txt:168 (find_package); This warning is for project developers. Use -Wno-dev to suppress it.; -- Found PythonInterp: /usr/bin/python3 (found suitable version ""3.12"", minimum required is ""3.5"") ; CMake Error at cmake/FindPythonLibsNew.cmake:94 (message):; Python config failure:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ModuleNotFoundError: No module named 'distutils'; Call Stack (most recent call first):; CMakeLists.txt:168 (find_package); -- Configuring incomplete, errors occurred!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676476684:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676476684,4,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failure']"
Availability,"So, no look running it with GDB. ; I did find that there seems to be a problem with fread for this system. If fread is successful, it should return the size of the type that is read, but it is returning a value of 0. ; The error is happening on the loop that is started on line 720 of lreri.cc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/157#issuecomment-128487955:223,error,error,223,https://psicode.org,https://github.com/psi4/psi4/issues/157#issuecomment-128487955,1,['error'],['error']
Availability,Some [large ints](https://dev.azure.com/psi4/psi4/_build/results?buildId=1567&view=logs&j=f31c9f97-4411-58e7-49ac-fc73f645e6b6&t=168f406a-25eb-5f8a-7d4d-4c979d542d09&l=728) in the Cholesky decomp matrix that apparently the lower tolerances can manage but the 1e-6 can't,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-571243720:229,toler,tolerances,229,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-571243720,1,['toler'],['tolerances']
Availability,"Something is ... not right. I'm looking into this now, but the basis guess gives a PBE energy of `-13988.27302270776818` Eh, both on my workstation and on our cluster ... trying to track this down now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-432344773:192,down,down,192,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432344773,1,['down'],['down']
Availability,Something like this was also reported last summer where the t2 amplitude return was all zeros if string basis. I couldn't track it down in quarter hour. Thanks for harvesting report.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1604#issuecomment-800346857:131,down,down,131,https://psicode.org,https://github.com/psi4/psi4/issues/1604#issuecomment-800346857,1,['down'],['down']
Availability,"Sometime, could you take another look at `psi4 --test`, @robertodr? Whenever I run, I get the below, and it looks like it's happening outside the pcm_helper fn. That is, in c-side SCF where `@pcmsolver.inp` can't be read b/c the working dir wasn't left in the pcm subdir where `pcmsolver.inp`-->`@pcmsolver.inp`. . Note that the changes in this PR would have only influenced psiapi mode, not psithon, since most of the pcm_helper fn is just repeated from inputparser. I'm not sure whether @raimis is trying to run psithon or psiapi — looks like the latter in intent and the former in practice. Tracing back to [here](https://github.com/Acellera/htmd/pull/409#discussion_r139685402), I think they're still psithon, so this PR may have targeted the wrong approach. Or I may have all my pcmsolver input redirects quite confused. This being the fourth package that has conspired against conda, it may be one too many. ```; RHF-PCM, total algorithm; Error: Error: Getkw, line 33 in /scratch/psilocaluser/conda-builds/pcmsolver_1499412893611/work/src/utils/getkw/Getkw.cpp: Open failed: @pcmsolver.inp; ```. ```; print('RHF-PCM, total algorithm'); > energy_scf1, wfn1 = psi4.energy('scf', return_wfn=True). ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/tests/test_addons.py:425: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/driver.py:460: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1996: in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1271: in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFER",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818#issuecomment-353769977:945,Error,Error,945,https://psicode.org,https://github.com/psi4/psi4/pull/818#issuecomment-353769977,2,['Error'],['Error']
Availability,"Sorry @avcopan, I saw all the `@IRC`s in that gist above and thought opt7 was an unlabeled IRC. But that was for opt-irc-2, which should be fixed now. opt7 fails on a few systems (https://testboard.org/cdash/testSummary.php?project=3&name=opt7&date=2016-03-01). This (https://testboard.org/cdash/testDetails.php?test=7810317&build=63640) looks like the most coherent error message (also copied below), if @psi-rking would like to examine it. ```; Optimizer: Optimization complete!; Int. Coord. RHF opt of HOOH with O-H fixed to 0.95, energy........PASSED; Optimizer: Optimization complete!; Int. Coord. RHF opt of HOOH with O-O-H fixed to 105, energy: computed value (-150.7861731) does not match (-150.7861769) to 6 decimal places.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-190956405:367,error,error,367,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-190956405,1,['error'],['error']
Availability,"Sorry I realize my example was incomplete.; I used the following options:. ```; psi4.set_options({'basis': 'STO-3G-DECON',; 'reference': 'rohf',; 'scf_type': 'direct',; 'guess': 'sad',; 'puream':true}); ```. I then used @hokru 's trick to set the ```DF_BASIS_SCF``` object. I modified the active space (using ```RESTRICTED_DOCC``` instead of ```FROZEN_DOCC``` and only 4 active orbitals) and I also get the Segmentation Fault in the property section. But the energy is there, which is already good enough for me right now, so thanks for the tip !",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1871#issuecomment-615494761:420,Fault,Fault,420,https://psicode.org,https://github.com/psi4/psi4/issues/1871#issuecomment-615494761,1,['Fault'],['Fault']
Availability,"Sorry about that, Brandon, it's my fault for closing out some of these PRs without paying attention to the order.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/514#issuecomment-260339449:35,fault,fault,35,https://psicode.org,https://github.com/psi4/psi4/pull/514#issuecomment-260339449,1,['fault'],['fault']
Availability,"Sorry for being late on this one - I've been doing taxes all day :( The original error comes from a negative argument to the sqrt function, which is very suspicious. It implies that the surface has strange curvature at that point, likely a) due to numerical noise or b) due to the method of choice not being able to globally describe the surface. The first of these is usually to blame - you need *very* tightly converged energies when trying to get higher order derivatives (I'd say 12 digits after the decimal, so make sure all densities / residuals of your method of choice are tightly converged). Very few methods can describe a full dissociation curve, and the very wide range of r values that you're using means that there's potential to probe some bond lengths that are problematic, which could lead to strange behavior like what was observed. I think @loriab is right - keeping the points close to the minimum is much safer. The cubic and quartic force constants that you get from the analysis are derivatives taken *at* the minimum, so points far away are not needed. Moreover, the default behavior is to weight the points in the fit by distance from the minimum, so only those nearby will contribute appreciably. I added that code to get rid of some very messy Lagrangian interpolation code that was used before. The previous code used 5 or 9 points spaced around the minimum, and similar amounts of data were successful for my testing. I think 0.05A might be ok as long as the points chosen bracket the minimum. I'd recommend some testing of this - if you take a really cheap method and try different spacings, you should see a plateau in the results w.r.t. grid spacing; too small a spacing is susceptible to roundoff error, while large spacing pushes the definition of 'finite' in finite differences, but the plateau in between defines the optimal region. When I tested on H2 (in the psithon1 test case, by the way) I found that it was quite insensitive to the grid size, but I was also u",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483086393:81,error,error,81,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483086393,1,['error'],['error']
Availability,"Sorry for taking such a long time on this. @loriab the `input.dat` in `pcmsolver/scf` now shows how to recover files from scratch:; ```python; pid = str(os.getpid()); scratch_dir = os.path.join(core.IOManager.shared_object().get_default_path(), 'psi.' + pid + '.pcmsolver'); pcm_save = reduce(lambda l1, l2 : l1 + l2, (glob.glob(t) for t in [scratch_dir + '*/' + x for x in ['cavity.off__' + pid, 'PEDRA.OUT__' + pid, 'cavity.npz']])); filter(lambda x : shutil.copy(x, psi4.extras.get_input_directory()), pcm_save); ```; Maybe it's an interesting bit for `p4util/util.py`.; The `input.dat` for the `pcmsolver/dipole` test now uses the `perturb_h`, `perturb_with` and `perturb_dipole` parameters. Surprise, surprise, the test is **failing**. After checking the PCM set up, basis, SCF start guess and all other obvious culprits, I found out that the nuclear energy is **different** from the one in the reference file. Do you and/or @andysim and/or @dgasmith have any idea why this could be?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-291492708:103,recover,recover,103,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-291492708,1,['recover'],['recover']
Availability,"Sorry for the confusion. What you're doing with PCMSolver is working just fine. What broke down was me not realizing that the `1.1.2` tag had what I needed, and I didn't need `HEAD`. Below is what I wrote to someone recently. External projects for psi4 can choose one of the below (or propose a new scheme), and PCMSolver is doing (2). If the below seems clear, I'll explicitly add it to the wiki. ## External Project Versioning (choose one); 1. Tag a release “0.2”, “v0.2”, or whatever. Let me know and I’ll (i) build the conda package and (ii) bump the `Add_ExternalProject` tag (for non-plugins). Repeat in a few months with “0.3”, etc. This way is handy if you want to settle on stable commits while possibly breaking the repo in interim commits. You may be asked to bump the tag after resolving psi4+externalproj interface or build issues. If you move the tag to a later commit, you'll have to let me know so I rebuild the conda package with the same version but a later build number. This is what CheMPS2 and PCMSolver do.; 2. Tag a release “0.2”, and I’ll (i) tell psinet to do nightly builds that increment micro on each git commit so versions will be ""tag.micro"" (e.g., 0.2.43) and (ii) remove git tag from `Add_ExternalProject` )for non-plugins). When you’re ready for 0.3, just make the new tag, no communication with me necessary. Strongly recommended not to mix light and annotated tags; the latter are always preferred; the former are what you get if you go through the github website tag-making interface. If the repo breaks such that “make” or any “make tests” you devise break, then no package will get uploaded, but otherwise the most recent will always be available. This is what Psi4 itself does.; 3. hybrid– do 2. but have the version that ships with the psi4 binary be pinned to a certain stable build unless user deliberately installs another.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/409#issuecomment-225993854:91,down,down,91,https://psicode.org,https://github.com/psi4/psi4/pull/409#issuecomment-225993854,4,"['avail', 'down']","['available', 'down']"
Availability,Sorry for the delay - things slowed down around the holidays but we're back up and running now,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1432#issuecomment-451187125:36,down,down,36,https://psicode.org,https://github.com/psi4/psi4/pull/1432#issuecomment-451187125,1,['down'],['down']
Availability,"Sorry for the really slow response. No, haven't caught c-side errors before. You can see if catching general `Exception` works and if can scan traceback for text. Bu don't expend too much effort. It's the placement of driver logic that I'm more worried about breaking. Also, if you rebase, Azure should heal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719#issuecomment-534638677:62,error,errors,62,https://psicode.org,https://github.com/psi4/psi4/pull/1719#issuecomment-534638677,1,['error'],['errors']
Availability,"Sorry to get in on this kind of late, but that message:; >`...stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name typedef typename _Iterator::iterator_category iterator_category; ^`. Does seem vaguely familiar and I have not been able to get psi4 working on our clusters with intel-16.1. I have not tried recently though so if it would help you out at all @jgonthier I could try a build tonight and let you know what I see.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288590352:94,error,error,94,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288590352,1,['error'],['error']
Availability,"Sorry to keep making you write, but is the ""big picture"" view of nbody documented _anywhere_? I can't follow what `energy_body_dict` means, or why the value of one of its entries is coupled to whether the total energy is available. I fear this is a case where there is a _lot_ of ""developer was only coding to be comprehensible to themselves"" code debt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2221#issuecomment-871765509:221,avail,available,221,https://psicode.org,https://github.com/psi4/psi4/pull/2221#issuecomment-871765509,1,['avail'],['available']
Availability,"Sorry, I have not stated clearly. I tried the F-SAPT example in https://psicode.org/psi4manual/master/fisapt.html#f-sapt-a-representative-example. And when I use [fsapy.py](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/fsapt/fsapt.py) to analyse the interaction between different fragment which was stated in fA.dat and fB.dat, it reported such error:; ```Traceback (most recent call last):; File ""fsapt.py"", line 1048, in; stuff = compute_fsapt(dirname, False); File ""fsapt.py"", line 888, in compute_fsapt; order2 = extract_order2_fsapt(osapt, total_ws['A'], total_ws['B'], frags); File ""fsapt.py"", line 496, in extract_order2_fsapt; val = np.einsum('i,ij,j', valueA, value, valueB); File ""<array_function internals>"", line 6, in einsum; File ""/pubhome/zchen02/miniconda3/envs/psi4/lib/python3.7/site-packages/numpy/core/einsumfunc.py"", line 1361, in einsum; return c_einsum(*operands, **kwargs); ValueError: operands could not be broadcast together with remapped shapes [original->remapped]: (52,)->(52,newaxis) (51,51)->(51,51) (52,)->(52)```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281#issuecomment-902404884:356,error,error,356,https://psicode.org,https://github.com/psi4/psi4/issues/2281#issuecomment-902404884,2,['error'],['error']
Availability,"Sorry, I knew I should have merged this this afternoon. If you make this change https://github.com/psi4/psi4/pull/2895/files#diff-9886b1fe077112c3a9952964ed992dc3cd38b48d0a506a6b7a00241e4669d2b1R243 that should fix Linux Eco CI. And I think the Windows Azure error is a fluke.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2823#issuecomment-1469079358:259,error,error,259,https://psicode.org,https://github.com/psi4/psi4/pull/2823#issuecomment-1469079358,1,['error'],['error']
Availability,"Sorry, I wasn't paying attention; the error is earlier in the traceback. The compilation was picking my Psi4-installed non-conda copy, which is 2.0.0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1013#issuecomment-388478956:38,error,error,38,https://psicode.org,https://github.com/psi4/psi4/issues/1013#issuecomment-388478956,1,['error'],['error']
Availability,"Sorry, I'll fix it in a couple days. For the moment, install an older version from before lastfriday. You can get a list of available versions on the anaconda.org/psi4 and directions for installing a particular version at the docs page.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/154#issuecomment-125036757:124,avail,available,124,https://psicode.org,https://github.com/psi4/psi4/issues/154#issuecomment-125036757,1,['avail'],['available']
Availability,"Sorry, ```C:\Users\erikc\psi4conda\Scripts ``` was what was in my Path. I double checked via ```psi4 --test``` in cmd and the same error pops up. I also just reinstalled anaconda without adding it to my path and then reinstalling psi4. Nothing changed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656:131,error,error,131,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656,1,['error'],['error']
Availability,"Sorry, for (3), I meant how the code specifically tells you to file an; ADIIS bug if you get this, and looking through the history there's been a; number of (unrelated) bugs that also hit ADIIS issues (and, as you've; pointed out, often because something *else* went haywire). (2) seems reasonable to me. I'll play with some other settings, seeing if; turning off density-fitting or changing the grid prods things. I've run the; same calc in Orca which seems to go alright; both use LibXC for wb97M-V,; though Orca has its own VV10 impl. I'll see if non-self-consistent VV10; hits the same issue; if not, I'll play with the VV10 grid settings, too. I do have some other calculations in this dataset with perfectly reasonable; geometries which failed due to ""ADIIS"", which I'd like to sort out. I; suspect they may have a common cause in whatever *actually* caused this; failure, and I'll see what I can dig up. On Thu, Oct 5, 2023 at 9:44 AM Jonathon Misiewicz ***@***.***>; wrote:. > Hello, I'm the developer who implemented ADIIS in Psi4. Thanks for your; > patience. Between some life changes and issues compiling Psi4, I haven't; > been able to look at this issue previously.; >; > 1. Following Susi's suggestion, B3LYP converges straightforwardly. The; > SCF iterations takes one bad step early on, but this happens whether ADIIS; > is on or off.; > 2. If I disable ADIIS completely using your original functional, it; > *still* fails. Once the energy gets to around 284 Eh, it doesn't; > become negative again. *Contrary to the topic title, ADIIS is not at; > fault*.; > 3. The title suggests that you've had previous ADIIS issues; > previously. If so, please send me specific examples. My experience has been; > that ADIIS itself is fine, but can break when other parts of the code are; > badly behaved.; >; > I'll do some digging to see if I can suggest an alternate protocol that; > will actually converge.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051#issuecomment-1748950476:870,failure,failure,870,https://psicode.org,https://github.com/psi4/psi4/issues/3051#issuecomment-1748950476,1,['failure'],['failure']
Availability,"Sorry, that #2861 link was an error. https://github.com/MolSSI/QCElemental/pull/230 was what I meant.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2884#issuecomment-1442733037:30,error,error,30,https://psicode.org,https://github.com/psi4/psi4/issues/2884#issuecomment-1442733037,1,['error'],['error']
Availability,Sorry. The row/column discrepancy struck me as dpd having an unwritten convention that would be helped by writing it down somewhere prominent. My comment probably came across as more critical than intended.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1288#issuecomment-435206306:117,down,down,117,https://psicode.org,https://github.com/psi4/psi4/issues/1288#issuecomment-435206306,1,['down'],['down']
Availability,"Sounds good! @susilehtola's diagnosis of a badly behaved numerical functional sounds viable to me. He's more knowledgeable about how to treat such situations than I am. And yes, I'm starting to think I should amend the ADIIS/EDIIS error message to explicitly mention that something else is the usual culprit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051#issuecomment-1748955323:231,error,error,231,https://psicode.org,https://github.com/psi4/psi4/issues/3051#issuecomment-1748955323,1,['error'],['error']
Availability,"Sounds good.; A bit more info on why I'm getting a seg fault that might help...I'm not expecting a quick solution but it might help with the process in the long run. The two fragments are detected properly and internal coords determined and printed out including one lin bend in each fragment (plus their complements) (listed as L/l(3,12,13) and L/l(18,25,26)). One RFO step is taken and MOLECULE::validate_angles() detects no ""new"" lin bends on Frag 1 but one ""new"" one in Frag 2: L/l(18,25,26)) (that are already there!). These get added through the INTCO_EXCEPTion handler and a rebuild of internal coordinates is triggered. MOLECULE::add_intrafragment_simples_by_connectivity() calls FRAG::add_simples_by_connectivity() for each fragment(), and then FRAG::add_bend_by_connectivity(). The latter function loops through opt::INTCO_EXCEPT::linear_angles[], adding any new lin bends that are not currently defined for that fragment. On the first pass through, it detects 57 int coords in each fragment; on the second, Frag 1 has 59 (the two extra linear bends...) and Frag 2 has 57. The problem is that opt::INTCO_EXCEPT::linear_angles[] is indexed for the whole molecule, whereas FRAG is indexed just for that fragment, i.e. atom_offsets are used whenever int coords are printed, etc. The linear bend to be added as an exception, L/l(18,25,26), does not exist in Frag 1 (it only has 13 atoms!) so gets added to it. When the int coords are printed out, a seg fault results when an attempt is made to calculate a value using coordinates off the end of the Frag arrays. I'm not sure of the easiest solution here: INTCO_EXCEPT only has molecule-based rather than fragment-based indexing. It could have a fragment index added to it and then use fragment-based indexing for the new lin bends. I think this would also need each FRAG object to contain it's fragment index and/or an atom_offset to the first atom within it. A more involved solution might have an INTCO_EXCEPT per fragment so that it's all a b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680#issuecomment-296160675:55,fault,fault,55,https://psicode.org,https://github.com/psi4/psi4/issues/680#issuecomment-296160675,1,['fault'],['fault']
Availability,"Sounds like an uninviting $HOME. I think we can work around this in future. I could suggest some edits to manoeuvre around the problem for you now, but if you're psi4conda, then that's v1.3.x which has things in different places. I suggest your HOME aliasing workaround for now, and I'll ping when other is in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1724#issuecomment-534725448:288,ping,ping,288,https://psicode.org,https://github.com/psi4/psi4/issues/1724#issuecomment-534725448,1,['ping'],['ping']
Availability,"Sounds like some of these problems are hard to detect at compile time, but; perhaps they could be diagnosed by some simple little program that's; designed to look for these kinds of problems and prints out verbose output?. On Tue, Oct 11, 2016 at 10:24 AM, Lori A. Burns notifications@github.com; wrote:. > There's temporary build docs linked off README: ""Downloading and; > Installing"" on the main GH page.; > ; > It's not the specification of Python that's the problem– CMake detection; > and build are going just fine in these cases. CMake knows the exact,; > absolute path location to everything Psi4 or its build needs. The problem; > is conveying that info to the runtime environment. This is done by baking; > in all those absolute paths into the executable/library rpath. _But_,; > when a path (e.g., /usr/lib) has both a useful thing like libpython.so; > and a bad thing (for Psi4) like old gcc or hdf5, then CMake has no way of; > knowing that it needs to place /usr/lib into rpath _behind_ the path to; > new gcc or new hdf5. Thus, we end up with runtime path problems, solvable; > only by LD_LIBRARY_PATH or rpath adjustment and relinking.; > ; > This problem is controllable with conda, because it isolates just what; > Psi4 needs into its own namespaced path and stuffs that into rpath. For the; > general developers CMake build, there's no robust solution that I can see.; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/issues/468#issuecomment-252931820, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9Qdh_-XGbfJiWX_fQ9cwjC-YYTBSTtks5qy5wGgaJpZM4KA_tt; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252934079:356,Down,Downloading,356,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252934079,3,"['Down', 'robust']","['Downloading', 'robust']"
Availability,"Sounds reasonable. On Thursday, December 10, 2015, Lori A. Burns notifications@github.com; wrote:. > Maybe:; > - Switch out Pople basis fitting bases to appropriate-zeta; > def2-*-ri/jkfit, rather than Dunning ri/jkfit, as former has fewer element; > holes.; > - Create another layer of defaulting so that aug-cc-pvdz orbital uses; > aug-cc-pvdz-ri/jkfit when available (as at present), then; > def2-tzvp-ri/jkfit (not at present), then the ultimate default; > def2-qzvpp-ri/jkfit (as at present). This way don't get high AM cost on; > supposedly cheap orbital basis sets.; > - Disqualify default for 5Z and 6Z basis sets. if; > aug-cc-pv5/6Z-ri/jkfit aren't defined for a certain element, we've nothing; > to put in their place.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/144#issuecomment-163827788.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/144#issuecomment-163943998:360,avail,available,360,https://psicode.org,https://github.com/psi4/psi4/issues/144#issuecomment-163943998,1,['avail'],['available']
Availability,"Stepping through, it seems it crashes in `DFHelper::transform()` when calling in `identify_order()`, in particular in this line:. ```; 1521	 op = (!(std::get<0>(transf_[*itr]).compare(str)) ? 1 : op);; ```. segfault seems to happen in C++ standard lib at. ```; /usr/include/c++/8/bits/stl_tree.h:1888; 1888		if (!_M_impl._M_key_compare(_S_key(__x), __k)); ```. This is C++ 8.2.0-13 (the -13 being Debian's revision). Will try to dig deeper. It seems the iterator `itr` gets bogus after the `itr--` on line 1537:. ```; 1536	 needs.erase(itr);; (gdb) ; 1537	 itr--;; (gdb) p itr; $124 = ""Aaa""; (gdb) n; 1519	 for (itr = needs.begin(), end = needs.end(); itr != end; ++itr) {; (gdb) p itr; $125 = <error: Cannot access memory at address 0x701040707070707>; (gdb) n; 1521	 op = (!(std::get<0>(transf_[*itr]).compare(str)) ? 1 : op);; (gdb) p itr; $126 = <error reading variable: Cannot access memory at address 0x207070007060505>; (gdb) n. Program received signal SIGSEGV, Segmentation fault.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1457#issuecomment-451645059:695,error,error,695,https://psicode.org,https://github.com/psi4/psi4/issues/1457#issuecomment-451645059,3,"['error', 'fault']","['error', 'fault']"
Availability,"Still a problem with new CI code. Full error:. ```; PSIO_ERROR: Can't find TOC Entry buffer_ 0; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 41, in <module>; File ""/theoryfs2/ds/richard/SrcFiles/psi4clean/lib/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/theoryfs2/ds/richard/SrcFiles/psi4clean/lib/python/proc.py"", line 2797, in run_detci; psi4.detci(); RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /theoryfs2/ds/richard/SrcFiles/psi4clean/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read_entry(unsigned int, char const*, char*, unsigned long); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83#issuecomment-170686261:39,error,error,39,https://psicode.org,https://github.com/psi4/psi4/issues/83#issuecomment-170686261,5,"['Error', 'error']","['Error', 'error']"
Availability,Still some sort of issue when 5.0 is found:; ```; -- Using Libxc: /home/vsts/work/1/s/build/stage/lib/libxc.a (version 5.0.0); ```. ```; /home/vsts/work/1/s/psi4/src/psi4/libfunctional/LibXCfunctional.cc: In member function ‘void psi::LibXCFunctional::set_tweak(std::vector<double>)’:; /home/vsts/work/1/s/psi4/src/psi4/libfunctional/LibXCfunctional.cc:256:69: error: invalid conversion from ‘const xc_func_info_type*’ to ‘xc_func_info_type*’ [-fpermissive]; int npars = xc_func_info_get_n_ext_params(xc_functional_.get()->info);; ^; In file included from /home/vsts/work/1/s/psi4/src/psi4/libfunctional/LibXCfunctional.cc:43:0:; /usr/share/miniconda/envs/p4env/include/xc.h:124:5: note: initializing argument 1 of ‘int xc_func_info_get_n_ext_params(xc_func_info_type*)’; int xc_func_info_get_n_ext_params(xc_func_info_type *info);; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-619572092:361,error,error,361,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-619572092,1,['error'],['error']
Availability,"Summing up discussion from the conference call on Wednesday:; * This is a non-trivial bug to fix. The easy fix of removing `psio_` from the wavefunction won't work from DFOCC, as that is how DFOCC gets some of its integrals.; * DGAS is generally uneasy with changes to the wavefunction specification. The current plan is to put actual error messages instead of segfaults for the four aforementioned modules and leave this aside, otherwise.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1851#issuecomment-608613470:335,error,error,335,https://psicode.org,https://github.com/psi4/psi4/issues/1851#issuecomment-608613470,1,['error'],['error']
Availability,"Sure thing, the link on this page [http://www.psicode.org/psi4manual/master/conda.html](url) points to 1.2, and the link here [http://www.psicode.org/psi4manual/master/build_obtaining.html#binary-installer](url) is also pointed at 1.2. (via a redirect from http://www.psicode.org/downloads.html)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475855914:280,down,downloads,280,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475855914,1,['down'],['downloads']
Availability,"Sure, I'm ok with that modification. On Fri, Feb 26, 2016 at 2:24 PM, Lori A. Burns notifications@github.com; wrote:. > If the above works, and you think it'd be helpful, I can edit; > https://github.com/psi4/psi4/blob/master/share/python/proc.py#L825 to; > something like; > ; > ```; > elif reference == 'ROHF':; > if mtd_type == 'CONV':; > if module == 'DETCI': # no default for this case; > func = run_detci; > elif module in ['']:; > psi4.print_out(""""""This method is available inefficiently as a byproduct of a CISDT computation. Add ""set qc_module detci"" to input to access this route.""""""); > ```; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/282#issuecomment-189441001.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/282#issuecomment-189441755:471,avail,available,471,https://psicode.org,https://github.com/psi4/psi4/issues/282#issuecomment-189441755,1,['avail'],['available']
Availability,"Sure, here is the script:. ```; import time; import sys; import os; import json. import psi4. def run_fxyz(fxyz, theory='wB97X-D3/def2-TZVP'):; '''; fxyz: absolute path to an xyz file; '''; elements, xyz = [], []; with open(fxyz) as f:; line = next(f); numb_atoms = int(line.split()[0]); line = next(f); charge, multiplicity = map(int, line.split()); for i in range(numb_atoms):; line = next(f); elmnt, x, y, z = line.split() ; elements.append(elmnt); xyz.append((float(x), float(y), float(z))). fxyz = os.path.basename(fxyz); base, ext = os.path.splitext(fxyz). name = base + '_wB97XD3_def2-TZVP'. geom_string = '\n'.join(['%s %f %f %f' % (e, x, y, z) for e, (x, y, z) in zip(elements, xyz)]); geom_string = str(charge) + ' ' + str(multiplicity) + '\n' + geom_string; print(""geom_string"", geom_string). outfile = name + '.psi4'; psi4.core.set_output_file(outfile, False); geom = psi4.geometry(geom_string); settings = {; 'scf_type': 'DF',; 'dft_basis_tolerance': 1e-10,; 'ints_tolerance': 1e-10,; 'dft_pruning_scheme':'robust',; 'S_ORTHOGONALIZATION': 'PARTIALCHOLESKY',; 'S_CHOLESKY_TOLERANCE': 1e-6,; 'wcombine': False,; }; psi4.set_options(settings); start_time = time.time(); grad = psi4.gradient(theory) ; psi4.core.print_variables(); energy = psi4.variable(""SCF TOTAL ENERGY""); psi4.core.clean(); jobtime = time.time() - start; results = {; ""time"": float(jobtime),; ""energy"": energy,; ""gradient"": grad; }. with open(name + "".json"", ""w"") as fout:; json.dump(results, fout, indent=4). print(""Job %s completed in %.2f seconds with energy %.10f"" % (base, jobtime, energy)). def main(args):; assert args[1].endswith("".xyz""); psi4.set_num_threads(1); run_fxyz(args[1]). if __name__ == '__main__':; main(sys.argv); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100260046:1020,robust,robust,1020,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100260046,1,['robust'],['robust']
Availability,"Sure, we can add a failure just like SCF if DETCI does not converge. We can also increase the number of default iterations. At the same time, this is a fairly difficult CI case with the hydrogens very extended, I'm not sure we want defaults to cover this area as in many other cases 100 CI iterations would indicate some sort of failure. . In two-step MCSCF exact CI iterations are not really all that desirable. Unless a user loosens the MCSCF gradient threshold significantly this likely has no bearing on MCSCF computations as the previous guess CI vector is nearly exact with respect to energy near solution. Even then, delta energy convergence conditions should pick this up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/394#issuecomment-222842020:19,failure,failure,19,https://psicode.org,https://github.com/psi4/psi4/issues/394#issuecomment-222842020,2,['failure'],['failure']
Availability,"Switched over Psi4 grid generation to `libgg`. Looks like about a 4x speedup in general for collocation generation. However, it spends ~65% of the time transposing the collocation matrices back to Psi4 order otherwise this would be killer (~12x faster). I can look at a few other transpose options in `libgg`, but it would be tough to spit them out correctly. Still helps dramatically for small molecules/bases and large grids. As a note I pinged TBLIS [here](https://github.com/devinamatthews/tblis/issues/13) seeing if they would implement the common grid operation `A_ij \epsilon_j B_jk -> C_ik`. Looks like they have thought about it, but not yet in. Could be a great use case to pull TBLIS in. I know @amjames or @schiebermc might need it soon. Updated the TODO.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/869#issuecomment-349436402:440,ping,pinged,440,https://psicode.org,https://github.com/psi4/psi4/pull/869#issuecomment-349436402,1,['ping'],['pinged']
Availability,"Switching to `sse` on my Mac, simint builds fine through p4. But then in mints, . ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/siminteri.h:34:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/simint.h:4:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/ostei/ostei_config.h:3:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:110:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:165:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; ```. Should those be hidden for `sse`? Or is my header set just too old for words and the problem should be considered wholly on my side. Sorry to have disrupted your issue, @hokru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356782049:778,error,error,778,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356782049,2,['error'],['error']
Availability,"TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG', 'CANONICALIZE_INACTIVE_FAVG', 'CARTESIAN_SYM_TOLERANCE', 'CART_HESS_READ', 'CC', 'CC3_FOLLOW_ROOT', 'CCD_E_CONVERGENCE', 'CCD_MAXITER', 'CCD",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5932,avail,available,5932,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"TSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27916,error,error,27916,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5770,avail,available,5770,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,Tarballs downloaded from GitHub are not git repositories. We use them in FreeBSD ports.; Nothing important should be hard-wired to Git during build/tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358102176:9,down,downloaded,9,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358102176,1,['down'],['downloaded']
Availability,Test failure healed after fixing an unrelated bug.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2376#issuecomment-988106570:5,failure,failure,5,https://psicode.org,https://github.com/psi4/psi4/pull/2376#issuecomment-988106570,1,['failure'],['failure']
Availability,"Test failures are everywhere, even on master. I think the MKL constraints of some of the psi packages and adcc are interacting badly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1799#issuecomment-597927326:5,failure,failures,5,https://psicode.org,https://github.com/psi4/psi4/pull/1799#issuecomment-597927326,1,['failure'],['failures']
Availability,Test failures are expected until #2750 is merged in.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2748#issuecomment-1279252713:5,failure,failures,5,https://psicode.org,https://github.com/psi4/psi4/pull/2748#issuecomment-1279252713,1,['failure'],['failures']
Availability,"Test failures here are some more references to n-pole components that need to be removed. I'll fix it, but it's slow-going as I need to sync up my local repo to L2-oei.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2479#issuecomment-1068050818:5,failure,failures,5,https://psicode.org,https://github.com/psi4/psi4/pull/2479#issuecomment-1068050818,1,['failure'],['failures']
Availability,Testing different methods to see which properties are available.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/40#issuecomment-37977939:54,avail,available,54,https://psicode.org,https://github.com/psi4/psi4/issues/40#issuecomment-37977939,1,['avail'],['available']
Availability,"Testing the gradients of dlDF/cc-pVDZ, I see similar differences between analytic and numerical gradients with modern Psi4 (1.2a1.dev829):. - Density fitting error <= 10^{-6}; - Differences b/t analytic & numerical as large as ~10^{-4}; - Nearly no difference between analytic gradients computed w/ standard and dense grids; numerical gradients differ by nearly 10^{-4} between dense and standard grids. For anyone interested, I've uploaded a file containing the raw gradients [here](https://github.com/psi4/psi4/files/1919924/dlDF_summary.txt) for perusal. These observations would seemingly point towards libXC kernel instabilities for meta-GGAs, instead of a more targeted problem with our M05-2X gradients in particular, exactly in line with @dgasmith's prediction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962#issuecomment-381998886:158,error,error,158,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381998886,1,['error'],['error']
Availability,Tests fail because of an unrelated error (https://github.com/psi4/psi4/issues/1943).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1942#issuecomment-654045869:35,error,error,35,https://psicode.org,https://github.com/psi4/psi4/pull/1942#issuecomment-654045869,1,['error'],['error']
Availability,"Thank you @dgasmith for the quick feedback.; I just put the I-PI changes now in this PR/branch and tried to add also a small smoke test of the broker, when i-pi is not available on runtime in the unittests to show the concept here. The other CC changes and minor bug fixes will be put into a different PR then as those changes are indeed not required at this point, but only when also using the amplitudes as well later on in the broker.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-400979830:168,avail,available,168,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-400979830,2,['avail'],['available']
Availability,"Thank you again loriab. Finally it was possible to me compile the plugin . I had some issues. After your last comment I get insecure about if I used the corrected code previously (before I tried from the link (https://github.com/loriab/psi4/commit/1b6328cdae9895ca1cabfb31656710fa8f00e30c), so I used the link you shared in the last message. I clean the directory and started again with the new code. The `make` command gave again the same error message. `grep` does not return matches in the original `.cc` file so I inspected the automatically generated `.cc` file. I noticed some differences (many of them seems to be intentionally changed) but not all of them. In essence, by comparing with the file you edited, I replaced in the new `.cc` file `wfn` with `ref_wfn`few times and add `SharedWavefunction ref_wfn` as the first argument of the function `printmo` (the name of my plugin). The final result is: http://pastebin.com/bX9jDxi5 .; I do not know if the above is because a bug of the generator of files for the plugin or just me, as I found very extraneous the changes between files, but inspecting the files I really do not find in the original `cc` file what appeared in the generated one, and I cleaned everything to avoid versions problems . The original is: http://pastebin.com/Yb4pLq6j .; Excuse because of the long message but I tried to put my grain of sand. Now I'll try the plugin :-) , thank you very much again",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-195957592:440,error,error,440,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-195957592,1,['error'],['error']
Availability,"Thank you for all the insights! With this info, I should be able to get it working (at least if the density matrix is available in some form.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/504#issuecomment-258839784:118,avail,available,118,https://psicode.org,https://github.com/psi4/psi4/issues/504#issuecomment-258839784,1,['avail'],['available']
Availability,"Thank you for looking into this!. So first and foremost, I have a question on this front. When I look at the [the Psi4 documentation](https://psicode.org/psi4manual/master/dft.html) on DFT grids in Psi4, it seems that an order of 7 maps to 26 spherical grid points, rather than the 86 that you mention. I won't pretend to be an expert on the DFTGrid class, but I assume this is because the orders that are referenced within the DFTGrid class pruning schemes (and I presume your comment) are different from the orders mentioned in the documentation?. Its further interesting because, by default, the initial grid that COSX uses has 50 spherical points in it, which maps to an order of 11 in the documentation (and I believe an order of 5 based on how your comment maps orders to spherical points). The COSX grids also use ROBUST pruning by default. With these settings, the COSX code should break with the default grid settings... but it doesn't seem to? To be fair, its possible that the current default settings for the initial COSX grid break the code by leading to a wonky grid rather than leading to a segfault/exception (though I would expect the latter, from my understanding of the pruning schemes). Also, as a report on my end, I made a slight modification to the code to allow for more control over how COSX grids are made - nuclear schemes, radial schemes, block schemes, etc. I then tried different combinations of grid parameters for COSX with 146 spherical points. Unfortunately, nothing I tried worked. Whatever bug we are dealing with here... it's insidious. And as a final comment, I suppose this brings up the question of, how do we want to handle this? You bring up a couple of possible solutions in your comment, none of which I have any qualms with.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890#issuecomment-1460256518:821,ROBUST,ROBUST,821,https://psicode.org,https://github.com/psi4/psi4/issues/2890#issuecomment-1460256518,1,['ROBUST'],['ROBUST']
Availability,"Thank you for suggesting the dev version. It worked without any further errors or warnings. Cheers!. That is a good point, David. In this case we just wanted to optimize the energy, not the structure, and we already had scripts to do so for larger molecules. Thank you for the heads-up!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682599493:72,error,errors,72,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682599493,1,['error'],['errors']
Availability,"Thank you for the info and recommendation, @hokru! Results are still not perfect, but much better. | Benzene Dimer | Min. Monomer Separation (Å) | Energy (kJ/mol) | Software | Spherical Points | Radial Points | Total Points | Notes |; |---|---|---|---|---|---|---|---|; | 2mer+0-1 | 2.544 | -6.06459045 | ORCA | 590 | OptM3 with GC (2021) | 277814 | |; | | | -6.06828307 | Psi4 | 590 | 99 | 451461 | pruning = robust |; | | | -5.99965831 | Psi4 | | | | benchmark (CC) |; | 2mer+0-77 | 11.016 | -0.03793439 | ORCA | 590 | OptM3 with GC (2021) | 277814 | |; | | | -0.04297074 | Psi4 | 590 | 99 | 451461 | pruning = robust |; | | | -0.03186856 | Psi4 | | | | benchmark (CC) |",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2304#issuecomment-937245506:410,robust,robust,410,https://psicode.org,https://github.com/psi4/psi4/issues/2304#issuecomment-937245506,2,['robust'],['robust']
Availability,Thank you for the report. The issue persists with the current development version.; The faulty module is `fnocc`. ; I suspect the error is in the re-computation of the one-electron integrals in the DF-CCSD algorithm (https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/df_ccsd.cc#L714),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1791#issuecomment-580181993:88,fault,faulty,88,https://psicode.org,https://github.com/psi4/psi4/issues/1791#issuecomment-580181993,2,"['error', 'fault']","['error', 'faulty']"
Availability,"Thank you very much for looking into this, @raimis - especially the detailed benchmarks. If my memories from way back (circa 2010) are correct, @robparrish and I were trying to write a prototype DF gradient code and hit a very strange error. The finite difference tests we did for hybrids all looked good, but for range-separated functionals we were getting quite large noise. The direct range-separated code worked fine, confirming that the derivative integrals were correct, and pointing the fact that we somehow messed up the chain rule in our haste. Since then Rob did a complete rewrite of the entire SCF machinery and made it infinitely better so, inspired by your detailed comments, I decided to revisit. This input. ```; memory 6Gb. molecule C4NH4 {; -1 1; C 0.00000000 0.00000000 2.13868804; N 0.00000000 0.00000000 4.42197911; C 0.00000000 0.00000000 -0.46134192; C -1.47758582 0.00000000 -2.82593059; C 1.47758582 0.00000000 -2.82593059; H -2.41269553 -1.74021190 -3.52915989; H -2.41269553 1.74021190 -3.52915989; H 2.41269553 1.74021190 -3.52915989; H 2.41269553 -1.74021190 -3.52915989; units bohr; }. set {; basis 6-31G; d_convergence 11; points 5; }. anl = gradient('scf', df_functional='wB97X-D', dertype=1); num = gradient('scf', df_functional='wB97X-D', dertype=0). anl.print_out(); num.print_out(); ```. Yields the following analytic/numerical grads for B3LYP:; ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 -0.00000000000000 0.01448961501491; 2 0.00000000000000 0.00000000000000 0.00650495770571; 3 0.00000000000000 -0.00000000000000 -0.01465457276700; 4 -0.00257733094550 -0.00000000000000 -0.00299790291405; 5 0.00257733094550 0.00000000000000 -0.00299790291405; 6 -0.00015263631139 -0.00478910772840 -0.00008555938077; 7 -0.00015263631139 0.00478910772840 -0.00008555938077; 8 0.00015263631139 0.00478910772840 -0.00008555938077; 9 0.00015263631139 -0.00478910772840 -0.00008555938077. ## F-D gradient (Symmetry 0) ##; Irrep: 1 Size: 9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-351148891:235,error,error,235,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-351148891,1,['error'],['error']
Availability,"Thank you very much for your comment. I looked at the code tried as you suggested (ab|ab); ```python; aoeriHO = np.array(mints.ao_eri(wfnO.basisset(), wfnH.basisset(), wfnO.basisset(), wfnH.basisset())); ```; and it returned this; ```; ---> 28 aoeriHO = np.array(mints.ao_eri(wfnO.basisset(), wfnH.basisset(), wfnO.basisset(), wfnH.basisset())); 29 aoeriHO.shape. RuntimeError: ; Fatal Error: If different basis sets exist in the bra, basis3 is expected to be dummy in setup_sieve(); Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1638121835567/work/psi4/src/psi4/libmints/twobody.cc on line: 256; The most recent 5 function calls were:. psi::TwoBodyAOInt::setup_sieve(); psi::IntegralFactory::eri(int, bool, bool); ```; May I ask what is the meaning of this error?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2439#issuecomment-1038447736:386,Error,Error,386,https://psicode.org,https://github.com/psi4/psi4/issues/2439#issuecomment-1038447736,3,"['Error', 'error']","['Error', 'error']"
Availability,"Thank you very much, @loriab. Is there a rough schedule whether and if yes, when this will make it into the master? We are currently preparing a paper which makes use of this code and it would be nice if it was available publicly in the not-too-far future :innocent:. Is there anything i can do for speeding up this progress?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2633#issuecomment-1197787105:211,avail,available,211,https://psicode.org,https://github.com/psi4/psi4/pull/2633#issuecomment-1197787105,1,['avail'],['available']
Availability,"Thank you, Ugur, for the detailed explanation. That really helps me understand what's going on in this case and in psi4/psi4private#48 . I gather that the situation we've got now is the following:. | `scf_type` | `mp2_type` | `qc_module` | outcome |; | --- | --- | --- | --- |; | conv | conv | occ | works |; | df | df | occ | works |; | df | df | dfmp2 | works |; | df | conv | occ | NYI error; psi4/psi4#48 (this); not too useful to implement |; | conv | df | dfmp2 | NYI error; psi4/psi4private#48; would be useful to implement |; | conv | df | occ | works or not?, @bozkaya |. Barring implementing many orbital response terms in this or psi4/psi4private#48, sounds like the above is fixed for the time being for when the user specifies `scf_type` and `mp2_type`. But when `scf_type` is only implied ""(df)"", I can add the below. | `scf_type` | `mp2_type` | `qc_module` | outcome |; | --- | --- | --- | --- |; | (df) --> conv | conv | occ | works as above |. If you _did_ implement cd-mp2 gradients, @bozkaya, do you anticipate them only working upon a cd-hf reference?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-184035189:389,error,error,389,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-184035189,2,['error'],['error']
Availability,"Thank you. After removing the reference to sapt_dft.cc, I ran (in a directory ""psi4public/build""). > > ../configure.cmake, and got. []; ['-DCXXFLAGS=-O2']; Executing ['cmake', '/home/bingao/Work/XKjem/psi4public', '-DCXXFLAGS=-O2', '-DF77FLAGS=-O2', '-DF77SYMBOL=detect', '-DMAX_AM_ERI=5', '-DPREFIX=/usr/local/psi4']; -- A library with BLAS API found.; -- A library with LAPACK API found.; -- checking Fortran FUNCTION_ linkage: SUB_; -- checking Fortran function_ linkage: sub_; -- Lower case with underscore is used; -- Could NOT find Boost; CMake Warning at CMakeLists.txt:204 (message):; Boost not found. The pre-packaged version will be built. It looks OK, but I got the error of compiling boost:. > > make; > > Scanning dependencies of target boostlibs; > > make[2]: **\* No rule to make target `../boost/boost_1_54_0.tar.gz', needed by`boost/boost_1_54_0'. Stop.; > > make[1]: **\* [boost/CMakeFiles/boostlibs.dir/all] Error 2; > > make: **\* [all] Error 2. Do you know how to solve this problem? Thank you.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/55#issuecomment-40186517:677,error,error,677,https://psicode.org,https://github.com/psi4/psi4/issues/55#issuecomment-40186517,3,"['Error', 'error']","['Error', 'error']"
Availability,"Thank you. I can see the following files already in the boost directory:. boost_1_55_0.tar.gz CMakeLists.txt Makefile.in. but I do not know why I got this error --- a bug in PSI4?? Anyway, I have managed to compile PSI4 using the GNU automake tools.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/55#issuecomment-40244096:155,error,error,155,https://psicode.org,https://github.com/psi4/psi4/issues/55#issuecomment-40244096,1,['error'],['error']
Availability,Thank you. The input came from an xyz file sent to me and I hadn't thought to check it for errors.; But that psi4 error message would be much more helpful if translated into intelligible English.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2287#issuecomment-910170283:91,error,errors,91,https://psicode.org,https://github.com/psi4/psi4/issues/2287#issuecomment-910170283,2,['error'],"['error', 'errors']"
Availability,Thanks @andysim. Were you able to track down the fault?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/84#issuecomment-102086526:40,down,down,40,https://psicode.org,https://github.com/psi4/psi4/issues/84#issuecomment-102086526,2,"['down', 'fault']","['down', 'fault']"
Availability,"Thanks @loriab for looking into the CI failure!; I'll include all these edits in my next commits and I am also working on making some ctests as well. I haven't had a lot of time to to focus on computing just the diagonal elements of the F12 intermediates, so that's on the backburner.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110#issuecomment-2018655214:39,failure,failure,39,https://psicode.org,https://github.com/psi4/psi4/pull/3110#issuecomment-2018655214,1,['failure'],['failure']
Availability,"Thanks @loriab for your detailed answer. In fact, I would like to do focal-point analyses for small molecules (including HF, MP2, CC, DBOC, and relativistic corrections) in a somewhat automated form. Psi4, which is able to execute MRCC and CFOUR, seems to me an optimal frame for this purpose (I saw that certain FPA schemes are already implemented in it). . The Psi4/Cfour route looks simpler for me. Basically I will use Cartesian coordinates, but in some cases it would be useful to do CCSD(T) optimizations via CFOUR (requiring internal coordinates). How to execute the solution you posted with Psi4? I tried to put it into a file `test.dat` and run `psi4 test.dat`, but -- after correcting the possible typo [`atomic_result.dict()` instead of `atomicresult.dict()`], I received the following error: . ```; {'error': {'error_message': 'QCEngine Execution Error:\n'; 'Traceback (most recent call last):\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/util.py"", '; 'line 114, in compute_wrapper\n'; ' yield metadata\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/compute.py"", '; 'line 91, in compute\n'; ' output_data = executor.compute(input_data, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 71, in compute\n'; ' job_inputs = self.build_input(input_model, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 137, in build_input\n'; ' cfourrec[""infiles""][""GENBAS""] = '; 'genbas.read_text()\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1236, in read_text\n'; "" with self.open(mode='r', encoding=encoding, ""; 'errors=errors) as f:\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1222, in open\n'; ' return io.open(self, mode, buffering, '; 'encoding, errors, newline,\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048:797,error,error,797,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048,5,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks Daniel! I looked at the changes and couldn't imagine what was; causing this. I'll follow your suggestion. Best,; Nick. On Wed, Nov 30, 2016 at 11:13 PM, Daniel Smith <notifications@github.com>; wrote:. > This is actually a PyBind11 version error. It doesn't appear that our; > CMake is detecting the discrepancy. Please blow away your objdir and; > recompile from scratch.; >; > -Daniel Smith; > Sent from my iPhone.; >; > > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > >; > > After a recent git pull, psi4 failed to compile. It seems that the error; > was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi; > so all Python Exceptions raise to stdout and psi out"". If I revert to the; > commit just before this I'm able to compile.; > >; > > If it helps, I'm running Ubuntu, with gnu compilers.; > >; > > Here's the error message:; > >; > > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In; > function ‘bool py_psi_set_local_option_array(const string&, const; > string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a; > member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool; > py_psi_set_global_option_array(const string&, pybind11::list,; > psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13:; > error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])); > { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374:; > recipe for target 'src/CMak",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074858:247,error,error,247,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074858,3,['error'],['error']
Availability,"Thanks a lot for the detailed bug report. I can reproduce your error and will look into it when I get time (probably not until next week, I'm afraid). The problem seems to occur when d functions are present as you indicated, but it's independent of whether spherical or Cartesian basis functions are used. It's also only an issue for molecules with degenerate modes, based on my 30 seconds of testing; that explains why my tests all passed when I wrote the code. I'll have to add a linear triatomic to the test suite when I get to the bottom of this mystery.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/791#issuecomment-324963359:63,error,error,63,https://psicode.org,https://github.com/psi4/psi4/issues/791#issuecomment-324963359,1,['error'],['error']
Availability,"Thanks a lot for the detailed feedback, and input file to reproduce the problem. I'll look into this, and try to get a patch together,. cheers,. Andy. On Aug 6, 2013, at 10:21 AM, James Spencer notifications@github.com wrote:. > CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:; > ; > molecule f { ; > f 0.00 0.00 0.00; > }; > set basis cc-pVTZ; > set scf reference uhf ; > energy('ccsd'); > (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault).; > ; > Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem.; > ; > Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc.; > ; > Full backtrace from gdb:; > ; > (gdb) where; > #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; > #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; > #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); > at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; > #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); > at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; > #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; > #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; > #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; > #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22188141:291,fault,faults,291,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22188141,6,"['avail', 'fault']","['avail', 'fault', 'faults']"
Availability,"Thanks a lot for you hard detective work to track this down. I'm happy to merge the PR, but I'd like to dig around and see if I can figure out why the off-diagonals appear in the first place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/678#issuecomment-292588286:55,down,down,55,https://psicode.org,https://github.com/psi4/psi4/pull/678#issuecomment-292588286,1,['down'],['down']
Availability,"Thanks a lot, it now works for scf calculation. now i try to do a dmrg-scf as explained here : http://sebwouters.github.io/CheMPS2/interfaces.html ; but end up with . An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File ""<string>"", line 48, in <module>. File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'). LUCA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-185833831:170,error,error,170,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-185833831,1,['error'],['error']
Availability,"Thanks again @edeprince3. I now get this compilation error when trying to get the skeleton example plugin built:; ```; [ 75%] Build skeleton example plugin; Traceback (most recent call last):; File ""../../../stage/usr/local/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/home/roberto/Workspace/robertodr/psi4/build_fcidump/stage/usr/local/psi4/lib/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/home/roberto/Workspace/robertodr/psi4/build_fcidump/stage/usr/local/psi4/lib/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/home/roberto/Workspace/robertodr/psi4/build_fcidump/stage/usr/local/psi4/lib/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /home/roberto/Workspace/robertodr/psi4/build_fcidump/stage/usr/local/psi4/lib/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: dgeev; ```; Has anybody encountered this before?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355344822:53,error,error,53,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355344822,2,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks for [the PR](https://github.com/loriab/psi4/pull/8), @bozkaya. Unfortunately, it (1) contains commits from authors other than yourself, indicating that the branch isn't based off loriab:ugurfno and (2) the final commit, which should contain just your changes from this week, shows over 3k files and 1M LOC changed. This is seriously wrong and probably not worth trying to recover from. Perhaps start over with [these directions](https://github.com/psi4/psi4/pull/1390#issuecomment-444903155). Get my branch and add your changes. The commits tab in the PR to me should be one or a few commits solely by you from this week, and the LOC diffs should be in the hundreds (or low thousands if you add many tests). Psi uses ordinary git and the PR workflow, so internet resources and [our resources](http://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow) are available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1390#issuecomment-447379000:379,recover,recover,379,https://psicode.org,https://github.com/psi4/psi4/pull/1390#issuecomment-447379000,2,"['avail', 'recover']","['available', 'recover']"
Availability,Thanks for all the help. I will see if I can push the maintenance to install SL7.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792#issuecomment-607347442:54,mainten,maintenance,54,https://psicode.org,https://github.com/psi4/psi4/issues/1792#issuecomment-607347442,1,['mainten'],['maintenance']
Availability,"Thanks for answers! After disabling SIP in the recovery mode, I can debug the code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/491#issuecomment-258681033:47,recover,recovery,47,https://psicode.org,https://github.com/psi4/psi4/issues/491#issuecomment-258681033,1,['recover'],['recovery']
Availability,"Thanks for bumping this. Unlike the osx-arm64 migration, I didn't know how to trigger aarch64-enabling PRs on c-f. It looks like https://conda-forge.org/docs/maintainer/knowledge_base/#using-arch_rebuildtxt is the answer. `libxc` is already available, but at least `libint` and `gau2grid` will need to be built before `psi4`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3198#issuecomment-2285250860:241,avail,available,241,https://psicode.org,https://github.com/psi4/psi4/issues/3198#issuecomment-2285250860,1,['avail'],['available']
Availability,"Thanks for fixing that one! I have found another however which comes up when I request to save all wavefunction properties via QCEngine using the latest dev version of psi4, here is the error message.; ```; QCEngine Input Error: Traceback (most recent call last):; File ""/Users/joshua/miniconda3/envs/psi4/lib//python3.8/site-packages/psi4/driver/schema_wrapper.py"", line 410, in run_qcschema; ret = qcel.models.AtomicResult(**ret_data, stdout=_read_output(outfile)); File ""pydantic/main.py"", line 274, in pydantic.main.BaseModel.__init__\npydantic.error_wrappers.ValidationError: 1 validation error for AtomicResult\nwavefunction -> occupations_a; Return quantity scf_occupations_a does not exist in the values. (type=value_error); ```. I think this is related to the lines here which pulls out the occupations which have been commented out I am not sure if these simply need to be uncommented or if there is some formatting that needs to be worked out https://github.com/psi4/psi4/blob/670a85012a2864dd6673ac4a39243156205c500e/psi4/driver/schema_wrapper.py#L344. ccing @dgasmith in case he knows the status of this. @hokru could you please re-open this issue or should I make a new one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946:186,error,error,186,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-719726946,5,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks for handling this, Ashutosh. Libtrans is showing its age, so it's great to see it being modernized. There are many CI and CC tests that don't run on Travis, so as a sanity check it'd be great if you could run the full test suite from the build directory: `ctest -j 12` if you have 12 cores available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/718#issuecomment-303894263:297,avail,available,297,https://psicode.org,https://github.com/psi4/psi4/pull/718#issuecomment-303894263,1,['avail'],['available']
Availability,"Thanks for joining in, @rmcgibbo and @tallakahath. The breaking API change is that we can now properly serialize and reconstitute wavefunction objects. What gets stored and an example [here](https://github.com/psi4/psi4/pull/1304/files). So after that, the `180.npz` storage structure doesn't have to be [written out explicitly](https://github.com/psi4/psi4/commit/e5b12a40c8c2d65a5e59f758df871407afdc544c#diff-dbf22cd80d16f6d8ef8250145a6d91bfR1410) and uses of the `180` file [can be much simpler](https://github.com/psi4/psi4/pull/1495/files#diff-ce55390d6b954c38f0c1fe9df10e0eceL87). The file also now has extension `180.npy`. This is a definite improvement psi-side, but the break to snsmp2 is definitely our fault, so we're willing to fix it. We'd probably do the minimal disruption that gets the code running again. I think that means switching to reading npy from npz, and dealing with Ca_occ by either pulling it from a reconstitued wfn, `Ca_occ = scf_wfn.Ca_subset(""SO"", ""OCC"")` or saving it in the array psivar slot `scf_wfn.set_array(""CA_OCC"", Ca_occ)`. If you'd like to try doing the fix yourselves, or do greater renovations after some of the bug workarounds or progress in psi, we'd be glad of it. I'm trying to get a psi4 v1.3rc1 out, which means conda pkg `psi4` (psi4 itself and optional compiled-in addons) and `psi4-rt` (optional run-time addons) need to be in working order. That's pretty much the case except for snsmp2 (I didn't realize the trouble was more than a `npz` --> `npy` switch until yesterday.) So I was going to drop snsmp2 from `psi4-rt` for the v1.3rc1 and expect to get it back by v1.3.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1514#issuecomment-459735161:713,fault,fault,713,https://psicode.org,https://github.com/psi4/psi4/issues/1514#issuecomment-459735161,2,['fault'],['fault']
Availability,"Thanks for looking into this! I now have a better understanding of the original error. . First, a note about the SCF restart technology: when you use the `wfn.to_file()` function in the first file, psi4 saves (1) the name of the basis set and (2) the matrix of orbital coefficients. The numbers contained in the orbital matrix aren't useful without knowing which basis they correspond to. In the second file, psi4 reconstructs the basis set using both the saved name and orbital coefficients. When a `basis` object is defined without a name, psi4 gives that object a [randomly generated name](https://github.com/psi4/psi4/blob/master/psi4/driver/inputparser.py#L273). This is a problem when you want to use the same `basis` object in a new file, since the same object defined in different files will receive different, random names. In the error you posted, the bit about `ANONYMOUS5AA41DFC` refers to the randomly generated name of the basis. Psi4 has no way of knowing what this basis set is. Your solution of using `basis this_basis { ... }` and `set basis this_basis` certainly works, but you actually don't even need the second line; all you need is `basis this_basis { ... }`. You asked about a more flexible syntax for reading SCF guesses. What about the current syntax is limiting?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2571#issuecomment-1120579737:80,error,error,80,https://psicode.org,https://github.com/psi4/psi4/issues/2571#issuecomment-1120579737,2,['error'],['error']
Availability,"Thanks for making this into a written issue. This was discussed on Slack over a week ago, but not everyone may have seen it. All those test failures trace back to a ""delicate"" part of the OCC module. It has very slow orbital convergence. I [updated the default orbital convergence criteria in OCC to be the same as in DFOCC](https://github.com/psi4/psi4/pull/1772/commits/896a7c22be5c72542b8773ca2a1b9164dee1fc2a), and for all the failing test cases, OCC simply can't converge the orbitals that tightly. You can see the issue about the OCC problem [here](https://github.com/psi4/psi4/issues/1777). It traces back to OCC not coupling orbital and T2 amplitude DIIS, when in my experience, coupling them is crucial for good convergence. I'm in the process of fixing that, but it's slow. A lot of junk in the OCC module needed to be cleaned out to make the code less confusing before I can start making the actual fix. If you want to move that along, you can help by reviewing [the current cleanup PR](https://github.com/psi4/psi4/pull/1789). I wanted to wait to write the next and final PR in the series until that one was accepted, but I may need to start on that now. Until that final PR gets in, we don't have conda builds and certainly can't have the next release. As you're probably wondering about this, these changes are also necessary for a paper I want submitted before I leave CCQC. While I'm quite unhappy these changes needed to be done, that they are made is useful for me personally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793#issuecomment-581033462:140,failure,failures,140,https://psicode.org,https://github.com/psi4/psi4/issues/1793#issuecomment-581033462,2,['failure'],['failures']
Availability,Thanks for opening the BSE issue. It looks like the parser will pass on an angular momentum of -1 along and not complain.; https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L129-L130; Perhaps an error and the expected order of letters can be printed instead.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1992#issuecomment-681870761:229,error,error,229,https://psicode.org,https://github.com/psi4/psi4/issues/1992#issuecomment-681870761,1,['error'],['error']
Availability,"Thanks for starting this. I wonder if the tech is general enough to also save the lambda amplitudes - once there's a test, I'll pull down and tinker with it. @loriab will `psi4 --json` continue to be supported, or are we looking to deprecate it? if the latter, we may wish to either go through something besides `driver`, or see what the QCEl folks think about optionally storing wfn parameters.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2328#issuecomment-951101445:133,down,down,133,https://psicode.org,https://github.com/psi4/psi4/pull/2328#issuecomment-951101445,1,['down'],['down']
Availability,"Thanks for the bug report. What's _happening_ is that test 243 is testing an eigenvector compute routine. The phase is non-deterministic, so the test does postprocessing on the phase. Due to an error in the test itself, the phase postprocessing was not done on the first row, causing the incorrect sign. tl;dr: Your Psi compilation is fine. The test was buggy. Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2828#issuecomment-1342683061:194,error,error,194,https://psicode.org,https://github.com/psi4/psi4/issues/2828#issuecomment-1342683061,1,['error'],['error']
Availability,Thanks for the clarification! Revising the error message should reduce confusion.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2577#issuecomment-1126191477:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/issues/2577#issuecomment-1126191477,1,['error'],['error']
Availability,"Thanks for the content lines. I agree with Jonathon that the troublesome part arises from https://github.com/Qiskit/qiskit-aqua/blob/1f2c316c3a1aca1296f45241d14ad8ae5fbe2027/qiskit/chemistry/drivers/psi4d/psi4driver.py#L107-L117 so it'll need to be changed there. If you like, feel free to ping me when you open an issue there. I think I could help modernize/simplify how they call psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228#issuecomment-873004517:290,ping,ping,290,https://psicode.org,https://github.com/psi4/psi4/issues/2228#issuecomment-873004517,2,['ping'],['ping']
Availability,"Thanks for the detailed error report. You're building a circa 1.0 snapshot (as evinced by the `setup` script, which we don't use anymore). The build system has been entirely rewritten since then. Please try re-cloning (not just pulling, as there's also been a git history re-write) and building the current development head. Some of the developers use Intel 2017 compilers, so they shouldn't be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629#issuecomment-282489363:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/issues/629#issuecomment-282489363,1,['error'],['error']
Availability,"Thanks for the explanation and digging. It's nice that there appears to be a possible path forward. After some tinkering, I don't think symlinking a partially-functional Psi4 build in the middle of a CI run is going to be the worth the downsides. We don't need this urgently, so it may be best to table this for a bit (unless somebody else happens to need it).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024#issuecomment-723138199:236,down,downsides,236,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-723138199,1,['down'],['downsides']
Availability,"Thanks for the feedback, @CDSherrill, I'll fix it tomorrow. One quick point:. There are two ways to fix the geometry optimization issue:; - we can toggle `return_total_data=True` if `ptype != 'energy'` (meaning total G/H are calculated and returned); - or we can add the monomers-in-monomers if `ptype != 'energy'` (meaning E/G/H are available, but interaction energies are returned).; I don't think either of those is consistent with 1.3.2's behaviour, though!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869894520:334,avail,available,334,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869894520,2,['avail'],['available']
Availability,Thanks for the heads up! Ping @bast. Do you have an example for the nondeterministic behavior? Might be something that happens also to other codes using these math detection macros.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/767#issuecomment-316203705:25,Ping,Ping,25,https://psicode.org,https://github.com/psi4/psi4/pull/767#issuecomment-316203705,1,['Ping'],['Ping']
Availability,"Thanks for the help everyone. . I am actually running into an issue with 'ranged_dihedral'. Both `psi4.core.set_local_option(""OPTKING"", ""RANGED_DIHEDRAL"", dihedral_string)` and 'psi4.set_options({""ranged_dihedral"": f""1 2 3 4 {phi - 0.0001} {phi + 0.0001}""}) ` give an error. ```; Error: option RANGED_DIHEDRAL is not contained in the list of available options. Error: option RANGED_DIHEDRAL is not contained in the list of available options. Did you mean? . Did you mean? ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1485859168:268,error,error,268,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1485859168,5,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"Thanks for the help!. FYI, I am on windows, but will run this in a Linux terminal if I get it working. I am getting conflicts when I try to install the yml file to a fresh env (see below). Is there an easier work around than this? I was able to pip install torsiondrive, but I get an error message relating to geometric? uninstalling and reinstalling geometric does not solve this. ```; FailedOperation(error=ComputeError(error_type='unknown', error_message='TorsionDrive error at 100:\ngeomeTRIC run_json error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\run_json.py"", line 269, in geometric_run_json\n geometric.optimize.Optimize(coords, M, IC, engine, dirname, params, print_info = (ic==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:284,error,error,284,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,4,['error'],['error']
Availability,"Thanks for the inquiry. My impression has been that distributing a Py/C++ package through pypi was a bad idea b/c (1) if pip decided to compile rather than download, it'd take hours to build all the deps; (2) unless we vendor 1GB libraries, we'd have to maintain Libint2, gau2grid, Libxc all on pypi, all of which are C/C++; (3) no control of LAPACK implementations and no MKL, so unreliable performance. That said, I really haven't reassessed since the advent of wheels. Would your environment enable you to download the installer (an executable bash script like the Miniconda one)? Download, bash it, and psi4 is preinstalled. Or are docker or singularity images workable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3091#issuecomment-1834765035:156,down,download,156,https://psicode.org,https://github.com/psi4/psi4/issues/3091#issuecomment-1834765035,3,"['Down', 'down']","['Download', 'download']"
Availability,"Thanks for the ping. The install page cmdline is actually correct. Since late December Psi4 has been able to use upstream `-c conda-forge` libint, and there's no longer any need for `-c conda-forge/label/libint_dev`. The latest Psi4 v1.9.1 from February on c-f uses the main-channel libint and updated the install page cmdlines. You're quite right that the psi4 conda package is segfaulting at present. The new L2 main release is built with higher AM, and I forgot that those weren't hot-swappable. The new L2-v2.9.0-linked Psi4 v1.9.1 c-f packages are building now, and will be available w/i a couple hours. _Or_ you can `conda install psi4 libint=2.8.2 python=3.11 -c conda-forge` now, and that should run fine. Sorry for the trouble.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079:15,ping,ping,15,https://psicode.org,https://github.com/psi4/psi4/issues/3144#issuecomment-1984272079,2,"['avail', 'ping']","['available', 'ping']"
Availability,"Thanks for the pointers, I'll take a look. > You only need the `wfn` object?. Yes and no. To bootstrap the calculation in adcc that's all what is needed. Down the line we also need the `MintsHelper` (see our [psi4 backend code](https://github.com/adc-connect/adcc/blob/master/adcc/backends/psi4.py)) to get electronic dipoles and ERI integrals in MO. > The `scf_helper` can automatically convert an SCF calculation done with symmetry into C1. Most post-scf DF methods require this already. Perfect!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547402567:154,Down,Down,154,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547402567,1,['Down'],['Down']
Availability,"Thanks for the quick answer that is helpful. We recently switched all our internal codebase to conda-forge only since mixing default/anaconda and conda-forge were creating an infinite list of either dep solving issues or symbol errors. I still tried to add `anaconda::intel-openmp` or simply the `anaconda` channel to see if I could get it to work for this simple env at least but I got another dep issue: `package psi4-1.6+77475b5-py39hceaf722_0 requires libxc 5.1.5 h84b9e52_1, but none of the providers can be installed`. If you haven't built psi4 from conda-forge but with defaults I am not surprised I am having this kind of issues. Hopefully psi4 will hit conda forge soon xD. Thanks again (feel free to close)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1164884983:228,error,errors,228,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1164884983,2,['error'],['errors']
Availability,"Thanks for the quick replies/bug fixes!. @susilehtola - we have indeed had our eye on integrating libxc, but it's coming down to manpower/tech debt issues right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291:121,down,down,121,https://psicode.org,https://github.com/psi4/psi4/issues/2206#issuecomment-870877291,1,['down'],['down']
Availability,"Thanks for the reminders. Even though the tests don't use `output.ref`, it can be handy for quickly diagnosing failures, so thanks for adding it, @PeterKraus .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1262#issuecomment-424378005:111,failure,failures,111,https://psicode.org,https://github.com/psi4/psi4/pull/1262#issuecomment-424378005,1,['failure'],['failures']
Availability,"Thanks for the reply - I have suspected the existence of an error in DFT gradients for more than a year because I have previously seen unexpected behavior in geomeTRIC / Psi4 geometry optimizations of organic molecules using DFT (B3LYP-D3/DZVP) in which the optimization fails to converge and the structure from the optimization trajectory appears to be tumbling (see attached movie). The behavior is more common when running optimizations with constraints. I suspected the DFT contribution because there is some literature on the lack of rotational invariance in DFT energies due to the grid, but I had not tested a constrained optimization on the same system using HF. I haven't made an issue report for this problem because I felt I lacked a test case that was compelling enough. . I thought the current issue had the same root cause as the organic molecule constrained optimizations, but I might be wrong about that. If you are seeing the gradient error in HF then I agree the current issue is not likely due to the DFT contribution to the energy. . https://github.com/psi4/psi4/assets/1441560/80f2b42d-fed2-4667-809d-f3a2550603fb",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066#issuecomment-1783717909:60,error,error,60,https://psicode.org,https://github.com/psi4/psi4/issues/3066#issuecomment-1783717909,2,['error'],['error']
Availability,"Thanks for the report, @GregorySchwing. Is there any chance you've got qcportal or qcfractal installed? I ask because psi4 itself should be pydantic v2-tolerant (that is, psi4 imports the v1 API from v2), while qcfractal won't be until the v0.52 release. But that's in theory. In practice, I haven't tested lately with v2, and pydantic is moving quickly and is widely used, so it might be safer to pin it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1826998338:152,toler,tolerant,152,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1826998338,1,['toler'],['tolerant']
Availability,"Thanks for the report. I imagine the problem is that we (@zachglick) [changed the relevant constructor a few months back to have a default boolean argument](https://github.com/psi4/psi4/commit/85ce7af9c23d0280946e2040967e12bcd6ab3f01#diff-c513bb8f4c4e0c8ba6348974ebff6db2L182-R182). objdump tells me Psi exposes a `psi::ERISieve::ERISieve(std::shared_ptr<psi::BasisSet>, double, bool)` symbol, and your error message is looking for a `psi::ERISieve::ERISieve(std::shared_ptr<psi::BasisSet>, double)` symbol. I'm surprised that adding a default argument would force other programs to supply a value, but I'll leave this to somebody more experienced in the ways of plugins.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1750#issuecomment-551770270:403,error,error,403,https://psicode.org,https://github.com/psi4/psi4/issues/1750#issuecomment-551770270,1,['error'],['error']
Availability,"Thanks for the report. I think we've averting the warning in the linked issue. It was just a warning for you, not an error, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1820#issuecomment-592740552:117,error,error,117,https://psicode.org,https://github.com/psi4/psi4/issues/1820#issuecomment-592740552,1,['error'],['error']
Availability,"Thanks for the report. We did some considerable infrastructure changes that show up in `0.4` (hence the tag, so it'd be easy to let people know how to avoid them if they went wrong). The nature of the errors you're getting indicates they're definitely infrastructure-related. Could you post the input file for the oeprop error?. In trying to revert, even the architecture independent files (the python driver) will be inconsistent between pre and post `0.4`. So maybe try installing a `0.3` afresh into a new conda environment. And make sure you don't have `PSIDATADIR` envvar defined anywhere, just in case you occasionally work from cloned/compiled copies.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182649776:201,error,errors,201,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182649776,2,['error'],"['error', 'errors']"
Availability,"Thanks for the response. I will try out conda install again. . In the meantime, I want to explain why I turned to #2024. ; I encounter this issue while installing just normal psi4: (this is from mamba install); ```; package libgfortran4-7.5.0-h1a10cd1_23 has constraint libgfortran 4.0.0 *_23 conflicting with libgfortran-3.0.1-0; ```. How I get to this point: ; First I used `conda install psi4 -c psi4`, but it will throw me this errors. (nothing is conflicting?) So I turned to `mamba` to help me with the conflicts. ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions; ```. This is what mamba got back to me if I installed the normal build. `mamba install psi4=1.5+e9f4d6d=py38ha809fef_0 -c psi4`. ```; package psi4-1.5+e9f4d6d-py38ha809fef_0 requires chemps2 >=1.8.10,<1.8.11.0a0, but none of the providers can be installed; ```. So then I tried to install `chemps2`, this can be installed normally. . Then I tried mamba to install psi4 again. . `mamba install psi4=1.5+e9f4d6d=py38ha809fef_0 -c psi4`. ```; package psi4-1.5+e9f4d6d-py38ha809fef_0 requires libgfortran >=3.0.1,<4.0.0.a0, but none of the providers can be installed; ```. Lastly, I tried to install libgfortran, but resulted in the above message. ; ```; package libgfortran4-7.5.0-h1a10cd1_23 has constraint libgfortran 4.0.0 *_23 conflicting with libgfortran-3.0.1-0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578#issuecomment-1125640496:432,error,errors,432,https://psicode.org,https://github.com/psi4/psi4/issues/2578#issuecomment-1125640496,2,"['Avail', 'error']","['Available', 'errors']"
Availability,"Thanks for the swift response from both of you. `set tpdm true` combined with the `get_tpdm` function gets the TPDM as a matrix into Python, which is what I need for my use case. (The map from matrix indices to orbital indices would also be nice, but I think I can dig that up myself.) So this isn't blocking me anymore, and there shouldn't be much ""digging into details"" of DETCI required!. I think the primary question is if we want to have a `detci` dirty mode or not, and if so, how much information it should keep. The other action item is to have an error message instead of the segfault, but I can do that myself, now that I have more context on expected DETCI operation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1812#issuecomment-586435576:556,error,error,556,https://psicode.org,https://github.com/psi4/psi4/issues/1812#issuecomment-586435576,1,['error'],['error']
Availability,"Thanks for the update. I second what Susi said. In certain cases it is necessary to decontract the primary basis. Then the DF basis needs to be decontracted as well. We have not done extensive tests on this procedure and there is always the risk that linear dependency problems may arise, for which we do not yet have a good solution. On Oct 10, 2016, at 4:18 PM, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. @WDerricottehttps://github.com/WDerricotte , @fevangelistahttps://github.com/fevangelista. I'm reworking the decontract functionality since that only existed c-side, but all basis sets are now built py-side. Basically, BASIS_X2C (formerly REL_BASIS) will always default to the decontracted orbital basis, if not set outright (set basis_x2c my_gigantic_uncontracted_basis). Is there ever a reason, then, to set the primary/orbital basis to a decontracted one (set basis cc-pvdz-decon)? If so, what fitting basis should a cc-pvdz-decon use: cc-pvdz-jkfit, cc-pvdz-jkfit-decon, unknown so give up? All the X2C test cases are with scf_type pk, none with DF. Thanks for any hints. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHubhttps://github.com/psi4/psi4/issues/43#issuecomment-252771310, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ADgtWdzkkeobqEpzo11t0Vgbt5eRhvl-ks5qysfDgaJpZM4BpdBt. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-252802760:1811,error,error,1811,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-252802760,1,['error'],['error']
Availability,"Thanks for this!. Mimicking is the right thing to do here. We encode irreducible representations into bitstring so that the nonzero blocks of our matrix are exactly those with the property `row_irrep ^ col_irrep ^ symmetry_ = 0`. As a consequence, `A ^ B = C`. The check itself looks correct to me, and this is a huge improvement. For the sake of debug information, I'm tempted to ask for calls to `rowspi().print()` and `colspi().print` on all three matrices involved before the error message appears. I'd also like if the error message included the symmetries of all three matrices and the particular Ha that created the problem. Susi, what do you think?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2729#issuecomment-1262315350:480,error,error,480,https://psicode.org,https://github.com/psi4/psi4/pull/2729#issuecomment-1262315350,2,['error'],['error']
Availability,"Thanks for waiting. I've had a lot to do lately. Psi4 isn't interpreting your input file like you intended. Psi4 1.4 will contain an error message indicating something is an amiss. The first issue is that you never actually create a molecule in the input fragment you gave me. Maybe you account for this in the full script, but if you don't, supply your string to the function `psi4.geometry`. The second issue is a deeper one. Psi interprets all singly-occupied orbitals as alpha orbitals, so Psi sees your input file and thinks you want a singlet with two unpaired alpha electrons. That's physical nonsense, so Psi4 will (in an error message we added in 1.4) complain and refuse to proceed. In 1.3, it will not be smart enough to realize an issue, proceed, and potentially give nonsense. Of course, what you want is a singlet diradical ROHF state, with an unpaired alpha electron and an unpaired beta electron in each determinant in your linear combination. I know how to tell Psi you want a singlet, but I'm not aware of any way to further specify that you want a singlet diradical ROHF state. Is there a reason why you need the diradical to be the starting point for your CASSCF?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907#issuecomment-641504469:133,error,error,133,https://psicode.org,https://github.com/psi4/psi4/issues/1907#issuecomment-641504469,2,['error'],['error']
Availability,"Thanks for working on this!. The test fail isn't your fault. DETCI [isn't reset-able](https://github.com/psi4/psi4/pull/1850/files#diff-ac285870f28f146a56a93bd3592ff776R217), and that has looming consequences for pytest testing and QCA use. Does your test run ok in random order and w/o the cas test `pytest ... test_psi4.py -n2 -k ""not cas""`? You've correctly found all the clean statements, but it isn't necessary to include them explicitly b/c they're run before every test https://github.com/psi4/psi4/blob/master/tests/pytests/conftest.py#L9-L14",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1855#issuecomment-606202256:54,fault,fault,54,https://psicode.org,https://github.com/psi4/psi4/pull/1855#issuecomment-606202256,1,['fault'],['fault']
Availability,"Thanks for your interest and the offer, @aizvorski. Looking back over this, the necessary QCEngine has now been released, so it looks like my first steps are updating that CI and limiting Libxc to v6 so the functional definitions can be simplified. Certainly intermolecular tests are desirable. There's some ref values here http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/functional/r2SCAN-3c.html but largely they need hunting down in either papers or an independent implementation. I like S22 but anything independent will do. Then Susi had some basis set comments that I haven't looked into yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1732492854:359,down,downloads,359,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1732492854,4,['down'],"['down', 'downloads']"
Availability,"Thanks for your interest in Psi4+BrianQC. The second forum post you linked was a little too optimistic, so there isn't a way I know to use a binary download of Psi4 with BrianQC, even with a license. I don't know for sure, but I think BrianQC is Linux only. At one point the BrianQC ppl had an cloud instance of Psi4+BrianQC, but that doesn't look active now. From their website, their Dec 2023 release works with Psi4 v1.6. If you're not accustomed to compiling code, you might ask the BrianQC people about a cloud setup.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813:148,down,download,148,https://psicode.org,https://github.com/psi4/psi4/issues/3132#issuecomment-1936872813,1,['down'],['download']
Availability,"Thanks for your interest in Psi4. The SMD model offers an empirical parametrization of the nonelectrostatic contributions to the solvation energy (cavitation, dispersion, repulsion and hydrogen bonding effects) to add on top of the electrostatic contribution calculated by means of the IEFPCM or CPCM (COSMO) models. The nonelectrostatic contributions are added _a posteriori_ to the energy calculated self-consistently including the purely electrostatic reaction field. As such, SMD is very suitable for an independent implementation _via_ a Psi4 plugin. Both the IEFPCM and CPCM (COSMO) models are available in Psi4 using the interface to the PCMSolver library.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/227#issuecomment-175470082:600,avail,available,600,https://psicode.org,https://github.com/psi4/psi4/issues/227#issuecomment-175470082,1,['avail'],['available']
Availability,"Thanks for your patience with the late response. Take this especially simple example with DF-OMP2; ```; molecule {; 1 2; units bohr; O 0.000000000000 0.000000000000 -0.143225816552; H 0.000000000000 1.638036840407 1.136548822547; H 0.000000000000 -1.638036840407 1.136548822547; }. set reference uhf ; set basis sto-3g; set MAX_MOGRAD_CONVERGENCE 8; set e_convergence 10. energy('omp2'); ```. I have not found any alteration of `hess_type` lets me converge the maximum MO gradient below 1e-4. I am attempting to verify the correctness of my Psi4Numpy-type implementation of DF-OMP2, which converges to `-74.698372226179` in only 5 iterations using the exact MO hessian. This disagrees with Psi in the eighth decimal place, but the Psi answer's MO gradient is not adequately converged to determine if this is an error in my code. I have attempted swapping my guess orbitals for a few systems, and I have not once found that helpful in getting the MO gradient well converged. I'll be able to post some non-toy examples sometime in January.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1371#issuecomment-449754680:811,error,error,811,https://psicode.org,https://github.com/psi4/psi4/issues/1371#issuecomment-449754680,2,['error'],['error']
Availability,Thanks for your response. You are right. But I guess we need to download and use the basis for transition metal manually.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2866#issuecomment-1411434650:64,down,download,64,https://psicode.org,https://github.com/psi4/psi4/issues/2866#issuecomment-1411434650,1,['down'],['download']
Availability,"Thanks so much for the detailed error report. I can reproduce this error, and am getting closer to finding the culprit. In the meantime, if you add the option `wcombine=False` the error should disappear. If my initial tests are correct, it appears that the new in-memory algorithm that combines the omega exchange and conventional exchange terms into one calculation is incorrect if more than one thread is used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-901391587:32,error,error,32,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-901391587,3,['error'],['error']
Availability,"Thanks very much for the OpenBLAS patch. Do you want to submit it as a Pull Request so you show up as a contributor, or would you rather I just added it to the code?. That install error is bizarre. Make double sure of your permissions and disk space perhaps? We regularly build in parallel (up to `-j12`), so that shouldn't be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274822045:180,error,error,180,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274822045,1,['error'],['error']
Availability,"Thanks very much for the report and problem localization. Were you able to test that editing those two lines led to a running psi4 (as opposed to revealing the next problem :-) )? I can understand if permissions on the hpc system don't allow editing. If those two lines are it, I can work on a v1.9.1 release. @coltonbh, I wonder if this is related to the psi4-in-docker error you were getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377:371,error,error,371,https://psicode.org,https://github.com/psi4/psi4/issues/3126#issuecomment-1911023377,1,['error'],['error']
Availability,"Thanks, @avcopan. On my system, your changes make it an order of magnitude closer to the check. If I back the compare_values up to 4, it passes. ```; Energy of last IRC point: computed value (-92.874363) does not match (-92.874374) to 5 decimal places.; ```. The only other thing that concerns me is `thisenergy = old_wfn.energy()`. Though `.energy()` is definitely the future, preferable way, right now `thisenergy = psi4.get_variable('CURRENT ENERGY')`, as you see right above at the gradient() call, is far more reliable, as so few methods properly set the energy member datum of Wavefunction. So if the `4` and `CURRENT ENERGY` changes sound good to you, go ahead and make them. If you put ""fixes psi4/psi4#290"" in the commit message, it'll close the ticket when it gets merged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/292#issuecomment-189992984:515,reliab,reliable,515,https://psicode.org,https://github.com/psi4/psi4/pull/292#issuecomment-189992984,1,['reliab'],['reliable']
Availability,"Thanks, @bozkaya, I'm glad you'll have a chance to work on it. You can use standard `git` to access the branch. From a local clone, make sure my fork is a remote (analogous to ""alex"" below). If not, then `git remote add loriab https://github.com/loriab/psi4.git`. Then pull down the branch with `git fetch loriab ugurfno`. Then check out the branch with `git checkout ugurfno`, and ""make dfocc fno defaults match fnocc"" should be the top commit in `git log`. Proceed with normal development, and push to your account `git push origin ugurfno`. You can either open a new PR to psi4 master from there (to replace this PR) or open a PR to loriab ugurfno (to continue this PR). ```; >>> git remote -v; alex	https://github.com/AlexHeide/psi4.git (fetch); alex	https://github.com/AlexHeide/psi4.git (push); origin	https://github.com/loriab/psi4.git (fetch); origin	https://github.com/loriab/psi4.git (push); upstream	https://github.com/psi4/psi4.git (fetch); upstream	https://github.com/psi4/psi4.git (push); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1390#issuecomment-444903155:274,down,down,274,https://psicode.org,https://github.com/psi4/psi4/pull/1390#issuecomment-444903155,1,['down'],['down']
Availability,"Thanks, @bozkaya, that's very useful information. I wasn't aware of it either, so we'll have to stuff your post into the docs so it's findable. The current standard suite pass is going through and making sure frozen core either works or prints a helpful error. I don't have ambitions to handle frozen virtual in this pass, but probing it should be a follow-up. For the particular DF-CCSD grad + frz virt, we can catch the case and error out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1912#issuecomment-636214829:254,error,error,254,https://psicode.org,https://github.com/psi4/psi4/issues/1912#issuecomment-636214829,2,['error'],['error']
Availability,"Thanks, @hadim, great to hear, and thanks for testing!. General update:; * I've downloaded one of the Linux packages and run full tests, and they all passed. Not much ecosystem activated, though.; * py311 packages are ready, but `osx_arm64` are not.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1528019765:80,down,downloaded,80,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1528019765,1,['down'],['downloaded']
Availability,"Thanks, @hokru, any testing or comments would be welcome, either now or once merged. Btw, the doi link nearest your name on [the gCP page](http://www.thch.uni-bonn.de/tc/downloads/gcp/index.html) is broken, if that's a concern.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/630#issuecomment-283240378:170,down,downloads,170,https://psicode.org,https://github.com/psi4/psi4/pull/630#issuecomment-283240378,1,['down'],['downloads']
Availability,"Thanks, @jgonthier. The gdb procedure these days is `gdb --args python stage/bin/psi4 input.dat`. It should work readily -- I've used it this year. Please ping me if it gives trouble. I think @zachglick is also interested. http://psicode.org/psi4manual/master/build_planning.html#how-to-use-gdb-and-lldb-with-psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830#issuecomment-600406166:155,ping,ping,155,https://psicode.org,https://github.com/psi4/psi4/issues/1830#issuecomment-600406166,1,['ping'],['ping']
Availability,"Thanks, @loriab. I have tried a number of things, including ensuring that MKL and libiomp5 from the native compilers are used instead of conda versions of those libs, and nothing seems to change the outcome of the unpatched code with multiple threads. It's worth noting that running on an non-AVX platform removes the Valgrind errors, but doesn't change the answer so I think they're probably just coming from AVX memmove somehow confusing Valgrind. At this point, my only guess is that perhaps some weird nested thread issue is maybe causing diagonalization issues, but I have no idea why that would be a problem for the unpatched code and not for the patched code. In case anybody wants to check the results, [here's a standalone code](https://github.com/andysim/DiagonalizationTest) that diagonalizes the exact same matrix, using the exact same LAPACK calls as the unpatched code. So far it looks like things are working in Psi4 after the fix, but I just wanted to document all of the suspicious behavior on this PR, in case we see similar problems in future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-905701855:327,error,errors,327,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-905701855,1,['error'],['errors']
Availability,"Thanks, @rmcgibbo, it actually is standard practice to make a conda package of ""endorsed plugins"". I haven't gotten to that, but if you pre-approve, that's very helpful. :-). I also have a plan that even optional run-time dependencies (e.g., plugins) can be built at CMake superbuild-time with `-DENABLE_rt_dep=ON`. This is purely user-convenience since they're downstream of psi. Are you good with either/both of these options for SNS-MP2?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/850#issuecomment-344708105:362,down,downstream,362,https://psicode.org,https://github.com/psi4/psi4/pull/850#issuecomment-344708105,1,['down'],['downstream']
Availability,"Thanks, @ssh2. @tmpchem hunted down all the malfunctioning manual entries this week. Two bullets fixed by https://github.com/psi4/psi4/commit/e1bae5b028c15aef889480978e4f70d247f8821e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-122461767:31,down,down,31,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-122461767,1,['down'],['down']
Availability,"Thanks, I can't believe I did such basic error. Now it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/938#issuecomment-373364950:41,error,error,41,https://psicode.org,https://github.com/psi4/psi4/issues/938#issuecomment-373364950,1,['error'],['error']
Availability,"Thanks, I successfully passed the arguments to connect to my python3.6. However, after the cmake I still get two errors that I don't understand... ```-- Configuring incomplete, errors occurred!; See also ""/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure] Error 1; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768#issuecomment-316433585:113,error,errors,113,https://psicode.org,https://github.com/psi4/psi4/issues/768#issuecomment-316433585,5,"['Error', 'error']","['Error', 'errors']"
Availability,"Thanks, good to know. So do you query the remote computer's instruction sets and then send them the appropriate binary? That sounds like a process outside conda. Having hunted down the [Intel page](https://software.intel.com/en-us/node/522753) confirming GCC:Linux::Clang:Mac::MSVC::Win with respect to the compiler underlying Intel's icpc, I link it here so I don't lose it again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411780490:176,down,down,176,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411780490,1,['down'],['down']
Availability,"Thanks, will do in the future. Let me know if/when you hit snags using; this tool. It think it is far enough along that I should be able to solve; problems.; -Rollin. On Tue, Jul 5, 2016 at 1:42 PM, Daniel Smith notifications@github.com; wrote:. > Cool, this should give us a base to start playing around with automatic; > rigid body optimizations.; > ; > Also note you can do git pull --rebase upstream master to rebase in the; > master branch of upstream. This will help cut down on the number of merges; > that happen. You can always fall back to merging if needed of course.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/432#issuecomment-230565713, or mute; > the thread; > https://github.com/notifications/unsubscribe/ADguTBNCfxO8XJ3qFYJTy2GsyG5LBgPOks5qSqV4gaJpZM4JDw7x; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/432#issuecomment-230573225:477,down,down,477,https://psicode.org,https://github.com/psi4/psi4/pull/432#issuecomment-230573225,1,['down'],['down']
Availability,"Thanks, will do. I ping when it's done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848#issuecomment-598840910:19,ping,ping,19,https://psicode.org,https://github.com/psi4/psi4/pull/1848#issuecomment-598840910,1,['ping'],['ping']
Availability,"Thanks. That's great news!. Are you planning to support linux, osx and windows?. I am happy to test the package on my side. Do you know how I can download the conda forge artifacts from your PR on staged-recipes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483834881:146,down,download,146,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483834881,1,['down'],['download']
Availability,"Thanks.; Now I get the following error:. ```; [100%] Linking CXX executable ../../../bin/psi4; Undefined symbols for architecture x86_64:; ""__ZNKSt11logic_error4whatEv"", referenced from:; __ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorISt11logic_errorEEEE in create_new_plugin.cc.o; __ZTVN5boost16exception_detail19error_info_injectorISt11logic_errorEE in create_new_plugin.cc.o; __ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorISt16invalid_argumentEEEE in create_new_plugin.cc.o; __ZTVN5boost16exception_detail19error_info_injectorISt16invalid_argumentEE in create_new_plugin.cc.o; __ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorISt11logic_errorEEEE in libmints.a(basisset_parser.cc.o); __ZTVN5boost16exception_detail19error_info_injectorISt11logic_errorEE in libmints.a(basisset_parser.cc.o); __ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorISt16invalid_argumentEEEE in libmints.a(basisset_parser.cc.o); ...; ""__ZNKSt13bad_exception4whatEv"", referenced from:; __ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE in libpsio.a(filemanager.cc.o); __ZTVN5boost16exception_detail14bad_exception_E in libpsio.a(filemanager.cc.o); __ZTVN5boost16exception_detail10clone_implINS0_14bad_exception_EEE in libboost_thread-1_57.a(thread.o); __ZTVN5boost16exception_detail14bad_exception_E in libboost_thread-1_57.a(thread.o); ""__ZNKSt13runtime_error4whatEv"", referenced from:; __ZTVN5boost9xpressive11regex_errorE in create_new_plugin.cc.o; __ZTVN5boost16exception_detail10clone_implINS_9xpressive11regex_errorEEE in create_new_plugin.cc.o; __ZTVN5boost9xpressive11regex_errorE in libplugin.a(load_plugin.cc.o); __ZTVN5boost16exception_detail10clone_implINS_9xpressive11regex_errorEEE in libplugin.a(load_plugin.cc.o); __ZTVN5boost9xpressive11regex_errorE in libmints.a(basisset.cc.o); __ZTVN5boost16exception_detail10clone_implINS_9xpressive11regex_errorEEE in libmints.a(basisset.cc.o); __ZNK5boost6system12system",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,1,['error'],['error']
Availability,"That error triggers when psi is trying to run an input file. The plugin code isn't getting called. Can you confirm the correct psi is being called?. > On Nov 6, 2016, at 8:06 AM, T. Daniel Crawford notifications@github.com wrote:; > ; > [draco:~/src] crawdad% psi4 --new-plugin myplugin; > Traceback (most recent call last):; > File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; > raise KeyError(""The file %s does not exist."" % args[""input""]); > KeyError: 'The file input.dat does not exist.'; > ; > This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503#issuecomment-258681166:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/issues/503#issuecomment-258681166,1,['error'],['error']
Availability,"That helped. Now; ```; gmake[5]: *** [CMakeFiles/update_version.dir/build.make:71: CMakeFiles/update_version] Error 127; gmake[4]: *** [CMakeFiles/Makefile2:977: CMakeFiles/update_version.dir/all] Error 2; gmake[4]: *** Waiting for unfinished jobs....; ```; Going through the log, I find; ```; cd /builddir/build/BUILD/psi4-1.3.2/psi4 && versioner.py --metaout /builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/psi4-core-prefix/src/psi4-core-build/metadata.py --cmakeout /builddir/b; uild/BUILD/psi4-1.3.2/redhat-linux-build/psi4-core-prefix/src/psi4-core-build/metadata.cmake; /bin/sh: line 1: versioner.py: command not found; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676494935:110,Error,Error,110,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676494935,2,['Error'],['Error']
Availability,That is fine. I have some test cases with chargemol where I believe it can be very useful. Please ping me on the PR,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1138#issuecomment-416927479:98,ping,ping,98,https://psicode.org,https://github.com/psi4/psi4/pull/1138#issuecomment-416927479,1,['ping'],['ping']
Availability,That looks more like a unicode parsing error. NumPy einsum does not handle unicode ([opt_einsum](https://github.com/dgasmith/opt_einsum) does however. I don't see a reason why this would happen however.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465#issuecomment-451991776:39,error,error,39,https://psicode.org,https://github.com/psi4/psi4/issues/1465#issuecomment-451991776,1,['error'],['error']
Availability,That loop looks about as simple as it gets. What kills me is the loop structure ~10 lines above is nearly identical. Any error message on the crash?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923#issuecomment-368927971:121,error,error,121,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368927971,2,['error'],['error']
Availability,"That sounds nice if I'm a sys admin of my own cluster (and hopefully; someday I will be, so I will definitely keep this in mind), but I suspect; our users who are running with these ancient compilers also won't be using; Easybuild. Or is Easybuild something we would distribute with Psi4, much; like we do Boost?. Sent from my Android (without spellcheck). Please forgive the brevity.; On May 25, 2015 8:22 AM, ""wpoely86"" notifications@github.com wrote:. > Easybuild https://hpcugent.github.io/easybuild/ is not an alternative; > to CMake or autoconf. The idea is to have an easy way to make reproducible; > builds and modules. Everything in the stack should also be optimally build,; > meaning utilizing the hardware to its full extend (for example, if AVX2 or; > infiniband is available, we will use it). Easybuild will take care of all; > dependencies. It will avoid using the OS installed (old) versions of; > software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after; > building a compiler (GCC/intel/...) from scratch. We also patch out any; > problem. Psi4 for example hard codes it's build path for the generation of; > new plugins. This is not desirable on a HPC system. Some software is also; > not adjusted to be build by anything other than GCC. We make it work with; > intel too. Some software doesn't even have a real build system other than a; > list of makefiles that usually don't work out of the box. We fix that so; > the build is reproducible .; > ; > It's primarily meant for HPC sites. If somebody adds support for a piece; > of software, other people can reuse it with one command. I use it to build; > Psi4 in production. If you're developing, Easybuild is useful for building; > all up to date versions of dependencies.; > ; > On our systems, if I run: module load PSI, I get a psi4 (a git version; > from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and; > mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for; > example",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105251086:779,avail,available,779,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105251086,1,['avail'],['available']
Availability,"That test is DF, not direct, so this PR is innocent. I had observed some random ADIIS failures previously but thought I had fixed them. I recommend we rerun the failed test and save investigation into the ADIIS situation for a future PR. (Probably to be done by me.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2550#issuecomment-1104653717:86,failure,failures,86,https://psicode.org,https://github.com/psi4/psi4/pull/2550#issuecomment-1104653717,1,['failure'],['failures']
Availability,That was magical. Thank you so much! It's back down to 3 minutes now 😄,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3031#issuecomment-1685431494:47,down,down,47,https://psicode.org,https://github.com/psi4/psi4/issues/3031#issuecomment-1685431494,1,['down'],['down']
Availability,That would likely do it. Pinging @fevangelista since this is relevant to #1770.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1791#issuecomment-580235446:25,Ping,Pinging,25,https://psicode.org,https://github.com/psi4/psi4/issues/1791#issuecomment-580235446,1,['Ping'],['Pinging']
Availability,"That's a great idea. Do you have an example of where pytest catches a _C-side_ error? The error handling in renamed options needs to be C-side, and I don't know how to refer to C's PsiException Py-side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719#issuecomment-533099356:79,error,error,79,https://psicode.org,https://github.com/psi4/psi4/pull/1719#issuecomment-533099356,2,['error'],['error']
Availability,"That's a lot of package managers you've mentioned. :-). Judging from [ubuntu packages](https://packages.ubuntu.com/search?keywords=psi4&searchon=names&suite=all&section=all), the latest version available through `apt-get` is `v1.2.1`. Conda has `v1.3.2`. Unless the Linux package managers have adapted to conda while I wasn't looking, ubuntu is going to be running your system python (probably `/usr/bin/python`) not the conda distribution python. Presuming your apt-get psi4 is using system python, you should be able to apt-get install pytest. You'll want to run something like `which python psi4 pytest` to see if everything's where you expect. You're definitely better off installing a conda psi4 (either ""installer"" or ""conda"" from [here](https://admiring-tesla-08529a.netlify.com/installs/v132/)) because it's newer, optimized for more architectures, and uses a decent BLAS (MKL, not generic). psi4 pulls from the `defaults` and `psi4` channels, not `conda-forge`, but in any case, install time is trivial compared to calculation time. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1705#issuecomment-524453814:194,avail,available,194,https://psicode.org,https://github.com/psi4/psi4/issues/1705#issuecomment-524453814,1,['avail'],['available']
Availability,"That's because there's no longer a py35 among the ""latest"" release. I'm retiring those docs. Please follow the commands at https://admiring-tesla-08529a.netlify.com/installs/v13/ (linked off ""Downloads"" from psicode.org). You'll want to select Linux/Installer/""Stable Release"". Thanks for pointing out ways we're leading people astray.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478010534:192,Down,Downloads,192,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478010534,1,['Down'],['Downloads']
Availability,"That's going to be logic on values not readily accessible at ""select-function"" time when scf is not yet run. If someone was running a slew of molecules with cisd/sto-3g and wanted a single serial calc of them all to continue, then I can see the benefit, but sto-3g is so tentative a calc that I'm inclined to think the existing error msg suffices. Glad to do it if the consensus is it's wanted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/546#issuecomment-266559167:328,error,error,328,https://psicode.org,https://github.com/psi4/psi4/issues/546#issuecomment-266559167,1,['error'],['error']
Availability,"That's indeed what I had in mind (in my third ansatz). Add a `qc_module` and a `select_adc` branching between `adcc` and the builtin. I guess one can just use `psi4.addons` in `select_adc` to query the availability of `adcc` before going into the branching. That was at least my idea so for. --. > Isn't the `mints.mo_eri` routine becoming quickly a bottleneck?. You mean because it's not parallel at the moment? Yes, that's indeed a problem and was a deal breaker for some of the things we wanted to try in the past ... I have already discussed this with @maxscheurer and he promised to have a look once we have gotten a few other things out of the way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547805180:202,avail,availability,202,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547805180,1,['avail'],['availability']
Availability,"That's interesting, @amjames. I'm definitely familiar with the `GLIBCXX_X.X.XX` runtime error (https://github.com/psi4/psi4/wiki/8_FAQ_Contents#how-to-satisfy-the-gcc--49-requirement-without-updating-the-os). What I think is going on is that it is building and linking correctly to the >=4.9 `$GCC_LIB` libraries. But then at runtime, it doesn't know where to find them, as that particular aspect wasn't baked into `rpath`. `ldd -v psi4` will likewise show runtime environment incorrectly using system gcc. I hadn't ever tried manipulations of `CMAKE_PREFIX_PATH` for solving this. _Without recompiling_, can you turn your failing `GLIBCXX_X.X.XX not found` into a working compilation by just manipulating `LD_LIBRARY_PATH` as in the final line of that FAQ? That will help confirm we're talking about exactly the same issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249626595:88,error,error,88,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249626595,1,['error'],['error']
Availability,"That's still a bit disappointing; the sum of the Mulliken should be ```O(1e-15)```. But, I guess that's because Molden uses stupid fixed precision. For anything beyond visualization purposes, one should use the formatted checkpoint format which yields quasi-native precision.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1485#issuecomment-456168086:221,checkpoint,checkpoint,221,https://psicode.org,https://github.com/psi4/psi4/issues/1485#issuecomment-456168086,1,['checkpoint'],['checkpoint']
Availability,"That's still only if you're just looking at the density itself. If you want properties, then a O(1e-12) error in the NO coefficients can still yield noticable errors in matrix elements, since those get weighted by exponents. E.g. tight core exponents will have huge kinetic energy elements T_{ij}, but very small expansion coefficients. Still, the product of the two may well be significant.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1485#issuecomment-456181584:104,error,error,104,https://psicode.org,https://github.com/psi4/psi4/issues/1485#issuecomment-456181584,2,['error'],"['error', 'errors']"
Availability,"That's strange, I'm showing it as 1.8.3 (https://anaconda.org/psi4/chemps2/files). But anyways, any chance this is a rebuild of a pre-Christmas version? That has a faint look of a pybind11 incompatibility. We've been stable at pybind11 2.0 since mid-Jan or so. But any pybind11 change just requires a full wipe out of the build. And CMake is insidious, so if there's even an old pybind11 to be found at the _install_ location, it'll hunt it down and compile bad things with it. So do blow away your builddir and point it to an empty `CMAKE_INSTALL_PREFIX` if there's the least likelihood. (This is why we're sticking with 2.0 for as long as we can.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288528850:441,down,down,441,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288528850,1,['down'],['down']
Availability,"That's the merge of @loriab's new printing / running machinery into the existing master, which we expect to pass. What we need to see is 9c5d3c3 of this PR. It's not running because of merge conflicts (I only just noticed that error message), so you'll need to pull the master branch in and add the conflict resolution to the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183790721:227,error,error,227,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183790721,1,['error'],['error']
Availability,"That's using `cmake` beyond my experience, as I blow away the objdir if changing cmake variables. @robertodr will have to comment if what you describe is intended behavior. Dial down angular momentum to 4 if you're rebuilding a lot. My thanks to whoever, years ago, fixed the parallel integrals build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/161#issuecomment-130123186:178,down,down,178,https://psicode.org,https://github.com/psi4/psi4/issues/161#issuecomment-130123186,1,['down'],['down']
Availability,"Thats interesting, I actually used `out_of_core` for non-symmetric densities up until recently as PK could not handle these. Only recent changes by Jerome to the PK code allow this to work. . Looks like OOC still works for SOSCF, do you have time to investigate the error a little bit? Shouldn’t be happening. Cheers,; Daniel Smith. > On Jul 15, 2016, at 11:31 AM, Andy Simmonett notifications@github.com wrote:; > ; > Ah, yes, that out of core problem. It's a strange one that manifests itself in a seg fault for out of core calls to JK but, apparently, only when the L and R matrices are not the same (as is the case in CPHF). I'll just call PK instead, and add an error if out of core flags are requested. I'll squash this last flurry of commits and then this one is good to go.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub https://github.com/psi4/psi4/pull/437#issuecomment-233001167, or mute the thread https://github.com/notifications/unsubscribe-auth/ABsBcS5QrjHR4F1-9H61dpnsfQdJCePZks5qV7XvgaJpZM4JFTfJ.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-233002997:266,error,error,266,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-233002997,3,"['error', 'fault']","['error', 'fault']"
Availability,"The ""other"" lebedev_mapping_: That's just the declaration for it. The problem is that `SphericalGrid::build` is a _static_ method so the; constructor isn't called when that happens. Someone might yank out the; `new` there and still statically access `lebedev_mapping_` and we are back; where we started. There's no guarantee of construction, so I stapled it; into the one place it's actually used. (And, again, I don't understand why it's used at all as it never seems to; show up downstream). Even if it was in the constructor though (which would fire on the _new_) it; would still need the mutex to ensure it's initialized once as; lebedev_mapping_ is also (purposefully) static. No sense doing the rebuild; of the map on every single object instantiation. On Wed, Oct 5, 2022, 4:59 AM Susi Lehtola ***@***.***> wrote:. > lebedev_mapping_ is a member of SphericalGrid, so initialize_lebedev(); > should be called in the constructor of SphericalGrid. No need to add; > mutexes etc.; >; > More worryingly, I also see another lebedev_mapping_ in cubature.cc; >; > https://github.com/psi4/psi4/blob/ac8f87a1dd3fdda2aabc3318713d6e5ce00e2c70/psi4/src/psi4/libfock/cubature.cc#L5065; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2736#issuecomment-1268150804>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABTN7JCEAMFQBY2H6OKMPYLWBU7NRANCNFSM6AAAAAAQ5DTWOY>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2736#issuecomment-1268457086:481,down,downstream,481,https://psicode.org,https://github.com/psi4/psi4/pull/2736#issuecomment-1268457086,1,['down'],['downstream']
Availability,"The 4.0b5 issue was my fault, and I've fixed it now. That was my original attempt at a redirect.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/112#issuecomment-121394983:23,fault,fault,23,https://psicode.org,https://github.com/psi4/psi4/issues/112#issuecomment-121394983,1,['fault'],['fault']
Availability,"The Azure build log not available, so I can't see its exact problem, but I recall Windows to have very strict ideas about file handlers and closing files. So while I agree that `with open` constructs are better than `open`/`close`, I think go with the simple solution that pleases Windows. Plus, I hope to retire this function in the next few months when we switch over to the new MolSSI BSE. Thanks for following up on the slack question/fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1687#issuecomment-518364448:24,avail,available,24,https://psicode.org,https://github.com/psi4/psi4/pull/1687#issuecomment-518364448,2,['avail'],['available']
Availability,The B97-3c SRB correction is now available with the latest `gcp` version at https://github.com/grimme-lab/gcp and via the conda-forge package `gcp-correction`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1898#issuecomment-777604762:33,avail,available,33,https://psicode.org,https://github.com/psi4/psi4/issues/1898#issuecomment-777604762,1,['avail'],['available']
Availability,"The CMake variables were not the problem, the version number was. Apparently the one in `-c psi4/label/test` is 1.8.2 and not 1.8.3. But now, the compilation failed while building liboptions.cc with the following message: ; `cd /global/home/users/jgonthier/software/psi4/objdir_chemps2_ar/psi4-core-prefix/src/psi4-core-build/src/psi4/liboptions && /global/software/sl-6.x86_64/modules/langs/intel/2016.1.150/bin/icpc -DUSING_LAPACK_MKL -I/global/home/users/jgonthier/software/psi4/psi4/include -I/global/home/users/jgonthier/software/psi4/psi4/src -isystem /global/home/users/jgonthier/software/psi4/objdir_chemps2_ar/stage/usr/local/psi4/include -isystem /global/home/users/jgonthier/software/miniconda/include/python2.7 -isystem /global/software/sl-6.x86_64/modules/langs/intel/2016.1.150/mkl/include -xHost -qopenmp -O3 -DNDEBUG -fPIC -std=c++11 -o CMakeFiles/options.dir/liboptions.cc.o -c /global/home/users/jgonthier/software/psi4/psi4/src/psi4/liboptions/liboptions.cc; /global/home/users/jgonthier/software/miniconda/envs/gcc52/gcc/include/c++/bits/stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::iterator_category iterator_category;; ^`. As you can see I use Intel compilers 2016 with Intel MKL, in the GCC 5.2 conda environment. Could it be a problem with Intel compilers ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288525890:1090,error,error,1090,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288525890,1,['error'],['error']
Availability,The DFT failures are almost certainly because of Gau2Grid using the wrong ordering convention. Thankfully [CCA is supported](https://github.com/dgasmith/gau2grid/blob/master/docs/source/order.rst#spherical-order) so it should be fixable by a simple reconfiguration.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2537#issuecomment-1092760393:8,failure,failures,8,https://psicode.org,https://github.com/psi4/psi4/pull/2537#issuecomment-1092760393,2,['failure'],['failures']
Availability,"The DHDF analytic gradients are not implemented and thus the relaxed density is not readily available.; A scaled MP2 density from kohn-sham orbitals could perhaps be constructed through `psi4numpy` means, as an approximation. The contributions from the additional xc-coupling terms arising in DHDF gradient theory should be very small.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1236#issuecomment-420568298:92,avail,available,92,https://psicode.org,https://github.com/psi4/psi4/issues/1236#issuecomment-420568298,1,['avail'],['available']
Availability,"The DIIS solver is usually more robust than approx. SOSCF, at least ORCA's implementation had and still has troubles sometimes. Not sure if it is worth the time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256#issuecomment-185103863:32,robust,robust,32,https://psicode.org,https://github.com/psi4/psi4/issues/256#issuecomment-185103863,1,['robust'],['robust']
Availability,"The DMRG-natural-orbital calculation also has the same error. DMRC-SCF and DRG-CI (water, N2) are passed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222666388:55,error,error,55,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222666388,1,['error'],['error']
Availability,"The Karlsruhe basis sets should have pretty good fitting basis sets as well. AFAIK Pople basis sets are not really trustworthy (major deficiencies with two-electron completeness). You get better results with fewer functions with newer basis sets, and so IMHO one should play them down...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/44#issuecomment-37578156:280,down,down,280,https://psicode.org,https://github.com/psi4/psi4/issues/44#issuecomment-37578156,1,['down'],['down']
Availability,"The Mac Eco error is probably a fluke -- I don't see any recent changes to dftd4-python. What do you think of defaulting this to OFF for the protection of plugins? I don't quite understand how they're behaving now with this. See below that it's warning but not erroring. I do think the cmake is slightly in error in that i'm not setting CXX_EXTENSIONS=OFF in the inner psi4/CMakeLists.txt. ```; 2024-03-25T14:45:09.8381208Z [67/68] Building Fortran object CMakeFiles/v2rdm_casscf.dir/focas_interface.F90.o; 2024-03-25T14:45:09.8382362Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:274:53:; 2024-03-25T14:45:09.8383299Z ; 2024-03-25T14:45:09.8383512Z 274 | max_dim = max(size(integrals_1,dim=1),nnz_d1,maxval(nnz_int)); 2024-03-25T14:45:09.8383966Z | 1; 2024-03-25T14:45:09.8384366Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8385389Z /home/runner/work/psi4/psi4/objdir/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/src/v2rdm_casscf_external/focas_interface.F90:161:46:; 2024-03-25T14:45:09.8386144Z ; 2024-03-25T14:45:09.8386330Z 161 | max_dim = max(size(integrals_1,dim=1),maxval(nnz_int)); 2024-03-25T14:45:09.8386747Z | 1; 2024-03-25T14:45:09.8387135Z Warning: GNU Extension: Different type kinds at (1); 2024-03-25T14:45:09.8387546Z [68/68] Linking CXX shared module v2rdm_casscf.so; 2024-03-25T14:45:09.8404861Z [17/19] Performing install step for 'v2rdm_casscf_external'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018339447,5,"['down', 'error']","['downstream', 'error', 'erroring']"
Availability,"The Molden documentation is unclear, but based on the code snippets you posted, your understanding of Molden's behavior is in error, and Psi is correct. 1. `rdmodd` is proof-positive that `[5D]` is used. For historical reasons, it means ""use spherical D and F functions"". This is consistent with what the Molden documentation says: ""Use the keyword [5D] on a separate line to specify the use of 'spherical' D and F functions (5 D and 7 F functions)."" While I find the meaning of the keyword unintuitive and confusing, I see nothing to support your assessment that the use of `[5D]` is _incorrect_.; 2. `rdmodd` shows that `[7F]` uses spherical f-functions but makes no statement whatsoever about the `d` functions. While the documentation says that keywords such as `[7F]` enable the use of mixed spherical and cartesians for the d and f, the documentation does not specify whether `[7F]` does this by implicitly assuming `6D` or by not changing the `D` at all, which may well be in Cartesians.; 3. Your third bullet point seem to have been miswritten. You want ""spherical or Cartesian"" and not ""Cartesian or spherical"". By specifying [5D], [7F], and [9G], Psi gives Molden the following instructions:; * Use spherical D and F shells.; * Use spherical F shells. (This is redundant but harmless, and therefore, your issue is in error.); * Use spherical G shells. I'll leave the issue open in case you point out something I've overlooked.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2612#issuecomment-1159340413:126,error,error,126,https://psicode.org,https://github.com/psi4/psi4/issues/2612#issuecomment-1159340413,3,"['error', 'redundant']","['error', 'redundant']"
Availability,The PSIO error can occur for running out of RAM? Is it writing to a virtual file (for the lack of better term)?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1361#issuecomment-517408888:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/1361#issuecomment-517408888,1,['error'],['error']
Availability,The ROHF guess==read error is indeed outdated,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1781#issuecomment-577251659:21,error,error,21,https://psicode.org,https://github.com/psi4/psi4/pull/1781#issuecomment-577251659,1,['error'],['error']
Availability,"The Win failures are the pydantic 1.10.7 + typing extensions 4.6 we were seeing yesterday. It should have cleared up, some I'm retriggering one to check.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2967#issuecomment-1561294933:8,failure,failures,8,https://psicode.org,https://github.com/psi4/psi4/pull/2967#issuecomment-1561294933,2,['failure'],['failures']
Availability,"The `__END_NAMESPACE_STD` errors were caused by the presence of an intel compiler whose variables were sourced in Josja's `~/.bashrc` file. (So, if the recipe above does not work for you, try from scratch with a virgin `~/.bashrc`.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-438674406:26,error,errors,26,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-438674406,1,['error'],['errors']
Availability,"The `pcg_convergence` behavior is a change for the better. Your analysis of the issue is right, but I'd rather couple `pcg_convergence` to `r_convergence`, how tightly the residual equations are satisfied. The CEPA is a touch trickier. My initial tests say that the energy convergence is working just fine. What isn't within convergence tolerance is the decomposition of correlation energy into same-spin and opposite-spin components. Is that what you're seeing? I can investigate, but this may not be an implementation issue, just a quirk of the equations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-676411057:337,toler,tolerance,337,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-676411057,1,['toler'],['tolerance']
Availability,"The actual error is somewhere in the ellipses, so we will need more info. The fact that make is reporting that the error occurred in `src/lib/libpsipcm` suggests to me that it may be a problem with finding the PCM repo on GitHub, but I need more info to be sure. Can you run:. ```; export VERBOSE=1; ```. (in Bash) or:. ```; setenv VERBOSE 1; ```. (in TCSH)? ; Rerun the build command and then post the full output here. If you are curious, `VERBOSE` is the environment variable that tells CMake to spit out more information.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/183#issuecomment-144069231:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/183#issuecomment-144069231,2,['error'],['error']
Availability,The artifacts are available on Azure if you click through the status checks,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483877327:18,avail,available,18,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483877327,1,['avail'],['available']
Availability,"The basis block is anonymous, so the external following `set basis mysvp` doesn't have anything to hang onto. `basis mysvp {...}` is the preferred way to go. I agree on the fragility of the gbs reader. The current is a direct translation from C++, which isn't a great language for parsing and error trapping. It could use an overhaul [like mol got](https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/from_string.py) so we could do nice things like have a comment in a gbs file. I want to see what tools @bennybp has developed for the new Basis Set Exchange and also use schema as the medium of exchange between string and the psi4 nested dictionary that currently is the unit of basis set truth. EDIT: ""pickiness"", not ""fragility""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1332#issuecomment-435698851:293,error,error,293,https://psicode.org,https://github.com/psi4/psi4/issues/1332#issuecomment-435698851,1,['error'],['error']
Availability,"The basis sets are different in both examples? I wonder why this is exclusively for prop, can you post the full error, it would be good to track down the extra temps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379476694:112,error,error,112,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379476694,2,"['down', 'error']","['down', 'error']"
Availability,"The basis sets are specifically matched to ECPs, which is the appropriate ECPXXMDF for whichever row of the periodic table. I also note that these basis sets **are** available for alkali and alkaline earth too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2697#issuecomment-1259166197:166,avail,available,166,https://psicode.org,https://github.com/psi4/psi4/issues/2697#issuecomment-1259166197,1,['avail'],['available']
Availability,"The bug is now fixed in master Psi. Expect a v1.5.1 where this issue is also fixed. The reporter who brought this issue to our attention also claimed an issue in B3LYP (which we have tried and failed to reproduce) but did not provide a complete example of what they did to produce an issue, so the report may be in error. If the report can be verified, that will belong in a separate issue. This issue is very specifically about range-separated functionals.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2431#issuecomment-1036166160:315,error,error,315,https://psicode.org,https://github.com/psi4/psi4/issues/2431#issuecomment-1036166160,1,['error'],['error']
Availability,The cause of missing error messages is likely the improper use of `exit()`. I have prepared a companion pull request to this one to get rid of them.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3117#issuecomment-1877048909:21,error,error,21,https://psicode.org,https://github.com/psi4/psi4/pull/3117#issuecomment-1877048909,1,['error'],['error']
Availability,"The cdash report indicates a PSIO error with the SO overlap integrals, but I can't reproduce it on any of my systems. The error happened so quickly (0.05 s) for your build, that I suspect the error was due to something other than the CC code (though most of the other test cases passed). Can you try it again? @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/130#issuecomment-121981133:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/issues/130#issuecomment-121981133,3,['error'],['error']
Availability,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1221,down,down,1221,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449,1,['down'],['down']
Availability,"The code is probably attempting to use an out-of-core algorithm for one of the contractions, because it thinks it only has the default of 500 Mb; increasing the number of frozen virtuals probably allows it to run in core, which is why that trick is successful. If you add `memory 10 Gb` (or however much you have available) to the top of your input, it should help.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/523#issuecomment-261793389:313,avail,available,313,https://psicode.org,https://github.com/psi4/psi4/issues/523#issuecomment-261793389,1,['avail'],['available']
Availability,"The direct cause of the crash is trying to use an invalid file handle. I cannot tell if that is somehow the consequence of an allocation failure. If it _is_, then there is an allocation somewhere that is missing a failure check. Even then, AFAIK memory fragmentation is not _that_ much of an issue these days on modern Linux kernels. Glibc can sometimes hold on to `free()`'d memory for way too long and neglect giving it back to the kernel, but that should show up as a ""pseudo-leak"" where the process uses more and more memory despite not having any actual leaks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1246032327:137,failure,failure,137,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1246032327,2,['failure'],['failure']
Availability,"The direct link was initially problematic for me, but no longer. I suspect a DNS server got compromised, it was taken down, and now you're dealing with having to wait for the malicious information to clear out of all the various caches...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/342#issuecomment-210019282:118,down,down,118,https://psicode.org,https://github.com/psi4/psi4/issues/342#issuecomment-210019282,2,['down'],['down']
Availability,"The disk space for the temporary file is about 245 GB. I don't know exactly how much space it requires. Could this kind of error raise a Python exception? I use `try...except` to mark failed points, and `core dumped` can not be caught within the Python script.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970#issuecomment-1565665594:123,error,error,123,https://psicode.org,https://github.com/psi4/psi4/issues/2970#issuecomment-1565665594,1,['error'],['error']
Availability,The dispersion refactoring apparently changes the way I need to turn of VV10 from libxc. Will need to track down the changes to make it work again.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1320#issuecomment-434339694:108,down,down,108,https://psicode.org,https://github.com/psi4/psi4/pull/1320#issuecomment-434339694,1,['down'],['down']
Availability,"The driver has failed to trap unsupported workflows for linear response properties before, so you're probably right. I can write up a PR to trap unsupported `cc_property` workflows... I get a PSIO error when I try an ROHF linear response property. Is that another case of the driver failing to trap an unsupported workflow?. ```; PSIO_ERROR: Can't find TOC Entry WAbEi (Ei,Ab); PSIO_ERROR: unit = 112, errval = 13; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2310#issuecomment-1046320061:197,error,error,197,https://psicode.org,https://github.com/psi4/psi4/issues/2310#issuecomment-1046320061,1,['error'],['error']
Availability,"The error I get is; ```; ==> Starting MCSCF iterations <==. Iter Total Energy Delta E Orb RMS CI RMS NCI NORB. Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procedures/proc.py"", line 4025, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procedures/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /home/work/psi4/psi4/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read_entry(unsigned int, char const*, char*, unsigned long); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/588#issuecomment-275790678:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/588#issuecomment-275790678,5,"['Error', 'error']","['Error', 'error']"
Availability,The error is unrelated to this memory fix - it's from our change in wfn serialization. I vote that we pull this one in now and I will make a new PR to fix the orbital rotation test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488#issuecomment-457228213:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/1488#issuecomment-457228213,1,['error'],['error']
Availability,"The extraction of the error message looks complicated, but I want to catch the case where the message contains other "":"" characters.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1862#issuecomment-611412812:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/pull/1862#issuecomment-611412812,1,['error'],['error']
Availability,The failure is that somewhere in the cc-module test `SCF_TYPE` is not correctly restored to defaults. This is convolved with #1020 and Lori's comment. Lets get that in and come back to this.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1023#issuecomment-389233551:4,failure,failure,4,https://psicode.org,https://github.com/psi4/psi4/pull/1023#issuecomment-389233551,1,['failure'],['failure']
Availability,"The failures on the Travis tests systems are likely unrelated to the file closing error. Can you reproduce those problems on the CCQC cluster, @jturney? I haven't been able to reproduce the problem on any of our machines; the valgrind trace shows an illegal instruction, but that may just be something that Valgrind can't handle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178874533:4,failure,failures,4,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178874533,2,"['error', 'failure']","['error', 'failures']"
Availability,"The following input file demonstrates errors in the second decimal place:; ```; molecule {; La 1 -0.5 0; La 1 0.5 0; O 0 -1 0; O 0 0 0; O 0 1 0; }. set {; basis def2-svp; scf_type df; df_basis_sad def2-universal-jkfit; df_basis_scf def2-universal-jkfit; points 5; }. func = 'hf'; anal = gradient('scf', dft_functional=func, dertype=1); fndf = gradient('scf', dft_functional=func, dertype=0); anal.print_out(); fndf.print_out(); ```. The counterpart where La is replaced with B agrees to six decimal places. This is _strongly_ suggestive of an error in ECPs. Let's keep all discussion on this issue focused on this error. DFT integration is irrelevant.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066#issuecomment-1784370672:38,error,errors,38,https://psicode.org,https://github.com/psi4/psi4/issues/3066#issuecomment-1784370672,3,['error'],"['error', 'errors']"
Availability,"The frozen orbitals are computed once by helper functions and then saved. You should never have to touch these. As far as I can tell, if you simply set frozen orbitals your code should work. Your error shows a SCF issue, which I cannot reproduce in the current master. Ill probably need a backtrace to figure it out. Also, please label all timers with the CIWave prefix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-261274886:196,error,error,196,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-261274886,2,['error'],['error']
Availability,"The functions weren't exposed to plugins or Python, so the only downstreams we could possibly break are using locally modified Psi. I'm not worried about them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1766#issuecomment-565454511:64,down,downstreams,64,https://psicode.org,https://github.com/psi4/psi4/pull/1766#issuecomment-565454511,1,['down'],['downstreams']
Availability,"The git history is still a concern. If it's WIP, fine, but if you're having trouble, please ping me on slack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2043#issuecomment-740234595:92,ping,ping,92,https://psicode.org,https://github.com/psi4/psi4/pull/2043#issuecomment-740234595,1,['ping'],['ping']
Availability,"The github links (when clicking on them from a search) seem to work ok. It's the links to psicode.org. The two main possibilities are:. 1.) Hacked php file on psicode.org. (Involves multiple php files. The link to labs.php also redirects). 2.) Hacked godaddy server itself, causing redirects. I see other domains on that server have been compromised. That doesn't narrow the problem down at all, and it looks like the others are slightly different. Some have already been marked as malicious by google. (https://www.google.com/#q=scottwandersonphotography.com)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/342#issuecomment-210189946:383,down,down,383,https://psicode.org,https://github.com/psi4/psi4/issues/342#issuecomment-210189946,1,['down'],['down']
Availability,"The handling for the user should be the same as for -D3/D3BJ etc. Add it to the functional name and psi4 handles finding the correct parameters or throws an error. I haven't gone through with it, but adding another case for the multiple -D options seems OK. So in the end the NL parameters are added to the list of D parameters here:; ```; dashcoeff = {; 'nl:{; 'tpss' : {nl_b: 1.23}; }; 'D2: ...; ```; [dashparam.py]( https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py; ); It could be an annoying extra case to avoid actually running dftd3, but the ""dash"" detection and general infrastructure is really nice. --; regarding doc, a simple link within http://psicode.org/psi4manual/master/dft.html#advanced-functional-use-and-manipulation would probably suffice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/870#issuecomment-348251623:157,error,error,157,https://psicode.org,https://github.com/psi4/psi4/issues/870#issuecomment-348251623,2,['error'],['error']
Availability,"The history rewrite is complete, at this point please remove all forks and clones. The git repository was reduced from 740MiB down to about 66MiB. All large files are now external projects so that we should not have to do this again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-254947891:126,down,down,126,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-254947891,1,['down'],['down']
Availability,"The initial issue was that cclib looks for the first line of the header (""Psi4: An Open-Source Ab Initio Electronic Structure Package"") to decide which parser to use. I pasted this into one of the outputs and tried parsing it, but still threw an error. I just ran the same molecule with psithon and tried to parse the output, found the same error. Looks like adding the header text to the start of my output file would fix the issue. Would it be reasonable to add a `header=True` option to the `set_output_file()` function, such that the contents of `header.py` are automatically included?. As for the cclib issue, it looks like the structure of the Convergence Check section has changed since their code was written. I'll file an issue over there to fix that matter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2893#issuecomment-1460731784:246,error,error,246,https://psicode.org,https://github.com/psi4/psi4/issues/2893#issuecomment-1460731784,2,['error'],['error']
Availability,"The job did not have enough memory and failed due to a TOCLEN error. I shot you a gchat about this awhile back, but did not receive a response and consequently forgot about it. > On Apr 4, 2016, at 10:03 AM, T. Daniel Crawford notifications@github.com wrote:; > ; > What was the bug in cc5?; > ; > ## ; > ; > Prof. T. Daniel Crawford; > crawdad@vt.edu; > ; > On Mon, Apr 4, 2016 at 9:32 AM, Daniel Smith notifications@github.com; > wrote:; > ; > > @lothian https://github.com/lothian I fixed cc5 in this branch. cc5 now; > > runs, passes, and the output.ref is updated.; > > ; > > —; > > You are receiving this because you were mentioned.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/pull/315#issuecomment-205297042; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/pull/315#issuecomment-205307609",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205318258:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205318258,1,['error'],['error']
Availability,"The large number of digits was introduced to eliminate round-off errors completely. There are a few reasons:. - When testing software that post-processes the wavefunction, it is desirable to be able to validate the numerical algorithms in such codes. For example, this can be done by checking the total number of electrons on very fine integration grids in such post-processing codes. When doing so, all other sources of errors should be eliminated to avoid confusion. We noticed that this was especially problematic before #1510 with fractionally occupied natural orbitals.; - When deriving approximate electrostatic models from a wavefunction, satisfying charge neutrality is quite important for long-range interactions. I know you can always ""fix"" this *a posteriori* (e.g. by shifting partial charges to match the net charge), but avoiding the need for a fix is still preferable, just to rule out sources of error. So why 17? The number of significant digits from a double precision number varies between 15 and 17. See https://en.wikipedia.org/wiki/Double-precision_floating-point_format (For some numbers, digits 16 and/or 17 may be insignificant, but not always.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1973#issuecomment-747650817:65,error,errors,65,https://psicode.org,https://github.com/psi4/psi4/issues/1973#issuecomment-747650817,3,['error'],"['error', 'errors']"
Availability,"The latest CMake fix worked, so Linux is in good shape now. Before we can merge this, we'll need to make sure we have conda L2 set up correctly. We don't need the high angular momentum multipoles - I have a different strategy in mind for those. We will need the second derivatives of the one electron ints though. The lack of those hessian ints is what's causing the remaining failures on Windows.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2388#issuecomment-1013736955:377,failure,failures,377,https://psicode.org,https://github.com/psi4/psi4/pull/2388#issuecomment-1013736955,1,['failure'],['failures']
Availability,The latest version of psi4 is giving errors when using pcmsolver: https://github.com/PCMSolver/pcmsolver/issues/206,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2903#issuecomment-1774302846:37,error,errors,37,https://psicode.org,https://github.com/psi4/psi4/pull/2903#issuecomment-1774302846,1,['error'],['errors']
Availability,"The log-file still looks like the error occurs before the build is even started, so I don't know if there is anything I can do about this. . It looks like this is an issue with all travis builds w/ clang they are aware of it, I don't know if we can do anything about that travis-ci/travis-ci#6120",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/395#issuecomment-223043529:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/395#issuecomment-223043529,1,['error'],['error']
Availability,"The main things worth looking at:; * psi4/driver/driver.py, psi4/src/core.cc; 	Do we have any recommended changes to the error messages? Any error messages I should add but didn't?; * Are there any files I didn't edit that I should have, just based on the fact that I am renaming an entire module?; * I also removed some options which the code stopped using. (The MO_RELAX and IGNORE_TAU options, both of which were marked to be used as debug tools.) Is there anything I should do for that other than remove mention of them in psi4/src/read_options.cc and anywhere they appeared in the DCT code?. Beyond that, the changes should be search and replace. Particularly zealous reviewers can double-check that the only instances of `dcft` left are those that refer to specific citations or say that `dcft` was the old name.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719#issuecomment-532653590:121,error,error,121,https://psicode.org,https://github.com/psi4/psi4/pull/1719#issuecomment-532653590,2,['error'],['error']
Availability,"The mathematical problem here is solving a matrix equation, not finding the lowest eigenpairs. As such, Davidson's algorithm is not relevant to the problem, and Psi uses preconditioned conjugate gradients in the SOSCF solver instead. PCG assumes the matrix (MO hessian) is positive semi-definite and can break down otherwise. How sure are you that the MO hessian is positive semi-definite across your iterations? That may be the cause of the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2183#issuecomment-843034642:310,down,down,310,https://psicode.org,https://github.com/psi4/psi4/issues/2183#issuecomment-843034642,1,['down'],['down']
Availability,"The new basis sets are fine. Updates of the old basis sets are causing test failures associated with changing basis set parameters. For example, STO-3G hydrogen basis sets are changing in the ninth decimal place because we only _had_ eight decimal places previously, causing some ""check numbers to the ninth decimal place"" tests to fail. While I trust the numbers from the newer EMSL, we need to make sure full tests passes before merging this in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016:76,failure,failures,76,https://psicode.org,https://github.com/psi4/psi4/pull/2230#issuecomment-872519016,1,['failure'],['failures']
Availability,"The newest release of ADF implements something called ""MESA"", which has been developed in http://dx.doi.org/10.14288/1.0372885 (pdf available at https://www.scm.com/wp-content/uploads/Thesis-MiguelGarciaChavez.pdf). It's basically a combination of several individual acceleration methods (in ADF: ADIIS, fDIIS, LISTb, LISTf, LISTi, and SDIIS), and the way it works is simply by forming trials of all the methods, and picking the one for which the extrapolated Fock matrix results in the least change of the density from the input.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-565805641:132,avail,available,132,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-565805641,2,['avail'],['available']
Availability,The newly built adcc conda packages (with the less strict dependency constraints) are now available in the [adcc/label/dev](https://anaconda.org/adcc/adcc/files) channel. Perhaps would be good to try them here and check they ease compatibility as expected.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848#issuecomment-598785196:90,avail,available,90,https://psicode.org,https://github.com/psi4/psi4/pull/1848#issuecomment-598785196,1,['avail'],['available']
Availability,"The only other tests that fail are dft-grad-meta and dft-grad2, and those failures occur for the HCN+ doublet. Maybe the state is ill-described by DFT? @dgasmith",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451608591:74,failure,failures,74,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451608591,1,['failure'],['failures']
Availability,"The only thing worth hanging onto might be the bakerjcc93. But if we've; got that database otherwise available, then deletion fine with me. On Fri, Apr 22, 2022 at 11:14 AM Lori A. Burns ***@***.***>; wrote:. > after #2549 <https://github.com/psi4/psi4/pull/2549>, the list from python; > tester.py looks like the below. Most of these are easily healed by; > figuring out if they're intended to be a test or not. Nots should be; > removed to an attic or deleted. Also related is #2234; > <https://github.com/psi4/psi4/issues/2234> . don't rely on the below --; > rerun tester.py as needed.; >; > @psi-rking <https://github.com/psi-rking>, do you prefer attic or; > deletion for the un-run optimizer tests?; > Complaints; >; > - 1. cc5: missing cmake directory registration. vi CMakeLists.txt; > - 2. cookbook/manual-sow-reap: missing cmake directory registration. vi; > cookbook/CMakeLists.txt; > - 3. cookbook/manual-sow-reap: missing CMakeLists. vi; > cookbook/manual-sow-reap/CMakeLists.txt; > - 4. dfmp2-freq1: missing cmake directory registration. vi; > CMakeLists.txt; > - 5. dfmp2-freq2: missing cmake directory registration. vi; > CMakeLists.txt; > - 6. dfomp2p5-1: missing ctest registration. vi; > dfomp2p5-1/CMakeLists.txt; > - 7. dfomp2p5-2: missing ctest registration. vi; > dfomp2p5-2/CMakeLists.txt; > - 8. dfomp2p5-grad1: missing ctest registration. vi; > dfomp2p5-grad1/CMakeLists.txt; > - 9. dfomp2p5-grad2: missing ctest registration. vi; > dfomp2p5-grad2/CMakeLists.txt; > - 10. dft-dldf: missing cmake directory registration. vi CMakeLists.txt; > - 11. dft-dsd: missing cmake directory registration. vi CMakeLists.txt; > - 12. dft-pbe0-2: missing cmake directory registration. vi; > CMakeLists.txt; > - 13. explicit-am-basis: mismatched directory (explicit-am-basis) and; > ctest registration name (explicit_am_basis). vi; > explicit-am-basis/CMakeLists.txt; > - 14. fsapt-diff1: missing cmake directory registration. vi; > CMakeLists.txt; > - 15. fsapt-diff1: missing CMakeLists.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2555#issuecomment-1106781137:101,avail,available,101,https://psicode.org,https://github.com/psi4/psi4/issues/2555#issuecomment-1106781137,1,['avail'],['available']
Availability,"The overhead from density fitting can actually become detrimental for extended systems, especially for the exchange part.; (Newer DF algorithms improve here, but some also introduce larger errors). Direct conventional integrals or RI-J plus exact exchange work well extended systems. COSX is okay screening wise, too, and also coming to PSI4. Direct conventional integrals in PSI4; ```; scf_type direct; df_scf_guess false; ```. Our direct SCF is not the fastest (improvements also coming here) and `ints_tolerance 1e-12` and `d_convergence 1e-6` are also both conservative and can be tweaked.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2288#issuecomment-911507913:189,error,errors,189,https://psicode.org,https://github.com/psi4/psi4/issues/2288#issuecomment-911507913,1,['error'],['errors']
Availability,The parallel test suite is a matter of adding `-n2` in 2-3 places. I really should make it an option. CI (that won't tell us how many threads are even available) hasn't been the best place for running a parallel suite.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2941#issuecomment-1531633439:151,avail,available,151,https://psicode.org,https://github.com/psi4/psi4/issues/2941#issuecomment-1531633439,1,['avail'],['available']
Availability,"The parallel work in Psi4 was in an Intel development environment, and with that `MKL` reference in your error, looks like that might have been hard-coded. If you don't have MKL to build against, you could also consider the binary that has high-quality math libs baked in (but does have processor optimizations turned off, which may or may not be relevant depending on the age/homogeneity of your HPC env).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/411#issuecomment-226018652:105,error,error,105,https://psicode.org,https://github.com/psi4/psi4/issues/411#issuecomment-226018652,1,['error'],['error']
Availability,"The patch I just pushed allows it to compile. The tests all fail instantly on my laptop, so I still have some more work to do, but that's almost certainly user error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235119557:160,error,error,160,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235119557,1,['error'],['error']
Availability,"The picture change transformation error should only be relevant in the nuclear region. If you have point charges in a QM/MM embedding fashion, these should be so far away from the QM regions that picture-change transforming that potential would have a negligible numerical effect. This is the approached used [here](https://pubs.acs.org/doi/10.1021/acs.jctc.7b00162) As far as I know, no one ever tested this assumption. The authors of this paper note:. > A note should be added regarding the use of X2C Hamiltonians. In this case, the one-electron part of the Fock matrix is transformed (see, e.g., ref 7 for details). Strictly, all external fields (including a field from a environment) should also be transformed. Currently, our PE-X2C-DFT implementation involves transformation only of the vacuum terms. Thus, the PE operator is left untransformed, and the untransformed operator is carried over to the linear response formalism described below (following the general implementation in the DIRAC program, all property operators are always transformed).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1758#issuecomment-558530297:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/issues/1758#issuecomment-558530297,1,['error'],['error']
Availability,"The planned functionality works and my code does no longer cause obvious trouble in the various tests. However, especially some of the modifications in`empirical_dispersion.py` seem not elegant. I force `return 0 `in the compute_energy/gradient/hessian parts. Otherwise I get errors like:; `AttributeError: 'NoneType' object has no attribute 'compute_energy`; Here I would need advice if the solution is not acceptable. I will come with questions in slacks soon enough ;)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/914#issuecomment-364430092:276,error,errors,276,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364430092,1,['error'],['errors']
Availability,"The problem appears to be that, when the wave function is labelled ""ROHF"", MRCC it expects the orbitals to be truly spin restricted (which is reasonable behavior, in general). However, for open-shell systems, ROHF-B-CC naturally yields spin-unrestricted orbitals due to the fact that the alpha and beta T1 amplitudes are distinct. (This can be avoided using less conventional open-shell B-CC formulations, but Psi4 uses the ""standard"" approach.) However, given that the UHF- and ROHF-based algorithms yield the same results in Psi4 (apart from differences associated with using frozen core), the interface to MRCC should work correctly if the user chooses `reference uhf`. No changes to either Psi4 or MRCC appear to be necessary to avoid this problem. Kirk Peterson has confirmed that this corrects the interface failure he reported earlier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2308#issuecomment-1041031234:814,failure,failure,814,https://psicode.org,https://github.com/psi4/psi4/issues/2308#issuecomment-1041031234,1,['failure'],['failure']
Availability,"The problem here is related to the screening setup. The integral objects now compute diagonal elements of the integrals for screening purposes. When all four basis sets are the same, it's clear how this should be done. When there are different basis sets in the bra and ket, it's not obvious but it's also not a use case we had ever encountered so I chose to just raise an error. I think the best (and cleanest) approach for what you're trying to do is to make a basis set for the supermolecule, and have nested loops over the appropriate shells for molecules A and B. This is how the same problem is handled in SAPT and friends. If the two basis sets are really needed, we can revisit the way the Schwarz inequality list is constructed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2439#issuecomment-1040499590:373,error,error,373,https://psicode.org,https://github.com/psi4/psi4/issues/2439#issuecomment-1040499590,2,['error'],['error']
Availability,"The problem in more details:; ```; =================================================================; ==1078==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000823db8 at pc 0x7f7011cc8d52 bp 0x7ffcb2c573d0 sp 0x7ffcb2c56b88; READ of size 16 at 0x602000823db8 thread T0; #0 0x7f7011cc8d51 in __interceptor_memmove /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:720; #1 0x7f7003a3bf86 in int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_algobase.h:368; #2 0x7f700394d0ed in int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_algobase.h:386; #3 0x7f7004dea9e7 in int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_algobase.h:424; #4 0x7f7004de92bf in int* std::copy<int const*, int*>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_algobase.h:456; #5 0x7f7004de75fd in int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_uninitialized.h:101; #6 0x7f7004de6659 in int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/stl_uninitialized.h:134; #7 0x7f7004de56f0 in int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&) /shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gn",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1521#issuecomment-460637418:110,ERROR,ERROR,110,https://psicode.org,https://github.com/psi4/psi4/pull/1521#issuecomment-460637418,1,['ERROR'],['ERROR']
Availability,"The problem in more details:; ```; =================================================================; ==16127==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61800027ffa0 at pc 0x7fb0ddf8cb89 bp 0x7fffaed096c0 sp 0x7fffaed096b8; READ of size 8 at 0x61800027ffa0 thread T0; #0 0x7fb0ddf8cb88 in psi::IntegralTransform::presort_so_tei() /home/raimis/psi4.git/psi4/src/psi4/libtrans/integraltransform_sort_so_tei.cc:209; #1 0x7fb0ddfad919 in psi::IntegralTransform::transform_tei_first_half(std::shared_ptr<psi::MOSpace>, std::shared_ptr<psi::MOSpace>) /home/raimis/psi4.git/psi4/src/psi4/libtrans/integraltransform_tei_1st_half.cc:51; #2 0x7fb0ddfacf2f in psi::IntegralTransform::transform_tei(std::shared_ptr<psi::MOSpace>, std::shared_ptr<psi::MOSpace>, std::shared_ptr<psi::MOSpace>, std::shared_ptr<psi::MOSpace>, psi::IntegralTransform::HalfTrans) /home/raimis/psi4.git/psi4/src/psi4/libtrans/integraltransform_tei.cc:55; #3 0x7fb0dc2d319c in psi::detci::CIWavefunction::transform_ci_integrals() /home/raimis/psi4.git/psi4/src/psi4/detci/ints.cc:118; #4 0x7fb0dc28643c in psi::detci::CIWavefunction::compute_energy() /home/raimis/psi4.git/psi4/src/psi4/detci/ciwave.cc:147; #5 0x7fb0dc2a8ddd in psi::detci::detci(std::shared_ptr<psi::Wavefunction>, psi::Options&) /home/raimis/psi4.git/psi4/src/psi4/detci/detci.cc:68; #6 0x7fb0db459af6 in py_psi_detci(std::shared_ptr<psi::Wavefunction>) /home/raimis/psi4.git/psi4/src/core.cc:348; #7 0x7fb0db511eae in std::shared_ptr<psi::Wavefunction> pybind11::detail::argument_loader<std::shared_ptr<psi::Wavefunction> >::call_impl<std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::Wavefunction> (*&)(std::shared_ptr<psi::Wavefunction>), 0ul, pybind11::detail::void_type>(std::shared_ptr<psi::Wavefunction> (*&)(std::shared_ptr<psi::Wavefunction>), std::integer_sequence<unsigned long, 0ul>, pybind11::detail::void_type&&) /shared/raimis/opt/miniconda/envs/psi4/include/python3.6m/pybind11/cast.h:1870; #8 0x7fb0db5031f2 in std::enable_if<!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-452722861:111,ERROR,ERROR,111,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-452722861,1,['ERROR'],['ERROR']
Availability,"The problem in more details:; ```; =================================================================; ==17351==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60700011cc20 at pc 0x7fdb48ef15e4 bp 0x7ffd05c3edf0 sp 0x7ffd05c3ede8; READ of size 4 at 0x60700011cc20 thread T0; #0 0x7fdb48ef15e3 in psi::IntegralTransform::process_spaces() /home/raimis/prj/psi4.git/psi4/src/psi4/libtrans/integraltransform_moinfo.cc:210; #1 0x7fdb48eea827 in psi::IntegralTransform::initialize() /home/raimis/prj/psi4.git/psi4/src/psi4/libtrans/integraltransform.cc:271; #2 0x7fdb48ee65cf in psi::IntegralTransform::IntegralTransform(std::shared_ptr<psi::Wavefunction>, std::vector<std::shared_ptr<psi::MOSpace>, std::allocator<std::shared_ptr<psi::MOSpace> > >, psi::IntegralTransform::TransformationType, psi::IntegralTransform::OutputType, psi::IntegralTransform::MOOrdering, psi::IntegralTransform::FrozenOrbitals, bool) /home/raimis/prj/psi4.git/psi4/src/psi4/libtrans/integraltransform.cc:110; #3 0x7fdb46dc8b1a in psi::cctransort::cctransort(std::shared_ptr<psi::Wavefunction>, psi::Options&) /home/raimis/prj/psi4.git/psi4/src/psi4/cctransort/cctransort.cc:394; #4 0x7fdb463b036b in py_psi_cctransort(std::shared_ptr<psi::Wavefunction>) /home/raimis/prj/psi4.git/psi4/src/core.cc:322; #5 0x7fdb46464236 in void pybind11::detail::argument_loader<std::shared_ptr<psi::Wavefunction> >::call_impl<void, void (*&)(std::shared_ptr<psi::Wavefunction>), 0ul, pybind11::detail::void_type>(void (*&)(std::shared_ptr<psi::Wavefunction>), std::integer_sequence<unsigned long, 0ul>, pybind11::detail::void_type&&) /home/raimis/opt/conda/envs/psi4/include/python3.6m/pybind11/cast.h:1870; #6 0x7fdb46444e2c in std::enable_if<std::is_void<void>::value, pybind11::detail::void_type>::type pybind11::detail::argument_loader<std::shared_ptr<psi::Wavefunction> >::call<void, pybind11::detail::void_type, void (*&)(std::shared_ptr<psi::Wavefunction>)>(void (*&)(std::shared_ptr<psi::Wavefunction>)) && /home/raimis/opt/con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488#issuecomment-456410401:111,ERROR,ERROR,111,https://psicode.org,https://github.com/psi4/psi4/pull/1488#issuecomment-456410401,1,['ERROR'],['ERROR']
Availability,"The problem in more details:; ```; =================================================================; ==18335==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030001fb1a8 at pc 0x7f7ba9740fc7 bp 0x7ffcccc3b1b0 sp 0x7ffcccc3b1a8; READ of size 8 at 0x6030001fb1a8 thread T0; #0 0x7f7ba9740fc6 in psi::scf::ROHF::Hx(std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix>) /home/raimis/prj/psi4.git/psi4/src/psi4/libscf_solver/rohf.cc:590; #1 0x7f7ba9748334 in psi::scf::ROHF::soscf_update(double, int, int, int) /home/raimis/prj/psi4.git/psi4/src/psi4/libscf_solver/rohf.cc:878; #2 0x7f7ba6a441e9 in pybind11::cpp_function::cpp_function<int, psi::scf::HF, double, int, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, char [36]>(int (psi::scf::HF::*)(double, int, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [36])::{lambda(psi::scf::HF*, double, int, int, int)#1}::operator()(psi::scf::HF*, double, int, int, int) const /home/raimis/opt/conda/envs/psi4/include/python3.6m/pybind11/pybind11.h:72; #3 0x7f7ba6b2cde0 in int pybind11::detail::argument_loader<psi::scf::HF*, double, int, int, int>::call_impl<int, pybind11::cpp_function::cpp_function<int, psi::scf::HF, double, int, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, char [36]>(int (psi::scf::HF::*)(double, int, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [36])::{lambda(psi::scf::HF*, double, int, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, pybind11::detail::void_type>(pybind11::cpp_function::cpp_function<int, psi::scf::HF, double, int, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, char [36]>(int (psi::scf::HF::*)(double, int, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [36])::{lambda(psi::scf::HF*, double, int, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul>, py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1489#issuecomment-456415881:111,ERROR,ERROR,111,https://psicode.org,https://github.com/psi4/psi4/pull/1489#issuecomment-456415881,1,['ERROR'],['ERROR']
Availability,"The problem is that the reference (UHF) is set only for the SCF reference wave function and not the CCSD wave function. If you change the input to use. set reference uhf. the code runs fine. . ## -TDC. Prof. T. Daniel Crawford; crawdad@vt.edu; 540-231-7760. On Aug 6, 2013, at 11:34 AM, andysim notifications@github.com wrote:. > Thanks a lot for the detailed feedback, and input file to reproduce the problem. I'll look into this, and try to get a patch together, ; > ; > cheers, ; > ; > Andy. ; > ; > On Aug 6, 2013, at 10:21 AM, James Spencer notifications@github.com wrote: ; > ; > > CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file: ; > > ; > > molecule f { ; > > f 0.00 0.00 0.00 ; > > } ; > > set basis cc-pVTZ ; > > set scf reference uhf ; > > energy('ccsd') ; > > (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). ; > > ; > > Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. ; > > ; > > Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. ; > > ; > > Full backtrace from gdb: ; > > ; > > (gdb) where ; > > #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6 ; > > #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134 ; > > #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630) ; > > at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50 ; > > #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0) ; > > at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99 ; > > #4 0x000000000086b797 in psi::ccenergy::c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22192736:650,fault,faults,650,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22192736,6,"['avail', 'fault']","['avail', 'fault', 'faults']"
Availability,"The problem was indeed boost. I've switched my testboard nightly builds to; use the boost we distribute with PSI, but at some point we'll have to; figure out why the interface to 1.60.0 isn't working properly. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Tue, Feb 2, 2016 at 5:58 PM, Andy Simmonett notifications@github.com; wrote:. > The failures on the Travis tests systems are likely unrelated to the file; > closing error. Can you reproduce those problems on the CCQC cluster,; > @jturney https://github.com/jturney? I haven't been able to reproduce; > the problem on any of our machines; the valgrind trace shows an illegal; > instruction, but that may just be something that Valgrind can't handle.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/230#issuecomment-178874533.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-179352477:350,failure,failures,350,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-179352477,2,"['error', 'failure']","['error', 'failures']"
Availability,"The problems are unrelated to this PR. Rebase and push, and the problems will be fixed. (Psi's ""grab the latest pydantic"" will use an updated pydantic, which won't raise the error.). I'll review this PR later today, since I know the TDSCF code the best, nowadays.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2967#issuecomment-1560976633:174,error,error,174,https://psicode.org,https://github.com/psi4/psi4/pull/2967#issuecomment-1560976633,1,['error'],['error']
Availability,"The psi4 code unchanged since May 2019 has suddenly started throwing circular import errors?. Any changes to the dependency list? Particularly, is qcengine present?. Python 3.11 only? I've never tried a 3.11 prerelease.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1203208847:85,error,errors,85,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1203208847,1,['error'],['errors']
Availability,The readily available scf gradient terms can be found here: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/scfgrad/scf_grad.cc#L122. Not sure about the best way to expose them.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2130#issuecomment-796629840:12,avail,available,12,https://psicode.org,https://github.com/psi4/psi4/issues/2130#issuecomment-796629840,1,['avail'],['available']
Availability,"The reason I stumbled across this error is because I included in the same input file as some computations with other, less totalitarian methods. This particular method doesn't even allow the user to change the basis set, so by this logic, it should crash whenever the user specifies a basis set, too. My experience still has me in favor of run the computation but warn the user.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1530#issuecomment-462918918:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/issues/1530#issuecomment-462918918,1,['error'],['error']
Availability,The reason for docs build failure is unrelated to this PR. I've asked Lori to take a look.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2982#issuecomment-1714499781:26,failure,failure,26,https://psicode.org,https://github.com/psi4/psi4/pull/2982#issuecomment-1714499781,1,['failure'],['failure']
Availability,"The reason its bouncing is we are not entirely sure the range-seperatated gradients are correct. This admittedly could use a better error message. On `psi4.gradient('scf/3-21g', df_functional='wb97x', dertype=1)` I think this shows a need to scan for valid `kwargs`. This could be difficult to do however.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-346668004:132,error,error,132,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-346668004,1,['error'],['error']
Availability,"The reason this doesn't work in the beta branch is that scf_type direct does a few steps density-fitted, then switches over to the exact algorithm. The necessary auxiliary basis set (cc-pvdz-jkfit http://sirius.chem.vt.edu/psi4manual/master/basissets_byfamily.html) is not available for the atoms the original poster listed. In the development branch, there's a check that automatically turns off the density-fitting steps if the aux basis is not available. We'll be releasing the development branch fairly soon, so this shouldn't come up again. In the meantime, if you add `set df_scf_guess false` for atoms that are missing the aux set, it won't try the density-fitting steps and your inputs should work fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7#issuecomment-19470973:273,avail,available,273,https://psicode.org,https://github.com/psi4/psi4/issues/7#issuecomment-19470973,2,['avail'],['available']
Availability,"The relevant computer is switched on again, so installers downloadable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898:58,down,downloadable,58,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2315403898,1,['down'],['downloadable']
Availability,"The result of test has changed:; ```; $ ctest --output-on-failure -R cookbook-rohf-orb-rot; Test project /home/raimis/psi4.git/linux_build; Start 401: cookbook-rohf-orb-rot; 1/1 Test #401: cookbook-rohf-orb-rot ............***Failed 22.19 sec; 	X SCF energy......................................................PASSED; 	X CCSD energy.....................................................PASSED; 	A SCF energy......................................................PASSED; 	A CCSD energy.....................................................PASSED; 	X SCF energy......................................................PASSED; 	X CCSD energy.....................................................PASSED; 	A SCF energy: computed value (-150.1081361) does not match (-150.0872987) to 6 digits.; Traceback (most recent call last):; File ""/home/raimis/psi4.git/linux_build/stage/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 84, in <module>; File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/p4util/util.py"", line 230, in compare_values; raise TestComparisonError(message). TestComparisonError: 	A SCF energy: computed value (-150.1081361) does not match (-150.0872987) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 0% tests passed, 1 tests failed out of 1. Label Time Summary:; cart = 22.19 sec*proc (1 test); cookbook = 22.19 sec*proc (1 test); psi = 22.19 sec*proc (1 test). Total Test time (real) = 22.35 sec. The following tests FAILED:; 	401 - cookbook-rohf-orb-rot (Failed); Errors while running CTest; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488#issuecomment-457158095:58,failure,failure,58,https://psicode.org,https://github.com/psi4/psi4/pull/1488#issuecomment-457158095,2,"['Error', 'failure']","['Errors', 'failure']"
Availability,"The serial run is correct. I think your automatic nesting scheme is breaking down as some of the above can turn off/on before other pieces as each block is not a static amount of work. I wonder if we can create a region where we freeze nesting like `timer_nesting_freeze(true)`. We would loose the LSDA/GGA nesting, but I think thats ok.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/743#issuecomment-312735086:77,down,down,77,https://psicode.org,https://github.com/psi4/psi4/pull/743#issuecomment-312735086,1,['down'],['down']
Availability,"The sowreap one is a failure of both the capability and the testing mechanics. It's been removed temporarily through wfn_pass PR. Sapt4 changes are due to actually turning on by default the nat orb tricks we always recommended. That test case has been modified to pass also in wfn_pass PR. The opt one sounds like an actual problem. . Sent from my iPhone. > On Feb 15, 2016, at 8:06 AM, Justin Turney notifications@github.com wrote:; > ; > Thank you for the detailed report. You're probably right about the firewall causing the pubchem\* tests to fail. I'll see what I can figure out about the others.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-184200636:21,failure,failure,21,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-184200636,1,['failure'],['failure']
Availability,"The stack traces shown indicate the issue is `clear_collection_cache` not `build`. Seems like this error is all over the place. Do you have SCF iterations before the crash?. I have a guess as to the error, I will make a PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-443199779:99,error,error,99,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-443199779,2,['error'],['error']
Availability,"The symmetry detection does not try to symmetrize the geometry to my knowledge.; But there is a `symmetrize` function than can be explicitly called like this:. ```; molecule {; pubchem:fluoroethane; }; set basis cc-pVDZ; psi4.get_active_molecule().symmetrize(1e-2); # or <molecule_name>.symmetrize(1e-2) if a name was set; energy('scf'); ```. edit: Otherwise finding the point group with a lower tolerance can be done like this, I think. (Doesn't work in this case). ```; molecule {; pubchem:fluoroethane; }; set basis cc-pVDZ. mol = psi4.get_active_molecule(); tol = 1e-2; PG = mol.find_point_group(tol); print(PG.full_name()); mol.set_point_group(PG); energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2463#issuecomment-1062668003:396,toler,tolerance,396,https://psicode.org,https://github.com/psi4/psi4/issues/2463#issuecomment-1062668003,1,['toler'],['tolerance']
Availability,"The test failure is because of a 0.1 cm^-1 change in hessian frequencies due to the keyword change. I either need to adjust the screening value in the test, adjust the reference, or adjust the default screening value. Opinions?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1349562483:9,failure,failure,9,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1349562483,1,['failure'],['failure']
Availability,"The test failure looks completely random. I expect this will pass tests if it goes through again. I can't re-force tests, so the best solution I have is to amend the commit message and force push the PR. That'll force another run of tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2406#issuecomment-1013371856:9,failure,failure,9,https://psicode.org,https://github.com/psi4/psi4/pull/2406#issuecomment-1013371856,1,['failure'],['failure']
Availability,"The underlying [cmake cmd](https://cmake.org/cmake/help/latest/module/CheckCXXCompilerFlag.html) is checking for a compiler error code, not compilation failure. I'm confused as to why this is appearing now, as the `-x<lang>` has been in GCC for many years (at least since 4.8.5).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2023#issuecomment-717077836:124,error,error,124,https://psicode.org,https://github.com/psi4/psi4/issues/2023#issuecomment-717077836,2,"['error', 'failure']","['error', 'failure']"
Availability,"The warning is fine -- http://forum.psicode.org/t/numpy-ufunc-size-change-warning/1305?u=loriab . The dftd3 error is curious. May be related to https://github.com/MolSSI/QCEngine/issues/45 . Can probe later (most everyone Psi4 is away at a conference next week). Unless DFT-D3 was your target, you're installed, passing, and ready to run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478034387:108,error,error,108,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478034387,1,['error'],['error']
Availability,"The way I understand SAD as described in DOI 10.1002/jcc.20393 is that one uses the SAD density matrix as input to a spin-restricted Fock build, and then uses those orbitals for whatever method. There's no reason SAD shouldn't work for ROHF or UHF, because orbitals are available. Another way to get orbitals for ROHF is to diagonalize the SAD matrix, but this is not as good as an approach because the density changes in the purification.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/400#issuecomment-223718861:270,avail,available,270,https://psicode.org,https://github.com/psi4/psi4/pull/400#issuecomment-223718861,1,['avail'],['available']
Availability,"Then may I also suggest turning off the cache entirely? It was a good idea in theory, but it leads to memory fragmentation and eventually calculations crash due to allocation errors. It's possible that this problem is manifested in the crash you're observing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1246009485:175,error,errors,175,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1246009485,1,['error'],['errors']
Availability,There are not many places internal to Psi4 that need to really know the ordering of our orbitals. So perhaps us changing to match default libint2 wouldn't be too big a hurdle. Do any of our up or downstream packages need to know the ordering?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926951158:196,down,downstream,196,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926951158,1,['down'],['downstream']
Availability,"There have been many buildsystem updates to Libint1 since 1.2.0, and it's always an option to build it through libtool _or_ cmake. Psi4 will only detect a CMake build. Libint takes a while to compile, and I definitely agree one would wish to detect a pre-built. I've added the `.pc` file to Libint1 here (https://github.com/evaleev/libint/pull/120) so that a CMake build of Libint is detectable by both downstream CMake or libtool. Normally what packagers do when they've got a libtool-built Libint already packaged and want Psi to detect it is to patch the build so CMake sees it https://src.fedoraproject.org/rpms/psi4/blob/master/f/psi4-b167f473-fedora.patch . Yes, Libint2 is known to us. As it requires extra dependencies and isn't expected to to be faster, we won't be updating.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589#issuecomment-480458202:403,down,downstream,403,https://psicode.org,https://github.com/psi4/psi4/issues/1589#issuecomment-480458202,1,['down'],['downstream']
Availability,"There is a rohf-bccd test at https://github.com/psi4/psi4/blob/master/tests/cc16/input.dat#L28 . If it's any help, bccd and bccd(t) all-electron in psi4 match that in cfour. (Though I did have to turn on orbitals=1 for cfour bccd(t) for rhf/uhf to allow it to match psi4. After moderate effort, I couldn't get cfour bccd to run with frozen-core, but I wouldn't rule out user error.). > Would taking a look at https://psicode.org/psi4manual/master/cc.html be also in-scope for this PR? I think that page never mentions that gradients are restricted to all-electron. I agree documenting capability exceptions is weak across modules at the moment. I was hoping to fix that with the table above, which is autogenerated from calcs, not hand-assembled. Do you think more is needed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708#issuecomment-1243111522:375,error,error,375,https://psicode.org,https://github.com/psi4/psi4/pull/2708#issuecomment-1243111522,1,['error'],['error']
Availability,"There is no FCHK standard - the orbitals should be whatever the method gives. Even in TCTSNBN you can modify the orbitals in the checkpoint file e.g. with `Pop=SaveNBOs`, `Pop=SaveNLMOs` or `Pop=SaveMixed`...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-670518326:129,checkpoint,checkpoint,129,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-670518326,1,['checkpoint'],['checkpoint']
Availability,There might still be more failures. I was seeing an infinite loop somewhere with a `__getattribute__` recursively calling itself in `libmintsmolecule.py` I think.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160#issuecomment-130115325:26,failure,failures,26,https://psicode.org,https://github.com/psi4/psi4/pull/160#issuecomment-130115325,1,['failure'],['failures']
Availability,"There's a comment line in the cube file that we use for units and property. It wouldn't be standard among all cube-reading software, but we can put the No. core electrons there, so downstream has a chance.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-412899608:181,down,downstream,181,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-412899608,1,['down'],['downstream']
Availability,"There's a large psi4 work day gathering tomorrow. So probably no comments on this PR until things settle down. But yes, PR is the best way for code review. And thanks for the lithium oddity report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335#issuecomment-211552490:105,down,down,105,https://psicode.org,https://github.com/psi4/psi4/pull/335#issuecomment-211552490,1,['down'],['down']
Availability,"There's a rebuild of all the psi4 packages up (build `_2`) including `osx_arm64`. * **Please test `osx_arm64`**. These are build by cross-compile and in a direction that can't be emulated, so they have _never been run_. ; * You can run the full test suite through pytest. Point it at `pytest $CONDA_PREFIX/lib/python*/site-packages/psi4/tests/`. Especially test threaded (but be aware of #2941 expected failures (also cc44, but that's behaving correctly to fail)).; * Be aware that c-f encourages packages to be built against a generic blas/lapack, so the user can select the blas implementation at runtime. (directions at https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation); * Usual archs `linux-64`, `osx-64`, `win-64` _don't_ do as encouraged above and instead link directly to MKL since we didn't want to switch expectations and performance that drastically. But Intel MKL isn't available for `osx-arm64` (quelle suprise). So I did the generic blas/lapack setup for this arch. You can choose `libblas=*=*openblas` or `libblas=*=*accelerate` for this arch. I'd be curious to hear about both. You'll get openblas if you don't specify.; * I've tested openblas on linux-64, and as long as you choose the openmp openblas variant, not the pthreads one, it works correctly (only the openmp variant is available for `osx-arm64`, so all's well). Timings were ~5% slower over MKL, so operable and perfectly respectable. I didn't test the SAPT jobs that iirc were the trouble with openblas before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1529304015:403,failure,failures,403,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1529304015,3,"['avail', 'failure']","['available', 'failures']"
Availability,There's also an obvious error if `#` appears within a string literal. But that's for another day.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/87#issuecomment-98021606:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/pull/87#issuecomment-98021606,1,['error'],['error']
Availability,"There's another problem: using the standard Python search, I get the error; ```; -- Found HDF5: /usr/lib64/libhdf5.so;... (found version 1.12.1); -- Performing Test HAS_FLTO; -- Performing Test HAS_FLTO - Success; -- Found pybind11: /usr/include (found version 2.11.1); -- Found CheMPS2: /usr/lib64/libchemps2.so.3 (found version 1.8.9); -- Found gau2grid: /usr/lib64/libgg.so.1 (found version 1.3.1); CMake Error at cmake/FindPythonModule.cmake:82 (if):; if given arguments:; ""STREQUAL"" ""True""; Unknown arguments specified; Call Stack (most recent call first):; external/upstream/qcelemental/CMakeLists.txt:3 (find_python_module); -- Configuring incomplete, errors occurred!; RPM build errors:; error: Bad exit status from /var/tmp/rpm-tmp.vyDLbO (%build); Bad exit status from /var/tmp/rpm-tmp.vyDLbO (%build); Child return code was: 1; ```; and sure enough ; ```; external/upstream/qcelemental/CMakeLists.txt: include(FindPythonModule); external/downstream/snsmp2/CMakeLists.txt: include(FindPythonModule); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1668306491:69,error,error,69,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1668306491,6,"['Error', 'down', 'error']","['Error', 'downstream', 'error', 'errors']"
Availability,There's built psi4 packages available for testing. Details at https://github.com/psi4/psi4/issues/2300#issuecomment-1529304015,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-1529304309:28,avail,available,28,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-1529304309,1,['avail'],['available']
Availability,"There's some `xrange` that py3 wants converted to `range`. They don't look to be over big lists, so shouldn't hurt py2 performance. Py2 problem is . ```. Transforming MOs to the semicanonical basis; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/proc.py"", line 4340, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 409, in mcscf_solver; build_semicanonical_mos(ciwfn); File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib//psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 91, in build_semicanonical_mos; Cnew = core.Matrix.doublet(ciwfn.Ca(), U, False, False); RuntimeError: ; Fatal Error: Matrix::doublet: Dimension mismatch; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304462078:1250,Error,Error,1250,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304462078,1,['Error'],['Error']
Availability,"There's temporary build docs linked off README: ""Downloading and Installing"" on the main GH page. It's not the specification of Python that's the problem– CMake detection and build are going just fine in these cases. CMake knows the exact, absolute path location to everything Psi4 or its build needs. The problem is conveying that info to the runtime environment. This is done by baking in all those absolute paths into the executable/library rpath. _But_, when a path (e.g., `/usr/lib`) has both a useful thing like `libpython.so` and a bad thing (for Psi4) like old gcc or hdf5, then CMake has no way of knowing that it needs to place /usr/lib into rpath _behind_ the path to new gcc or new hdf5. Thus, we end up with runtime path problems, solvable only by `LD_LIBRARY_PATH` or rpath adjustment and relinking. This problem is controllable with conda, because it isolates just what Psi4 needs into its own namespaced path and stuffs that into rpath. For the general developers CMake build, there's no robust solution that I can see.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252931820:49,Down,Downloading,49,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252931820,2,"['Down', 'robust']","['Downloading', 'robust']"
Availability,"These commits allow (almost) all tests to pass under python 2 and python 3. I ran the tests under Arch Linux (gcc 4.8.1, python 2.7.5 and 3.3.2, netlib LAPACK+BLAS, boost 1.53.0). Outstanding issues:; - fd-freq-energy seg faults after printing out the 'Thermodynamic Analysis' banner under python 2 and 3. Is this a known issue?; - pywrap-db2, pywrap-opt-sowreap and pywrap-freq-e-sowreap fail to run under python 3 (maybe 3.3?). This is due to the pickle.dump in format_kwargs_for_input: under python 3, pickle.dump must write to a binary file (a restriction not present in python 2) and format_kwargs_for_input is always passed an open text file to write to. I haven't come up with a clean fix to this yet. I also haven't tested the plugins (I forgot to compile with support for them), dftd3 interface (the PSI4 documentation links to a required patch in the psi4 private repository) nor the mrcc interface (no license).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20545979:222,fault,faults,222,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20545979,1,['fault'],['faults']
Availability,"This PR addresses #2379 . All fsapt tests pass after refactoring (except fsapt-d) Any insights? This is the error message (Running test fsapt-d). ```; !----------------------------------------------------------------------------------!; ! !; ! Unsuccessful run. Check input, particularly geometry in [a0]. Model: !; ! Model(method='hf-d3', basis='(auto)') !; ! !; !----------------------------------------------------------------------------------!; ```. Additional information:; I compiled my code with gcc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2385#issuecomment-997235877:108,error,error,108,https://psicode.org,https://github.com/psi4/psi4/pull/2385#issuecomment-997235877,1,['error'],['error']
Availability,"This PR failed the auto-test suite. Looking at the logs, this appears to be a random error rather than an indicator of a fault in the PR itself. In event of a random error, there's nothing to do but re-run the tests. I recommend you rebase onto master and then force push the PR. Rebasing is always healthy, and that will force the tests to re-run.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549:85,error,error,85,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-944359549,3,"['error', 'fault']","['error', 'fault']"
Availability,"This PR is good prep, but let's hold off on merge.; * In practice, qcf `master` is working as expected and `next` has quirks, so let's keep `master` option open.; * qcf `next` packages not yet available.; * anyone who wants to experiment with `next` need only copy the `task_base.py` file from this PR. (Other PR changes are docs/cosmetic.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645#issuecomment-1201423497:193,avail,available,193,https://psicode.org,https://github.com/psi4/psi4/pull/2645#issuecomment-1201423497,1,['avail'],['available']
Availability,"This bug is surprisingly straightforward, but figuring out the correct fix requires a lot of deep Psi knowledge. The `psio_` object of `occ` is set by a call to [the shallow_copy function](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/occwave.cc#L50). This works fine when the reference wavefunction has a PSIO object. No part of the [`from_file` function](https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/python_helpers.py#L145-L221) gives the reference wavefunction a PSIO object. Unsurprisingly, you get a memory error when you try to use an uninitialized object. The other modules Holger tested don't have a problem because they don't use the reference wavefunction's PSIO. `fnocc` and `dfmp2`, for instance, make their own. Can anybody explain why we require the Wavefunction base class to have a PSIO object? It seems like something that a subclass can create if convenient, but we shouldn't assume will always be set.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1851#issuecomment-600719939:540,error,error,540,https://psicode.org,https://github.com/psi4/psi4/issues/1851#issuecomment-600719939,1,['error'],['error']
Availability,"This came to mind for failing SAPT tests: https://github.com/psi4/psi4/pull/1398/commits/05a8eacd9d3a1b34e008f4078787dc6f4cb2c64f . Main action is in the SAPT iterator destructor. Fixed a double free. Sorry for the formatting mixed in. But it doesn't look immediately relevant. Looks like someone intended to relax that error, https://github.com/psi4/psi4archive/blame/master/psi4/src/psi4/lib3index/denominator.cc#L197-L200. My notes for other back-port candidates if 1.2.2 materializes: #1364, #1303, #1387",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451690246:320,error,error,320,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451690246,1,['error'],['error']
Availability,This continues to look better and better IMO. Please do poke me if you need help on specific parts. For HF3C do you know the error here? Is it just a an issue with the correction dispersion.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-370239589:125,error,error,125,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370239589,1,['error'],['error']
Availability,"This could be tidied up and merged for v1.9, but that would constrict pydantic to only v2. From https://github.com/MolSSI/QCElemental/issues/323, releases of qcfractal are only imminently even v2-tolerant. So I think it'd be safer to postpone and update the whole qca stack together. So not targeting v1.9. Any thoughts? @mattwthompson",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034#issuecomment-1809285602:196,toler,tolerant,196,https://psicode.org,https://github.com/psi4/psi4/pull/3034#issuecomment-1809285602,1,['toler'],['tolerant']
Availability,"This could potentially be user error. However, hopefully through my minimal example you can replicate the behaviour I've been getting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3119#issuecomment-1898203578:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/issues/3119#issuecomment-1898203578,1,['error'],['error']
Availability,"This doesn't fix #2012, since in that case it seems that the number of frozen core orbitals in the dimer is sum of the number of frozen core orbitals in each monomer (at least for `freeze_core -1`, an error is thrown with `freeze_core -2`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2271#issuecomment-896321286:201,error,error,201,https://psicode.org,https://github.com/psi4/psi4/pull/2271#issuecomment-896321286,1,['error'],['error']
Availability,"This erratic behavior is caused by several problems in the optimizer (one of which being the maximum step size getting needlessly scaled down). However, I believe I've solved all the problems and can now generate a nice, smooth torsional potential curve in C2 symmetry. I'll push the fix soon.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-202110158:137,down,down,137,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-202110158,1,['down'],['down']
Availability,This error may be of concern to @fevangelista.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1521#issuecomment-460654747:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/pull/1521#issuecomment-460654747,1,['error'],['error']
Availability,"This example came up on the forum the other day: http://forum.psicode.org/t/spectrum-function-tddft-giving-error/2327. Just want to mention a few things in case someone sees this first. As mentioned in the comments of that thread, the keys for the dictionary in <code>res</code> appear to have changed:. * LENGTH-GAUGE ELECTRIC DIPOLE TRANSITION MOMENT → ELECTRIC DIPOLE TRANSITION MOMENT (LEN); * LENGTH-GAUGE ROTATORY STRENGTH → ROTATORY STRENGTH (LEN). those keys work for me with Psi4 1.4 (Git: Rev {HEAD} 9485035). The example also states that the function returns a pair of NumPy arrays. The <code>spectrum</code> function now returns a dictionary with the keys ""convolution"" and ""sticks"" for the different peak types. The values of these are dictionaries with keys ""x"" and ""y"" for ""convolution"", and ""poles"" and ""residues"" for ""sticks"". . The example shows squaring the norm of each dipole transition moment. However, the <code>spectrum</code> function appears to <a href=""https://github.com/psi4/psi4/blob/e06763b09cf3ffe047b18eed04d738711d5ef587/psi4/driver/p4util/spectrum.py#L375"">square the residues for <code>kind == ""opa""</code></a>. I don't think both squarings are necessary, but I'm not sure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2108#issuecomment-947293809:107,error,error,107,https://psicode.org,https://github.com/psi4/psi4/issues/2108#issuecomment-947293809,1,['error'],['error']
Availability,"This has compatible pcmsolver and snsmp2 versions now, so I'll merge it after CI unless there are concerns. There's still a problem sometimes running pcm by API and in parallel, `npz_save: header read error`, but this PR is still a step in the right direction, as one couldn't run sequential pcm by API before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-748568654:201,error,error,201,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-748568654,1,['error'],['error']
Availability,"This is a Davidson error. Looks like as soon as the norm of the correction vector gets small enough an instability occurs causing a non-variational energy. Very hard to debug and/or fix. Dividing small numbers by small numbers is always tricky. If you are just after the energy (the only things the current CI code can do at the moment) the simplest option is to reduce your CI convergence threshold to something reasonable like `r_convergence 1.e-4` . You can also try setting `hd_avg hd_exact` in your settings. . Also, something like this really belongs on the [Psi forums](http://forum.psicode.org/latest).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/448#issuecomment-235024888:19,error,error,19,https://psicode.org,https://github.com/psi4/psi4/issues/448#issuecomment-235024888,2,['error'],['error']
Availability,"This is a different error @ataube59. This is not a coded exception (planned fail) but a segmentation fault because of a bug. Those cannot be caught. The `optking` module responsible will be replaced with a python-based version ""soon"" (https://github.com/psi-rking/optking, already usable if you install it manually) where I think dimer optimisation should work better. Obligatory ping to @AlexHeide @psi-rking for a test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/issues/2080#issuecomment-764476988,6,"['error', 'fault', 'ping']","['error', 'fault', 'ping']"
Availability,"This is a great upgrade in current and future use and robustness! My only suggestion is to moderate the requirement of an initial gradient before a frequency computation. I grant that the additional cost of a gradient is likely to be moderate-to-negligible (though if one were computing, e.g., only one irrep of displacements it could be significant). However, the workflow of ""opt + freq"" is so very common, that it's worth it to at least provide an easy way to avoid this extra computation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834#issuecomment-380206803:54,robust,robustness,54,https://psicode.org,https://github.com/psi4/psi4/pull/834#issuecomment-380206803,1,['robust'],['robustness']
Availability,This is a known issue with the Intel compiler and gcc 5+ header files. Even the latest Intel version 16.0.1 is affected. NERSC advises loading in gcc 4.9.x series. References:; [Intel Forum](https://software.intel.com/en-us/forums/intel-c-compiler/topic/565143); [Intel Fourm](https://software.intel.com/en-us/forums/intel-c-compiler/topic/591174); [NERSC](https://www.nersc.gov/users/software/compilers/intel-fortran-c-and-c/intel-bug-reports/intel-c-compiler-error-stl-iterator-base-types-h/),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262#issuecomment-185230186:461,error,error-stl-iterator-base-types-h,461,https://psicode.org,https://github.com/psi4/psi4/issues/262#issuecomment-185230186,1,['error'],['error-stl-iterator-base-types-h']
Availability,"This is a pretty odd error. Examining the Hamiltonian built by RSP is fine; however, if you diagonalize it with Mac Accelerate I get your `RSP` result while using MKL DSYEV I get the `SEM` result. The eigenvalues are fine, just looks like something is going wrong with the eigenvectors.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/558#issuecomment-271454361:21,error,error,21,https://psicode.org,https://github.com/psi4/psi4/issues/558#issuecomment-271454361,1,['error'],['error']
Availability,"This is a quick script exported from Jupyter to animate vibrational modes from Psi4. It uses py3Dmol and takes in dressed xyz files. The script shows how to turn psi4's exported results into the dressed xyz files. I should write something so the format is available directly. Or this’d be a nice opportunity for a jupyter widget, which @armcdona might try. And @fevangelista has a widget for vib vector arrows that could probably be animated. ```; #!/usr/bin/env python; # coding: utf-8; ​; # In[ ]:; ​; ​; # note the capital ""D"". obtain by `conda install py3dmol -c conda-forge`; import py3Dmol; print(py3Dmol.__version__); ​; ​; # In[ ]:; ​; ​; # run an optfreq calc and write the vibrational analysis to disk in a "".vibrec"" file; ​; # molecule h2odim {; # O -1.551007 -0.114520 0.000000; # H -1.934259 0.762503 0.000000; # H -0.599677 0.040712 0.000000; # --; # 0 1; # O 1.350625 0.111469 0.000000; # H 1.680398 -0.373741 -0.758561; # H 1.680398 -0.373741 0.758561; # units angstrom; # }; ​; # set basis sto-3g; # set e_convergence 9; # set g_convergence gau_verytight; ​; # optimize('mp2', molecule=h2odim); ​; ​; # e, wfn = freq('mp2', molecule=h2odim, return_wfn=True); ​; # set hessian_write on; # vibanal_wfn(wfn, molecule=h2odim); ​; # # A. print all the vib-related info from original `e, wfn = freq()` call; # for k, v in wfn.frequency_analysis.items():; # print(v); ​; # # B. `set hessian_write on` above wrote all the vib- & thermo-related info from last analysis.; # # now, print all the vib- & thermo-related info from that file; # with open(core.get_writer_file_prefix(h2odim.name()) + "".vibrec"") as handle:; # import json; # jsondata = json.load(handle); # jsondata = {k: (v if k in ['molecule', 'hessian'] else json.loads(v)) for k, v in jsondata.items()}; ​; # for k, v in jsondata.items():; # print(k, v); ​; ​; # In[ ]:; ​; ​; import json; with open(""freq_demo.h2odim.6436.vibrec"") as fp:; vibs = json.load(fp); ​; ​; # In[ ]:; ​; ​; # See all the vibrational analysis contents; v",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2920#issuecomment-1509020131:256,avail,available,256,https://psicode.org,https://github.com/psi4/psi4/issues/2920#issuecomment-1509020131,1,['avail'],['available']
Availability,"This is actually a PyBind11 version error. It doesn't appear that our CMake is detecting the discrepancy. Please blow away your objdir and recompile from scratch. . -Daniel Smith; Sent from my iPhone. . > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > ; > After a recent git pull, psi4 failed to compile. It seems that the error was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi so all Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile.; > ; > If it helps, I'm running Ubuntu, with gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mint",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,4,['error'],['error']
Availability,"This is also happens on Linux!. `master` (b51ecbca2dfef69d69d2fc4e7ebee54ed6859431) compiled with the address sanitizer (`-DENABLE_ASAN`) finds an overflow on the same line, while running `casscf-fzc-sp` and the others:; ```; $ LD_PRELOAD=/shared/raimis/opt/miniconda/envs/psi4/x86_64-conda_cos6-linux-gnu/sysroot/lib/libasan.so.4.0.0 ctest -R ""^casscf-fzc-sp$"" --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 3: casscf-fzc-sp; 1/1 Test #3: casscf-fzc-sp ....................***Failed 27.28 sec; =================================================================; ==10081==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030003bc668 at pc 0x7f28e2c1b07c bp 0x7ffdf8287a00 sp 0x7ffdf82879f8; READ of size 4 at 0x6030003bc668 thread T0; #0 0x7f28e2c1b07b in psi::IntegralTransform::process_spaces() /home/raimis/psi4_2.git/psi4/src/psi4/libtrans/integraltransform_moinfo.cc:278; #1 0x7f28e2bc18ba in psi::IntegralTransform::initialize() /home/raimis/psi4_2.git/psi4/src/psi4/libtrans/integraltransform.cc:272; #2 0x7f28e2bdfa02 in psi::IntegralTransform::IntegralTransform(std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix>, std::shared_ptr<psi::Matrix>, std::vector<std::shared_ptr<psi::MOSpace>, std::allocator<std::shared_ptr<psi::MOSpace> > >, psi::IntegralTransform::TransformationType, psi::IntegralTransform::OutputType, psi::IntegralTransform::MOOrdering, psi::IntegralTransform::FrozenOrbitals, bool) /home/raimis/psi4_2.git/psi4/src/psi4/libtrans/integraltransform.cc:195; #3 0x7f28dbecd5ad in psi::detci::CIWavefunction::setup_mcscf_ints() /home/raimis/psi4_2.git/psi4/src/psi4/detci/ints.cc:360; #4 0x7f28dbdc38d5 in psi::detci::CIWavefunction::init_mcscf_object() /home/raimis/psi4_2.git/psi4/src/psi4/detci/ciwave.cc:626; #5 0x7f28dbdceeff in psi::detci::CIWavefunction::mcscf_object() /home/raimis/psi4_2.git/psi4/src/psi4/detci/ciwave.cc:655; #6 0x7f28d97a0389 in pybind11::cpp_functio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756:374,failure,failure,374,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,"This is damping, not level shifting. This keyword should be renamed. To give you some perspective on how severe these convergence problems are, for the test case I gave, which is in the Psi test suite:; No damping: 16 iterations; 0.01 damping: 38 iterations; 0.02 damping (default): 53 iterations. So we've made convergence **three times harder** to achieve in this example. Have you seen many cases where this damping is necessary or helpful to converge? Otherwise, I agree with Lori about turning this off by default. For future reference:; Eq. 5 of the paper has a sign error: the - needs to be a + in order for minimizing to favor a solution where c_i^2 B_ii small, which should prevent individual c coefficients blowing up. The (1+d) rule in the paper is correct, as is the Psi implementation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1777#issuecomment-571668983:573,error,error,573,https://psicode.org,https://github.com/psi4/psi4/issues/1777#issuecomment-571668983,1,['error'],['error']
Availability,This is error after updating to PSi4 278:; error while loading shared libraries: libifport.so.5: cannot open shared object file: No such file or directory. But I think it can be overcome by adding intel lib into PATH. Thank you Loriab.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/154#issuecomment-126179884:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/154#issuecomment-126179884,2,['error'],['error']
Availability,"This is great; I really like that you've addressed the inconsistency between CI and CC, which I didn't notice before. The scheme in your last message looks good to me. I think that numbering the first excited state `1`, and the second `2`, _etc._ makes the most sense, for obvious reasons. Zero basing the excited states would lead to an off-by-one error in the cardinal and ordinal notation. LGTM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260098726:349,error,error,349,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260098726,1,['error'],['error']
Availability,"This is ready for review. For our DLDF test case the overall timing went down from 52 to 28 seconds. We are still spending ~11 seconds transposing our grids, eliminating this could push the time down to ~17 seconds. Hybrid DFT K cost will swamp these changes at larger sizes, but for small computations or GGA you should see quite a bit of benefit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/869#issuecomment-350035658:73,down,down,73,https://psicode.org,https://github.com/psi4/psi4/pull/869#issuecomment-350035658,2,['down'],['down']
Availability,"This is ready for review. I doubt I will get VV10 gradients in this PR as it will need a deep overhaul to the MolecularGrid class. Currently, if we can fit all of JK in memory everything else is given over to collocation blocks. Otherwise up to 10% of available memory is given to collocation block caching. Caching is likely more advantageous than more JK memory, but this is a hard line to find. I also removed the 80% overhead filter in DFHelper as I do not think it needs to be there after poking through the code and converted JK MB -> MiB to be a bit more canonical.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-419740905:252,avail,available,252,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-419740905,1,['avail'],['available']
Availability,"This is ready for review. With my latest changes:; - The user specifies a number of roots to seek to converge. If the system has symmetry, we spread them around among the irreps. For example, 10 roots in C2v means `[3, 3, 2, 2]` in whatever order the irreps are for the given system. To have more granular control over what symmetries to seek roots in, the user can pass a list: `[10, 0, 0, 0]` will seek the 10 roots in the totally symmetric irrep.; - Option for triplets is now passed down to the solver correctly. `""none""` is the default (singlet roots only); `""also""` will compute as many singlet roots as triplet roots, so this makes the calculation cost twice as much (at least). Notable limitations:; - restricted triplets: RPA or TDA, Hartree-Fock only. Notes in code state that the XC kernel is only spin-adapted for singlets.; - unresctricted: RPA or TDA, Hartre-Fock and LDA only. Notes in code state that there is a bug for UKS beyond LDA, but aren't more specific than that. I am waiting on #1885 to be in to write docs. An example of PsiAPI usage:; ```python; import psi4. from psi4.driver.procrouting.response.scf_response import tdscf_excitations; from psi4.driver.p4util import spectrum. psi4.core.set_output_file(""moxy.out""). # structure from Pederson et al., CPL, submitted; moxy = psi4.geometry(""""""0 1; C 0.152133 -0.035800 0.485797; C -1.039475 0.615938 -0.061249; C 1.507144 0.097806 -0.148460; O -0.828215 -0.788248 -0.239431; H 0.153725 -0.249258 1.552136; H -1.863178 0.881921 0.593333; H -0.949807 1.214210 -0.962771; H 2.076806 -0.826189 -0.036671; H 2.074465 0.901788 0.325106; H 1.414895 0.315852 -1.212218; """""", name=""(S)-methyloxirane""). psi4.set_options({; 'save_jk': True,; }). method = 'HF'; basis = 'cc-pVDZ'; e, wfn = psi4.energy(f""{method}/{basis}"", return_wfn=True, molecule=moxy); res = tdscf_excitations(wfn, states=8, triplets=""also""). from typing import Tuple, Dict. import numpy as np; import pandas as pd; import altair as alt. def plot_spectrum(data: Dict,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-632666226:487,down,down,487,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-632666226,2,['down'],['down']
Availability,"This is really not a very large calculation – even the <ab|cd> integrals only need 1.26GB of storage – so the apparent memory errors don't make sense. I can try to reproduce the error on my systems, but I wonder if the behavior would change if you asked for less memory – say 4GB?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1245993701:126,error,errors,126,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1245993701,2,['error'],"['error', 'errors']"
Availability,"This is the first DFJKGrad after the first SCF. I just updated my branch to master, and still see the same error arising from line 461 in `jk_grad.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086:107,error,error,107,https://psicode.org,https://github.com/psi4/psi4/issues/2010#issuecomment-697269086,1,['error'],['error']
Availability,This is the output of conda list with p4dev activated.; [listresult_p4dev.txt](https://github.com/psi4/psi4/files/2576467/listresult_p4dev.txt). The same errors occur when running the psi4-path-advisor without --gcc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-438271263:154,error,errors,154,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-438271263,1,['error'],['errors']
Availability,"This is what I do for my Catalina build with gcc9/mkl against conda python+libraries. . a) get `psi4-dev psi4-rt psi4 -c psi4/label/dev` from conda (conda psi4 binaries plus dependencies to build from source); (`conda remove -f v2rdm_casscf` because it gives symbol errors); b) `export PATH=/Users/kruse/homebrew/bin:$PATH` for my homebrew gcc-9; c) run the below script (This is what `psi4-path-advisor` gave me plus making sure the correct compilers are used, plus a custom installation dir. Since recently I also have to turn of 2 default plugins because of symbol problems `-DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF`, might not be necessary for everyone). ```; #!/bin/bash; export MKLROOT=/Users/kruse/qc/miniconda3; rm -rif objdir; /Users/kruse/qc/miniconda3/bin/cmake -H. -C/Users/kruse/qc/miniconda3/share/cmake/psi4/psi4DepsCache.cmake -C/Users/kruse/qc/miniconda3/share/cmake/psi4/psi4DepsMKLCache.cmake -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9 -DCMAKE_Fortran_COMPILER=gfortran-9 -Bobjdir -DCMAKE_INSTALL_PREFIX=/Users/kruse/qc/psi4.bin -DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615249317:266,error,errors,266,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615249317,1,['error'],['errors']
Availability,"This is... a complicated one. As far as I can tell, there are multiple issues here:. 1. Are there any other ways SAPT can detect non-SPD MO hessians? This would have caught the error with the SAP file.; 2. Why did the SAP_stability not detect an instability in the second case? If it's genuinely stable, there's not much we can do. This may be a failing in the Davidson solver.; 3. Instability following should be changed to use an exponentiation rather than Givens rotation.; 4. SAPT should detect disturbingly large delta HF energies and warn the user that the results are suspicious. The error message should also be clarified, but that's #1682.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1747#issuecomment-870076604:177,error,error,177,https://psicode.org,https://github.com/psi4/psi4/issues/1747#issuecomment-870076604,2,['error'],['error']
Availability,"This issue has a bit more to it than just removing the line Andy mentioned. The computation dies due to `'psi4.core.variable: Requested variable BRUECKNER CONVERGED was not set!\n'`, rather than the fact that convergence failed. Is there a standard way to represent a convergence error, C-side? `dct` and LMP2 in `cc` throw `ConvergenceError`, failure during an orbital-optimized `occ` computation gets you a generic `PSIEXCEPTION`, and I haven't checked other things.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1864#issuecomment-628803661:280,error,error,280,https://psicode.org,https://github.com/psi4/psi4/issues/1864#issuecomment-628803661,2,"['error', 'failure']","['error', 'failure']"
Availability,"This looks fantastic - great work! I am fully in favor of pulling it in, as long as we're certain it's not the source of the seg fault.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222883780:129,fault,fault,129,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222883780,1,['fault'],['fault']
Availability,"This looks like a mismatch in the tolerance used to figure out the point group and the tolerance being used within the optimizer. For the HOOH case, adding `symmetry c2` to the molecule specification should be a simple workaround. Also, you can use `SCF_Energy = psi4.get_variable('CURRENT ENERGY')` to avoid running an extra energy calculation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-201451437:34,toler,tolerance,34,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-201451437,4,['toler'],['tolerance']
Availability,This might actually be our fault. While @xwang862 was coding up DF-ODC12 method he ran into issues with the libtrans file being left around and I added code to delete it in the destructor. I'll comment my changes and see if that fixes it and then I'll have @xwang862 modify his code accordingly. I never intended this to stay in our local version.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178821679:27,fault,fault,27,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178821679,1,['fault'],['fault']
Availability,"This might be a holdover from some tests Rob Parrish did? If I recall; correctly, the biggest holdup to pseudospectral implementation is that one; needs special grids, which are not generally publicly available. On Sat, Feb 22, 2020 at 1:15 AM Susi Lehtola <notifications@github.com>; wrote:. > I'm looking at; >; > https://github.com/psi4/psi4/blob/31219187caa9e8736b3323b078324f85d8c9cd6f/psi4/src/read_options.cc#L1612; >; > which indicates the pseudospectral method is implemented, but only for; > CPHF. However, although I can find the integrals in libmints, I'm unable; > to see where the code is called.; >; > I was thinking that if one-electron integrals are now faster (related to; > PCM?), implementing a seminumerical exchange algorithm should be relatively; > straightforward. It might be really beneficial in Psi4 since although RI is; > really fast, exact integrals are quite slow at present, which is a problem; > for e.g. benchmark calculations that would be feasible with a seminumerical; > approach.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1818?email_source=notifications&email_token=AAXVA5W3GNAG3GBCVIBKXCDREC7JNA5CNFSM4KZO5AEKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPOVMXA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5UHRR5HOSMLNRKHRBTREC7JNANCNFSM4KZO5AEA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1818#issuecomment-590391052:201,avail,available,201,https://psicode.org,https://github.com/psi4/psi4/issues/1818#issuecomment-590391052,1,['avail'],['available']
Availability,This pull request **fixes 1 alert** when merging 2b7850eeeb1dc8d025e15d68ea6b2349acc8cbad into 1295e778bfeb6f03d3dc594cbbfd79fe7b19f93e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d2be110d7ae94dbcc4973fbdc5a098a0880f12e9). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-633650674:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-633650674,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging 2d2c8cd002229f90176b3d930e2c28714de7e079 into c9b79fb016d8e3b09e8dd980093da576d06ce03d - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-254cf1d1e2f779ca42d4f2d520a4a6cad494a4eb). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-633934735:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-633934735,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging 643451ec8104ee345521b0675147a520ee43629b into 58d3bc0ae55d3affca9c75c80126be08d610915c - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-0b919987994ea1b1be45839c560908e938a58255). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-638313947:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-638313947,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging 748bae92d70cf0e19af497f556068be7c3721f34 into 1295e778bfeb6f03d3dc594cbbfd79fe7b19f93e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-5beb9c3620c1b55e8eb5ef7829a2c59d0d407612). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-632829864:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-632829864,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging ae77767cd65e9001c9e56fcde7c5bf4abab27e9a into ea5b5eb71ab65469629b345d78fe6e7b1a5a34fa - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-c491159b4fb95f1b6ad5ec2471c7b5a6e28e9015). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-634678153:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-634678153,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging d232b91fae696c3e5ff52e092ac2bc3b19dfe35b into 741f46ea0bf7a3591988040538589eecaa8f0ab8 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-a1910976e51a18d568b90d9aca9fd67f7b151905). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-641954616:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-641954616,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging e82cd637a7bbb2a0ab9613f5df07b79d5fe14555 into ea5b5eb71ab65469629b345d78fe6e7b1a5a34fa - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-ce8ad6faf1c1497dbd02ae59bfe7b34ffe12cffa). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-634552573:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-634552573,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging eb0938024a80785ce5a99f1491a2be2f0a5548dd into 66da0fea4b3dbab319b6b517fca0a3983256781f - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d746dd3b769b758b7085d20f4fd85ed38912269d). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-635267517:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-635267517,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging f55573bde60e561ca64f5e5aeddb5f61dd41d371 into 1295e778bfeb6f03d3dc594cbbfd79fe7b19f93e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-e3da07fa43c3dda1694d8fb758216fe82b3a6579). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-633024058:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-633024058,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 1 alert** when merging f715e11e174760f3415ced1b6fff154ed5d9ce3c into 1295e778bfeb6f03d3dc594cbbfd79fe7b19f93e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-66d8003b5900a07ff0545b9c739c7ba5c7a56ea1). **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-632722306:272,Redundant,Redundant,272,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-632722306,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 0949406d24c3a58b269c260eef7307c4a3fa0ecb into 08b06b45b0f2efaa9d6a04e31eec04e575252e78 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-408feb738b27e0191da3dcc7821bc3329b691950). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-652931619:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-652931619,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 0a831d55b0279a3994e266e8be57b0c40282afdc into 08b06b45b0f2efaa9d6a04e31eec04e575252e78 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-35d47f355c035e2c7831af16a00367c164707166). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-652525590:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-652525590,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 26dd489b730d6192edaec19d716bd118288b2761 into 7fd0f72094fec0e74944fe3f66ebdd0f69750dcd - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-3e243df6c568db8e3fb5c827f875da7df7629608). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644751262:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644751262,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 2e4489cc2418b61564026101d6565950833492d9 into 08b06b45b0f2efaa9d6a04e31eec04e575252e78 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-0426279eb5b6e50edb1b6f56ac45cccedd202f76). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-651333350:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-651333350,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 319e8ae23f1af15a0e12b22aa2f3c59f4763fd28 into 26bae16efac9e3bd212a7433def625f370fb9a17 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-494b3553ec0f3442315c9d0f11847e9f40d0f7f3). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-653467444:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-653467444,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 59f9232b2dcdb5b83df6e799aab9781dc7400ec0 into 9a2de04698459b23e55df5f582873fcff9b9a320 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b10a9d0172ee67a707b5e4730ed0a64843867e5a). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-645669096:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-645669096,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 886f6f2c3bb882a600f22d42fe55683417408405 into 5f1a24a8b6b77b0d368cd434c0584f027a28d975 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-6e817128cb8d64d1e00edc7bd75efa82e352418d). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-643662031:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-643662031,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging 90d1421addd3d748d40a0d2ca5d603c4e00ee439 into 2b2c8bc97d85ca42187ce33555c58a1a281213ca - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-8b0108d7532de3a536fd291df05b83ed13f5e8a2). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-655675838:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-655675838,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging a2046e3cf4e86590471f2507d714a9e713e47ffa into 1cf7468090b1e0432811ff55811a380ea9469cb3 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-10e94c75ac5916bddaeb30d709d3e42401046033). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-650202722:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-650202722,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging b907a23b7fc19b0f53df66237412be4ffa936d38 into 7fd0f72094fec0e74944fe3f66ebdd0f69750dcd - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-14201e7d5a09c3b6d04c364e80720d8cae55b372). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-645294586:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-645294586,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging c04bf332addc72cf7d17f710b9ebf9046e67745d into 7fd0f72094fec0e74944fe3f66ebdd0f69750dcd - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-cd35c8eb5ac96c8f187051a362c86e3042b4139a). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644908614:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644908614,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging e8a99524a098b99c215ea9c9fd0d9f2b81fd5f9b into 7fd0f72094fec0e74944fe3f66ebdd0f69750dcd - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-485d0633a6e802d5dead0de11395e4fd055349fb). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644301799:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644301799,1,['Redundant'],['Redundant']
Availability,This pull request **fixes 3 alerts** when merging ebe0f4e9884c91bd725e8bcdb4b49447bb18b85f into 90403ec0e424a296679aa5533afec8b8cbd4d1af - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-010d589fd9aa17b4699886375c9ee1ac5e7ce0cd). **fixed alerts:**. * 2 for Unused local variable; * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-653239861:304,Redundant,Redundant,304,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-653239861,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 1 alert** and **fixes 1** when merging bbaeafca76f0b8f0657f63704be6c24c774151d2 into 9701d609c0aaeba5b5e905e641d79d38a8eb56f2 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-af9d090bb28f72b3456f9ecc4bacbd1194bf0e45). **new alerts:**. * 1 for Unused local variable. **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-631617323:341,Redundant,Redundant,341,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-631617323,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 1 alert** and **fixes 2** when merging 29961b2d54eba96b9cc3688900e512db98e834a6 into c05d38b04dc8500c1cd9f92e5f313bebac15e219 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-f2d58b3d379a82a33b29490be79a38a91a155f49). **new alerts:**. * 1 for Unused local variable. **fixed alerts:**. * 1 for Redundant comparison; * 1 for Unused local variable,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-642811449:341,Redundant,Redundant,341,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-642811449,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 1 alert** and **fixes 2** when merging 7c8a11e8026796d6beb1437a7a6ae831d41b75d8 into 958c81a54c7ca5e6277622694258ca9db8b07f48 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-5db3262e4803037cc6c2295e50baa99c3de7fa5b). **new alerts:**. * 1 for Syntax error. **fixed alerts:**. * 1 for Unused local variable; * 1 for Unused import,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1951#issuecomment-656736060:298,error,error,298,https://psicode.org,https://github.com/psi4/psi4/pull/1951#issuecomment-656736060,1,['error'],['error']
Availability,This pull request **introduces 1 alert** and **fixes 2** when merging ee3a8859e70fc6da96a6e2af833b11956aa85a97 into e0b780daa5e75cb07e1b44c47db560a3f4c6474c - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-268701b010d44f775457db29bf9e88aa6e935f53). **new alerts:**. * 1 for Syntax error. **fixed alerts:**. * 1 for Unused local variable; * 1 for Unused import,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1951#issuecomment-656856825:298,error,error,298,https://psicode.org,https://github.com/psi4/psi4/pull/1951#issuecomment-656856825,1,['error'],['error']
Availability,This pull request **introduces 1 alert** when merging 00c99bedcaa1ba87381865f428c43f1c44f7002d into 26bae16efac9e3bd212a7433def625f370fb9a17 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-5247ab5369215bab32e5264252af3c7482cf66ad). **new alerts:**. * 1 for Redundant assignment,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1942#issuecomment-653934319:275,Redundant,Redundant,275,https://psicode.org,https://github.com/psi4/psi4/pull/1942#issuecomment-653934319,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 1 alert** when merging bbd3aa3412ea20ff2ef9d729e5d2e26409416b36 into 26bae16efac9e3bd212a7433def625f370fb9a17 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-2458a2c1817707b15be6f2e2b716336bb481d859). **new alerts:**. * 1 for Redundant assignment,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1942#issuecomment-653816223:275,Redundant,Redundant,275,https://psicode.org,https://github.com/psi4/psi4/pull/1942#issuecomment-653816223,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 10 alerts** and **fixes 13** when merging 9365dbd41720e192dbe03ab0e9474902891183bd into dfb86f51bf3dc22740b0ef4ce65b85b7baab1f5b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b55a2cb86c8654bc9e7edabc9f99d1cf47a6fac9). **new alerts:**. * 6 for Unused local variable; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Unused import. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-553714229:332,error,error,332,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-553714229,1,['error'],['error']
Availability,This pull request **introduces 13 alerts** and **fixes 13** when merging 5e2c48cd569e99f6d69c602d505bcf0c22d0a38d into dfb86f51bf3dc22740b0ef4ce65b85b7baab1f5b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-038c4af8cc842894db7a66841ed9c33b811a8944). **new alerts:**. * 7 for Unused local variable; * 3 for Unused import; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-552755151:355,error,error,355,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-552755151,1,['error'],['error']
Availability,This pull request **introduces 2 alerts** and **fixes 1** when merging 1b5210dbe737c9ac457492d53ff84b354cfc7f7a into 1295e778bfeb6f03d3dc594cbbfd79fe7b19f93e - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-c14a24ebff769e8beefb4fd5c8030e03aa18477c). **new alerts:**. * 2 for Unused local variable. **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-632603458:342,Redundant,Redundant,342,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-632603458,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 2 alerts** and **fixes 1** when merging 9b95c9a47cfe0cf8c58856d9dac9438954f03aa6 into 48958305338231540da2d23670a0b396289ac52a - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-a6422872aa19929786271260d5be4c41a2b6237f). **new alerts:**. * 2 for Unused local variable. **fixed alerts:**. * 1 for Redundant comparison,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-632142335:342,Redundant,Redundant,342,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-632142335,1,['Redundant'],['Redundant']
Availability,This pull request **introduces 2 alerts** when merging 47c3cc1af0158385df55f18aeb7b51bce90d2c34 into 51199f8b721b607e35bfae37de94dce9582b4f8b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-dd4848330cf26f526f6c00dfbd180989cd4eb579). **new alerts:**. * 1 for Unused import; * 1 for Syntax error,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-571963453:306,error,error,306,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-571963453,1,['error'],['error']
Availability,This pull request **introduces 23 alerts** and **fixes 14** when merging 5c73c7429782f5bd5c917a5f5a3a6c13d4135db8 into 2edf6b752ba5f8052af7cc2347052e681e16a7ab - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-f3e6464c14983b28d46a1154ee3932155223883e). **new alerts:**. * 14 for Unused import; * 7 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;. ---. *Comment posted by [LGTM.com](https://lgtm.com)*,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-495811312:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-495811312,1,['error'],['error']
Availability,This pull request **introduces 23 alerts** and **fixes 14** when merging e11bb214d47c01c61b0b73aa4e50471b82fa9ca4 into d4681c9689cd58006f656c083401283a539a61f4 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-0953359b6cba1590b435ecea0707064602a0dc59). **new alerts:**. * 14 for Unused import; * 7 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-505652250:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-505652250,1,['error'],['error']
Availability,This pull request **introduces 24 alerts** and **fixes 14** when merging 7483ceb56b8da355509dba28c43cb8a3e41786fe into d7529df57c2815cfb43a88d9b739c94c3a2322c4 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-11c2650bf34ba516f9ddee5a91923598ad4a617e). **new alerts:**. * 14 for Unused import; * 8 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-525543922:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-525543922,1,['error'],['error']
Availability,This pull request **introduces 24 alerts** and **fixes 14** when merging 8c0afe6ba300b94768102920f9a57dfefb496186 into 6e6752949022c5cc61953a9cff384220ae80feda - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-28eeb05962093199f3c0e2dae6e3773b48edb740). **new alerts:**. * 14 for Unused import; * 8 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-512959967:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-512959967,1,['error'],['error']
Availability,This pull request **introduces 24 alerts** and **fixes 14** when merging ad8546ed1e2e7385542e9c2f32ab37f7fe8ae5de into d7529df57c2815cfb43a88d9b739c94c3a2322c4 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d2f047dc32def206d8265b7cfe1f8042f534899c). **new alerts:**. * 14 for Unused import; * 8 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-524469488:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-524469488,1,['error'],['error']
Availability,This pull request **introduces 24 alerts** and **fixes 14** when merging d31ce07cd88b218a003bb4bd62feb27e8fdb5d6c into b789aa3986441f7f0875f39ace6618e54437a4aa - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-86ce69b1d0cf35d95348cc61bfb35da2158b42ed). **new alerts:**. * 14 for Unused import; * 8 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Syntax error. **fixed alerts:**. * 5 for Unused local variable; * 5 for Unused import; * 3 for &#39;import \*&#39; may pollute namespace; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-520681717:410,error,error,410,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-520681717,1,['error'],['error']
Availability,This pull request **introduces 28 alerts** and **fixes 13** when merging bc9009a38f14c7bf07d3954c8e6733996c7183cc into dfb86f51bf3dc22740b0ef4ce65b85b7baab1f5b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b8ef5304b94a59fe306f4bb821fe5bb601aecefc). **new alerts:**. * 17 for Unused import; * 8 for Unused local variable; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-552054076:356,error,error,356,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-552054076,1,['error'],['error']
Availability,This pull request **introduces 3 alerts** and **fixes 35** when merging 5cdb0aac52477b199271a52a1e269fd1bc7587ba into 469e60268a1d9ec73502c40b4c4bcb07ed4527e0 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-a92e22e7909909388abb7b6c40655cb128965e2e). **new alerts:**. * 1 for Unused local variable; * 1 for Syntax error; * 1 for Variable defined multiple times. **fixed alerts:**. * 29 for Module\-level cyclic import; * 4 for &#39;import \*&#39; may pollute namespace; * 1 for Unused import; * 1 for Unreachable code,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1738#issuecomment-545163931:331,error,error,331,https://psicode.org,https://github.com/psi4/psi4/pull/1738#issuecomment-545163931,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 079713754ba1bea52958d5ae051c110d66aad4c0 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-ccf27b30dc1cde3841ea61e115ee6ea17b1b6962). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-565668634:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-565668634,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 3f44f26065b607a11b59752c6aa75a728983e1e9 into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-09189b6f38daf16b3d19b91cfa42540df2c87ad1). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-556940111:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-556940111,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 510ffb12356a90c20c40095e1825c0d2417ce48a into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-e8e53c6a12f721f07019f8d8807397848b17e183). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-556468532:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-556468532,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 541118f85c6de69318c6d69dab97c6fe6b33e6c5 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-3d3b5f159a7cf84416a30ddf0e4adb8f963fb49e). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566045322:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566045322,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 5ef316e99d35fb201d64d8cafdf8e1b89c7ad1b3 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-f5c2513aa7e0109b3faa0fd1710bc759b30973df). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-565868980:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-565868980,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 5f20f7c0f99ea4fe89892aca1e1f6cfc1b5b8aae into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-070f5ed99b121820cfcbad1c600f61e49f5a51c3). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-557379531:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-557379531,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging 97263dcf4d1c37b0cffac76321b0f89d28e8ada1 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-80a81ff67f598b9106331cdf03cbc5ca0daa53d9). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-565842567:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-565842567,1,['error'],['error']
Availability,This pull request **introduces 4 alerts** and **fixes 13** when merging bfbc7a55ba07fc0d09177988a8b3cde45001af39 into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-5b8e0e5be109138b62bee49d348217be2a41e695). **new alerts:**. * 2 for Syntax error; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-557205930:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-557205930,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 0a8cf8bea7a5b64c7c5de9f1f130a8e7d7e08233 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-2b65dc92e25fb18ef5b4e365b6f0582ec8db392f). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566297630:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566297630,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 324bd969bf69170c4983693ea82883cbbcc9c9d7 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-0a791152ab53f3b656ffb2ec8d71822021a63831). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566876000:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566876000,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 45f19943f3b7b98ba0e75d13e417b22802220502 into 3f67827b65cea245080d46e6b474e24736109622 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-7fc19e6a1deeabc659c9a784e6ad3d09a50c570d). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567273376:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567273376,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 56def841cb756b5b8491722bf01e151ae3fad3f9 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-3bf89b9ceb2797cd0fee9e548f4b3a06fedc0f1a). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567069654:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567069654,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 61fa6f4ec5198b93be03e537b86cccbce12fe4f8 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-35141f06d7ab9bc69dab347f0f36d8e50fa5e040). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566354046:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566354046,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 646483f880e1b74d4c81ddd451d7ff913fd5b607 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d502d1e834edd3b680de16233a9dd8167ec070e5). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566848867:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566848867,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 6c6fab442411f922ddd3e3dcdeb58e74ee5b5742 into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-192dfec46bd41967ba8208516e1a61a4c038ba5c). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567153929:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567153929,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 741a531854eb567bbe06b664979bd0e7a139e8af into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-eba4b70f38cb6e74ef599f35aa11e7dceb5ce69e). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566797894:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566797894,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 7a9386b6a37aceb5ae41eb98dd85d41bed1f4164 into 3f67827b65cea245080d46e6b474e24736109622 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-d1fd0455c7fe0a2642848c7f142c9c5468716a01). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567759589:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567759589,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 7cf1d6742cf4a9aca2fa1de828f4993e8b8d331d into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-2e1756429a66f786987d4b6b63826bfb4904e665). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566425536:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566425536,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging 89f07b89989685cfa258db7c81b3bcccb58e57ec into 3f67827b65cea245080d46e6b474e24736109622 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-4af42a016ee83f37da910b36571de45eaeec254f). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567281883:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567281883,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging c050e6c2615a139510bebad5602d21b1c87655a7 into 3f67827b65cea245080d46e6b474e24736109622 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-369b730fc0dd348d910e30e2b7d9ceaebfbaae89). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-567340678:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-567340678,1,['error'],['error']
Availability,This pull request **introduces 5 alerts** and **fixes 13** when merging c118c3c4bc2648a145776ef2591e0a099f36b48d into 9a646796972a6b69f0102d696c3ca7a978c99df6 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-30533b536131e08a97135b0ba71eed277a0899a3). **new alerts:**. * 2 for Syntax error; * 1 for Unnecessary pass; * 1 for Unused local variable; * 1 for Except block handles &#39;BaseException&#39;. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-566213689:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-566213689,1,['error'],['error']
Availability,This pull request **introduces 8 alerts** and **fixes 13** when merging 0738f376f41981e12d7e5dd7c0d27b5975e607bc into dfb86f51bf3dc22740b0ef4ce65b85b7baab1f5b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-b08dc1a4d799c67b2ee234db2e6c3aa98cfe55a1). **new alerts:**. * 4 for Unused local variable; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Unused import. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-554120132:331,error,error,331,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-554120132,1,['error'],['error']
Availability,This pull request **introduces 8 alerts** and **fixes 13** when merging affe266aee566fd56755c634c48aae6fa38f02bf into e135e6b688bbc6c56077716b4577dbfd66b45c15 - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-9b52a4fc96a47dee0570700aa866c21662334088). **new alerts:**. * 4 for Unused local variable; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Unused import. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-556252967:331,error,error,331,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-556252967,1,['error'],['error']
Availability,This pull request **introduces 9 alerts** and **fixes 13** when merging 350a7109410f4f0dfab6888f83d5a4d93a8829d2 into dfb86f51bf3dc22740b0ef4ce65b85b7baab1f5b - [view on LGTM.com](https://lgtm.com/projects/g/psi4/psi4/rev/pr-75650ec2427c70a4f54c63b915f8ac152a63fc6f). **new alerts:**. * 5 for Unused local variable; * 2 for Syntax error; * 1 for Except block handles &#39;BaseException&#39;; * 1 for Unused import. **fixed alerts:**. * 5 for Unused local variable; * 4 for &#39;import \*&#39; may pollute namespace; * 3 for Unused import; * 1 for Except block handles &#39;BaseException&#39;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-553093319:331,error,error,331,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-553093319,1,['error'],['error']
Availability,"This reminds me, there *is* a technique to avoid recomputing every `N` iterations. Namely, I think Ahlrichs(?) described a procedure where one keeps track of the change of the density matrix from the reference one by setting `D_0=0` and `D_i = D_{i-1} + max{|Duv|}` where `Duv` is the difference density matrix at iteration `i` and `D_i` tracks the changes. Instead of doing the reset every `N` iterations, one does a full rebuild when `D_i >= eps` because by then sufficient numerical error may have creeped into the calculation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2816#issuecomment-1337111281:486,error,error,486,https://psicode.org,https://github.com/psi4/psi4/pull/2816#issuecomment-1337111281,1,['error'],['error']
Availability,"This should be fixed in #903 (the comment in that PR was supposed to close this ticket, but didn't for some reason). Please ping back if you have any more problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/901#issuecomment-361268770:124,ping,ping,124,https://psicode.org,https://github.com/psi4/psi4/issues/901#issuecomment-361268770,1,['ping'],['ping']
Availability,"This sort of worked for me i.e. if the job was killed in the CC equations the restart would take a lot of steps but if the job was killed in the (T) then it could pick up nicely from the old T1 and T2 amplitudes, which is helpful for me as one of our users reports his job failing at the start of the triples. My question is whether there is a bare minimum of scratch files that we can copy over from transient scratch to enable the restart or do we need all of them? Also, it looks as though the scratch files (including amplitudes?) are deleted at the end of a successful run so we can't do the ccsd and (T) as separate runs? It takes 80 hours to get to the point of failure so ideally I'd just like to take a look at the (T) failure to see if it is a problem on our side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/27#issuecomment-54103423:669,failure,failure,669,https://psicode.org,https://github.com/psi4/psi4/issues/27#issuecomment-54103423,2,['failure'],['failure']
Availability,"This sounds like in the same class as too many roots for basis. They tend to segfault (example below) so should certainly be handled better. ```; molecule water {; 0 1; O; H 1 1.07; H 1 1.07 2 109.5; symmetry cs; }. set basis sto-3g; set roots_per_irrep [8, 8]. G, wfn = gradient('eom-ccsd', return_wfn=True); ans = wfn.energy(); ```. The user has issued two contradictory requests -- basis set and nroots. And part of the trouble is that psi only knows they're contradictory well into the calculation (e.g., post-GS-CCSD). That complicates issuing a prompt and specific error. I agree that Susi's preferred behavior is most likely what the user wants -- keep the basis set contract and violate the nroots request. A few paths:. 1. Focus on segfault -> error msg first, as Jonathon has done and as eomcc should do. no contracts violated. compute time wasted.; 2. Reset nroots as needed. Change read_options descriptions to ""max roots sought; may be adjusted downwards for small basis sets"". nroots contract violated. could be troublesome for machine returned results since roots array length != nroots requested. good for throughput calcs & no compute time wasted. (resetting nroots may not be so easy if arrays are allocated based on option.); 3. Same as (2) but py-side it detects nroots change and throws a specialized error (like we do for convergence) with full output and completed wfn attached, so no compute or results lost. no contracts violated. automated runs can recover. Likely most of this should be moved to an issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2780#issuecomment-1322391885:571,error,error,571,https://psicode.org,https://github.com/psi4/psi4/pull/2780#issuecomment-1322391885,5,"['down', 'error', 'recover']","['downwards', 'error', 'recover']"
Availability,"This sounds reasonable to me. On Fri, Oct 9, 2020 at 7:49 AM Jonathon Misiewicz <notifications@github.com>; wrote:. > PSIO errors are currently being written to stderr. (See this line and the; > switch statement below; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54>.); > Although the fact that there is a PSIO error is written to the output file,; > I'm semi-frequently encountering forum users who aren't familiar with; > stderr. It either takes longer than it should for me to get this; > information, or they can't provide it.; >; > For ease of debugging, this error information should be logged somewhere; > like the output file, where we can guarantee new users will keep it and be; > able to find it, so they can pass it on to developers.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2019>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5V46EUBGLKYCGYKKADSJ32DTANCNFSM4SJ7HNMQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628:123,error,errors,123,https://psicode.org,https://github.com/psi4/psi4/issues/2019#issuecomment-706322628,4,['error'],"['error', 'errors']"
Availability,This sounds similar to the issue I ran into with the first version of the SAD guess rewrite: CH4 switched symmetry and the program crashed due to memory errors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1474#issuecomment-453868040:153,error,errors,153,https://psicode.org,https://github.com/psi4/psi4/issues/1474#issuecomment-453868040,1,['error'],['errors']
Availability,This test case uses analytic frequencies and requests that a three and five point finite-difference calculation is run. The original comparisons were a bit tight (0.1 and 0.001 cm^-1). I switched the reference data to finite difference values and loosened the tolerance check to a wavenumber. 903bb0e380ecf8304875409b73fb19d69c6f393a,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/123#issuecomment-121730465:260,toler,tolerance,260,https://psicode.org,https://github.com/psi4/psi4/issues/123#issuecomment-121730465,1,['toler'],['tolerance']
Availability,"This typically indicates that either (A) the scratch file directory does; not exist or (B) the user does not have permissions to write to the scratch; file directory. To diagnose (A), echo the PSI_SCRATCH environment variable,; and make sure it points to a reasonable (non-NFS) path. To diagnose (B) ls; -l the base scratch directory and check that write permissions are enables; for the user. See the following notes from the INSTALL.rst file:; - Step 7: User Configuration; ; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location `/usr/local/psi`, then in C; shell,; the user should add something like the following to their `.cshrc`; file::; ; setenv PSI /usr/local/psi; set path = ($path $PSI/bin); ; Next, the user needs to tell the PSI4 I/O manager how to handle scratch; files.; Identify the path to a fast scratch disk for which the user has write; access.; If the local `/tmp` volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended.; ; .. warning:: Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the; network; and negatively impact other users.; ; Specify scratch location by editing the `.cshrc` file to set the scratch; environment variable :envvar:`PSI_SCRATCH`. If the selected location is; `/scratch/user`, add something like the following::; ; setenv PSI_SCRATCH /scratch/user; ; In a bash shell, the corresponding commands to be added to `.bashrc` is; the following::; ; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user; ; More advanced control of scratch files and is handled through a; `.psi4rc` file, which is discussed at section :ref:`sec:psirc`.; ; .. note:: For developers: during compilation and testing, PSI4 finds its; basis sets,; grids, etc., in ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56#issuecomment-40206429:184,echo,echo,184,https://psicode.org,https://github.com/psi4/psi4/issues/56#issuecomment-40206429,1,['echo'],['echo']
Availability,"This whole thread was very useful. I was able to create a conda environment with the latest psi4, openff-toolkit, and openff-recharge using this yml. The only thing not really mentioned in this thread, or the psicode latest installation is pinning pydantic version 1.x. I was getting this error ; ```; `; __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__) TypeError: Array.validate_type() takes 2 positional arguments but 3 were given`; ```. from this line of code in my example ( i believe it, recharge may need to pin pydantic 1.x). ```; from openff.recharge.esp.storage import MoleculeESPRecord; qc_data_record = MoleculeESPRecord.from_molecule(; openff_mol_3D, conformer=conformer, grid_coordinates=grid, esp=esp, electric_field=None, esp_settings=qc_data_settings; ); ```. ```. name: psi4; channels:; - conda-forge; - conda-forge/label/libint_dev; dependencies:; - conda-forge::psi4>=1.8.2; - conda-forge::openff-toolkit; - conda-forge::openff-recharge; - conda-forge::pydantic<2. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1826950752:289,error,error,289,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1826950752,1,['error'],['error']
Availability,"This works for me on the main trunk. Haven't tested beta4. -TDC. On Jun 14, 2013, at 1:10 PM, renh notifications@github.com wrote:. > Hi all,; > ; > I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; > ; > #=======================; > #! sample input; > memory 500 mb; > ; > molecule test {; > Li 0.000 0.000 0.000; > }; > ; > set reference uhf; > set globals = {; > scf_type direct; > basis 6-31G; > e_convergence 10; > }; > ; > this_energy = energy('scf'); > #=======================; > ; > running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64); > ; > The error message is: ; > #=======================; > Traceback (most recent call last):; > File """", line 36, in ; > File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; > procedures['energy']lowername; > File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; > scf_helper(name, **kwargs); > File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; > e_scf = PsiMod.scf(precallback, postcallback); > RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; > file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; > line: 339; > #=======================; > ; > Is it a but or am I wrong anywhere?; > I appreciate any help and suggestions,; > Hao; > ; > —; > Reply to this email directly or view it on GitHub. ## . Prof. T. Daniel Crawford; crawdad@vt.edu; 540-231-7760",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7#issuecomment-19470461:691,error,error,691,https://psicode.org,https://github.com/psi4/psi4/issues/7#issuecomment-19470461,1,['error'],['error']
Availability,"Those comments aren't always 1:1 with the contents. But what's happening for 6-311+G* in particular is that 3 partial basis sets are getting merged: the 6-311 defined through Kr, the polarization defined through Kr, and the diffuse only defined through Ca. Only elements with partial basis sets available for all three pieces show up in the full basis file, so Kr, etc. are missing. Looking at 6-311+G* at https://www.basissetexchange.org/, that ends at Ca, too, so nothing to update. Does this clear up what's going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422:295,avail,available,295,https://psicode.org,https://github.com/psi4/psi4/issues/2097#issuecomment-769922422,2,['avail'],['available']
Availability,"Thought I had, as this was the compilation including chemps2 and pcmsolver that I had working on Friday, but you're right, `git submodule update --init --recursive` changed the compilation. Now have the below:. ``` bash; [100%] Built target pcm-base; Scanning dependencies of target pcm-shared; Scanning dependencies of target pcm-static; Linking CXX static library ../lib/libpcm.a; Linking CXX shared library ../lib/libpcm.so; [100%] Built target pcm-static; ld: cannot find -lstdc++; make[5]: *** [lib/libpcm.so.1] Error 1; make[4]: *** [src/CMakeFiles/pcm-shared.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-build] Error 2; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I know @robertodr has been working on building both `.a`/`.so` so the missing library is probably a result of those changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/207#issuecomment-170794065:517,Error,Error,517,https://psicode.org,https://github.com/psi4/psi4/issues/207#issuecomment-170794065,6,['Error'],['Error']
Availability,"To answer your first question: `set guess read` does fix this problem. . I can not pass a wavefunction to a second scf call. ```; refscf, refwfn = energy('scf', return_wfn=True) ; energy('scf', ref_wfn=refwfn) ; ```. I get an error that scf_helper can not take a wavefunction. Not sure if this is what you wanted me to do. If I run two scf calls. ```; refscf, refwfn = energy('scf', return_wfn=True) ; energy('scf'); ```. This works fine. This has the same effect as set guess read, so I guess there is a check to see if a previous scf has ran. . So it seems that there is no problem with reading the orbitals, but passing them seems to be off.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/419#issuecomment-227802600:226,error,error,226,https://psicode.org,https://github.com/psi4/psi4/issues/419#issuecomment-227802600,1,['error'],['error']
Availability,"To cut down on the printing, you could use `core.be_quiet()` and `core.reopen_outfile()` depending on the print level",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2127#issuecomment-791590947:7,down,down,7,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791590947,1,['down'],['down']
Availability,"To elaborate:. `xfailed`: expected failure. Just looking at the test, I'm not clear why we expect that particular test to fail, but as Lori said, it has to do with a program external to Psi4.; skipped: this tests the interface to a plugin you don't have and is only a concern if you need that particular plugin.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875261598:35,failure,failure,35,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875261598,2,['failure'],['failure']
Availability,"To give my 2 cents to the questions above:; - `freeze_core True` should be a best-effort solution, always freezing as much as possible, but ensuring there are valence electrons (ie. for Ca2+, [Ne] core is frozen instead of [Ar], while for Ca0, [Ar] is frozen; similarly for Ar- the whole [Ar] shell should be frozen). This one is charge aware. This option should never crash the code.; - `freeze_core N` where `N = [1,2,3...]` will always freeze the N-th previous full shell, ie for `N=1` the current behaviour in master. Validation error when no valence electrons remain, to avoid the non-helpful segfault in #1271.; - @JonathonMisiewicz's idea of per-atom frozen cores (or in my view even better: per-fragment frozen orbitals) is a good one, and I'd be keen to get that sorted, but it'd probably need changes to `molecule {}` or somewhere else.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-437594950:533,error,error,533,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-437594950,1,['error'],['error']
Availability,"To save on cpu-time, I went down to cc-pv[dt]z + cc-pvdz (as opposed to [tq] + [dt] extrapolations).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1123#issuecomment-410693460:28,down,down,28,https://psicode.org,https://github.com/psi4/psi4/pull/1123#issuecomment-410693460,1,['down'],['down']
Availability,"To sum up the discussion so far:; * The original geometry was malformed. Not a Psi4 problem.; * We've noticed large changes in energy in the early iterations, with the malformed geometry and a SAD guess. Not a Psi4 problem. (See https://github.com/psi4/psi4/issues/2641#issuecomment-1192909620); * There's been some discussion over how appropriate custom setting DFT VV10 c parameters is. Not a Psi4 problem.; * It's still possible to cause A/EDIIS failure with a sufficiently non-physical Hamiltonian, whether due to DFT VV10 parameters or a compressed geometry. **This is a Psi4 problem.**. I'll see what I can do about the last one, but I suspect that my options will be very limited.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641#issuecomment-1194129799:449,failure,failure,449,https://psicode.org,https://github.com/psi4/psi4/issues/2641#issuecomment-1194129799,1,['failure'],['failure']
Availability,"Tracked this down: `IMPORT` keyword is very specific to an export CI vector in an old format that is no longer supported, what you wanted was `DFILE` here so that it will read in the old D (or ""the"" current) CIVector. The `IMPORT` option and all associated content has been removed in an upcoming patch. The `DFILE` and `OPDM` options will now work as RSP will now write out CIVectors. Not entirely what was being read in, but it wasn't a real CIVector. Now, running this conventionally we still get an energy thats reasonable, but too high by about 5mH. This is apparently caused caused by the `EVANGELISTI` Hamiltonian diagonal approximation for some reason. We usually use this over the exact diagonal to avoid spin contamination, will try to look into this some. For now simply setting `HD_AVG HD_EXACT` will solve the above problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/175#issuecomment-217275131:13,down,down,13,https://psicode.org,https://github.com/psi4/psi4/issues/175#issuecomment-217275131,2,['down'],['down']
Availability,"Trying @pavankum's code. File ""C:/Users/vike/PycharmProjects/pythonProject/test.py"", line 28, in return_td_result; energies = list(result.final_energies.values()); AttributeError: 'FailedOperation' object has no attribute 'final_energies'. printing result ... FailedOperation(error=ComputeError(error_type='resource_error', error_message='QCEngine Resource Error: Procedure torsiondrive is registered with QCEngine, but cannot be found.')). do I need to do a special install to use this properly?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486045729:276,error,error,276,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486045729,2,"['Error', 'error']","['Error', 'error']"
Availability,"Turns out @robertodr's original `_EP_IS_EXTERNAL_PROJECT` error [was because](http://public.kitware.com/pipermail/cmake-developers/2015-April/025035.html) I moved all the external_* dependencies from `ExternalProject_Add(psi4-core ...) add_dependencies(psi4-core chemps2_external ...)` to `ExternalProject_Add(psi4-core DEPENDS chemps2_external ...)`, and CMake didn't learn to accept interface libs in that role until 3.3. So, I still rather want 3.3 because the DEPENDS looks tidier and the HDF5 version thing, but I can make 3.2 work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281446113:58,error,error,58,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281446113,2,['error'],['error']
Availability,"Two questions:; - Have you checked the magnitude of the negative grid weights? Are they near-zero, within some small tolerance? That could be justification for zeroing them out; - Why not implement my above suggestion of forming two separate `X` matrices? This would be simple to do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890#issuecomment-1499304044:117,toler,tolerance,117,https://psicode.org,https://github.com/psi4/psi4/issues/2890#issuecomment-1499304044,2,['toler'],['tolerance']
Availability,"UPDATE: Above holds that Psi4 can be built against NumPy v1 _or_ v2, just be sure your runtime np is the same major version as your build-time numpy, or you'll get the ""atoms are too close"" error. _But_ I've learned a few more constraints and pitfalls since then:. * to use np v2, you must have `pybind11>=2.12` (right now the codedeps/psi4-path-advisor setup is constraining to 2.10 or 2.11 to avoid a docs issue; working on a resolution) (signature is ""atoms are too close""); * to use np v2, you must have `pint>=0.24.1` (v0.24.0 works for >=py310; v0.24.1 works for >=py39) (signature is something like sumprod not available in numpy); * to use np v2, you must have `qcelemental>=0.28.0` (fixed since last week; qcengine doesn't need changes); * on c-f, packages have ways or declaring what they're compatible with so that an env solves into a workable state. Those aren't in place at present for the numpy+pint and numpy+pybind11 combinations, so you need to check them yourself.; * even if your build env is np v2, beware of any pip installs that can surreptitiously sneak in a np v1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750:190,error,error,190,https://psicode.org,https://github.com/psi4/psi4/issues/3184#issuecomment-2204639750,4,"['avail', 'error']","['available', 'error']"
Availability,"Ugg, Windows isn't even finding it to open, much less open-so-can't-close. ```; Start 419: json-schema-1-gradient; 141/142 Test #419: json-schema-1-gradient ...........***Failed 1.97 sec; Traceback (most recent call last):; File ""D:/a/1/s/tests/json/schema-1-gradient/input.py"", line 62, in <module>; json_ret = psi4.json_wrapper.run_json(json_data); File ""D:\a\1\b\build\stage\lib\psi4\driver\json_wrapper.py"", line 191, in run_json; core.set_output_file(outfile.name, False); RuntimeError: ; Fatal Error: PsiOutStream: Failed to open file.; Error occurred in file: D:\a\1\s\psi4\src\psi4\libpsi4util\PsiOutStream.cc on line: 46; ```; maybe it should be `core.set_output_file(outfile)` or `core.set_output_file(outfile.file)`. also what do you think of putting the whole 190--215 in a `with tempfile.NamedTemporaryFile as handle:` to try to clean up closing issues?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1576#issuecomment-473369615:500,Error,Error,500,https://psicode.org,https://github.com/psi4/psi4/pull/1576#issuecomment-473369615,2,['Error'],['Error']
Availability,"Um, I think the standard is that MOs are **always** printed to the checkpoint file, since the point is that they're needed to run calculations and analyses anyhow. I don't see any reason why they wouldn't be dumped to the checkpoint. I fully agree with points 1-3 though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1272#issuecomment-426190015:67,checkpoint,checkpoint,67,https://psicode.org,https://github.com/psi4/psi4/issues/1272#issuecomment-426190015,2,['checkpoint'],['checkpoint']
Availability,"Unclear if it is a related, but running `make test` then leads to the following error:. > Traceback (most recent call last):; File ""/usr/qc/psi4.git/objdir/stage/usr/qc/psi4.bin/bin/psi4"", line 140, in <module>; import psi4; File ""/usr/qc/psi4.git/objdir/stage/usr/qc/psi4.bin/lib//psi4/__init__.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: To be able to register buffer protocol support for the type 'psi4.core.CIVector' the associated class<>(..) invocation must include the pybind11::buffer_protocol() annotation!. Maybe I manually rebuild pybind11 incorrectly in my attempts to get psi4 compiled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273485753:80,error,error,80,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273485753,1,['error'],['error']
Availability,"Unfortunately, historically the reliability of the libxc testing hasn't been very good, the main reason being that the main developers aren't quantum chemists and haven't had access to a Gaussian basis program. Because most functionals have been trained with a Gaussian basis set, reference values are usually given. Unfortunately, very few paper actually give raw datapoints, and running e.g. G2 atomization energies to validate a single functional might not really make sense....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1266#issuecomment-425099115:32,reliab,reliability,32,https://psicode.org,https://github.com/psi4/psi4/issues/1266#issuecomment-425099115,1,['reliab'],['reliability']
Availability,"Unfortunately, that causes a crash. The `transqt2` starts but fails:. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00000000012fd9df in psi::transqt2::get_moinfo (options=...) at /home/ward/tmp/psi4release/src/bin/transqt2/get_moinfo.cc:114; 114 moinfo.frdocc[h] = Process::environment.wavefunction()->frzcpi()[h];; ```. Seems like some things are not properly initialized when bypassing scf?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/102#issuecomment-107072636:121,fault,fault,121,https://psicode.org,https://github.com/psi4/psi4/issues/102#issuecomment-107072636,1,['fault'],['fault']
Availability,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:112,avail,available,112,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987,1,['avail'],['available']
Availability,"Update your PR description. Behavior changes are not ""minor cleanup"", even if that behavior is as simple as raising an error where there wasn't one before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998,2,['error'],['error']
Availability,"Update, MVS error is coming from occupation guess. Ref on the left. ```; -------------------------------------------------------				 -------------------------------------------------------. ==> Integral Setup <==								 ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==						 ==> DFJK: Density-Fitted J/K Matrices <==. J tasked: Yes							 J tasked: Yes; K tasked: No							 K tasked: No; wK tasked: No							 wK tasked: No; OpenMP threads: 1							 OpenMP threads: 1; Integrals threads: 1							 Integrals threads: 1; Memory (MB): 375							 Memory (MB): 375; Algorithm: Core							 Algorithm: Core; Integral Cache: NONE							 Integral Cache: NONE; Schwarz Cutoff: 1E-12							 Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12							 Fitting Condition: 1E-12. => Auxiliary Basis Set <=								 => Auxiliary Basis Set <=. Basis Set: (6-31G AUX)								 Basis Set: (6-31G AUX); Blend: CC-PVDZ-JKFIT								 Blend: CC-PVDZ-JKFIT; Number of shells: 42								 Number of shells: 42; Number of basis function: 131							 Number of basis function: 131; Number of Cartesian functions: 131							 Number of Cartesian functions: 131; Spherical Harmonics?: false								 Spherical Harmonics?: false; Max angular momentum: 3								 Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.				 Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.; Using Symmetric Orthogonalization.							 Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.		 SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ==> Iterations <==									 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|			 Total Energy Delta E RMS |[F,P]|. @DF-UKS iter 0: -71.60680989524471 -7.16068e+01 1.41427e-01 		 |	 @DF-UKS iter 0: -71.93847658446015 -7.19385e+01 1.43012e-01 ; @DF-UKS iter 1: -75.52774517284402 -3.92094e+00 8.33781e-02 		 |	 Occupation by irrep:; @DF-UKS iter 2: -75.47183403287708 5.59111e-02 8.91",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383210085:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383210085,1,['error'],['error']
Availability,"Update: I have also tried; - downgrading to the latest stable psi4 release, following the instructions [here](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary) (just `conda update psi4 -c psi4`), which pulled `1.1+add49b9-py35_0 psi4`, and the issue persists.; - switching to conda Python 2.7 (mkl: 2017.0.1-0, numpy: 1.13.0-py27_0, psi4: 1.1+add49b9-py27_0 psi4). Same issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311448519:29,down,downgrading,29,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311448519,1,['down'],['downgrading']
Availability,"Updated this a bit after talking with @bennybp. I think he's going to do the following, then it'll be about ready:; * tarball with higher (h) AM; * also, could you throw an error in libmints if try to access out of bounds AM through simint? or switch to libint?; * absorb the config6 branch into upstream.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281710846:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281710846,1,['error'],['error']
Availability,"Updated!. Tbh, for large elements the use starts to get real clunky, but I don't understand the codebase well enough to instead provide a dict vs an array. Someone savvier than me should probably eventually update that (so that a user doesn't need to set 0's for a bunch of elements they Just Don't Care About), but I didn't see a mapping type available in the relevant context (just an int vector) so I went with what was there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924:344,avail,available,344,https://psicode.org,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924,1,['avail'],['available']
Availability,"Ups, a proper typo in the original input, but the right molecule was used and the error persists. ----. I think I identified the (or a) problem. There are direct access fortran files that are never closed as far as I tracked it down. If I do so, it seems to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325:82,error,error,82,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325,2,"['down', 'error']","['down', 'error']"
Availability,"Usually an old cmake or an old psi4 source. Can you paste the whole output from `cmake ...` onwards to the error. (Switch from `<backtick>psi4-path-advisor<backtick>` to `psi4-path-advisor`, copy, paste, enter.) Shouldn't be an old cmake as that's in the conda env. Also paste `cmake --version` and `git describe`. Also, always delete `objdir/` between cmake executions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386439546:107,error,error,107,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386439546,1,['error'],['error']
Availability,"Util/Implementations/../Table.h:147: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, int, int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘)’ before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expect",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:1087,error,error,1087,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"Very likely yes for the ""qcschema_input"" by standardizing down to the old string. The ""qcschema_molecule"" will be extra qcel code, though. I'll make the qcel changes and then revisit pinning strategy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1553#issuecomment-466789467:58,down,down,58,https://psicode.org,https://github.com/psi4/psi4/pull/1553#issuecomment-466789467,1,['down'],['down']
Availability,"Very true on exposing more symbols later, @dgasmith. I haven't even attempted v2rdm. @edeprince3, FYI, this affects you. There's a discussion in https://github.com/psi4/psi4/pull/814 if you want the details, but the tl;dr is that Psi4's `core.so` built with this PR will not have all the symbols exposed like a normal Linux `.so` for a plugin's use. If there's extra classes or functions that v2rdm needs, they'll need a `PSI_API` added to the (psi) source code. If you get to the v2rdm/psi reconciliation process before me, please ping with any trouble. I'm updating and rebuilding all the conda packages now, but v2rdm is always last, having psi as a dep. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/950#issuecomment-380192190:532,ping,ping,532,https://psicode.org,https://github.com/psi4/psi4/pull/950#issuecomment-380192190,1,['ping'],['ping']
Availability,"Very true, @bozkaya, and we've done that. We'd really like to be able to run _any_ molecule through a code, though. If the code absolutely can't handle the case, an error is the way to go. But preferably, if the code's contribution is `0.` or unit matrix or anything predictable, I'd really appreciate it if that trivial return could be programmed in. This would greatly help high-throughput calcs or in @wardence's case, multi-stage single calcs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/893#issuecomment-358041068:165,error,error,165,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358041068,1,['error'],['error']
Availability,"Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195:61,toler,tolerance,61,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195,2,"['error', 'toler']","['errors', 'tolerance']"
Availability,"Wait, why do we want to ""turn off the incremental build once a preset level of `D_CONVERGENCE` is achieved""? Is the idea that the numerical creep is within the `D_CONVERGENCE` tolerance?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-940945179:176,toler,tolerance,176,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940945179,1,['toler'],['tolerance']
Availability,"Was gdma1 one of the tests you expected to fail with erd, Ben? I just saw an oddity with it myself where it runs fine explicitly but through ctest issues a string truncated error and gives up (but does not fail).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275543488:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275543488,1,['error'],['error']
Availability,We _could_ just raise an error if a user tries a combination of guess basis and compute basis where one has ECPs and the other doesn't.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1439#issuecomment-449019824:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/1439#issuecomment-449019824,1,['error'],['error']
Availability,We can probably do away with all of the ULI stuff and move to `size_t` which should correctly map to `unsigned long long int` for 64 bit systems. Let us know about tracking the seg fault further... can you make a gist that reproduces this error?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/716#issuecomment-303173793:181,fault,fault,181,https://psicode.org,https://github.com/psi4/psi4/issues/716#issuecomment-303173793,2,"['error', 'fault']","['error', 'fault']"
Availability,"We definitely plan to get this into master, but Lori would be the one with reliable time estimates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2633#issuecomment-1198423231:75,reliab,reliable,75,https://psicode.org,https://github.com/psi4/psi4/pull/2633#issuecomment-1198423231,1,['reliab'],['reliable']
Availability,"We do hit these errors sometimes. Some special cases have been fixed this year. What version of the code are you running, `psi4 --version`?. It's failing on the backtransformation in the second opt iter. Dihedrals are near 180 to start but no angles are. If up-to-date, any suggestions, @psi-rking ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344080024:16,error,errors,16,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344080024,1,['error'],['errors']
Availability,"We had a trial to get `c-f` at gatech, too. maybe this helps. https://psi4.slack.com/archives/C5BLBG6VB/p1503008447000049. any poor souls trying to get `clang-format` on RHEL7 w/ broken `yum`, the magic llvm download is 3.9.0 (being early enough to have req. library abis (unlike 4.0.1) and late enough to recognize psi4's clang-format keywords(unlike 3.6.2)) for pkg Fedora23_x64_64. System `libstdc++` is still too old, but you can feed it any of psi4's gcc 5.2 via `LD_LIBRARY_PATH=${CONDA_PREFIX}/lib`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/857#issuecomment-345267970:208,down,download,208,https://psicode.org,https://github.com/psi4/psi4/pull/857#issuecomment-345267970,1,['down'],['download']
Availability,"We need the _entire_ input file. Issues become much easier to debug when we run the input file ourselves. I will say that 2 GB for an 82 atom system is smaller than I'd expect. If you're running this with threads, Psi distributes the memory you specify over _all threads_, so you need to input the total memory you're giving for the calculation. I work with much smaller systems, so I can't say whether or not you'd likely encounter memory errors at this scale.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1921#issuecomment-640027123:440,error,errors,440,https://psicode.org,https://github.com/psi4/psi4/issues/1921#issuecomment-640027123,1,['error'],['errors']
Availability,"We need the correlated procedure to run CASSCF and may adapt the code to use DF once the new Deriv code is available. In putting together this PR, my intention was to make very limited changes and only improve the functionality of the current code. Since I am not sure what plugins do, I just reproduced the old functionality as it was before. I'd be happy to delete some of the legacy code if we are certain it is not used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1756#issuecomment-557580614:107,avail,available,107,https://psicode.org,https://github.com/psi4/psi4/pull/1756#issuecomment-557580614,1,['avail'],['available']
Availability,"We now have [a reproducible example of the problem](http://forum.psicode.org/t/fatal-error-a-matrix-is-not-spd/1471/4?u=jmisiewicz)! As @jgonthier suspected, this indicates a negative eigenvalue in the orbital hessian. The following input will run into the problem. Stability analysis indicates a tiny negative eigenvalue in the MO hessian. When you follow the instability, SAPT completes with no problems. The error message should be rewritten to suggest the user adds stability following. If we want to collect pathological test cases for future SCF work, we should also recommend they post their failing inputs on the forums. ```; molecule {; 0 1; C -1.39179 -0.20044 0.00015; Cl -0.43716 1.29883 0.00009; F -1.08662 -0.91763 1.08111; F -1.08730 -0.91729 -1.08123; H -2.44780 0.05805 0.00053; --; 0 2; Cl 2.22327 -0.26007 -0.00012; }. set {; basis 6-311++G**; reference uhf; soscf true; soscf_max_iter 30; }. energy('sapt0'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1682#issuecomment-532191893:85,error,error-a-matrix-is-not-spd,85,https://psicode.org,https://github.com/psi4/psi4/issues/1682#issuecomment-532191893,2,['error'],"['error', 'error-a-matrix-is-not-spd']"
Availability,"We should use a more informative/tailored error message. But the reason it can't drop a wfn file is because non-Hartree--Fock Hessians are computed by finite difference, so there's at most a dummy wfn with mol, basis, qcvariables, etc. No goodies like MO coefficients or occupations. What piece of data were you seeking?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3068#issuecomment-1786385522:42,error,error,42,https://psicode.org,https://github.com/psi4/psi4/issues/3068#issuecomment-1786385522,1,['error'],['error']
Availability,We strongly recommend that you follow the [official download instructions](https://psicode.org/installs/v15/).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539:52,down,download,52,https://psicode.org,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539,1,['down'],['download']
Availability,"We updated to a new nuclear signature so the two are getting out of sync. Not completely sure this is fixable as you are pulling addons and Psi4 from different locations. . -Daniel Smith; Sent from my iPhone. . > On Nov 29, 2017, at 11:17, shannonhouck <notifications@github.com> wrote:; > ; > When trying to compile Psi4 with Miniconda3 using the keywords generated by psi4-path-advisor in the development environment, the following error is produced:; > ; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc: In function ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; > double Econstant = wfn->molecule()->nuclear_repulsion_energy();; > ^; > In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; > double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; > ^; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; > make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; > make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; > make[3]: *** [all] Error 2; > make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; > make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; > make: *** [all] Error 2; > The output generated by psi4-path-advisor --gcc is; > ; > /home/shouck/miniconda3/envs/p4dev/bin/cmake \; > -H. \; > -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; > -Bobjdir; > @ashutoshvt and ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347970165:434,error,error,434,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347970165,2,['error'],['error']
Availability,We will try to write a more robust default guess in the future.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/63#issuecomment-122112904:28,robust,robust,28,https://psicode.org,https://github.com/psi4/psi4/issues/63#issuecomment-122112904,1,['robust'],['robust']
Availability,"Well done, Ben!. Regarding the manual, I note that the psi4manual/master/_static; subdirectory, where the css files should reside, is missing. @loriab, is; that automatically generated?. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Thu, Apr 14, 2016 at 7:31 PM, Andy Simmonett notifications@github.com; wrote:. > Great work tracking that one down, @bennybp https://github.com/bennybp; > et al. and thanks for the heads-up, @dkoes https://github.com/dkoes.; > Does anybody know why the CSS elements are fubared in the manual? The; > issues mentioned by @amjames https://github.com/amjames still persist -; > perhaps it's a result of those modified directory permissions?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/342#issuecomment-210202336",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/342#issuecomment-210224190:353,down,down,353,https://psicode.org,https://github.com/psi4/psi4/issues/342#issuecomment-210224190,1,['down'],['down']
Availability,"Well in that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed gl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:946,error,errors,946,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,1,['error'],['errors']
Availability,"Well thats fun. Passes just fine on my local box, but fails without any error on Travis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222250883:72,error,error,72,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222250883,1,['error'],['error']
Availability,"Well, @dgasmith, it's not even really crashing due to the PSIO errors...the job continues to run after failing to write the binary optimization data, and finally fails after exceeding the number of allotted optimization iterations. But, it's the manner in which that happens which is the issue: the optimizer is failing to take steps after the first failure of PSIO, I expect because it can't read the optimization data from binary file. Below is a brief overview of the structure within the job. - Take some number of good optimization steps, with structure:; 1) SCF; - Compute SCF wavefunction & gradient; 2) OPTKING; - Read optimization data from binary file ; - Take optimization step; - Write optimization data to binary file; - Sets geometry for next step; - First error step:; 1) SCF wfn & grad computed successfully; 2) OPTKING; - Read data & take step successfully; - PSIO error when attempting to write data to binary file; - Sets geometry for next step; - All subsequent steps (until `geom_maxiter` reached):; 1) SCF wfn, grad computed successfully; 2) OPTKING; - Second PSIO error occurs; - **No optimization step taken**; - Geometry for next step is set to the same as in first error step. So, once the first PSIO error occurs, there's no progress made by the optimizer.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789#issuecomment-325800423:63,error,errors,63,https://psicode.org,https://github.com/psi4/psi4/issues/789#issuecomment-325800423,7,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"Well, I needed to add a commit so that the code compiles, so I also made sure the `Ind20,u` Psivars are filled up whenever Ind20,u is available (i.e. always except in the closed-shell SAPT0 code). Also, I added all the energy components Psivars in the FISAPT code. Once the tests are done I'll commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364640527:134,avail,available,134,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364640527,1,['avail'],['available']
Availability,"Well, I updated to the newest git which includes the patch that switches from -std=gnu++11 to -std=c++11 but the build still fails with the same error about `std::bind`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631#issuecomment-283681875:145,error,error,145,https://psicode.org,https://github.com/psi4/psi4/issues/631#issuecomment-283681875,1,['error'],['error']
Availability,"Well, SAPT (and maybe SAPT Disp) is the common theme to the errors. Strange!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444136007:60,error,errors,60,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444136007,1,['error'],['errors']
Availability,"Well, an easy way is to download the patch; https://github.com/psi4/psi4/pull/1475.patch; and apply it on top of master. The alternative would be to git pull from my branch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273:24,down,download,24,https://psicode.org,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273,1,['down'],['download']
Availability,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-379332937:224,error,error,224,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937,1,['error'],['error']
Availability,"Well, https://github.com/dgasmith/psi4public/blob/wavefunction_pass/cmake/ConfigPCMSolver.cmake#L78 needs `lib` --> `share` for one thing. Can you do that, then tell me what your next error is? Both @dgasmith and I have been using pcmsolver from metapackage and so may have evaded a few issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183823400:184,error,error,184,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183823400,1,['error'],['error']
Availability,"Well, in this case, I can just cast to `(long long)` to get around the build error. The PCMSolver issue is potentially more involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/220#issuecomment-173225638:77,error,error,77,https://psicode.org,https://github.com/psi4/psi4/issues/220#issuecomment-173225638,1,['error'],['error']
Availability,"Well, initially it was believed to be SCF related because that was the error at program failure. However, it now seems that the reason for the SCF failing was caused by the geometry iteration producing unphysical geometries, which then led to the next SCF iteration failing. By fixing the geometry iteration, and it appears that 'opt_coordinates both' does the trick, no unphysical geometries occur, and the program purs along to completion. In the case of these dimers, completion takes more than the default 50 geometry iterations. Above, one succeeded in 57 steps, two stopped at 50 steps but were clearly converging, they just hit their geom_maxiter of 50 steps and stopped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-958971629:71,error,error,71,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-958971629,4,"['error', 'failure']","['error', 'failure']"
Availability,"Well, the input preprocesser actually implicitly assumes that the molecule name is an allowable [Python identifier](https://docs.python.org/3/reference/lexical_analysis.html#identifiers), so using a name like `2xH2O` will crash the `exec` with a syntax error...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/650#issuecomment-286839124:253,error,error,253,https://psicode.org,https://github.com/psi4/psi4/issues/650#issuecomment-286839124,1,['error'],['error']
Availability,"Well, this is a boost issue. I don't think anyone is actually going to hunt down why this particular pre-compiled boost is killing DGEMM. Probably something very strange. Anyhow, we can change our build strategy for now and link to an updated boost in the future. Let this be a warning when using pre-compiled boost.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-202602008:76,down,down,76,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-202602008,1,['down'],['down']
Availability,"What I did before failed because I was putting the units into a string that was also used to generate file names. As the string contained illegal characters the execution ran into an error. Should I add a general comment (third argument) by default the units to compute_density and related functions, or hard-wire the units into the cube file header?. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libcubeprop/cubeprop.h#L98-L108",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/822#issuecomment-337743478:183,error,error,183,https://psicode.org,https://github.com/psi4/psi4/pull/822#issuecomment-337743478,1,['error'],['error']
Availability,"What I mean is that ECPs appear to have been broken for a while in Psi4. Even a month ago, before any of the SAD guess stuff was included, the ```dfmp2-ecp``` job was mysterious. Namely, it failed in the initial version of the new SAD guess, but mysteriously was working again with the reorganized but functionally equivalent version. However, at the same time, the ```dfmp2-ecp``` job fails to converge altogether when started from the ```CORE``` guess, which really makes no sense since it's dealing with a very weakly interacting noble gas dimer, which should converge straight away. Are the failures/differences related to the presence of ECPs, or do they also occur in the case of no ECPs?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-452673532:595,failure,failures,595,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-452673532,1,['failure'],['failures']
Availability,"What I meant was that that may be just fine. If what's being cached is `$HOME/miniconda/bin` and `$HOME/miniconda/packages`, then you've preserved all the heavy stuff (mkl w/i the packages dir). A new `conda create -n p4dev` that goes into `$HOME/miniconda/envs/p4dev` is trivial compared to downloading all the packages. I'd prefer the env to be re-solved each time, so I'm not advocating caching p4dev env.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444523572:292,down,downloading,292,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444523572,1,['down'],['downloading']
Availability,"What happened was your previous commits were rebased so your local and master git hashes differed. However, since the new commits had the same diff as your current commits they effectively did nothing. Probably not terribly clear unless your familiar with git. The best thing to do as AJ mentioned is to always make a new branch a pull down a fresh version of `psi4/psi4:master`. . @amjames The histories probably were muddled. We probably need to squash this anyway so we can make a merge as the diff looks fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/602#issuecomment-277130364:336,down,down,336,https://psicode.org,https://github.com/psi4/psi4/pull/602#issuecomment-277130364,2,['down'],['down']
Availability,What is the other possible error during Psi-internal adcc build? 😬,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785#issuecomment-1322471526:27,error,error,27,https://psicode.org,https://github.com/psi4/psi4/pull/2785#issuecomment-1322471526,1,['error'],['error']
Availability,"What kind of calculations are you talking about?. Your above grid convergence test tentatively shows that this really is a grid issue. The error becomes smaller for smaller grid spacings, but there are oscillations due to the egg-box effect: nuclei don't line up exactly with the grid points. Chlorine is already pretty heavy, and has quite tight core functions. Getting these right in a cartesian grid is practically untractable. A 0.05 bohr grid is still very coarse; it's what is usually used in GPAW calculations i.e. valence-only.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-433077314:139,error,error,139,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-433077314,1,['error'],['error']
Availability,What legitimate use case is there for this being a warning instead of an error? I can't think of one.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465#issuecomment-1064093373:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/pull/2465#issuecomment-1064093373,1,['error'],['error']
Availability,"What version are you using? I'm running on commit dd6b45b (updated May 7), and I can't reproduce this. Two geometry iterations finish successfully before SCF convergence fails. The SCF convergence failure appears to the fault of my old ""friend"", orbital guesses not correcting for changes in the overlap matrix when reading in orbitals for the initial guess... The initial guess from orbital read is terrible, and I see a large change in geometry for the update where the failure happened. The previous geometry, which also reads orbitals but from a much more similar geometry, seems to work fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957:197,failure,failure,197,https://psicode.org,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957,3,"['failure', 'fault']","['failure', 'fault']"
Availability,"What's strange is that DFHelper thinks it has 19 gib, it only needs 5 gib, but it insists on using its disk machinery. It could just be a printing error where the code is printing out the wrong message. The calculation should give you a ""timer.dat"" file too. can you post that as well? That one has timers around the disk writes, so we can see if they're actually happening.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503207470:147,error,error,147,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503207470,1,['error'],['error']
Availability,"When I compile psi4 with simint, using gcc v6.3. The error appears during the simint compilation part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356218786:53,error,error,53,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356218786,1,['error'],['error']
Availability,"When I run this input file, the error message I get is `Killed: 9` which [often signifies being out of memory](https://stackoverflow.com/a/33978359). You've only allowed 2GB RAM for the entire program. We also know `DFHelper Memory: AOs need 0.898 GiB`. I haven't looked at the analytic hessian code, but being out of memory seems like the most likely culprit here. We can add ""get memory estimate of analytic hessian and reduce if possible"" to our to-do list, but for your computation, all you can do is give it more memory.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297#issuecomment-925013890:32,error,error,32,https://psicode.org,https://github.com/psi4/psi4/issues/2297#issuecomment-925013890,1,['error'],['error']
Availability,Where are the basis sets from? Ideally they should just go straight to https://github.com/MolSSI-BSE/basis_set_exchange. The r2SCAN hybrids are available in the current version of Libxc.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1380787808:144,avail,available,144,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1380787808,1,['avail'],['available']
Availability,"While trying to optimize the geometry for conformers of the ligand in the 2vx0 pdb structure I am also running into memory issues. Our cluster is running with cgroups and I ask for 10GB, but tell psi4 to use only 8gb. In that case most of the calculations fail >374 out of 500 conformers. To make it work I have to ask for 20GB and use only 4GB in psi4. The strange thing is these 500 runs have the same number of atoms and the same basis set, just different atomic positions. But some fail during the first SCF, some complete a few optimization cycles and a few complete. I have seen this behavior with the wB97x and the B3LYP functionals.; I have seen this with the conda installed 1.3rc2 and with a hand compiled version of 1.3rc2.; I have attached my input file and one of the smallest failed output files. I hope this helps pinning this down.; Thanks for working on Psi4, I love it!. [singlePsi4_rec290_pid12029.log](https://github.com/psi4/psi4/files/2911797/singlePsi4_rec290_pid12029.log); [singlePsi4_rec290_pid12029.txt](https://github.com/psi4/psi4/files/2911798/singlePsi4_rec290_pid12029.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525:842,down,down,842,https://psicode.org,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525,1,['down'],['down']
Availability,While you are at it. Could you change `camb3lyp` to `cam-b3lyp` and remove one of the `b2gpplyp-d3bj` entries. (my fault to add it twice). And I guess `lcwpbe` is `lcr-wpbe` in libxc?; I think these are the remaining name inconsistencies. Adding the citation where the parameters are from is a nice touch!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/916#issuecomment-364766180:115,fault,fault,115,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364766180,1,['fault'],['fault']
Availability,"Whoa, fantastic! These kinds of issues are extremely tough to track down, so I also transfer 5 psicoin. ; Out of interest, is this limited to `libstdc++`, or have you observed the same with `libc++`? Great detective work",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-380106497:68,down,down,68,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-380106497,1,['down'],['down']
Availability,"Why do you think the key point here is that this is DFT? I was able to observe a similar error in gradients using the same system and Hartree-Fock. I'd need to do more tests to know for sure, but my working hypothesis is that the error (which is genuine) has rather to do with the effective core potential. The ECP contribution to the gradient is a separate term in the gradient computation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066#issuecomment-1783692419:89,error,error,89,https://psicode.org,https://github.com/psi4/psi4/issues/3066#issuecomment-1783692419,2,['error'],['error']
Availability,"With 20 GB & helium, available memory overflowed `int`. `long int` seems to be working, but the C++ devs should probably look over my fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1018#issuecomment-388938929:21,avail,available,21,https://psicode.org,https://github.com/psi4/psi4/issues/1018#issuecomment-388938929,1,['avail'],['available']
Availability,"With @loriab's help, I managed to deploy `adcc` to conda.; There is a dev/temporary version available via; ```conda install -c adcc/label/dev_mkl adcc```; for testing purposes. Don't rely on it, though, it may disappear... :smile:; Make sure to install it in an existing `psi4` conda environment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071:92,avail,available,92,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071,1,['avail'],['available']
Availability,"With ICC 17 and CMake 3.5.1 I get the following error:; ```; CMake Error at src/psi4/dcft/CMakeLists.txt:4 (if):; if given arguments:. ""CMAKE_CXX_COMPILER_ID"" ""STREQUAL"" ""Intel"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_LESS"" ""18.1"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_GREATER_EQUAL"" ""18.0"". Unknown arguments specified; ```. From @loriab's guesses either `STREQUAL` should `MATCHES` or we need a parentheses around each part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923#issuecomment-369781907:48,error,error,48,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369781907,2,"['Error', 'error']","['Error', 'error']"
Availability,"With a significant amount of scratch space ( >110 GB) and time, at least on my local computer, this one seems to be working with the current master. The PSIO error is quite cryptic, though. As the forum thread has been dead since August 2018, I'll close this one; [disk size estimates](https://github.com/psi4/psi4/issues/402#issuecomment-261056552) and [deprecation of PSIO](https://github.com/psi4/psi4/issues/402#issue-158729474) are already part of the wishlist.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328#issuecomment-481529074:158,error,error,158,https://psicode.org,https://github.com/psi4/psi4/issues/1328#issuecomment-481529074,1,['error'],['error']
Availability,"With some glitches DFT works on *Windows*!. Annoyingly many other tests segment fault *Python* and crash *CTest*, so it is impossible to run all tests at once. Most likely `psi4::filesystem` is to blame.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404225219:80,fault,fault,80,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404225219,1,['fault'],['fault']
Availability,"With the above recommendations, I get this, which is not much more useful without more troubleshooting (slowly going through each dep one by one):. <details>; <summary>Click to expand</summary>; UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package blas conflicts for:; blas[build=mkl]; ambertools[version='>=20'] -> numpy -> blas[version='*|*|1.1|1.0|1.0',build='mkl|mkl|openblas|openblas']; psi4=1.4a2.dev1058 -> blas==1.0=mkl; psi4=1.4a2.dev1058 -> numpy[version='>=1.12.0'] -> blas[version='*|*|1.1|1.0',build='mkl|openblas']. Package libgfortran4 conflicts for:; blas[build=mkl] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran=4 -> libgfortran4; blas[build=mkl] -> libgfortran=4 -> libgfortran4. Package python conflicts for:; ambertools[version='>=20'] -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.9,<3.10.0a0']; ambertools[version='>=20'] -> cython -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.5,<3.6.0a0|3.4.*|3.7.*|3.8.*|3.9.*']; python[version='>=3.6,<3.8']; psi4=1.4a2.dev1058 -> mkl-service[version='>=2,<3.0a0'] -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.9,<3.10.0a0|>=3.6|>=3.5|>=3.5,<3.6.0a0|3.4.*|>=3.6.0']; psi4=1.4a2.dev1058 -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0']. Package numpy-base conflicts for:; ambertools[version='>=20'] -> numpy -> numpy-base[version='1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.4|1.14.4|1.14.4|1.14.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024#issuecomment-718343348:331,Avail,Available,331,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718343348,1,['Avail'],['Available']
Availability,"With. setenv PSIDATADIR /home/rking/psi4public/share. An error has occurred. Traceback:. <type 'exceptions.SyntaxError'>: ('invalid syntax',; ('/home/rking/psi4public/share/python/qcdb/dbwrap.py', 1455, 47, '; return {db: odb.integer_reactions() for db, odb in; self.dbdict.items()}\n')): File ""<string>"", line 7, in <module>. On Mon, Mar 14, 2016 at 1:02 AM, Rollin King rking@bethel.edu wrote:. > Have we changed what PSIDATADIR should point to?; > ; > On Mon, Mar 14, 2016 at 1:00 AM, Rollin King rking@bethel.edu wrote:; > ; > > An error has occurred. Traceback:; > > ; > > <class 'Boost.Python.ArgumentError'>: Python argument types in; > > ; > > ```; > > psi4.scf(NoneType, NoneType); > > ```; > > ; > > did not match C++ signature:; > > ; > > ```; > > scf(boost::shared_ptr<psi::Wavefunction>, _object*, _object*): File; > > ```; > > ; > > ""<string>"", line 47, in <module>; > > ; > > This is, for example, from the opt1 test case, but all jobs fail. I; > > already tried removing my objdir completely and recompiling.; > > ; > > On Sun, Mar 13, 2016 at 8:58 PM, Lori A. Burns notifications@github.com; > > wrote:; > > ; > > > The current head (0.4.156 / 7783818; > > > https://github.com/psi4/psi4/commit/77838182dbdf260e7f39e4e554b64ee3c05a0da7; > > > / 0.5.92) works fine for me on the test case above and on all the usual; > > > test cases. What is the nature of your broken python?; > > > ; > > > —; > > > Reply to this email directly or view it on GitHub; > > > https://github.com/psi4/psi4/issues/310#issuecomment-196104469.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196160600:57,error,error,57,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196160600,2,['error'],['error']
Availability,"Working Notes:. PSI4: Git: Rev {master} ad9c3d9; Config: RHEL/icpc/MKL/Debug; Hardware: i7x6, 64GB, 2TB. Running with GDB:. 30 GB/12 threads - passes, max memory ~27 GB, ~25 mins; 40 GB/12 threads - Segfault! . Source:. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff1293cad in __memset_sse2 () from /lib64/libc.so.6; (gdb) bt; #0 0x00007ffff1293cad in __memset_sse2 () from /lib64/libc.so.6; #1 0x0000000003529efb in psi::Matrix::zero (this=0xe7b9350); at /theoryfs2/ds/parrish/psi4public/src/lib/libmints/matrix.cc:1002; #2 0x0000000001bc54f7 in psi::dfmp2::RDFMP2::form_L (this=0xeb31d30); at /theoryfs2/ds/parrish/psi4public/src/bin/dfmp2/mp2.cc:1912. mp2.cc:1912 zeros Gmn, a three-center tensor which is currently 1896 x 1086^2 = 2236134816, which as we all know is just above 2^31 - 1 = 2147483647. So I suspect:. frame 1; #1 0x0000000003529efb in psi::Matrix::zero (this=0xe7b9350); at /theoryfs2/ds/parrish/psi4public/src/lib/libmints/matrix.cc:1002; 1002 memset(&(matrix_[h][0][0]), 0, size);; (gdb) print size; $1 = 18446744057257762112. Yep, matrix zero is FUBAR. The offending line is matrix.cc:999:. ```; size = rowspi_[h] * colspi_[h^symmetry_] * sizeof(double);; ```. Changed to:. ```; size = rowspi_[h] * ((size_t) colspi_[h^symmetry_]) * sizeof(double);; ```. Ed and I once worked out that casting to size_t works properly if the left-most element in a chain of integer multiplies is size_t. But I don't completely trust that, and so often do all work in size_t. I'll close if working in another half hour.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/119#issuecomment-130852343:266,fault,fault,266,https://psicode.org,https://github.com/psi4/psi4/issues/119#issuecomment-130852343,1,['fault'],['fault']
Availability,"Wow, congratulations on tracking that down",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1991#issuecomment-685015121:38,down,down,38,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-685015121,1,['down'],['down']
Availability,"Wow, this would explain some random crashes I got when using `pk` while having no available swap.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1990#issuecomment-681344451:82,avail,available,82,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681344451,1,['avail'],['available']
Availability,"X2C doesn't decontract the basis by default so it is not automatically a redundant input. I'm getting the same error when trying to run X2C with a decontracted basis with the newest PSI4, I haven't run any X2C calculations in a while and was unaware of this issue. I'll look into this, making sure @fevangelista is also aware of this also.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662#issuecomment-288817347:73,redundant,redundant,73,https://psicode.org,https://github.com/psi4/psi4/issues/662#issuecomment-288817347,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:278,down,down,278,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393,1,['down'],['down']
Availability,"X_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10356,error,error,10356,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49826,error,error,49826,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47981,error,error,47981,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13889,error,error,13889,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"Yay, nesting levels reduced from 10 to 5 :-) . And I'm reassured to see ""3d"" in there. Looks like we're not doing wait-and-repeat anymore, but `MaxSeconds` available if travis habitually times out. LGTM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/507#issuecomment-258979110:156,avail,available,156,https://psicode.org,https://github.com/psi4/psi4/pull/507#issuecomment-258979110,1,['avail'],['available']
Availability,"Yay, so building Psi4 w/ gcc/g++5.2 against a pre-built conda chemps2 is what's working?. HDF5 is persnickety in that chemps2 will complain if the HDF5 library it finds at runtime isn't the same one it was compiled against down to the patch level. That is, 1.8.16 and 1.8.17 aren't friendly. So unless you're lucky, you really must use the one that comes with the conda package. Does setting `-DCMAKE_PREFIX_PATH` to the conda env help to overcome the system hdf5? or `HDF5_ROOT`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288577924:223,down,down,223,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288577924,1,['down'],['down']
Availability,"Yay, two clang successes! That return statement looks like a bother to track down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/236#issuecomment-182162959:77,down,down,77,https://psicode.org,https://github.com/psi4/psi4/pull/236#issuecomment-182162959,1,['down'],['down']
Availability,"Yea, I see what you mean. The perl script is very comprehensive and it detects the type of calculation being run, changing the values that will be checked as needed. I am able to offer navigational/general help on this is someone volunteers B.TW. so if anyone is interested post here/slack me/ping me/send a smoke signal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943#issuecomment-376673025:293,ping,ping,293,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376673025,1,['ping'],['ping']
Availability,"Yea, scratching my head over that one too. I was knee deep in `lsof` loads and thought we should check the simple things. The other weird thing is you can export either MKL or OMP threads and it fixes the error. I wonder what the precedence for`mkl/omp_set_num_threads/environ` is. It could help track down who is setting what.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311756543:205,error,error,205,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311756543,4,"['down', 'error']","['down', 'error']"
Availability,"Yeah I can't reproduce with 16.0.2 either. What version of gcc is the Intel compiler using?. > On Jul 14, 2016, at 12:24 PM, Ryan Richard notifications@github.com wrote:; > ; > My apologies on the late reply. I am unable to replicate this problem with icpc 16.0.2. Admittedly I used the version of Psi4 in #442. That being said, I am skeptical that fully scoping the function is actually causing @edeustua's compile error (I am fairly certain that you can always fully scope a function/type in C++). @edeustua, can you post the actual error log, as well as the configure command you used?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232734584:416,error,error,416,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232734584,2,['error'],['error']
Availability,"Yeah sylabs would definitely work but only allows for storing .sif images. We could consider only offering `docker` containers and having `apptainer` users pull from `dockerhub`. See https://apptainer.org/docs/user/main/docker_and_oci.html#docker-hub. I know Jet loves using docker dev containers and I'm guessing others on the dev team do too. . As an explicit example from apptainers docs: ; pull tensorflow and run with the host's amd gpu libraries loaded into the container. MPI is essentially the same.; ```; $ apptainer pull docker://rocm/tensorflow:latest; $ apptainer run --rocm tensorflow_latest.sif; ```. As described in the link I referenced there are a few peculiarities that we would have to work through so that our docker containers will run properly with `apptainer`. Off the top of my head the two main things would be:. * making sure nothing is being installed in `/root` or `/home` by default (easy); * making sure that a writable filesystem is being mounted (The user would ultimately need to ensure that a scratch directory is available or that they're running from a directory/volume with disk space available). If we wanted, it might be nice to convert the docker containers explicitly to apptainer format and upload to sylabs? A new user at a super-computing institute probably wouldn't check dockerhub. For building apptainer containers, I normally start by pulling base images from dockerhub to work with. I haven't tried pulling and running docker containers directly though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682:1048,avail,available,1048,https://psicode.org,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682,2,['avail'],['available']
Availability,"Yeah we should sit down and try to sort out all the latest SAPT additions; and how they should be called. On Thu, Mar 5, 2020 at 12:56 PM Lori A. Burns <notifications@github.com>; wrote:. > right now, one gets (wfn) sapt0-inf through sapt(dft). in light of that; > new addition, plus outright sapt(dft) plus sapt0-d, take a wholistic looks; > at the arguments to energy(sapt*); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1835?email_source=notifications&email_token=AAXVA5X6PP6BNHUB4YWNW33RF7RTTA5CNFSM4LCPIX5KYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IS3UY5Q>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5TLWRLB4PCIU2BX74TRF7RTTANCNFSM4LCPIX5A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1835#issuecomment-595374584:19,down,down,19,https://psicode.org,https://github.com/psi4/psi4/issues/1835#issuecomment-595374584,1,['down'],['down']
Availability,"Yeah, CheMPS2 and Psi4 have to use gnu on the same side of 5.1 b/c GCC changed their std::string compatibility. The conda CheMPS2 is def. built against the gcc5.2 in that faq. Usually you have to have the gcc5.2 environment active during configuration and build _or_ pass extra args to the compilers, as below. Doesn't hurt to do both. But you're getting past the compiler checks. I've heard of problems with 2016.1 Intel compiler set. 2016.3 is known good. Actually, @amjames, was this the error you were seeing with early 2016 compilers?. ```; PFXC=/theoryfs2/ds/cdsgroup/miniconda/envs/text35; ; ${PFXC}/bin/cmake -H. -Bobjdir53 \; -DCMAKE_C_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icc \; -DCMAKE_CXX_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icpc \; -DCMAKE_Fortran_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/ifort \; -DCMAKE_C_FLAGS=""-gcc-name=${PFXC}/bin/gcc"" \; -DCMAKE_CXX_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; -DCMAKE_Fortran_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288535859:491,error,error,491,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288535859,1,['error'],['error']
Availability,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905#issuecomment-361802078:338,error,error,338,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078,1,['error'],['error']
Availability,"Yeah, I can't tell which generator travis is using just from the build log. Because of the Ninja+Fortran+CMake issues, I don't think we can have Ninja as the default cmake generator. But if this is just enabling Ninja as an available non-default generator, LGTM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794#issuecomment-337609308:224,avail,available,224,https://psicode.org,https://github.com/psi4/psi4/pull/794#issuecomment-337609308,1,['avail'],['available']
Availability,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:61,error,error,61,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657,1,['error'],['error']
Availability,"Yeah, I just realized that myself. But I'm pretty sure it shouldn't segfault, it should rather throw an error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/597#issuecomment-276265704:104,error,error,104,https://psicode.org,https://github.com/psi4/psi4/issues/597#issuecomment-276265704,1,['error'],['error']
Availability,"Yeah, MBIS radial moments (along with a few other properties) are already in the works. I'll be sure to ping @djcole56 when it's done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2041#issuecomment-734970689:104,ping,ping,104,https://psicode.org,https://github.com/psi4/psi4/issues/2041#issuecomment-734970689,1,['ping'],['ping']
Availability,"Yeah, could also use ""quicktests"" for the ""coverage within 20 mins"". On Mon, Nov 21, 2016 at 1:01 PM, Lori A. Burns notifications@github.com; wrote:. > @robertodr https://github.com/robertodr, go for it. I put the SO link; > at the top of the file.; > ; > On the test labels front, I'd suggest; > Labels; > - optests - ""Does psi work? tu1/scf-property/dfmp2-1/sapt1/cc1/casscf-sp; > only"" plus one test from each add-on and python, json, psi4numpy; > (""add-in""?). name definitely up for discussion.; > - quicktests - tests that contribute to ""Best coverage possible in a; > 20 min envelope. (10 minutes on 2-thread travis)"" just because everyone's; > trained up to type ""quicktests""; > - longtests - tests that run in 15 min or more; > - in particular, if a test doesn't belong to any of the three above,; > it shouldn't get _any_ length label. that will help with maintenance.; > ; > Runs; > - ctest -L optests - runs the operational tests; > - ctest -L quicktests - runs the decent coverage tests; > - ctest -LE longtests - runs everything but the indiv tests that; > require >15 min; > - ctest - runs ""All psi tests (including the 30 minutes - 1.5 hour; > tests)""; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/524#issuecomment-262017070, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdpVwWhuFdd1f7Oi21g3R3H_T4T8uks5rAdx5gaJpZM4K4Unt; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/524#issuecomment-262018053:865,mainten,maintenance,865,https://psicode.org,https://github.com/psi4/psi4/pull/524#issuecomment-262018053,1,['mainten'],['maintenance']
Availability,"Yeah, that `scf_occupations_a` error is exactly what #2036 should fix, I didn't realize an issue had already been raised",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987#issuecomment-729694797:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-729694797,1,['error'],['error']
Availability,"Yeah, the recomp is annoying, but that `gitversion.py` takes care of at least:; - defining of `GIT_VERSION` and `PSI_VERSION` compile definitions including computing a sortable version from `git describe`; - get the branch and tag contents, including when ppl have neglected to pull tags and have none defined; - make it so when ppl download zip distributions, they're not prevented from compiling for lack of version info; - be able to reset commit increment to preserve monotonic versioning as in https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/src/bin/psi4_main/gitversion.py#L105; - make sure the version gets recomputed _every_ time, even if someone just pulls a change to `README.md` that technically changes the version; - get all that info ; - into the output file header; - to essentially ""configure_file"" the https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/psi4-config.in file so that it gets written to the bottom of it; - into place for https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/doc/sphinxman/source/conf.py.in#L58-L73 to absorb it for the docs build; - so that psi4 command-line can report version. The test is if the docs index.html, an output file, `psi4 --version`, and `psi4-config --version --githash` all return the same correct thing after a pull that doesn't technically require any recompile. I don't doubt that a better formulation than at present could be devised, and that'd be nice to have, especially pure CMake, but as the initial formulation only partially hit the first point, I just reverted back to what worked. I did have to change from the pre-CMakeRewrite version this bit (https://github.com/ryanmrichard/psi4/commit/18a41e0d01a9fa903cdce98bba52c785f81560b2) which is probably why it's compiling again upon install. Perhaps that bit could be fixed by moving the `versioned_code` object lib up to the top level?. Basically, I'm open to fixes, but versioning is a real can of worms, and I'm willing to tolerate eight extra file co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239050499:333,down,download,333,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239050499,1,['down'],['download']
Availability,"Yeah, this is likely numerical noise in the eigendecomposition stages of; DF-SCF. As the errors are exceedingly small, I'd recommend just explicitly; symmetrizing the gradient to the desired point group externally. -Rob. On Wed, Mar 2, 2016 at 2:08 PM, Daniel Smith notifications@github.com; wrote:. > Im guessing this is due to the fact that the DF JK algorithm runs in C1; > symmetry.; > ; > It looks like the errors are exceedingly small, can we just resymmetrize; > the molecule using built in functions after a optking step to retain the; > symmetry?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/298#issuecomment-191455202.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/298#issuecomment-191455933:89,error,errors,89,https://psicode.org,https://github.com/psi4/psi4/issues/298#issuecomment-191455933,2,['error'],['errors']
Availability,"Yeah, we should put a catch in the code to not allow frequency() on an atom. On Thu, Mar 31, 2016 at 10:15 PM, Ryan Richard notifications@github.com; wrote:. > Admittedly the error message should be updated to be more informative, but; > the short answer is a single atom doesn't have a vibrational frequency.; > ; > More generally any molecular system has 3 times the number of atoms, total; > degrees of freedom; the difference between that and the number of external; > degrees of freedom is the internal degrees of freedom, i.e. the; > vibrations. An atom has three external degrees of freedom and thus in turn; > has 0 internal degrees of freedom.; > ; > Hope that helps.; > On Mar 31, 2016 8:07 PM, ""drhaney"" notifications@github.com wrote:; > ; > > Attempting frequency() on atomic species fails irrespective of charge,; > > multiplicity, and reference type.; > > ; > > Typical error message:; > > ; > > 1 displacements needed.; > > 1; > > ; > > An error has occurred. Traceback:; > > : basic_string::replace: File """", line 26, in; > > ; > > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in; > > frequency; > > psi4.thermo(wfn, wfn.frequencies()); > > ; > > Thanks,; > > -drhaney, -- that's ""D. R."", not Doctor.; > > ; > > Typical input file attached (C atom, neutral triplet).; > > C.txt https://github.com/psi4/psi4/files/198782/C.txt; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/332; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332#issuecomment-204210196",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204212411:175,error,error,175,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204212411,3,['error'],['error']
Availability,"Yep, gcc version is your problem. Note this part of the cmake output:. > CMake Warning at cmake/custom_cxxstandard.cmake:22 (message):; > Intel ICPC makes use of GCC (detected: 4.7; required for C++11: 4.9) so; > this build won't work without GCC intervention:; > https://github.com/psi4/psi4/wiki/8_FAQ_Contents#modgcc; > Call Stack (most recent call first):; > CMakeLists.txt:119 (include). Acquire a >=4.9 gcc according to that link (or any way you care to) and pass `gcc-name` and `gxx-name` to icc/icpc as Daniel and that link advised. After that, the cmake warning won't go away (which is why I couldn't make it a fatal error), but it will compile.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261733493:626,error,error,626,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261733493,1,['error'],['error']
Availability,Yes psicode.org is outdated and will be replaced soon. Maybe @loriab could update the download link until then. The latest releases are also linked on the github release page: https://github.com/psi4/psi4/releases,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900:86,down,download,86,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900,1,['down'],['download']
Availability,Yes sorry about that ... in the build it downloads an old adcc version from github instead of recognising the installed version from conda it seems. I'll take a look.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466:41,down,downloads,41,https://psicode.org,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466,1,['down'],['downloads']
Availability,"Yes that's exactly the error I had. With that fix, it may be possible at some point to have, for example, libint/libderiv as dependencies of libmints only, and then anything depending on libmints will pull in libint headers. That's something to play with (that was your original intent I think).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-237869256:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-237869256,1,['error'],['error']
Availability,"Yes, I agree that details instructions and more demonstrations could be; added in separate PR, and not a reason to stall Alex's integration efforts. On Fri, Dec 2, 2022 at 2:04 PM Lori A. Burns ***@***.***>; wrote:. > /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:346:; > ERROR: Undefined substitution referenced: ""optking_frag_mode"".; >; > docs error above. probably needs double underscore after optking.; >; > Do we have a figure in there yet illustrating the inter-fragment; > definitions? I have no time to work on it today, but could tomorrow; > (Saturday).; >; > interfrag figure would be great. but if we get to the point where; > everything else is ready, I think that could be a separate PR.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TB764VCREPSYNXVVTTWLJI3HANCNFSM6AAAAAAQWELJAU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146:299,ERROR,ERROR,299,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Yes, I also did check it with PSI4_1.0 with the same error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786#issuecomment-323554259:53,error,error,53,https://psicode.org,https://github.com/psi4/psi4/issues/786#issuecomment-323554259,1,['error'],['error']
Availability,"Yes, I do. I am trying to move the initialization of the amplitudes inside T1/T2, but currently getting a segmentation fault. Those functions are now not const anymore, might that be the source of this problem?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-414918260:119,fault,fault,119,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-414918260,1,['fault'],['fault']
Availability,"Yes, I have it high on my to-do list. Thanks for pointing out the error, and yet another very detailed error report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-453204386:66,error,error,66,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-453204386,2,['error'],['error']
Availability,"Yes, I think what you show should work as `molden` excepts a MO matrix. Since we can compute CISD in multiple ways this gets a little tricky as only the DETCI module returns a CIWavefunction, the best way to check for this is `isinstance(wan, psi4.core.CIWavefunction)` I believe. By default FCI only computes the ground state, so only the `(0, 0)` OPDM is available. Additional states (roots) can be computed by setting the `num_roots` to a value other than 1 and the `(n, n)` OPDMs will be available via `get_opdm`. `tdm True` creates all possible `(n, m)` OPDMs. The `True` in `wfn.get_opdm(0, 0, ""A"", True)` is needed for non FCI wavefunctions as a `False` value will return a matrix of size `nact x nact`. Setting this to `True` will return a matrix the size of `nmo x nmo` with the inactive space set to the diagonal and the virtual space set to zero. Before coffee has quite kicked in yet, hopefully this makes sense.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1638#issuecomment-489080431:357,avail,available,357,https://psicode.org,https://github.com/psi4/psi4/issues/1638#issuecomment-489080431,2,['avail'],['available']
Availability,"Yes, I tried the static_cast first. I get the error `static_cast from 'std::__1::vector<double, std::__1::allocator<double> >::value_type *' (aka 'double *') to 'char *' is not allowed`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-634291955:46,error,error,46,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-634291955,1,['error'],['error']
Availability,"Yes, Sebastian [pinged](https://github.com/SebWouters/CheMPS2/commit/eedb60e7a47424cf50d632f2057459567a60d3d8) me that they were back.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/439#issuecomment-230646067:16,ping,pinged,16,https://psicode.org,https://github.com/psi4/psi4/pull/439#issuecomment-230646067,1,['ping'],['pinged']
Availability,"Yes, `numpy` forces the downgrade of `mkl`, but not `intel-openmp`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1408#issuecomment-445279346:24,down,downgrade,24,https://psicode.org,https://github.com/psi4/psi4/pull/1408#issuecomment-445279346,1,['down'],['downgrade']
Availability,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:102,error,errors,102,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074,2,"['down', 'error']","['downsides', 'errors']"
Availability,"Yes, but that function is only ever called in a single spot AFAIK (`deriv.cc`). It could be better to shift that function signature to require the matrix factory on call. Most `CdSalcList` builds give a empty factory pointer to the constructor call which will cause some lovely seg faults anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884#issuecomment-353380437:282,fault,faults,282,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-353380437,1,['fault'],['faults']
Availability,"Yes, disk space is about the only correctable PSIO error besides failing to clean scratch between independent calcs. There are legit fails that should be directed to devs but only after ruling out disk as culprit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959#issuecomment-661935809:51,error,error,51,https://psicode.org,https://github.com/psi4/psi4/issues/1959#issuecomment-661935809,1,['error'],['error']
Availability,"Yes, good point @JonathonMisiewicz. I can shrink it down to water with a larger basis set. This is required to trigger selection of the disk-based algorithm [here](https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/src/psi4/libfock/DiskDFJK.cc#L287). Test takes ~8s now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452:52,down,down,52,https://psicode.org,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452,1,['down'],['down']
Availability,"Yes, if you were pulling from Conda everything would be fine. Conda is only updated periodically on the /dev channel, so its natural that psi4/psi4:master will get ahead of those built binaries. I usually recommend going sans addons while dev’ing unless you need them. > On Nov 29, 2017, at 12:05 PM, shannonhouck <notifications@github.com> wrote:; > ; > Ok, that makes sense. I got Psi4 by cloning the repo as usual, and it seems like I'm pulling CheMPS2 from the Miniconda p4dev (Psi4 development) environment. Using conda update chemps2 doesn't show any available updates; the button on the CheMPS2 page says the most recent version is 1.8.4, but the Conda site says it's 1.8.3.; > ; > I'll try pulling from GitHub and see if that fixes anything. Thanks for the help!; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/871#issuecomment-347979916>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABsBcS5FvbqgbVG1GK3u1ZsrwtiI714aks5s7bjvgaJpZM4QvfAl>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347988321:557,avail,available,557,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347988321,1,['avail'],['available']
Availability,"Yes, indeed. I was testing this afternoon that AM=4 passed the quicktests and failed the expected all tests. They all behaved as expected wrt pass/fail, but the failures (except for irc) didn't print the usual diagnostic message. Running a specimen through gdb tonight reveals compute_quartet segfault. So something likely unaligned, possibly only with int, not deriv.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240606872:161,failure,failures,161,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240606872,1,['failure'],['failures']
Availability,"Yes, it seems elaborate just to keep metadata with the quadratures. And the quadratures themselves are not in the best state, considering we regex process them. And having thousands of them is a blot upon the `install` step. They're downloaded from a website (see [README](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/quadratures/1_x/README)), so ideally both quadratures and metadata would be pulled into a json or similar library, then read into cpp. But this seemed a quick fix. Will tag the PR for v1.2.2 backport. Ok to let those accumulate until all errors found and solved or do you need it sooner?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163:233,down,downloaded,233,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Yes, it turns out the both volumes and volume ratios are quite easy to get from Horton if a Molden-formatted density is available. I think it would be important to automate the generation of the volume ratios here, meaning that some number of free-atom calculations are required. I'm not sure what the defaults are in Horton, but we'd need to think about how exactly these free-atom calculations should be run (i.e. restricted or unrestricted g.s.).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2056#issuecomment-742028115:120,avail,available,120,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742028115,1,['avail'],['available']
Availability,"Yes, it's often right (that's how I got the reference value for the compare_values function, from a simple input file). My concern is that in a more complex input file, it started throwing odd energies, depending on the (commented) input file contents. It's possible there was something funny with my setup, but the error is consistent enough that I'm really suspicious.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183512111:316,error,error,316,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183512111,2,['error'],['error']
Availability,"Yes, sorry, we've been doing a lot of infrastructure changes lately related to that `Wavefunction` object you saw in the `make` error message, and that mointegrals plugin template had escaped updating. I don't know how familiar you are with GitHub, so I'll warn you that that commit with the fixes is in a pull request to my forked repository. Right now tests are running to check if that commit is safe to merge into this main repository. The only impact that this has on you is that `git pull`ing _this_ repository won't get that new commit at this moment. So if you want to try it out on your plugin before the commit gets merged, just edit the file by hand according to the pattern you see in the commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-195054956:128,error,error,128,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-195054956,1,['error'],['error']
Availability,"Yes, that's how they are tagged. I don't think that the corresponding RI or JK-FIT basis set are available. In any case I merged the basis sets with those in cc-pwCVXZ.gbs so if we want to go with the uniform name they are ready.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/331#issuecomment-205807773:97,avail,available,97,https://psicode.org,https://github.com/psi4/psi4/pull/331#issuecomment-205807773,1,['avail'],['available']
Availability,"Yes, that's just what we needed. We made some changes in 1.6 (finally delivering on the driver refactor we promised in the 1.4 paper) with a very high likelihood of causing bugs in how Psi4 passes information around, which is what your error appears to be. ""Check the interface to CFOUR works"" may have slipped through the cracks of things we tested. Lori would know for sure. I unfortunately don't have CFOUR so can't test this myself, but I'll agitate to get a hold of one of the developers who does.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155154225:236,error,error,236,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155154225,1,['error'],['error']
Availability,"Yes, that’s exactly how to fix that error. The API changed in Nov. (couple weeks ago for the public mirror), but stray cases like you found are still popping up. Thanks for the catch. Lori. > On Mar 1, 2015, at 3:53 PM, wpoely86 notifications@github.com wrote:; > ; > I was trying the sointegrals plugin with 14c78ea https://github.com/psi4/psi4public/commit/14c78eabdca86f8e094576890518d93d300d2500 but I got a exception:; > ; > RuntimeError: CoordEntry::basisset: Basisset not set for H and type of BASIS; > GDB show this as the traceback:; > ; > #0 __cxa_throw () at ../../../../libstdc++-v3/libsupc++/eh_throw.cc:62; > #1 0x0000000001967124 in psi::CoordEntry::basisset (this=0x3fcde30, type=...) at src/lib/libmints/coordentry.cc:125; > #2 0x0000000001883551 in psi::BasisSet::construct (parser=..., mol=..., type=...) at src/lib/libmints/basisset.cc:718; > #3 0x00002aaab8f93f66 in sointegrals () from ./sointegrals.so; > Has something in the API changed that needs changing in the plugin?; > Replacing the line; > ; > shared_ptr<BasisSet> aoBasis = BasisSet::construct(parser, molecule, ""BASIS"");; > with; > ; > shared_ptr<BasisSet> aoBasis= BasisSet::pyconstruct_orbital(molecule, ""BASIS"", options.get_str(""BASIS""));; > seems to help. Is this the correct way of handling this?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/74.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/74#issuecomment-76630641:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/74#issuecomment-76630641,1,['error'],['error']
Availability,"Yes, the CIVector was never written so when the OPDM code wanted this from disk we saw the above error. @wpoely86 I have been making another pass at the CI code to clean up outstanding issues. Besides the issues already posted here to GitHub do you have any other requests/suggestions/problems?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83#issuecomment-190697268:97,error,error,97,https://psicode.org,https://github.com/psi4/psi4/issues/83#issuecomment-190697268,1,['error'],['error']
Availability,"Yes, the error remains upon replacing the ZMAT line to use integer indices.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325#issuecomment-434795004:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/1325#issuecomment-434795004,1,['error'],['error']
Availability,"Yes, the gradient itself should get symmetrized. So I know any deviations; that occur from a symmetric structure within optking are optking's fault; not simply amplification of an input asymmetry. On Wed, Mar 2, 2016 at 4:11 PM, Rob Parrish notifications@github.com; wrote:. > Yeah, this is likely numerical noise in the eigendecomposition stages of; > DF-SCF. As the errors are exceedingly small, I'd recommend just explicitly; > symmetrizing the gradient to the desired point group externally.; > ; > -Rob; > ; > On Wed, Mar 2, 2016 at 2:08 PM, Daniel Smith notifications@github.com; > wrote:; > ; > > Im guessing this is due to the fact that the DF JK algorithm runs in C1; > > symmetry.; > > ; > > It looks like the errors are exceedingly small, can we just resymmetrize; > > the molecule using built in functions after a optking step to retain the; > > symmetry?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/298#issuecomment-191455202.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/298#issuecomment-191455933.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/298#issuecomment-191456427:142,fault,fault,142,https://psicode.org,https://github.com/psi4/psi4/issues/298#issuecomment-191456427,6,"['error', 'fault']","['errors', 'fault']"
Availability,"Yes, the shortcoming of (T) on non-equilibrium structures is know.; PSI4 has UBCC(T) `energy('bcc(t)')` on a ROHF reference, but only conventional integrals with the `ccenergy` module. Maybe you already found it. You may want to have a look at Piecuch's methods (and his group's general work) for which now there is a plugin available https://github.com/piecuch-group/psi4_cct3 .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-611923735:325,avail,available,325,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-611923735,1,['avail'],['available']
Availability,"Yes, the symmetrize call is nice and should help cleanup any inevitable; small numerical noise. Would be great if it could be extended to; non-Abelian point groups! But the noise @wardence is seeing looks a bit; more serious than just roundoff error. (Sorry to tease an issue before it; gets posted.). On Tue, Dec 12, 2017 at 3:17 PM, Andy Simmonett <notifications@github.com>; wrote:. > I think that a little noise in the gradients is inevitable with so many; > moving parts; that's why we have calls like this; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/scfgrad/scf_grad.cc#L274-L275>; > for all (I think) gradients throughout the code. It sounds like we just; > need to consider non-Abelian symmetry in this routine to fix the issue; > you're describing; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/867#issuecomment-351180986>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdgWeF2gB7_UhJZNjJt2DDz91wdahks5s_t9IgaJpZM4QonpI>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-351195906:244,error,error,244,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-351195906,1,['error'],['error']
Availability,"Yes, this is a bug. The wrong one should produce an error. Take a look at the `remove_symmetry` routine of `Matrix`. Something like the following might work:. ```; MintsHelper helper(wfn->basisset(), wfn->options(), 0);; SharedMatrix sotoao = helper.petite_list()->sotoao();. SharedMatrix work; work = SharedMatrix( new Matrix( ""work"", num_irreps, nsopi, nmopi ) );; SharedMatrix AO_RDM; AO_RDM = SharedMatrix( new Matrix( nao, nao ) );; AO_RDM->remove_symmetry (work, sotoao);; ```. There are various examples of using `remove_symmetry` in `libmints/writer.cc` and `libscf_solver/hf.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/274#issuecomment-187696803:52,error,error,52,https://psicode.org,https://github.com/psi4/psi4/issues/274#issuecomment-187696803,1,['error'],['error']
Availability,"Yes, this is a much longed for feature in Psi4, since there's no initial SCF procedure. Psi4 relies - surprisingly succesfully - on the chance that when started from even bad orbitals, the SCF converges without difficulty. The only problem case is some complicated transition metal systems where the procedure just does not converge since there are big errors in any direction. For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are phy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:353,error,errors,353,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,4,"['error', 'reliab']","['errors', 'reliably']"
Availability,"Yes, this is an embarrassing but rare known issue. It's not unalike the problem mentioned in #782 where geometry updates were interpreted in a different frame from internal representation leading to surprise results. Only in this case it's a units problem. There isn't a ready solution, so it's simply in mind to be fixed at next Mol spec iteration (in progress). If you hit it in the meantime, just toggle [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsmolecule.py#L1165) with `if True:` (and re-make to copy the file); it's harmless so long as your input geometry doesn't actually have overlapping atoms. The class was designed better than this; there was a later decision that leads to this error popping up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/804#issuecomment-333541702:725,error,error,725,https://psicode.org,https://github.com/psi4/psi4/issues/804#issuecomment-333541702,2,['error'],['error']
Availability,"Yes, this is from my fork generated and built yesterday. All old versions, including the old installations were removed. TDC. Sent from my iPhone. > On Nov 6, 2016, at 8:34 AM, Justin Turney notifications@github.com wrote:; > ; > That error triggers when psi is trying to run an input file. The plugin code isn't getting called. Can you confirm the correct psi is being called?; > ; > > On Nov 6, 2016, at 8:06 AM, T. Daniel Crawford notifications@github.com wrote:; > > ; > > [draco:~/src] crawdad% psi4 --new-plugin myplugin; > > Traceback (most recent call last):; > > File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; > > raise KeyError(""The file %s does not exist."" % args[""input""]); > > KeyError: 'The file input.dat does not exist.'; > > ; > > This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503#issuecomment-258681365:235,error,error,235,https://psicode.org,https://github.com/psi4/psi4/issues/503#issuecomment-258681365,1,['error'],['error']
Availability,"Yes, we have recently pushed a very large update to how data handling is passed in Psi4. Please change your input to the following:. ``` python; scf_e, scf_wfn = energy('scf', return_wfn=True); oeprop(scf_wfn, ""MULLIKEN_CHARGES""); ```. Effectively, there is no longer a global wavefunction and you must explicitly pass wavefunctions around. Sowreap should fail at the moment (has not had a wavefunction_pass update yet). Can you please post the sapt4 error and the git reference hash?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184837562:451,error,error,451,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184837562,1,['error'],['error']
Availability,"Yes, you're correct. Turns out I made a copy error that added duplicates of lines 26-50 at the end of the file. Thank you, sorry for the waste in time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/158#issuecomment-129559902:45,error,error,45,https://psicode.org,https://github.com/psi4/psi4/issues/158#issuecomment-129559902,1,['error'],['error']
Availability,"Yes, you're right, Andy, there is an inconsistency. I believe that gdma is actually correct as it now stands, and there's no error in Psi4, but I need to remove the inconsistency.; It is a such a help to have someone else look at the code and see what I hadn't seen myself. Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574#issuecomment-472547946:125,error,error,125,https://psicode.org,https://github.com/psi4/psi4/issues/1574#issuecomment-472547946,1,['error'],['error']
Availability,"Yes. The forums have been down since Thursday of last week. @lothian is working on getting it restored, but that involves a rather time-consuming backup and an operating system update. In the meantime, ask questions as issues (as you just did) or [on Slack](https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Q).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740:26,down,down,26,https://psicode.org,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740,1,['down'],['down']
Availability,"Yes. Though as I've fallen down on my conda-building duties, haven't personally confirmed. Should be safe to close.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-370246501:27,down,down,27,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-370246501,1,['down'],['down']
Availability,"You are correct that the `adc` is only available as `conv`. Thus `mtd_type` is not necessarily needed for now. Unless `adcc` will support it sometime soon ;-) . You mentioned an inconsistent density being returned. This is OK but should be mentioned in the manual. Currently within psi4, e.g. simple MP2 single points also just return the SCF density.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-548702880:39,avail,available,39,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-548702880,2,['avail'],['available']
Availability,"You can also grab the Fedora hacks to the build system for using system copies of libint and libxc. Susi Lehtola; Sent from my phone so excuse my brevity. On 4 Jan 2019, at 20.08, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. * You can ignore what I said about py27, too. v1.2.1 will be good with 2.7, 3.5, 3.6 (and probably 3.7, though not tested). But boost is definitely not used c. v1.1. * I'm trying to remember the AM conventions. I think it's that quicktests will pass with AM5, while full tests requires AM6. Those ""rules"" may have broken down, so it's possible that some of those tests will heal with higher AM libint. * If you can cat Testing/Temporary/LastTest*log after ctest, that may be helpful for diagnosis. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1302#issuecomment-451522000>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ3x2SVRgbmVeBVe4bggiuHn4v8dQks5u_5higaJpZM4XyNWQ>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451527522:583,down,down,583,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451527522,1,['down'],['down']
Availability,"You can fix the `MKL FATAL ERROR` by `LD_PRELOAD=/path/to/libmkl_rt.so psi4`. Yes, #563 or a near relative will fix that properly w/o the preload. When you run the `bin/psi4` ""executable"", it hunts down its `lib/psi4/__init__.py` to load psi4 as a python module. I wouldn't have expected it to be confused by a symlink, but I suppose it's possible. I'll have to try it out. Glad the python detection seems to be working consistently now. Your CMake logs look good (the unnerving ""detached HEAD"" is just because we pin to tags or commits for dependencies). The odd python3.4 detection in the pybind11 CMake config is to be expected, since none of the environment was passed over to pybind11 because it doesn't matter at that stage. On the now-healed compilation, I was just warned today (@bennybp) that CMake _does_ search your install (not stage, install) dir for dependencies, so perhaps your hunch was right.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273738266:27,ERROR,ERROR,27,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273738266,2,"['ERROR', 'down']","['ERROR', 'down']"
Availability,"You have hit The Rebase Error! Fear not, we can solve this. . Follow the advice in https://github.com/psi4/psi4/pull/1490#issuecomment-457765390. In your case, you'll only want the pure-you commits: 1e5cf3a, b9c1a00, 11307b7, 50d44d6 in that order. Post here if you've any questions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-492708985:24,Error,Error,24,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-492708985,1,['Error'],['Error']
Availability,"You may check energy and gradients with respect to DFOCC CD-OMP2.5 code. In the case of energy with CD tolerance of 10^-14, CD becomes exact. Hence, you may verify your changes with respect to DFOCC module. In the case of OMP2.5 gradient you may compute gradient with a 5 point formula again with CD-OMP2.5 energies. Alternatively, you may use DF-OMP2.5 gradient in a small primary basis set with a very large auxiliary basis. As long as you can reproduce my results in OMP2.5 paper (with CDS) or you can get the same results with CD-OMP2.5, you are welcome to make any change in OCC module. Frankly speaking, I have focused on DFOCC since 2014. @JonathonMisiewicz @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1808#issuecomment-592130784:103,toler,tolerance,103,https://psicode.org,https://github.com/psi4/psi4/issues/1808#issuecomment-592130784,1,['toler'],['tolerance']
Availability,You may have to replace `*` with `s` as [described here](http://psicode.org/psi4manual/master/basissets.html#user-defined-basis-sets). You'll have to post the error and input to get specific advice.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823#issuecomment-337917955:159,error,error,159,https://psicode.org,https://github.com/psi4/psi4/issues/823#issuecomment-337917955,1,['error'],['error']
Availability,"You may have to wait a bit before you get a response on this one, as the team member working on it (Jet) just got married this weekend. :). ## -TDC . Prof. T. Daniel Crawford; crawdad@vt.edu; 540-231-7760. On Apr 28, 2014, at 6:57 PM, rxk900 notifications@github.com wrote:. > Hello,; > Has this been resolved? I have just hit that error:; > iwl_buf_init: Can't open file 33; > with a straight ccsd calculation. I've been looking into coupled cluster variants for one of our users who has a monster job which is giving our programs all sorts of grief. I decided to simplify and go with something easily doable - molpro caffeine test with cc-pvtz basis (input as below) but the default psi4 calculation seems to be grinding slowly due to IO (clocking 2% cpu utilisation of 16 processors) and ""scf_type direct"" gives the aforementioned error.; > I'm using a fresh build I pulled(?) yesterday.; > Best wishes,; > Rika; > ; > molecule caffeine {; > units bohr; > 0 1; > C 1.50 -0.505274704 0.000000; > C -0.535187033 -2.058190923 0.000000; > C 2.65 -4.522014770 0.000000; > C 1.346731167 2.284891446 0.000000; > C -3.463010598 1.525507419 0.000000; > C -1.745695607 5.842896101 0.000000; > C -5.228750999 -2.835032850 0.000000; > C 6.295922772 -1.343301717 0.000000; > N 3.617453017 -2.104182389 0.000000; > N 0.151176399 -4.614309103 0.000000; > N -3.029497084 -1.135014970 0.000000; > N -1.247933362 3.102880179 0.000000; > O 3.102683166 3.787581194 0.000000; > O -5.585618888 2.429058396 0.000000; > H 3.895327083 -6.157733721 0.000000; > H -2.816386000 6.395195000 -1.672580; > H -2.816386000 6.395195000 1.672580; > H 0.068926104 6.808767386 0.000000; > H -6.392104000 -2.520913000 -1.673960; > H -6.392104000 -2.520913000 1.673960; > H -4.537919087 -4.771667968 0.000000; > H 7.459103496 -3.040539942 0.000000; > H 6.719940000 -0.221440000 1.677441; > H 6.719940000 -0.221440000 -1.677441; > }; > ; > set basis cc-pvtz; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/35#issuecomment-41633408:332,error,error,332,https://psicode.org,https://github.com/psi4/psi4/issues/35#issuecomment-41633408,4,['error'],['error']
Availability,"You may verify your changes with respect to DFOCC CD-OMP2.5 code. In the case of energy with CD tolerance of 10^-14, CD becomes exact. Hence, you may verify your changes with respect to DFOCC module. As long as you can reproduce my results in OMP2.5 paper (with CDS) or you can get the same results with CD-OMP2.5, you are welcome to make any change in OCC module. Frankly speaking, I have focused on DFOCC since 2014. @JonathonMisiewicz @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1809#issuecomment-592131837:96,toler,tolerance,96,https://psicode.org,https://github.com/psi4/psi4/pull/1809#issuecomment-592131837,1,['toler'],['tolerance']
Availability,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004,4,['error'],['error']
Availability,"You're gaining quite the reputation for hunting down difficult and obscure bugs. Thanks a lot! At first glance, I think you're right about the `size_t` being a good solution, but I'll hold off saying anything definitive about that until I can look at it in a less sleep deprived state.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/685#issuecomment-297152955:48,down,down,48,https://psicode.org,https://github.com/psi4/psi4/pull/685#issuecomment-297152955,1,['down'],['down']
Availability,"You're right about the potential for plugins. My vote is to ping @fevangelista to see if any of these are needed in Forte. If not, I suggest we remove them and encourage plugin writers to file issues for missing bindings.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1314#issuecomment-433449526:60,ping,ping,60,https://psicode.org,https://github.com/psi4/psi4/pull/1314#issuecomment-433449526,1,['ping'],['ping']
Availability,"You're right on 2b, there's a slight logic error that I was evading. Fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383224938:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383224938,1,['error'],['error']
Availability,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-362954523:394,down,down,394,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523,1,['down'],['down']
Availability,"Your Linux guru is correct, you will need a newer compiler. The error is; because your compiler does not support C++11. Check out:. https://github.com/psi4/psi4public/wiki/9_CXX. for our current C++ compiler requirements. You may want to just consider; downloading the precompiled binaries, see:. https://github.com/psi4/psi4public/wiki/1_Obtaining#condabinary. for more information. Hello. I was trying to build Psi4 onto a cluster and I encountered this; error:. $psisource/src/lib/libmints/oeprop.h(116): error: data member; initializer is not allowed; int max_noon_ = 3;. compilation aborted for; /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: **\* [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: **\* [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: **\* [all] Error 2. I was told by my Linux guru to try different compilers and libraries in; case that the code is incompatible with my system. I was building using; Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python; 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe; this is a bug. Let me know if you'd like more information. Thanks,; David. —; Reply to this email directly or view it on GitHub; https://github.com/psi4/psi4public/issues/188.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/188#issuecomment-156789433:64,error,error,64,https://psicode.org,https://github.com/psi4/psi4/issues/188#issuecomment-156789433,8,"['Error', 'down', 'error']","['Error', 'downloading', 'error']"
Availability,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370161881:297,error,error,297,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881,1,['error'],['error']
Availability,"You’re not mistaken — forum has been unreliable for over a week. We haven’t determined exactly which service is at fault, but it’s on the todo list.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1774#issuecomment-568835165:115,fault,fault,115,https://psicode.org,https://github.com/psi4/psi4/issues/1774#issuecomment-568835165,1,['fault'],['fault']
Availability,"Yup - adding the missing ```reset_occ = True``` fixes the issue -- however, the guess energy becomes very bad. (I'm not sure this can be solved; you'd just want to use a basis guess from a smaller one with the same ECP!). Anyway, the fix is in the ```sad_rohf``` branch, which will be merged for #1429. Unfortunately, the merge doesn't appear to be going anywhere until the ECPs are fixed, since the ```dfmp2-ecp``` test is producing junk if you change the guess, see #1433 . And this is exactly what happens with your example as well - once the occupations have been changed, the calculation gives the nonsensical result; ```; @DF-RHF iter 100: -259.15000393594977 5.10693e-09 3.69243e-01 DIIS. PsiException: Could not converge SCF iterations in 100 iterations.; ```; It's looking very much like the ECP Hamiltonian is asymmetric. There's no way the DIIS error should be so large with such a small energy change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1439#issuecomment-449015958:856,error,error,856,https://psicode.org,https://github.com/psi4/psi4/issues/1439#issuecomment-449015958,1,['error'],['error']
Availability,"Yup, like I said: the error is that the code is not checking if the matrices are of zero size. Should be an easy fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1966#issuecomment-662919389:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/1966#issuecomment-662919389,1,['error'],['error']
Availability,"Z@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32716,error,error,32716,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:37453,error,error,37453,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"[Easybuild](https://hpcugent.github.io/easybuild/) is not an alternative to CMake or autoconf. The idea is to have an easy way to make reproducible builds and modules. Everything in the stack should also be optimally build, meaning utilizing the hardware to its full extend (for example, if AVX2 or infiniband is available, we will use it). Easybuild will take care of all dependencies. It will avoid using the OS installed (old) versions of software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after building a compiler (GCC/intel/...) from scratch. We also patch out any problem. Psi4 for example hard codes it's build path for the generation of new plugins. This is not desirable on a HPC system. Some software is also not adjusted to be build by anything other than GCC. We make it work with intel too. Some software doesn't even have a real build system other than a list of makefiles that usually don't work out of the box. We fix that so the build is reproducible. . It's primarily meant for HPC sites. If somebody adds support for a piece of software, other people can reuse it with one command. I use it to build Psi4 in production. If you're developing, Easybuild is useful for building all up to date versions of dependencies. On our systems, if I run: module load PSI, I get a psi4 (a git version from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for example GCC-5.1, it takes one command. Adding a GCC subproject to Psi sounds like a bad idea. Building GCC is not a trivial task.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105224328:313,avail,available,313,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105224328,1,['avail'],['available']
Availability,[test.tar.gz](https://github.com/psi4/psi4/files/7019263/test.tar.gz); Here I uploaded my input and result for I-SAPT example. Maybe you can help to test them to see wheter there is any error in my environment.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281#issuecomment-902437558:186,error,error,186,https://psicode.org,https://github.com/psi4/psi4/issues/2281#issuecomment-902437558,1,['error'],['error']
Availability,"\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7125,error,error,7125,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/qcdb/molecule.py:1298: in run_dftd3; verbose=verbose); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. molrec = {'elbl': ['', '', '', '', '', '', ...], 'elea': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}; name_hint = 'b3lyp', level_hint = 'd2', param_tweaks = None, ptype = 'gradient', dashcoeff_supplement = None; verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:10115,error,error,10115,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['error'],['error']
Availability,"_, here's my proposal for how to make the code more readable.; > ; > First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate.; > ; > The code is now divided into the following => level chunks:; > ; > => Prep Auxiliary Quantities <=; > ; > * Zeroing, Sizing, Atom Blocking all go here; > ; > => Prep Atom Pairs <=; > ; > * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it.; > ; > => Prep Bra-Bra Shell Pairs <=; > ; > * What is currently, ""Store shell pairs that are significant by Schwarz estimate""; > ; > => Prep Bra-Ket Shell Pairs <=; > ; > * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets.; > ; > => Integral Formation Loop <=; > ; > * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning.; > ; > How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look.; > ; > And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes. Made the changes. Please take another look.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248:1583,down,down,1583,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248,2,['down'],['down']
Availability,"_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10825,Error,Error,10825,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,4,"['Error', 'error']","['Error', 'error']"
Availability,"_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19688,error,error,19688,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DIIS_TRANSITION', 'SCF_MEM_SAFETY_FACTOR', 'SCF_PROPERTIES', 'SCF_SUBTYPE', 'SCF_TYPE', 'SCHMIDT_ADD_RESIDUAL_TOLERANCE', 'SCREENING', 'SCSN_MP2', 'SCS_CCSD', 'SCS_CEPA', 'SCS_MP2', 'SCS_TYPE', 'SEKINO', 'SEMICANONICAL', 'SF_RESTRICT', 'SIGMA_OVERLAP', 'SIMPLE_STEP_SCALING', 'SINGLES_PRINT', 'SMALL_CUTOFF', 'SOCC', 'SOLVER_CONVERGENCE', 'SOLVER_MAXITER', 'SOLVER_N_GUESS', 'SOLVER_N_ROOT', 'SOLVER_PRECONDITION', 'SOLVER_ROOTS_PER_IRREP', 'SOSCF', 'SOSCF_CONV', 'SOSCF_MAX_ITER', 'SOSCF_MIN_ITER', 'SOSCF_PRINT', 'SOSCF_START_CONVERGENCE', 'SOS_TYPE', 'SPIN_SCALE_TYPE', 'SSAPT0_SCALE', 'SS_E_CONVERGENCE', 'SS_R_CONVERGENCE', 'SS_SCALE', 'SS_SKIP_DIAG', 'SS_VECS_PER_ROOT', 'STABILITY_ADD_VECTORS', 'STABILITY_ANALYSIS', 'STABILITY_AUGMENT_SPACE_TOL', 'STABILITY_CHECK', 'STABILITY_CONVERGENCE', 'STABILITY_MAX_SPACE_SIZE', 'STABILITY_N_EIGENVALUES', 'STABILITY_N_GUESS_VECTORS', 'STEP_TYPE', 'SUMMATION_FIELDS', 'SYMMETRIZE', 'S_CHOLESKY_TOLERANCE', 'S_CUT', 'S_ORTHOGONALIZATION', 'S_TOLERANCE', 'T', 'T2_COUPLED', 'T3_WS_INCORE', 'TDM', 'TDSCF_COEFF_CUTOFF', 'TDSCF_GUESS', 'TDSCF_MAXITER', 'TDSCF_PRINT', 'TDSCF_R_CONVERGENCE', 'TDSCF_STATES', 'TDSCF_TDA', 'TDSCF_TDM_PRINT', 'TDSCF_TRIPLETS', 'TEST_B', 'TEST_DERIVATIVE_B', 'THETA_POINTS', 'THICKNESS', 'THREE_PARTICLE', 'TIKHONOW_MAX', 'TIKHONOW_OMEGA', 'TIKHONOW_TRIPLES', 'TILE_SZ', 'TPDM', 'TPDM_ABCD_TYPE', 'TRANSLATE_PSI4', 'TREE_EXPANSION_ORDER', 'TREE_THETA', 'TRIPLES_ALGORITHM', 'TRIPLES_DIIS', 'TRIPLES_IABC_TYPE', 'TRIPLES_LOW_MEMORY', 'TURN_ON_ACTV', 'T_AMPS', 'T_CUT_CLMO', 'T_CUT_CPAO', 'T_CUT_DO', 'T_CUT_DO_IJ', 'T_CUT_DO_PRE', 'T_CUT_MKN', 'T_CUT_PNO', 'T_CUT_PRE', 'UHF_NOONS', 'UPDATE', 'USE_DF_INTS', 'USE_SPIN_SYM', 'USE_SPIN_SYMMETRY', 'VAL_EX_LEVEL', 'VECS_CC3', 'VECS_PER_ROOT', 'WABEI_LOWDISK', 'WCOMBINE', 'WFN', 'WFN_SYM', 'WFN_TYPE', 'WRITER_FILE_LABEL', 'WRITE_NOS', 'WRITE_OPT_HISTORY', 'WRITE_OPT_RESULT', 'WRITE_TRAJECTORY', 'XI', 'XI_CONNECT', 'ZERO_INTERNAL_AMPS', 'ZETA']. Is 'tdscf_type' available? False",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:23612,avail,available,23612,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30770,error,error,30770,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40723,error,error,40723,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44755,error,error,44755,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"__cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14068,error,error,14068,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35470,error,error,35470,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43435,error,error,43435,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50291,error,error,50291,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check speci",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4849,Error,Error,4849,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,2,['Error'],['Error']
Availability,"_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonaliz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7795,error,error,7795,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,`.isidentifier()` for Py3 and sane error msg for Py2 seems reasonable. This is probably another reason why we mangle basis set names.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/650#issuecomment-286913242:35,error,error,35,https://psicode.org,https://github.com/psi4/psi4/issues/650#issuecomment-286913242,1,['error'],['error']
Availability,`/home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/introduction.rst:141: ERROR: Unexpected indentation.` appease the Sphinx,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2975#issuecomment-1572599789:84,ERROR,ERROR,84,https://psicode.org,https://github.com/psi4/psi4/pull/2975#issuecomment-1572599789,1,['ERROR'],['ERROR']
Availability,"`/home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:346: ERROR: Undefined substitution referenced: ""optking_frag_mode"".`. docs error above. probably needs double underscore after optking. > Do we have a figure in there yet illustrating the inter-fragment; definitions? I have no time to work on it today, but could tomorrow; (Saturday). interfrag figure would be great. but if we get to the point where everything else is ready, I think that could be a separate PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471:79,ERROR,ERROR,79,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,`DEFAULT_SYM_TOL` would simply become an attribute of the Molecule class that would have a getter/setter. The downside to this is it would be difficult to have calls like `symmetrize(double tol)`. It would simply always take the internal attribute.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/232#issuecomment-205862342:110,down,downside,110,https://psicode.org,https://github.com/psi4/psi4/issues/232#issuecomment-205862342,2,['down'],['downside']
Availability,"`ImportError: No module named oldpymodules`. yeah, this is py26. the code is missing a leading `.` for absolute import. my fault.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/169#issuecomment-133204949:123,fault,fault,123,https://psicode.org,https://github.com/psi4/psi4/issues/169#issuecomment-133204949,1,['fault'],['fault']
Availability,"`LLVM` compatibility with `MSVC` ABI is not yet complete (http://clang.llvm.org/docs/MSVCCompatibility.html), so compiling with `LLVM` and linking with the C++ library from `MSVC`, might give some problems. I got just one linkage problem! It happens when trying to create `psi::PsiOutStream` with `std::make_shared`, while passing `mode` argument:; ```c++; auto printer = std::make_shared<psi::PsiOutStream>(""filename"", std::ostream::trunc);. error LNK2001: unresolved external symbol ""__declspec(dllimport) public: static enum std::_Iosb<int>::_Openmode const std::_Iosb<int>::trunc"" (__imp_?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B); ```; but it works, in such cases:; ```c++; // Creating std::share_ptr explicitly; auto printer = std::shared_ptr(new psi::PsiOutStream(""filename"", std::ostream::trunc));. // Using the argument default value (mode = std::ostream::trunc); auto printer = std::make_shared<psi::PsiOutStream>(""filename"");. // Using a temporary variable; auto mode = std::ostream::trunc;; auto printer = std::make_shared<psi::PsiOutStream>(""filename"", mode);; ```; I use the last case to fix the code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425938802:443,error,error,443,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425938802,1,['error'],['error']
Availability,`Libint_MAX_AM_ERI` from https://github.com/psi4/psi4/blob/master/external/upstream/libint/CMakeLists.txt#L5 might be available. I have no confidence in my CMake scope predictions. May need to global it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1409#issuecomment-444991892:118,avail,available,118,https://psicode.org,https://github.com/psi4/psi4/pull/1409#issuecomment-444991892,1,['avail'],['available']
Availability,"`Molecule.geometry()` is providing all Cart coords, so the Mol should be fully specified and this should be safe (at first appearances). If opt/findif don't protest and a trial period proves safe, then I'm good with it. Downside is that we make `update_geometry()` even more rare and forgettable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/765#issuecomment-316154922:220,Down,Downside,220,https://psicode.org,https://github.com/psi4/psi4/issues/765#issuecomment-316154922,1,['Down'],['Downside']
Availability,`OS` is for one-step which I couldn't get to work in a robust manner. Please simply remove.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2635#issuecomment-1190895392:55,robust,robust,55,https://psicode.org,https://github.com/psi4/psi4/issues/2635#issuecomment-1190895392,2,['robust'],['robust']
Availability,"``` CMAKE_INSTALL_DATADIR=share```. %%DATADIR%% is not a literal, this is just an error message with substituted tokens. ```%%DATADIR%%=/usr/local/share/psi4```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1214286601:82,error,error,82,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1214286601,1,['error'],['error']
Availability,```; $ ctest -j 1 -E dft-bench --timeout 3600 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 394: python-vibanalysis; 1/411 Test #394: python-vibanalysis ............... Passed 799.52 sec; Start 178: fsapt1; 2/411 Test #178: fsapt1 ........................... Passed 1815.94 sec; Start 182: isapt1; 3/411 Test #182: isapt1 ........................... Passed 406.26 sec; Start 18: cbs-xtpl-func; 4/411 Test #18: cbs-xtpl-func .................... Passed 407.07 sec; Start 181: fsapt-allterms; 5/411 Test #181: fsapt-allterms ................... Passed 652.29 sec; Start 193: fd-freq-energy-large; 6/411 Test #193: fd-freq-energy-large ............. Passed 433.67 sec; Start 195: fd-freq-gradient-large; 7/411 Test #195: fd-freq-gradient-large ........... Passed 248.39 sec; Start 278: opt13; 8/411 Test #278: opt13 ............................ Passed 644.29 sec; Start 25: cc13a; 9/411 Test #25: cc13a ............................ Passed 188.07 sec; Start 113: dcft7; 10/411 Test #113: dcft7 ............................ Passed 207.25 sec; Start 205: frac-traverse; 11/411 Test #205: frac-traverse .................... Passed 169.73 sec; Start 316: sapt2; 12/411 Test #316: sapt2 ............................ Passed 287.30 sec; Start 318: sapt4; 13/411 Test #318: sapt4 ............................ Passed 1746.35 sec; Start 325: scf-bz2; 14/411 Test #325: scf-bz2 .......................... Passed 117.02 sec; Start 1: adc1; 15/411 Test #1: adc1 ............................. Passed 21.02 sec; Start 2: adc2; 16/411 Test #2: adc2 ............................. Passed 38.38 sec; Start 3: casscf-fzc-sp; 17/411 Test #3: casscf-fzc-sp .................... Passed 2.85 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.66 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.72 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.05 sec; Start 7: casscf-sp; 21/411 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:58,failure,failure,58,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 245: nbody-convergence; Start 405: python-vibanalysis; Start 181: fsapt1; Start 11: cbs-delta-energy; Start 185: isapt1; Start 18: cbs-xtpl-func; Start 184: fsapt-allterms; Start 196: fd-freq-energy-large; Start 198: fd-freq-gradient-large; Start 287: opt13; Start 28: cc13b; Start 310: pywrap-all; Start 107: dcft-grad2; Start 22: cc1; Start 32: cc15; Start 45: cc28; 1/415 Test #184: fsapt-allterms ................... Passed 110.85 sec; Start 110: dcft1; 2/415 Test #287: opt13 ............................ Passed 189.62 sec; Start 79: cc8; 3/415 Test #45: cc28 ............................. Passed 206.85 sec; Start 152: dfomp3-grad2; 4/415 Test #32: cc15 ............................. Passed 210.28 sec; Start 233: mp2-module; 5/415 Test #22: cc1 .............................. Passed 218.85 sec; Start 35: cc18; 6/415 Test #28: cc13b ............................ Passed 229.19 sec; Start 312: pywrap-cbs1; 7/415 Test #110: dcft1 ............................ Passed 127.34 sec; Start 27: cc13a; 8/415 Test #107: dcft-grad2 ....................... Passed 252.96 sec; Start 116: dcft7; 9/415 Test #79: cc8 .............................. Passed 81.11 sec; Start 208: frac-traverse; 10/415 Test #185: isapt1 ........................... Passed 272.01 sec; Start 326: sapt2; 11/415 Test #35: cc18 ............................. Passed 60.66 sec; Start 328: sapt4; 12/415 Test #245: nbody-convergence ................ Passed 293.73 sec; Start 335: scf-bz2; 13/415 Test #152: dfomp3-grad2 ..................... Passed 117.47 sec; Start 251: ocepa-grad2; 14/415 Test #233: mp2-module ....................... Passed 120.91 sec; Start 68: cc49; 15/415 Test #326: sapt2 ............................ Passed 97.27 sec; Start 58: cc4; 16/415 Test #208: frac-traverse .................... Passed 108.53 sec; Start 390: cc-module; 17/415 Test #198: fd-freq-gradient-large ....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 103: cubeprop-frontier; Start 112: dcft4; Start 46: cc3; Start 105: dcft-grad1; Start 36: cc2; Start 40: cc24; Start 147: dfomp2-grad3; Start 42: cc26; Start 302: pywrap-all; Start 39: cc23; Start 116: dcft8; Start 306: pywrap-checkrun-rhf; Start 37: cc21; Start 41: cc25; Start 43: cc27; Start 30: cc14; 1/413 Test #103: cubeprop-frontier ................ Passed 3.69 sec; Start 308: pywrap-checkrun-uhf; 2/413 Test #30: cc14 ............................. Passed 795.14 sec; Start 396: python-vibanalysis; 3/413 Test #43: cc27 ............................. Passed 816.39 sec; Start 77: cc7; 4/413 Test #39: cc23 ............................. Passed 918.13 sec; Start 242: ocepa-freq1; 5/413 Test #37: cc21 ............................. Passed 921.94 sec; Start 32: cc16; 6/413 Test #41: cc25 ............................. Passed 923.19 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 1051.53 sec; Start 307: pywrap-checkrun-rohf; 8/413 Test #116: dcft8 ............................ Passed 1117.15 sec; Start 157: dft-grad-lr3; 9/413 Test #40: cc24 ............................. Passed 1209.65 sec; Start 229: mp2-def2; 10/413 Test #36: cc2 .............................. Passed 1231.86 sec; Start 180: fsapt1; 11/413 Test #32: cc16 ............................. Passed 452.47 sec; Start 113: dcft5; 12/413 Test #25: cc13 ............................. Passed 471.17 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #147: dfomp2-grad3 ..................... Passed 1406.19 sec; Start 29: cc13d; 14/413 Test #105: dcft-grad1 ....................... Passed 1455.46 sec; Start 184: isapt1; 15/413 Test #308: pywrap-checkrun-uhf .............. Passed 1474.71 sec; Start 11: cbs-delta-energy; 16/413 Test #306: pywrap-checkrun-rhf .............. Passed 1487.57 sec; Start 48: cc31; 17/413 Test #302: pywrap-all ....................... Passed 1522.41",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 37: cc21; Start 46: cc3; Start 41: cc25; Start 39: cc23; Start 146: dfomp2-grad3; Start 77: cc7; Start 43: cc27; Start 306: pywrap-checkrun-rohf; Start 241: ocepa-freq1; Start 395: python-vibanalysis; Start 40: cc24; 1/412 Test #241: ocepa-freq1 ...................... Passed 939.44 sec; Start 42: cc26; 2/412 Test #40: cc24 ............................. Passed 990.28 sec; Start 115: dcft8; 3/412 Test #77: cc7 .............................. Passed 1076.46 sec; Start 36: cc2; 4/412 Test #43: cc27 ............................. Passed 1079.37 sec; Start 25: cc13; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 1087.82 sec; Start 156: dft-grad-lr3; 6/412 Test #39: cc23 ............................. Passed 1252.44 sec; Start 228: mp2-def2; 7/412 Test #37: cc21 ............................. Passed 1273.54 sec; Start 30: cc14; 8/412 Test #41: cc25 ............................. Passed 1338.20 sec; Start 179: fsapt1; 9/412 Test #395: python-vibanalysis ............... Passed 1362.17 sec; Start 112: dcft5; 10/412 Test #156: dft-grad-lr3 ..................... Passed 428.34 sec; Start 29: cc13d; 11/412 Test #307: pywrap-checkrun-uhf .............. Passed 1529.35 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #305: pywrap-checkrun-rhf .............. Passed 1560.06 sec; Start 360: tu6-cp-ne2; 13/412 Test #146: dfomp2-grad3 ..................... Passed 1580.99 sec; Start 183: isapt1; 14/412 Test #46: cc3 .............................. Passed 1614.45 sec; Start 387: cookbook-rohf-orb-rot; 15/412 Test #301: pywrap-all ....................... Passed 1620.63 sec; Start 45: cc29; 16/412 Test #104: dcft-grad1 ....................... Passed 1653.03 sec; Start 380: cc-module; 17/412 Test #228: mp2-def2 .........................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 37: cc21; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 46: cc3; Start 41: cc25; Start 39: cc23; Start 77: cc7; Start 146: dfomp2-grad3; Start 43: cc27; Start 395: python-vibanalysis; Start 241: ocepa-freq1; Start 306: pywrap-checkrun-rohf; Start 42: cc26; 1/412 Test #42: cc26 ............................. Passed 687.16 sec; Start 115: dcft8; 2/412 Test #241: ocepa-freq1 ...................... Passed 734.19 sec; Start 40: cc24; 3/412 Test #77: cc7 .............................. Passed 831.63 sec; Start 36: cc2; 4/412 Test #43: cc27 ............................. Passed 832.91 sec; Start 156: dft-grad-lr3; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 852.37 sec; Start 25: cc13; 6/412 Test #41: cc25 ............................. Passed 1089.91 sec; Start 228: mp2-def2; 7/412 Test #37: cc21 ............................. Passed 1123.37 sec; Start 112: dcft5; 8/412 Test #39: cc23 ............................. Passed 1129.22 sec; Start 30: cc14; 9/412 Test #395: python-vibanalysis ............... Passed 1214.88 sec; Start 179: fsapt1; 10/412 Test #156: dft-grad-lr3 ..................... Passed 406.18 sec; Start 29: cc13d; 11/412 Test #146: dfomp2-grad3 ..................... Passed 1250.03 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #307: pywrap-checkrun-uhf .............. Passed 1252.06 sec; Start 183: isapt1; 13/412 Test #46: cc3 .............................. Passed 1265.86 sec; Start 360: tu6-cp-ne2; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1275.03 sec; Start 45: cc29; 15/412 Test #301: pywrap-all ....................... Passed 1314.72 sec; Start 71: cc52; 16/412 Test #115: dcft8 ............................ Passed 739.08 sec; Start 387: cookbook-rohf-orb-rot; 17/412 Test #104: dcft-grad1 ....................... Passed 14",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 112: dcft4; Start 46: cc3; Start 105: dcft-grad1; Start 147: dfomp2-grad3; Start 36: cc2; Start 40: cc24; Start 302: pywrap-all; Start 42: cc26; Start 306: pywrap-checkrun-rhf; Start 116: dcft8; Start 39: cc23; Start 308: pywrap-checkrun-uhf; Start 41: cc25; Start 37: cc21; Start 43: cc27; Start 30: cc14; 1/413 Test #43: cc27 ............................. Passed 417.34 sec; Start 396: python-vibanalysis; 2/413 Test #30: cc14 ............................. Passed 440.89 sec; Start 77: cc7; 3/413 Test #37: cc21 ............................. Passed 462.06 sec; Start 242: ocepa-freq1; 4/413 Test #41: cc25 ............................. Passed 464.40 sec; Start 307: pywrap-checkrun-rohf; 5/413 Test #39: cc23 ............................. Passed 467.64 sec; Start 32: cc16; 6/413 Test #116: dcft8 ............................ Passed 546.67 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 674.21 sec; Start 157: dft-grad-lr3; 8/413 Test #36: cc2 .............................. Passed 736.38 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 744.74 sec; Start 229: mp2-def2; 10/413 Test #32: cc16 ............................. Passed 318.84 sec; Start 113: dcft5; 11/413 Test #25: cc13 ............................. Passed 288.74 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #308: pywrap-checkrun-uhf .............. Passed 858.01 sec; Start 29: cc13d; 13/413 Test #105: dcft-grad1 ....................... Passed 867.96 sec; Start 184: isapt1; 14/413 Test #77: cc7 .............................. Passed 433.83 sec; Start 11: cbs-delta-energy; 15/413 Test #306: pywrap-checkrun-rhf .............. Passed 876.28 sec; Start 48: cc31; 16/413 Test #40: cc24 ............................. Passed 876.40 sec; Start 114: dcft6; 17/413 Test #302: pywrap-all ....................... Passed 905.57 sec; Start 45: cc29",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 122: dfccdl1; Start 124: dfccsd1; Start 395: python-vibanalysis; Start 156: dft-grad-lr3; Start 104: dcft-grad1; Start 228: mp2-def2; Start 179: fsapt1; Start 111: dcft4; Start 301: pywrap-all; Start 39: cc23; Start 183: isapt1; Start 37: cc21; Start 36: cc2; Start 42: cc26; Start 46: cc3; Start 40: cc24; 1/412 Test #122: dfccdl1 .......................... Passed 6.36 sec; Start 18: cbs-xtpl-func; 2/412 Test #124: dfccsd1 .......................... Passed 10.68 sec; Start 182: fsapt-allterms; 3/412 Test #42: cc26 ............................. Passed 241.32 sec; Start 194: fd-freq-energy-large; 4/412 Test #36: cc2 .............................. Passed 267.40 sec; Start 196: fd-freq-gradient-large; 5/412 Test #40: cc24 ............................. Passed 276.21 sec; Start 279: opt13; 6/412 Test #37: cc21 ............................. Passed 307.87 sec; Start 241: ocepa-freq1; 7/412 Test #39: cc23 ............................. Passed 310.94 sec; Start 41: cc25; 8/412 Test #46: cc3 .............................. Passed 370.77 sec; Start 146: dfomp2-grad3; 9/412 Test #228: mp2-def2 ......................... Passed 429.97 sec; Start 307: pywrap-checkrun-uhf; 10/412 Test #183: isapt1 ........................... Passed 436.25 sec; Start 305: pywrap-checkrun-rhf; 11/412 Test #156: dft-grad-lr3 ..................... Passed 470.44 sec; Start 112: dcft5; 12/412 Test #104: dcft-grad1 ....................... Passed 479.75 sec; Start 374: dft-custom-mgga; 13/412 Test #111: dcft4 ............................ Passed 507.03 sec; Start 43: cc27; 14/412 Test #301: pywrap-all ....................... Passed 521.85 sec; Start 113: dcft6; 15/412 Test #41: cc25 ............................. Passed 236.96 sec; Start 321: sapt6; 16/412 Test #241: ocepa-freq1 ...................... Passed 240.27 sec; Start 77: cc7; 17/412 Test #196: fd-freq-gradient-large ......",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 36: cc2; Start 40: cc24; Start 46: cc3; Start 39: cc23; Start 37: cc21; Start 42: cc26; Start 41: cc25; Start 43: cc27; Start 112: dcft4; Start 105: dcft-grad1; Start 396: python-vibanalysis; Start 30: cc14; Start 147: dfomp2-grad3; Start 157: dft-grad-lr3; Start 229: mp2-def2; Start 32: cc16; 1/413 Test #229: mp2-def2 ......................... Passed 366.62 sec; Start 25: cc13; 2/413 Test #157: dft-grad-lr3 ..................... Passed 422.32 sec; Start 180: fsapt1; 3/413 Test #32: cc16 ............................. Passed 556.73 sec; Start 116: dcft8; 4/413 Test #30: cc14 ............................. Passed 752.25 sec; Start 29: cc13d; 5/413 Test #43: cc27 ............................. Passed 867.54 sec; Start 77: cc7; 6/413 Test #39: cc23 ............................. Passed 965.39 sec; Start 113: dcft5; 7/413 Test #25: cc13 ............................. Passed 598.94 sec; Start 242: ocepa-freq1; 8/413 Test #41: cc25 ............................. Passed 970.65 sec; Start 184: isapt1; 9/413 Test #37: cc21 ............................. Passed 984.02 sec; Start 45: cc29; 10/413 Test #42: cc26 ............................. Passed 997.98 sec; Start 61: cc43; 11/413 Test #29: cc13d ............................ Passed 374.09 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #40: cc24 ............................. Passed 1131.64 sec; Start 59: cc41; 13/413 Test #36: cc2 .............................. Passed 1134.77 sec; Start 48: cc31; 14/413 Test #61: cc43 ............................. Passed 150.20 sec; Start 302: pywrap-all; 15/413 Test #45: cc29 ............................. Passed 198.44 sec; Start 306: pywrap-checkrun-rhf; 16/413 Test #396: python-vibanalysis ............... Passed 1286.48 sec; Start 114: dcft6; 17/413 Test #59: cc41 ............................. Passed 185.32 sec; Start 18: cbs-xtpl-func; 18/413 Test #184: isapt1 .........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 23.85 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 4.04 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 2.66 sec; Start 5: casscf-sa-sp; 4/411 Test #2: adc2 ............................. Passed 42.07 sec; Start 6: ao-casscf-sp; 5/411 Test #6: ao-casscf-sp ..................... Passed 4.18 sec; Start 7: casscf-sp; 6/411 Test #5: casscf-sa-sp ..................... Passed 16.65 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 2.19 sec; Start 9: castup2; 8/411 Test #9: castup2 .......................... Passed 8.79 sec; Start 10: castup3; 9/411 Test #7: casscf-sp ........................ Passed 13.45 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 5.96 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 25.52 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 63.99 sec; Start 14: cbs-xtpl-energy; 13/411 Test #325: scf-bz2 .......................... Passed 128.53 sec; Start 15: cbs-xtpl-freq; 14/411 Test #14: cbs-xtpl-energy .................. Passed 15.43 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 11.30 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 17.01 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt ...............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 395: python-vibanalysis; Start 179: fsapt1; Start 183: isapt1; Start 18: cbs-xtpl-func; Start 182: fsapt-allterms; Start 194: fd-freq-energy-large; Start 196: fd-freq-gradient-large; Start 279: opt13; Start 26: cc13a; Start 114: dcft7; Start 206: frac-traverse; Start 317: sapt2; Start 319: sapt4; Start 326: scf-bz2; Start 1: adc1; Start 2: adc2; 1/412 Test #1: adc1 ............................. Passed 40.38 sec; Start 3: casscf-fzc-sp; 2/412 Test #3: casscf-fzc-sp .................... Passed 7.58 sec; Start 4: casscf-semi; 3/412 Test #4: casscf-semi ...................... Passed 3.39 sec; Start 5: casscf-sa-sp; 4/412 Test #2: adc2 ............................. Passed 68.12 sec; Start 6: ao-casscf-sp; 5/412 Test #5: casscf-sa-sp ..................... Passed 17.41 sec; Start 7: casscf-sp; 6/412 Test #6: ao-casscf-sp ..................... Passed 8.11 sec; Start 8: castup1; 7/412 Test #8: castup1 .......................... Passed 3.07 sec; Start 9: castup2; 8/412 Test #7: casscf-sp ........................ Passed 14.70 sec; Start 10: castup3; 9/412 Test #9: castup2 .......................... Passed 10.03 sec; Start 11: cbs-delta-energy; 10/412 Test #10: castup3 .......................... Passed 8.30 sec; Start 12: cbs-parser; 11/412 Test #12: cbs-parser ....................... Passed 37.55 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #11: cbs-delta-energy ................. Passed 64.49 sec; Start 14: cbs-xtpl-energy; 13/412 Test #14: cbs-xtpl-energy .................. Passed 15.23 sec; Start 15: cbs-xtpl-freq; 14/412 Test #15: cbs-xtpl-freq .................... Passed 9.08 sec; Start 16: cbs-xtpl-gradient; 15/412 Test #326: scf-bz2 .......................... Passed 188.03 sec; Start 17: cbs-xtpl-opt; 16/412 Test #16: cbs-xtpl-gradient ................ Passed 24.11 sec; Start 19: cbs-xtpl-nbody; 17/412 Test #19: cbs-xtpl-nbody ...............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 395: python-vibanalysis; Start 41: cc25; Start 46: cc3; Start 37: cc21; Start 39: cc23; Start 104: dcft-grad1; Start 43: cc27; Start 111: dcft4; Start 156: dft-grad-lr3; Start 228: mp2-def2; Start 40: cc24; Start 36: cc2; Start 179: fsapt1; Start 301: pywrap-all; Start 146: dfomp2-grad3; Start 305: pywrap-checkrun-rhf; 1/412 Test #228: mp2-def2 ......................... Passed 422.59 sec; Start 42: cc26; 2/412 Test #156: dft-grad-lr3 ..................... Passed 456.14 sec; Start 307: pywrap-checkrun-uhf; 3/412 Test #36: cc2 .............................. Passed 642.46 sec; Start 77: cc7; 4/412 Test #40: cc24 ............................. Passed 651.87 sec; Start 241: ocepa-freq1; 5/412 Test #43: cc27 ............................. Passed 960.14 sec; Start 183: isapt1; 6/412 Test #39: cc23 ............................. Passed 1144.43 sec; Start 306: pywrap-checkrun-rohf; 7/412 Test #41: cc25 ............................. Passed 1174.58 sec; Start 25: cc13; 8/412 Test #146: dfomp2-grad3 ..................... Passed 1217.72 sec; Start 45: cc29; 9/412 Test #46: cc3 .............................. Passed 1255.05 sec; Start 29: cc13d; 10/412 Test #42: cc26 ............................. Passed 914.66 sec; Start 115: dcft8; 11/412 Test #183: isapt1 ........................... Passed 401.39 sec; Start 112: dcft5; 12/412 Test #395: python-vibanalysis ............... Passed 1424.43 sec; Start 18: cbs-xtpl-func; 13/412 Test #37: cc21 ............................. Passed 1446.40 sec; Start 182: fsapt-allterms; 14/412 Test #45: cc29 ............................. Passed 300.99 sec; Start 194: fd-freq-energy-large; 15/412 Test #104: dcft-grad1 ....................... Passed 1521.99 sec; Start 196: fd-freq-gradient-large; 16/412 Test #305: pywrap-checkrun-rhf .............. Passed 1605.76 sec; Start 279: opt13; 17/412 Test #301: pywrap-all .............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 3: casscf-fzc-sp; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 46: cc3; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 146: dfomp2-grad3; Start 37: cc21; Start 39: cc23; Start 41: cc25; Start 395: python-vibanalysis; Start 77: cc7; Start 43: cc27; Start 40: cc24; Start 306: pywrap-checkrun-rohf; 1/412 Test #3: casscf-fzc-sp .................... Passed 41.56 sec; Start 241: ocepa-freq1; 2/412 Test #43: cc27 ............................. Passed 853.53 sec; Start 42: cc26; 3/412 Test #77: cc7 .............................. Passed 857.39 sec; Start 36: cc2; 4/412 Test #40: cc24 ............................. Passed 881.10 sec; Start 115: dcft8; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 911.01 sec; Start 156: dft-grad-lr3; 6/412 Test #241: ocepa-freq1 ...................... Passed 872.67 sec; Start 228: mp2-def2; 7/412 Test #41: cc25 ............................. Passed 973.90 sec; Start 25: cc13; 8/412 Test #37: cc21 ............................. Passed 984.96 sec; Start 179: fsapt1; 9/412 Test #39: cc23 ............................. Passed 988.58 sec; Start 30: cc14; 10/412 Test #395: python-vibanalysis ............... Passed 1210.67 sec; Start 13: cbs-xtpl-alpha; 11/412 Test #146: dfomp2-grad3 ..................... Passed 1227.58 sec; Start 112: dcft5; 12/412 Test #46: cc3 .............................. Passed 1280.30 sec; Start 183: isapt1; 13/412 Test #228: mp2-def2 ......................... Passed 410.01 sec; Start 29: cc13d; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1326.94 sec; Start 360: tu6-cp-ne2; 15/412 Test #307: pywrap-checkrun-uhf .............. Passed 1329.33 sec; Start 387: cookbook-rohf-orb-rot; 16/412 Test #156: dft-grad-lr3 ..................... Passed 429.40 sec; Start 45: cc29; 17/412 Test #301: pywrap-all ....................... Passed 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 46: cc3; Start 112: dcft4; Start 105: dcft-grad1; Start 36: cc2; Start 40: cc24; Start 147: dfomp2-grad3; Start 42: cc26; Start 37: cc21; Start 39: cc23; Start 41: cc25; Start 43: cc27; Start 396: python-vibanalysis; Start 30: cc14; Start 116: dcft8; Start 302: pywrap-all; Start 25: cc13; 1/413 Test #25: cc13 ............................. Passed 343.48 sec; Start 77: cc7; 2/413 Test #43: cc27 ............................. Passed 564.16 sec; Start 306: pywrap-checkrun-rhf; 3/413 Test #41: cc25 ............................. Passed 634.21 sec; Start 242: ocepa-freq1; 4/413 Test #37: cc21 ............................. Passed 636.00 sec; Start 32: cc16; 5/413 Test #30: cc14 ............................. Passed 773.98 sec; Start 308: pywrap-checkrun-uhf; 6/413 Test #39: cc23 ............................. Passed 954.07 sec; Start 157: dft-grad-lr3; 7/413 Test #42: cc26 ............................. Passed 1005.92 sec; Start 229: mp2-def2; 8/413 Test #77: cc7 .............................. Passed 682.74 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 1064.72 sec; Start 113: dcft5; 10/413 Test #116: dcft8 ............................ Passed 1093.28 sec; Start 29: cc13d; 11/413 Test #32: cc16 ............................. Passed 458.97 sec; Start 307: pywrap-checkrun-rohf; 12/413 Test #40: cc24 ............................. Passed 1133.10 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #36: cc2 .............................. Passed 1137.87 sec; Start 184: isapt1; 14/413 Test #105: dcft-grad1 ....................... Passed 1187.32 sec; Start 48: cc31; 15/413 Test #242: ocepa-freq1 ...................... Passed 651.24 sec; Start 45: cc29; 16/413 Test #396: python-vibanalysis ............... Passed 1355.01 sec; Start 114: dcft6; 17/413 Test #29: cc13d ............................ Passed 265.22 sec; Start 59: cc41; 18/4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 98: cisd-sp; Start 243: ocepa1; Start 45: cc3; Start 103: dcft-grad1; Start 110: dcft4; Start 39: cc24; Start 35: cc2; Start 40: cc25; Start 38: cc23; Start 36: cc21; Start 41: cc26; Start 394: python-vibanalysis; Start 145: dfomp2-grad3; Start 42: cc27; Start 300: pywrap-all; Start 76: cc7; 1/411 Test #98: cisd-sp .......................... Passed 12.34 sec; Start 304: pywrap-checkrun-rhf; 2/411 Test #243: ocepa1 ........................... Passed 18.70 sec; Start 306: pywrap-checkrun-uhf; 3/411 Test #42: cc27 ............................. Passed 832.70 sec; Start 29: cc14; 4/411 Test #76: cc7 .............................. Passed 833.35 sec; Start 240: ocepa-freq1; 5/411 Test #41: cc26 ............................. Passed 876.66 sec; Start 155: dft-grad-lr3; 6/411 Test #38: cc23 ............................. Passed 937.42 sec; Start 114: dcft8; 7/411 Test #36: cc21 ............................. Passed 943.79 sec; Start 227: mp2-def2; 8/411 Test #40: cc25 ............................. Passed 955.88 sec; Start 178: fsapt1; 9/411 Test #35: cc2 .............................. Passed 975.82 sec; Start 111: dcft5; 10/411 Test #39: cc24 ............................. Passed 1000.55 sec; Start 13: cbs-xtpl-alpha; 11/411 Test #155: dft-grad-lr3 ..................... Passed 395.18 sec; Start 305: pywrap-checkrun-rohf; 12/411 Test #394: python-vibanalysis ............... Passed 1285.91 sec; Start 24: cc13; 13/411 Test #227: mp2-def2 ......................... Passed 371.74 sec; Start 31: cc16; 14/411 Test #29: cc14 ............................. Passed 619.00 sec; Start 28: cc13d; 15/411 Test #145: dfomp2-grad3 ..................... Passed 1456.77 sec; Start 182: isapt1; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1461.98 sec; Start 11: cbs-delta-energy; 17/411 Test #111: dcft5 ............................ Passed 505.16 sec; Start 4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; \ Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 40.70 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 4.05 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 2.83 sec; Start 5: casscf-sa-sp; 4/411 Test #5: casscf-sa-sp ..................... Passed 16.78 sec; Start 6: ao-casscf-sp; 5/411 Test #2: adc2 ............................. Passed 66.82 sec; Start 7: casscf-sp; 6/411 Test #6: ao-casscf-sp ..................... Passed 9.16 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 2.71 sec; Start 9: castup2; 8/411 Test #7: casscf-sp ........................ Passed 13.94 sec; Start 10: castup3; 9/411 Test #9: castup2 .......................... Passed 7.77 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 7.44 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 25.04 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 58.74 sec; Start 14: cbs-xtpl-energy; 13/411 Test #14: cbs-xtpl-energy .................. Passed 14.17 sec; Start 15: cbs-xtpl-freq; 14/411 Test #325: scf-bz2 .......................... Passed 165.45 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 12.40 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 21.29 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt .............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 24.09 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 2.52 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 3.06 sec; Start 5: casscf-sa-sp; 4/411 Test #2: adc2 ............................. Passed 41.92 sec; Start 6: ao-casscf-sp; 5/411 Test #5: casscf-sa-sp ..................... Passed 13.45 sec; Start 7: casscf-sp; 6/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 1.92 sec; Start 9: castup2; 8/411 Test #7: casscf-sp ........................ Passed 9.38 sec; Start 10: castup3; 9/411 Test #9: castup2 .......................... Passed 5.54 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 5.87 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 26.15 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 55.75 sec; Start 14: cbs-xtpl-energy; 13/411 Test #14: cbs-xtpl-energy .................. Passed 11.20 sec; Start 15: cbs-xtpl-freq; 14/411 Test #325: scf-bz2 .......................... Passed 126.40 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 6.79 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 24.78 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt .................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 46: cc3; Start 307: pywrap-checkrun-uhf; Start 37: cc21; Start 146: dfomp2-grad3; 1/412 Test #37: cc21 ............................. Passed 527.58 sec; Start 41: cc25; 2/412 Test #307: pywrap-checkrun-uhf .............. Passed 595.37 sec; Start 39: cc23; 3/412 Test #305: pywrap-checkrun-rhf .............. Passed 613.40 sec; Start 77: cc7; 4/412 Test #301: pywrap-all ....................... Passed 652.73 sec; Start 43: cc27; 5/412 Test #146: dfomp2-grad3 ..................... Passed 673.97 sec; Start 306: pywrap-checkrun-rohf; 6/412 Test #46: cc3 .............................. Passed 677.84 sec; Start 241: ocepa-freq1; 7/412 Test #104: dcft-grad1 ....................... Passed 777.43 sec; Start 40: cc24; 8/412 Test #111: dcft4 ............................ Passed 834.58 sec; Start 42: cc26; 9/412 Test #77: cc7 .............................. Passed 317.71 sec; Start 36: cc2; 10/412 Test #41: cc25 ............................. Passed 421.47 sec; Start 115: dcft8; 11/412 Test #43: cc27 ............................. Passed 327.75 sec; Start 395: python-vibanalysis; 12/412 Test #306: pywrap-checkrun-rohf ............. Passed 359.48 sec; Start 25: cc13; 13/412 Test #241: ocepa-freq1 ...................... Passed 402.21 sec; Start 30: cc14; 14/412 Test #39: cc23 ............................. Passed 487.99 sec; Start 13: cbs-xtpl-alpha; 15/412 Test #42: cc26 ............................. Passed 471.50 sec; Start 156: dft-grad-lr3; 16/412 Test #40: cc24 ............................. Passed 560.40 sec; Start 29: cc13d; 17/412 Test #115: dcft8 ............................ Passed 391.75 sec; Start 112: dcft5; 18/412 Test #25: cc13 ............................. Passed 308.71 sec; Start 228: mp2-def2; 19/412 Test #30: cc14 ............................. Passe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 46: cc3; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 146: dfomp2-grad3; Start 37: cc21; 1/412 Test #37: cc21 ............................. Passed 444.99 sec; Start 41: cc25; 2/412 Test #307: pywrap-checkrun-uhf .............. Passed 541.32 sec; Start 39: cc23; 3/412 Test #305: pywrap-checkrun-rhf .............. Passed 559.64 sec; Start 77: cc7; 4/412 Test #301: pywrap-all ....................... Passed 576.06 sec; Start 43: cc27; 5/412 Test #146: dfomp2-grad3 ..................... Passed 577.08 sec; Start 306: pywrap-checkrun-rohf; 6/412 Test #46: cc3 .............................. Passed 585.00 sec; Start 40: cc24; 7/412 Test #104: dcft-grad1 ....................... Passed 654.89 sec; Start 395: python-vibanalysis; 8/412 Test #111: dcft4 ............................ Passed 693.10 sec; Start 241: ocepa-freq1; 9/412 Test #41: cc25 ............................. Passed 298.26 sec; Start 42: cc26; 10/412 Test #39: cc23 ............................. Passed 294.97 sec; Start 36: cc2; 11/412 Test #77: cc7 .............................. Passed 286.85 sec; Start 115: dcft8; 12/412 Test #43: cc27 ............................. Passed 281.14 sec; Start 25: cc13; 13/412 Test #306: pywrap-checkrun-rohf ............. Passed 302.83 sec; Start 156: dft-grad-lr3; 14/412 Test #40: cc24 ............................. Passed 311.20 sec; Start 30: cc14; 15/412 Test #42: cc26 ............................. Passed 239.25 sec; Start 228: mp2-def2; 16/412 Test #241: ocepa-freq1 ...................... Passed 322.81 sec; Start 13: cbs-xtpl-alpha; 17/412 Test #25: cc13 ............................. Passed 164.06 sec; Start 179: fsapt1; 18/412 Test #30: cc14 ............................. Passed 144.79 sec; Start 112: dcft5; 19/412 Test #115: dcft8 ............................ Pas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 226: mp2-1; Start 228: mp2-grad1; Start 394: python-vibanalysis; Start 300: pywrap-all; Start 103: dcft-grad1; Start 304: pywrap-checkrun-rhf; Start 306: pywrap-checkrun-uhf; Start 162: dft-grad-lr3; 1/411 Test #228: mp2-grad1 ........................ Passed 2.06 sec; Start 110: dcft4; 2/411 Test #226: mp2-1 ............................ Passed 6.34 sec; Start 40: cc25; 3/411 Test #40: cc25 ............................. Passed 153.57 sec; Start 178: fsapt1; 4/411 Test #306: pywrap-checkrun-uhf .............. Passed 204.87 sec; Start 39: cc24; 5/411 Test #304: pywrap-checkrun-rhf .............. Passed 232.62 sec; Start 45: cc3; 6/411 Test #300: pywrap-all ....................... Passed 243.53 sec; Start 38: cc23; 7/411 Test #110: dcft4 ............................ Passed 251.30 sec; Start 35: cc2; 8/411 Test #39: cc24 ............................. Passed 155.32 sec; Start 227: mp2-def2; 9/411 Test #103: dcft-grad1 ....................... Passed 361.43 sec; Start 36: cc21; 10/411 Test #38: cc23 ............................. Passed 142.28 sec; Start 305: pywrap-checkrun-rohf; 11/411 Test #35: cc2 .............................. Passed 153.53 sec; Start 41: cc26; 12/411 Test #162: dft-grad-lr3 ..................... Passed 443.69 sec; Start 182: isapt1; 13/411 Test #45: cc3 .............................. Passed 236.97 sec; Start 145: dfomp2-grad3; 14/411 Test #36: cc21 ............................. Passed 148.51 sec; Start 42: cc27; 15/411 Test #305: pywrap-checkrun-rohf ............. Passed 140.52 sec; Start 29: cc14; 16/411 Test #41: cc26 ............................. Passed 135.18 sec; Start 111: dcft5; 17/411 Test #42: cc27 ............................. Passed 101.05 sec; Start 18: cbs-xtpl-func; 18/411 Test #29: cc14 ............................. Passed 87.25 sec; Start 181: fsapt-allterms; 19/411 Test #145: dfomp2-grad3 .................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 297.78 sec; Start 162: dft-grad-lr3; 2/411 Test #182: isapt1 ........................... Passed 469.93 sec; Start 227: mp2-def2; 3/411 Test #18: cbs-xtpl-func .................... Passed 485.98 sec; Start 25: cc13a; 4/411 Test #193: fd-freq-energy-large ............. Passed 551.44 sec; Start 113: dcft7; 5/411 Test #181: fsapt-allterms ................... Passed 652.63 sec; Start 205: frac-traverse; 6/411 Test #394: python-vibanalysis ............... Passed 680.49 sec; Start 316: sapt2; 7/411 Test #25: cc13a ............................ Passed 254.82 sec; Start 318: sapt4; 8/411 Test #162: dft-grad-lr3 ..................... Passed 489.85 sec; Start 325: scf-bz2; 9/411 Test #113: dcft7 ............................ Passed 278.82 sec; Start 373: dft-custom-mgga; 10/411 Test #278: opt13 ............................ Passed 847.95 sec; Start 320: sapt6; 11/411 Test #205: frac-traverse .................... Passed 221.61 sec; Start 155: dfscf-bz2; 12/411 Test #227: mp2-def2 ......................... Passed 440.79 sec; Start 183: isapt2; 13/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 347: sapt-dft2; 14/411 Test #320: sapt6 ............................ Passed 169.47 sec; Start 112: dcft6; 15/411 Test #155: dfscf-bz2 ........................ Passed 146.26 sec; Start 97: cisd-opt-fd; 16/411 Test #373: dft-custom-mgga .................. Passed 193.16 sec; Start 281: opt-irc-2; 17/411 Test #316: sapt2 ............................ Passed 360.69 sec; Start 300: pywrap-all; 18/411 Test #347: sapt-dft2 ........................ Passed 128.97 sec; Start 161: dft-grad-lr2;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 340.82 sec; Start 25: cc13a; 2/411 Test #18: cbs-xtpl-func .................... Passed 486.53 sec; Start 113: dcft7; 3/411 Test #182: isapt1 ........................... Passed 538.29 sec; Start 205: frac-traverse; 4/411 Test #193: fd-freq-energy-large ............. Passed 603.47 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 281.79 sec; Start 318: sapt4; 6/411 Test #181: fsapt-allterms ................... Passed 716.17 sec; Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 235.66 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.11 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 326.30 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 13.41 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 9.02 sec; Start 5: casscf-sa-sp; 12/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.92 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 6.87 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.39 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 19.18 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 9.54 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 18.56 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ......................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 98: cisd-sp; Start 119: dfcasscf-sp; Start 394: python-vibanalysis; Start 45: cc3; Start 162: dft-grad-lr3; Start 227: mp2-def2; Start 178: fsapt1; Start 103: dcft-grad1; 1/411 Test #119: dfcasscf-sp ...................... Passed 4.33 sec; Start 300: pywrap-all; 2/411 Test #98: cisd-sp .......................... Passed 10.64 sec; Start 304: pywrap-checkrun-rhf; 3/411 Test #45: cc3 .............................. Passed 367.14 sec; Start 39: cc24; 4/411 Test #300: pywrap-all ....................... Passed 381.81 sec; Start 306: pywrap-checkrun-uhf; 5/411 Test #304: pywrap-checkrun-rhf .............. Passed 390.00 sec; Start 182: isapt1; 6/411 Test #227: mp2-def2 ......................... Passed 446.06 sec; Start 35: cc2; 7/411 Test #162: dft-grad-lr3 ..................... Passed 473.06 sec; Start 41: cc26; 8/411 Test #103: dcft-grad1 ....................... Passed 617.53 sec; Start 110: dcft4; 9/411 Test #39: cc24 ............................. Passed 338.53 sec; Start 40: cc25; 10/411 Test #182: isapt1 ........................... Passed 433.14 sec; Start 305: pywrap-checkrun-rohf; 11/411 Test #41: cc26 ............................. Passed 423.76 sec; Start 38: cc23; 12/411 Test #35: cc2 .............................. Passed 450.90 sec; Start 36: cc21; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 571.32 sec; Start 42: cc27; 14/411 Test #394: python-vibanalysis ............... Passed 966.42 sec; Start 76: cc7; 15/411 Test #40: cc25 ............................. Passed 480.63 sec; Start 18: cbs-xtpl-func; 16/411 Test #36: cc21 ............................. Passed 484.30 sec; Start 181: fsapt-allterms; 17/411 Test #38: cc23 ............................. Passed 495.58 sec; Start 193: fd-freq-energy-large; 18/411 Test #42: cc27 ............................. Passed 441.98 sec; Start 195: fd-freq-gradient-large; 19/411 Test #76: cc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 243: ocepa1; Start 394: python-vibanalysis; Start 162: dft-grad-lr3; Start 227: mp2-def2; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; 1/411 Test #243: ocepa1 ........................... Passed 1.89 sec; Start 193: fd-freq-energy-large; 2/411 Test #227: mp2-def2 ......................... Passed 436.21 sec; Start 195: fd-freq-gradient-large; 3/411 Test #182: isapt1 ........................... Passed 472.25 sec; Start 278: opt13; 4/411 Test #162: dft-grad-lr3 ..................... Passed 488.24 sec; Start 103: dcft-grad1; 5/411 Test #193: fd-freq-energy-large ............. Passed 507.09 sec; Start 300: pywrap-all; 6/411 Test #18: cbs-xtpl-func .................... Passed 512.61 sec; Start 304: pywrap-checkrun-rhf; 7/411 Test #181: fsapt-allterms ................... Passed 628.73 sec; Start 45: cc3; 8/411 Test #195: fd-freq-gradient-large ........... Passed 291.98 sec; Start 373: dft-custom-mgga; 9/411 Test #394: python-vibanalysis ............... Passed 771.15 sec; Start 320: sapt6; 10/411 Test #304: pywrap-checkrun-rhf .............. Passed 277.81 sec; Start 306: pywrap-checkrun-uhf; 11/411 Test #300: pywrap-all ....................... Passed 288.34 sec; Start 112: dcft6; 12/411 Test #45: cc3 .............................. Passed 192.30 sec; Start 155: dfscf-bz2; 13/411 Test #103: dcft-grad1 ....................... Passed 361.67 sec; Start 183: isapt2; 14/411 Test #306: pywrap-checkrun-uhf .............. Passed 99.74 sec; Start 39: cc24; 15/411 Test #373: dft-custom-mgga .................. Passed 186.38 sec; Start 305: pywrap-checkrun-rohf; 16/411 Test #320: sapt6 ............................ Passed 165.71 sec; Start 110: dcft4; 17/411 Test #112: dcft6 ............................ Passed 164.24 sec; Start 38: cc23; 18/411 Test #155: dfscf-bz2 ........................ Passed 143.19 sec; Start 4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 287.94 sec; Start 25: cc13a; 2/411 Test #182: isapt1 ........................... Passed 442.34 sec; Start 113: dcft7; 3/411 Test #193: fd-freq-energy-large ............. Passed 511.29 sec; Start 205: frac-traverse; 4/411 Test #181: fsapt-allterms ................... Passed 597.58 sec; Start 316: sapt2; 5/411 Test #205: frac-traverse .................... Passed 227.64 sec; Start 318: sapt4; 6/411 Test #278: opt13 ............................ Passed 764.00 sec; Start 325: scf-bz2; 7/411 Test #25: cc13a ............................ Passed 481.24 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 26.25 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 392.65 sec; Start 3: casscf-fzc-sp; 10/411 Test #2: adc2 ............................. Passed 43.73 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 11.68 sec; Start 5: casscf-sa-sp; 12/411 Test #3: casscf-fzc-sp .................... Passed 19.26 sec; Start 6: ao-casscf-sp; 13/411 Test #6: ao-casscf-sp ..................... Passed 8.25 sec; Start 7: casscf-sp; 14/411 Test #5: casscf-sa-sp ..................... Passed 23.99 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.23 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 124.34 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 13.78 sec; Start 11: cbs-delta-energy; 18/411 Test #7: casscf-sp ........................ Passed 38.07 sec; Start 12: cbs-parser; 19/411 Test #10: castup3 .....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 316.06 sec; Start 25: cc13a; 2/411 Test #182: isapt1 ........................... Passed 469.47 sec; Start 113: dcft7; 3/411 Test #193: fd-freq-energy-large ............. Passed 544.74 sec; Start 205: frac-traverse; 4/411 Test #181: fsapt-allterms ................... Passed 628.02 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 336.73 sec; Start 318: sapt4; 6/411 Test #205: frac-traverse .................... Passed 224.53 sec; Start 325: scf-bz2; 7/411 Test #113: dcft7 ............................ Passed 351.15 sec; Start 1: adc1; 8/411 Test #278: opt13 ............................ Passed 840.66 sec; Start 2: adc2; 9/411 Test #1: adc1 ............................. Passed 25.01 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 11.82 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 4.34 sec; Start 5: casscf-sa-sp; 12/411 Test #5: casscf-sa-sp ..................... Passed 18.34 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.45 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 5.43 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.92 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 126.98 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 14.01 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 15.90 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 323.95 sec; Start 25: cc13a; 2/411 Test #18: cbs-xtpl-func .................... Passed 528.74 sec; Start 113: dcft7; 3/411 Test #182: isapt1 ........................... Passed 536.55 sec; Start 205: frac-traverse; 4/411 Test #193: fd-freq-energy-large ............. Passed 593.28 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 297.32 sec; Start 318: sapt4; 6/411 Test #181: fsapt-allterms ................... Passed 736.98 sec; Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 247.88 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.30 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 318.32 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 6.14 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 2.45 sec; Start 5: casscf-sa-sp; 12/411 Test #2: adc2 ............................. Passed 46.87 sec; Start 6: ao-casscf-sp; 13/411 Test #394: python-vibanalysis ............... Passed 861.59 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp .....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['failure'],['failure']
Availability,```; $ wget https://anaconda.org/psi4/csx4psi/0.0.8/download/linux-64/csx4psi-0.0.8-0.tar.bz2. $ tar -tjvf csx4psi-0.0.8-0.tar.bz2 ; -rw-r--r-- cdsgroup/sherrill 170 2015-09-03 20:23 info/README.md; -rw-r--r-- cdsgroup/sherrill 180 2015-09-03 20:23 info/files; -rw-r--r-- cdsgroup/sherrill 442 2015-09-03 20:23 info/git; -rw-r--r-- cdsgroup/sherrill 193 2015-09-03 20:23 info/index.json; -rw-r--r-- cdsgroup/sherrill 857 2015-09-03 20:23 info/recipe.json; -rw-r--r-- cdsgroup/sherrill 1404 2015-09-03 20:23 info/recipe/build.sh; -rw-r--r-- cdsgroup/sherrill 683 2015-09-03 20:23 info/recipe/meta.yaml; -rwxr-xr-x cdsgroup/sherrill 1319008 2015-09-03 20:23 lib/libiomp5.so; -rw-r--r-- cdsgroup/sherrill 170 2015-09-03 20:23 psi4aux/csx4psi/README.md; -rw-r--r-- cdsgroup/sherrill 1158 2015-09-03 20:23 psi4aux/csx4psi/__init__.py; -rw-r--r-- cdsgroup/sherrill 559469 2015-09-03 20:23 psi4aux/csx4psi/csx1_api.py; -rw-r--r-- cdsgroup/sherrill 3063 2015-09-03 20:23 psi4aux/csx4psi/csx4psi.cc; -rwxr-xr-x cdsgroup/sherrill 1037802 2015-09-03 20:23 psi4aux/csx4psi/csx4psi.so; -rw-r--r-- cdsgroup/sherrill 22479 2015-09-03 20:23 psi4aux/csx4psi/pymodule.py; ```. Interesting.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/229#issuecomment-176961990:52,down,download,52,https://psicode.org,https://github.com/psi4/psi4/issues/229#issuecomment-176961990,1,['down'],['download']
Availability,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:92,failure,failure,92,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['failure'],['failure']
Availability,"```; >>> ""ijij->"".encode().decode(""latin-1""); 'ijij->'; >>> r""ijij->""; 'ijij->'; >>> ; ```. I would think it is rather the parsing. I tried to step through `get_combined_dims_view` in `einsum.c.src` but it is quite confusing. . At the beginning of the function, the value of `label` is `labels=0x3ffffffcdf8 ""i\377j\377\375\377\061\340""` for the `iijj` case and `labels=0x3ffffffcdf8 ""ij\376\377\375\377\061\340""` for the `ijij` case. Conversely, the value of `label` is 105 and 106 towards the end of the function for the `iijj`` case and 105 and 254 for the ""ijij"" case, the latter being the weird unicode character from the error message. At that point I see:. ```; 2135 if (combineoffset < 0 && new_dims[i] != 0 &&; (gdb) p i; $229 = 1023; (gdb) p label; $230 = 254; (gdb) p iop; $231 = 0; (gdb) p new_dims[i]; $232 = 4296307584; (gdb) n; 1502 return ((PyArrayObject_fields *)arr)->dimensions[idim];; (gdb) n; 2142 return NULL;; ```. which looks odd, and the `NULL` is part of the error message we see:. ```; if (combineoffset < 0 && new_dims[i] != 0 &&; new_dims[i] != PyArray_DIM(op, idim)) {; PyErr_Format(PyExc_ValueError,; ""dimensions in operand %d for collapsing ""; ""index '%c' don't match (%d != %d)"",; iop, label, (int)new_dims[i],; (int)PyArray_DIM(op, idim));; return NULL;; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465#issuecomment-452041570:627,error,error,627,https://psicode.org,https://github.com/psi4/psi4/issues/1465#issuecomment-452041570,2,['error'],['error']
Availability,"```; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE) (Required is at; least version ""3.6""); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake/Modules/FindPythonInterp.cmake:182 (FIND_PACKAGE_HANDLE_STANDARD_ARGS); /usr/share/cmake/pybind11/FindPythonLibsNew.cmake:98 (find_package); /usr/share/cmake/pybind11/pybind11Tools.cmake:50 (find_package); /usr/share/cmake/pybind11/pybind11Common.cmake:188 (include); /usr/share/cmake/pybind11/pybind11Config.cmake:250 (include); CMakeLists.txt:60 (find_package); ```; Looks like the error originates from `psi4/CMakeLists.txt`; ```; find_package(pybind11 2.2.2 CONFIG REQUIRED); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676487705:11,Error,Error,11,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676487705,2,"['Error', 'error']","['Error', 'error']"
Availability,```; rows_per_bucket = -1622894080; nbuckets = -18256; rows_left = -1312595486; ```. This immediately makes me suspect a type overflow error. Thanks for everything thus far.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1227166848:135,error,error,135,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1227166848,1,['error'],['error']
Availability,"```; sapt4; 2016-02-16 10:46; SAPT incomplete wavefunction is only dimer SCF; SAPT Elst: computed value (-0.0407577) does not match (-0.0407606) to 6 decimal places. An error has occurred Py-side; Traceback:; <class 'p4xcpt.TestComparisonError'>: SAPT Elst: computed value (-0.0407577) does not match (-0.0407606) to 6 decimal places.: File ""<string>"", line 67, in <module>. File ""/Users/stanlen1/gitrepos/psi4/share/python/p4util/util.py"", line 100, in compare_values; raise TestComparisonError(message); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184840463:169,error,error,169,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184840463,1,['error'],['error']
Availability,"`compute_gradient` after a `energy(""ccsd"")` and `gradient(""scf"")` also throw the wfn.h error, so no worries there. py-side `gradient(""ccsd"")` is what this PR misses catching, as I see it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049:87,error,error,87,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049,1,['error'],['error']
Availability,"`phi_ao` is passed to `dx_read` as an argument. I'm pretty sure that the description of `phi_ao` is wrong; https://github.com/psi4/psi4/blob/760c5af199b6a8202b081ad18a271ee9886ee66d/psi4/src/psi4/libqt/dx_read.cc#L60. The only place where `dx_read` is used is; https://github.com/psi4/psi4/blob/760c5af199b6a8202b081ad18a271ee9886ee66d/psi4/src/psi4/libscf_solver/hf.cc#L601. The warning is; ```; -Wnonnull; Warn about passing a null pointer for arguments marked as requiring a non-null value by the ""nonnull"" function attribute. -Wnonnull is included in -Wall and -Wformat. It can be disabled with the -Wno-nonnull option.; ```; There is no null pointer issue; the code is merely unsafe since it assumes that the pointers are not null. Adding a check for null pointers and throwing an error in that case should fix this warning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2783#issuecomment-1321068490:786,error,error,786,https://psicode.org,https://github.com/psi4/psi4/issues/2783#issuecomment-1321068490,1,['error'],['error']
Availability,"`svwn_hessian_module` shows 15 failures, now that I check that... Can I just halve the default value? That will make RKS behavior as it was before. UKS will stay change, but I think that's unavoidable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1349591584:31,failure,failures,31,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1349591584,1,['failure'],['failures']
Availability,`test_resp_2` fails in the Linux clang build with an einsum error. (unrelated to this PR),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2402#issuecomment-1010765086:60,error,error,60,https://psicode.org,https://github.com/psi4/psi4/pull/2402#issuecomment-1010765086,1,['error'],['error']
Availability,`v1.3.2` is available for Windows via `conda install psi4 -c raimis`. Please report back if you give it a try. We'll copy it to `-c psi4` (I think) after a few positive reports from the wild.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-494087443:12,avail,available,12,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494087443,1,['avail'],['available']
Availability,`wfn.name` seems not the most reliable identifier. Investigating.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-625927796:30,reliab,reliable,30,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-625927796,1,['reliab'],['reliable']
Availability,"ab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 2 entry O line 190 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 3-4 entry H line 20 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; ```; - [x] 7. soon after all the new basis stuff went in Nov 2014, Jet added another layer in qcdb pyconstruct to make CABS basis sets work. unfortunately, this broke one of the key principles/advantages of the new scheme. not that i remember exactly what that principle was, though it was probably that the basis could be re-constituted by `basis mybas {...}` mybas name; - [x] 8. fix the 5-zeta and 6-zeta orbital defaulting to quad-zeta fitting as in noted in #144 ; - [x] 9. Switch out Pople basis fitting bases to appropriate-zeta def2-*-ri/jkfit, rather than Dunning ri/jkfit, as former has fewer element holes. (as noted in #144); - [x] 10. Create (maybe?) another layer of defaulting so that aug-cc-pvdz orbital uses aug-cc-pvdz-ri/jkfit when available (as at present), then def2-tzvp-ri/jkfit (not at present), then the ultimate default def2-qzvpp-ri/jkfit (as at present). This way don't get high AM cost on supposedly cheap orbital basis sets. (as noted in #144); - [x] 11. drop DUAL and pick up perhaps others in http://psicode.org/psi4manual/master/basissets_byfamily.html; - [x] 12. thoroughly update basisset.rst, especially examples; - [x] 13. reexamine the PSIPATH basis load ordering and make sure that there's a way to install new basissets in the conda package w/o overwriting library files; - [x] 14. the python object name (mybas in above) is the key handle by which a user-def basis can be reapplied to new molecules, but this can be anonymous (if mybas omitted definitely; and maybe if defined conventionally through ""set basis"" if all turned into functions). would be handy to have a name to print in the output file (some sort of aug-cc-pvdz+cc-pvdz+6-31g) as well as the handle by which it's retrievable. That's all I can think of for now",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-189541354:2786,avail,available,2786,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-189541354,1,['avail'],['available']
Availability,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22136,error,error,22136,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27645,error,error,27645,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"actually i cant even produce the input file for psi4 using FFParam-GUI i have this error:. `WARNING:root:Support for bonded parameter scan with Psi4 is experimental at best. Proceed with caution.; INFO:root:Using default names for the outputs.; [09:59:35] Molecule does not have explicit Hs. Consider calling AddHs(); ERROR:root:Uncaught Exception; Traceback (most recent call last):; File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/FFPMainWindow.py"", line 1297, in execute_56; file2disp = self.chk.CreateQM(""dihe"",filein=coor,work_dir=self.qm_dir,recenter=False,qmeng=qmengi,qmtop=qmtop,char=chari,mult=multi,dihatomnam=dihl,dihrange=dihr); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/Windowsaction.py"", line 165, in CreateQM; fileout=piwclass.run('bondedscan',outpath=work_dir,bonded=[bonded],coor=self.coords,fixed=False); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/Psi4InputWriter.py"", line 307, in run; writtenfile=func(data,Psi4header); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/Psi4InputWriter.py"", line 564, in writebondedscan; rdcrds=ffrd.MolTransform(rdmol.mol,self.resn,self.reschrg,coor,self.atomnames,self.atomnrmap,self.topo['bondnames'],\; File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 182, in __init__; self.__transform(); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 288, in __transform; newcoor=self.__transformcore(mol,self.coor,self.changetype,self.scanatomnr,values[val]); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 259, in __transformcore; funcs[cha",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2599#issuecomment-1152583288:83,error,error,83,https://psicode.org,https://github.com/psi4/psi4/issues/2599#issuecomment-1152583288,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,added some timings and a gradient error to the post.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-495584058:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-495584058,1,['error'],['error']
Availability,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:4319,error,error,4319,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879,2,['error'],['error']
Availability,"aediis error for windows + test_psi4_sapt may be intermittent since not seen in first commit. there's no reason incfock should be on in that test, right? in that case, no problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2550#issuecomment-1104645481:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/2550#issuecomment-1104645481,1,['error'],['error']
Availability,"age(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, gradients will be caught and halted, but LRC DFT, ESP, and perhaps other types not tested and identified will give *wrong* answers. Consider this your warning."")`. * In `psi4/driver/driver.py`, apply patch below. ```; --- a/psi4/driver/driver.py; +++ b/psi4/driver/driver.py; @@ -82,6 +82,9 @@ def _find_derivative_type(ptype, method_name, user_dertype):; raise ValidationError(""_find_derivative_type: user_dertype should only be None or int!""); dertype = user_dertype; ; + if (core.get_global_option('INTEGRAL_PACKAGE') == 'ERD') and (dertype != 0):; + raise ValidationError(""INTEGRAL_PACKAGE ERD does not play nicely with gradients, so stopping.""); +; # Summary validation; if (dertype == 2) and (method_name in procedures['hessian']):; pass; ```. * Running this yield the following list (30% failure rate).; ```; The following tests FAILED:; 	 12 - cbs-xtpl-freq (Failed); 	 13 - cbs-xtpl-gradient (Failed); 	 14 - cbs-xtpl-opt (Failed); 	 16 - cbs-xtpl-wrapper (Failed); 	 17 - cc1 (Failed); 	 21 - cc13 (Failed); 	 22 - cc13a (Failed); 	 23 - cc14 (Failed); 	 30 - cc21 (Failed); 	 32 - cc23 (Failed); 	 33 - cc24 (Failed); 	 34 - cc25 (Failed); 	 35 - cc26 (Failed); 	 36 - cc27 (Failed); 	 39 - cc3 (Failed); 	 78 - cepa0-grad1 (Failed); 	 79 - cepa0-grad2 (Failed); 	 95 - dcft-grad1 (Failed); 	 96 - dcft-grad2 (Failed); 	 97 - dcft-grad3 (Failed); 	 98 - dcft-grad4 (Failed); 	103 - dcft5 (Failed); 	114 - dfccd-grad1 (Failed); 	117 - dfccsd-grad1 (Failed); 	122 - dfmp2-3 (Failed); 	124 - dfmp2-grad1 (Failed); 	125 - dfmp2-grad2 (Failed); 	126 - dfmp2-grad3 (Failed); 	127 - dfmp2-grad4 (Failed); 	132 - dfomp2-grad1 (Failed); 	133 - dfomp2-grad2 (Failed); 	136 - dfomp3-grad1 (Failed); 	137 - dfomp3-grad2 (Failed); 	140 - dfomp2p5-grad1 (Failed); 	141 - dfomp2p5-gr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-276884648:2003,failure,failure,2003,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-276884648,1,['failure'],['failure']
Availability,"ah, CI error is Windows-2016 dev-env brown-out. We know psi+Azure can work on Windows-2022 from #2415 but I don't know if that newer runtime libs and clang has adverse effects for the conda package. not an issue for this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2440#issuecomment-1039497391:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/2440#issuecomment-1039497391,1,['error'],['error']
Availability,"alizerEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi9LocalizerENS3_13BoysLocalizerEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi12WavefunctionENS3_3scf3RHFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi3scf2HFENS4_3RHFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi12WavefunctionENS3_3scf2HFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi14BasisSetParserENS3_24Gaussian94BasisSetParserEE7executeEPv in export_mints.cc.o; ...; ""___gxx_personality_v0"", referenced from:; __Z11export_psiov in export_psio.cc.o; __ZN5boost6python3api9slice_nilD1Ev in export_psio.cc.o; __ZN3psi11PSIOManager9print_outEv in export_psio.cc.o; __ZN5boost6python6class_IN3psi11PSIOManagerENS_10shared_ptrIS3_EENS0_6detail13not_specifiedES7_E8def_implIS3_MS3_FNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEvENS6_10def_helperIA10_cS7_S7_S7_EEEEvPT_PKcT0_RKT1_z in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4implIMN3psi11PSIOManagerEFNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEvENS0_21default_call_policiesENS_3mpl7vector2ISD_RS6_EEE9signatureEv in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4implIMN3psi11PSIOManagerEFNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEvENS0_21default_call_policiesENS_3mpl7vector2ISD_RS6_EEEclEP7_objectSN_ in export_psio.cc.o; __ZN5boost6python6class_IN3psi11PSIOManagerENS_10shared_ptrIS3_EENS0_6detail13not_specifiedES7_E8def_implIS3_MS3_FvibENS6_10def_helperIA10_cS7_S7_S7_EEEEvPT_PKcT0_RKT1_z in export_psio.cc.o; ...; ld: symbol(s) not found for architecture x86_64; clang-3.5: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:114717,error,error,114717,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,4,"['Error', 'error']","['Error', 'error']"
Availability,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:677,avail,available,677,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875,1,['avail'],['available']
Availability,"als are doubly occupied.; (""docc"" = ""doubly occupied""). Also, if you're doing a RAS, you need to tell the code the max number of; holes in RAS I, and the max number of particles in RAS III. I forget the; keywords off the top of my head. Additionally, if it's high-spin open-shell, at least to keep the SCF; straight (can't remember if DETCI needs this or not), you probably should; be specifying the symmetries of the singly occupied orbitals with the SOCC; keyword. There may or may not be some additional problems. On Tue, Aug 13, 2019 at 6:42 AM Susi Lehtola <notifications@github.com>; wrote:. > The following input fails with a segfault; >; > molecule {; > 0 5; > Fe; > }; >; > set basis pcseg-0; > set reference rohf; > set scf_type pk; > set mcscf_type conv; > # Full space is [ 9, 2, 2, 2, 0, 3, 3, 3]; >; > # Ar core; > set restricted_docc [3, 0, 0, 0, 0, 2, 2, 2]; > # spd active space; > set ras1 [0, 0, 0, 0, 0, 0, 0, 0]; > set ras2 [3, 1, 1, 1, 0, 1, 1, 1]; > set ras3 [3, 1, 1, 1, 0, 0, 0, 0]; > cas_e, cas_wfn = energy('rasscf', return_wfn=True); >; > # Dynamical correlation from Ar core; > set restricted_docc [0, 0, 0, 0, 0, 0, 0, 0]; > set ras1 [3, 0, 0, 0, 0, 2, 2, 2]; > ras_e, ras_wfn = energy('detci', ref_wfn=cas_wfn, return_wfn=True); >; > There's something wrong in the input or the code, since there's an error; > message in the log file; >; > ==> Setting up CI strings <==; >; > There are 2730 alpha and 105 beta strings; > (subgr_lex_addr): Impossible walk!; > The CI space requires 18211 (1.82E+04) determinants and 44 blocks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1693?email_source=notifications&email_token=AAXVA5TD2EJDK5M4KQ6Q5TTQEKFYNA5CNFSM4ILJOWVKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HE5Q2AQ>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAXVA5QEYCCJVE5424DTXB3QEKFYNANCNFSM4ILJOWVA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1693#issuecomment-520830260:1454,error,error,1454,https://psicode.org,https://github.com/psi4/psi4/issues/1693#issuecomment-520830260,1,['error'],['error']
Availability,"als."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6909,Error,Error,6909,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES'",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5404,avail,available,5404,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"angelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). Additional Contributions by; P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,; A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz. -----------------------------------------------------------------------. Psi4 started on: Monday, 29 April 2019 07:36PM. Process ID: 6146; Host: molmod00.ugent.be; PSIDATADIR: /home/toon/miniconda3/envs/p4dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; H; }. set {; scf_type pk; basis ano-rcc; relativistic x2c; reference uhf; }. energy('hf'); --------------------------------------------------------------------------. *** tstart() called on molmod00.ugent.be; *** at Mon Apr 29 19:36:44 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 16 file /home/toon/Downloads/jobs/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 2; Electrons = 1; Nalpha = 1; Nbeta = 0. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:2352,Down,Downloads,2352,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['Down'],['Downloads']
Availability,"angling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------. Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. =============================================== short test summary info ================================================; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:99: Psi4 not detecting MRCC. Add `dmrcc` to envvar PSIPATH or PATH; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:633: Psi4 not compiled with erd. Rebuild with -DENABLE_erd; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:686: Psi4 not detecting CFOUR. Add `xcfour` to envvar PSIPATH or PATH; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:773: Psi4 not detecting plugin gpu_dfcc. Build plugin if necessary and add to envvar PYTHONPATH;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:20491,avail,available,20491,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"angling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------; -D correction from Py-side. Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ____________________________________________________ test_grimme_3c ____________________________________________________. molrec = {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}; name_hint = 'pbeh3c', level_hint = 'd3bj', param_tweaks = {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}; ptype = 'energy'; dashcoeff_supplement = defaultdict(<function <lambda> at 0x7f5e8db768c8>, {'d2': defaultdict(<class 'dict'>, {'definitions': {'opbe-d2': {'ty...0093}, 'citation': ' M. K. Kesharwani, A. Karton, J.M. L. Martin, J. Chem. Theory Comput. 12, 444-454, 2016\n'}}})}); verbose = 1. def run_dftd3_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:10947,avail,available,10947,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"aniel Smith; > Sent from my iPhone.; >; > > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > >; > > After a recent git pull, psi4 failed to compile. It seems that the error; > was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi; > so all Python Exceptions raise to stdout and psi out"". If I revert to the; > commit just before this I'm able to compile.; > >; > > If it helps, I'm running Ubuntu, with gnu compilers.; > >; > > Here's the error message:; > >; > > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In; > function ‘bool py_psi_set_local_option_array(const string&, const; > string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a; > member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool; > py_psi_set_global_option_array(const string&, pybind11::list,; > psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13:; > error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])); > { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374:; > recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for; > unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for; > target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; > CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074858:1325,error,error,1325,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074858,1,['error'],['error']
Availability,"as.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8825,error,error,8825,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"at one point, the plan was as follows:. Ok, looks like psi4 regularly goes through Ar, Dunning basis sets regularly go through Kr, and def2 through Rn. None of the 6-31g(*_) even make it to Ar. Looks like 3-21g covers the teaching range (through Xe). Def2-SV( P) covers through Rn, and at a quick glance, is 6-31g_-like is size. Since 3-21g is the default basis-guess is psi4 now, I propose that sto-3g, 3-21g, and all def2 basis sets be run out as far as emsl will take them insofar as plausible fitting basis sets can also be supplied. That will cover teaching elements and include a proper double- and triple-zeta for the adventurous research user, while ensuring that if basis set unavailability errors are thrown, it will be because the orbital basis is missing (which users may expect) as opposed to fitting bases missing (which is unfamiliar).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/44#issuecomment-37577193:700,error,errors,700,https://psicode.org,https://github.com/psi4/psi4/issues/44#issuecomment-37577193,1,['error'],['errors']
Availability,"b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7368,error,error,7368,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8650,error,error,8650,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35654,error,error,35654,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not a way CMake wants to act. I'm still working on a fix. You'll see ""exponent has no digits"" errors. In any case, if the generator has to run again (which is probably correct -- it's no",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:2003,down,down,2003,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,2,['down'],['down']
Availability,"bint --force` to remove libint(1) but keep `psi4-path-advisor`. 3. In https://github.com/loriab/psi4/blob/libint2/external/upstream/libint2/CMakeLists.txt and https://github.com/loriab/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:1749,down,downloading,1749,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,2,['down'],['downloading']
Availability,"bj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9288,error,error,9288,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23951,error,error,23951,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38027,error,error,38027,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25220,error,error,25220,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17864,error,error,17864,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51650,error,error,51650,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22780,error,error,22780,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48984,error,error,48984,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"boptking.a(optking.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj in libmints.a(basisset_parser.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv in libmints.a(basisset_parser.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv in libmints.a(basisset_parser.cc.o); ...; ""__ZTISt9bad_alloc"", referenced from:; __ZTIN5boost16exception_detail10bad_alloc_E in libpsio.a(filemanager.cc.o); __ZN5boost6python15instance_holder8allocateEP7_objectmm in libboost_python-1_57.a(class.o); GCC_except_table3 in libboost_python-1_57.a(errors.o); __ZN5boost6python6detail12gcc_demangleEPKc in libboost_python-1_57.a(type_id.o); GCC_except_table3 in libmints.a(eribase.cc.o); GCC_except_table3 in libmints.a(3coverlap.cc.o); __ZN5Eigen8internal19throw_std_bad_allocEv in libpcm.a(Meddle.cpp.o); ...; ""__ZTISt9exception"", referenced from:; __ZTIN5boost2io12format_errorE in libmints.a(molecule.cc.o); GCC_except_table3 in libboost_python-1_57.a(errors.o); __ZTIN6PsiAPI13PsiException2E in libpsiapi.a(BasisSet.cc.o); __ZTIN3psi13PsiException2E in libmolecule.a(FragmentedSys.cc.o); __ZTIN3psi13PsiException2E in libparallel2.a(TaskMap.cc.o); __ZTIN3psi13PsiException2E in libparallel2.a(TaskStatistics.cc.o); __ZTIN3psi13PsiException2E in libPsiUtil.a(Exception2.cc.o); ...; ""__ZTIa"", referenced from:; __ZN5boost6python9converter29initialize_builtin_convertersEv in libboost_python-1_57.a(builtin_converters.o); ""__ZTIb"", referenced from:; __ZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IvRN3psi11PSIOManagerEibEEE8elementsEv in export_psio.cc.o; __ZN5boost6python9converter23expected_pytype_for_argIbE10get_pytypeEv in export_psio.cc.o; __ZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IvRN3psi11PSIOManagerERKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbEEE8elementsEv in export_psio.cc.o; ___cxx_global_var_init57 in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4impl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:76862,error,errors,76862,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,1,['error'],['errors']
Availability,"build constructors by following instructions https://github.com/psi4/psi4meta/blob/master/conda-recipes/constructor-cutter-unified/README.md. * edit tag and hash; * clear package cache; * `python run.py`; * check for noarch (BAD); * upload to vergil. generate the download site; * create new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md mind the edition string `v13rc2` for this and future filenames; * copy and edit new https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; * enter `scripts/` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; * run the `install-generator.py` in place. it will dump new files into `data/installs/` _subdirs_. be sure to `git add` them.; * installer page is ready. if wanted, edit the desination of the `Download` nav button https://github.com/psi4/psicode-hugo-website/blob/master/config.toml#L35; * pays to test; * installer on Mac and Linux; * that download button and `curl` downloading register on the download counters on vergil",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733:264,down,download,264,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733,9,"['Down', 'down']","['Download', 'download', 'downloading']"
Availability,"c SKIPPED [ 54%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_grimme_3c FAILED [ 59%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dkh PASSED [ 63%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED [ 68%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_resp PASSED [ 72%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 77%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 86%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 90%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 95%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [100%]. ======================================================= FAILURES =======================================================; ______________________________________________________ test_dftd3 ______________________________________________________. molrec = {'elbl': ['', '', '', '', '', '', ...], 'elea': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}; name_hint = 'b3lyp', level_hint = 'd2', param_tweaks = None, ptype = 'gradient', dashcoeff_supplement = None; verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:2620,FAILURE,FAILURES,2620,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['FAILURE'],['FAILURES']
Availability,"change the wording if there's a suggestion.) This error message _is_ raised, but because the parser tries all formats (e.g., xyz, psi4) in turn, when it fails them all, it raises an error message with the whole molecule string, which is less helpful, and that last error message is what psi4 repeats to you.; ```; Traceback (most recent call last):; File ""/psi/gits/QCElemental/i2287.py"", line 22, in <module>; ans = qcel.molparse.from_string(xyz, dtype=""psi4""); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 228, in from_string; molstr, molinit = parse_as_psi4_ish(molstr, unsettled=False); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 217, in parse_as_psi4_ish; raise MoleculeFormatError(""""""Unprocessable Molecule remanents under {}:\n{}"""""".format(dtype, molstr)); qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remnants under psi4:; H6 1.51000000 0.78000000 0 44000000; ```. I've handled this better now to raise the shortest error message among the formats with https://github.com/MolSSI/QCElemental/pull/274, and the psi message looks like:; ```; Traceback (most recent call last):; File ""/psi/gits/hrw-l2/objdir39b/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/psi/gits/hrw-l2/objdir39b/stage/lib/psi4/driver/molutil.py"", line 258, in geometry; molrec = qcel.molparse.from_string(; File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 262, in from_string; raise(e); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 256, in from_string; molstr, molinit = parse_as_psi4_ish(molstr, unsettled=True); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 217, in parse_as_psi4_ish; raise MoleculeFormatError(f""""""Unprocessable Molecule remnants under {dtype}:\n{molstr}""""""). qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remnants under [psi4, xyz, xyz+, psi4+]:; H6 1.51000000 0.78000000 0 44000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2287#issuecomment-910395723:1118,error,error,1118,https://psicode.org,https://github.com/psi4/psi4/issues/2287#issuecomment-910395723,1,['error'],['error']
Availability,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53614,error,error,53614,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,5,['error'],['error']
Availability,"class, it is important that the implementation be as efficient and maintainable as possible. In that respect, I think there are some general improvements to be made:; > ; > The way you've structured incremental Fock keeps eight lists of matrices attached to each `JK` object: copies of the previous `J`, `K`, `wK`, and `D` matrices, and differences between the last two iterations `J`, `K`, `wK`, `D`. In the interest of efficiency, I think it would be best to not store these matrices. Incremental Fock as implemented in the `DFJCOSK` class is a little better about this. That code adds the difference in `J`/`K`/`wK` to the appropriate buffer, which is not zeroed out between SCF iterations. This requires keeping only one list of matrices, the previous iteration `D`, which in my opinion is cleaner. (I have some thoughts on getting around storing the previous `D` matrix too.); > ; > Speaking more broadly about the design of the `JK` class, one valuable aspect of the `JK` class is that it is stateless and decoupled from the SCF procedure. `JK` classes have a well-defined [interface](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.h#L175-L209). The variables like `incfock_count_` that you've proposed adding to the `JK` class break this statelessness, and my opinion that kind of logic should be in the SCF driver, not the `JK` object.; > ; > Let me know if any of these thoughts are unclear. I agree with your points. However, making that change would require a refactor of `DirectJK` (which zero out the J/K matrices at the beginning of every iteration) as well, as well as an overhaul of the previous `INCFOCK` code that exists in the Psi4 code. For the sake of PR brevity, I suggest punting those changes down to a future PR. The scope of this PR is to fix the numerical instabilities of `incfock` in COSX. Per @davpoolechem, using `incfock` on COSX indeed leads to significant time savings on larger systems, even if it is always OFF by default for the last iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623:1952,down,down,1952,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623,1,['down'],['down']
Availability,"clude; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure] Error 1; CMakeFiles/Makefile2:1533: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; I'll have a poke about to see if I can get it to build, either within the main psi4 build or stand alone (happy to submit this as a new issue, if that would be preferable).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:1789,down,downstream,1789,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,9,"['Error', 'down']","['Error', 'downstream']"
Availability,"cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh\n'); Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 477, in trace_task; R = retval = fun(*args, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 760, in __protected_call__; return self.run(*args, **kwargs); File ""/code/bigchem/tasks.py"", line 52, in compute; return qcop_compute(program, inp_obj, raise_exc=raise_exc, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/qcop/main.py"", line 35, in compute; return adapter.compute(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/base.py"", line 143, in compute; results, stdout = self.compute_results(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/qcengine.py"", line 42, in compute_results; qcng_output = qcng_compute(; File ""/opt/conda/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 141, in compute; pversion = parse_version(self.get_version()); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>; from . import core; ImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh. ```. **EDIT:** The issue appears to be coming from using a `psi4` channel for installation. Some of my old `env.yaml` files used a `psi4` channel. The `psi4` installation from that channel appears broken. If you install from `conda-forge` it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124:1766,Error,Error,1766,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124,2,['Error'],['Error']
Availability,"ct const&, char const*, boost::python::api::object const&) in libboost_python-1_57.a(object_protocol.o); ""_PyErr_Fetch"", referenced from:; psi::HandleError() in libfrag.a(LibFragDriver.cc.o); ""_PyErr_Format"", referenced from:; boost::python::pytype_check(_typeobject*, _object*) in libboost_python-1_57.a(from_python.o); boost::python::objects::(anonymous namespace)::callable_check(_object*) in libboost_python-1_57.a(class.o); boost::python::objects::function::add_to_namespace(boost::python::api::object const&, char const*, boost::python::api::object const&, char const*) in libboost_python-1_57.a(function.o); boost::python::converter::registration::get_class_object() const in libboost_python-1_57.a(registry.o); ""_PyErr_NewException"", referenced from:; boost::python::objects::function::argument_error(_object*, _object*) const in libboost_python-1_57.a(function.o); ""_PyErr_NoMemory"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyErr_Occurred"", referenced from:; boost::python::len(boost::python::api::object const&) in python.cc.o; boost::python::len(boost::python::api::object const&) in libparallel2.a(LibParallelHelper.cc.o); boost::python::len(boost::python::api::object const&) in libmints.a(matrix.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_hessian_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_1_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_freq_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_freq_1.cc.o); ...; ""_PyErr_Print"", referenced from:; psi::Python::run(__sFILE*) in python.cc.o; psi::Dispersion::compute_energy(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::Dispersion::compute_gradient(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::SuperFunctional::build(std::__1::basic_string<char, std::__1::char_traits<char>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:8014,error,errors,8014,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['error'],['errors']
Availability,"d on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.01 seconds = 0.00 minutes; 	system time = 0.03 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.46 seconds = 0.01 minutes; 	system time = 0.09 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:10389,avail,available,10389,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['avail'],['available']
Availability,"da-forge; pyyaml 6.0 py38h294d835_4 conda-forge; qcelemental 0.17.0 py_0 psi4; qcengine 0.19.0 pyhd8ed1ab_0 psi4; scipy 1.8.1 py38h9bf8e03_0 conda-forge; setuptools 61.2.0 py38haa95532_0; sqlite 3.38.3 h2bbff1b_0; tk 8.6.12 h8ffe710_0 conda-forge; tomli 2.0.1 pyhd8ed1ab_0 conda-forge; vc 14.2 h21ff451_1; vs2015_runtime 14.27.29016 h5e58377_2; wheel 0.37.1 pyhd3eb1b0_0; wincertstore 0.2 py38haa95532_2; xz 5.2.5 h62dcd97_1 conda-forge; yaml 0.2.5 h8ffe710_2 conda-forge; zipp 3.8.0 pyhd8ed1ab_0 conda-forge; ```. Manually updating pydantic with `pip install -U pydantic`, installs version 1.9.1 and then running `psi4 --test` gives:; ```; ================================================= test session starts =================================================; platform win32 -- Python 3.8.13, pytest-7.1.2, pluggy-1.0.0 -- Path\psi4conda\envs\psi16\python.exe; cachedir: .pytest_cache; rootdir: Path\psi4conda\envs\psi16\lib\site-packages\psi4, configfile: pytest.ini; collected 4042 items / 1 error / 3950 deselected / 92 selected. ======================================================= ERRORS ========================================================; _______________________________ ERROR collecting tests/test_qcel_molparse_to_string.py ________________________________; psi4conda\envs\psi16\lib\site-packages\psi4\tests\test_qcel_molparse_to_string.py:7: in <module>; from qcelemental.tests import test_molparse_to_string; <frozen importlib._bootstrap>:991: in _find_and_load; ???; <frozen importlib._bootstrap>:975: in _find_and_load_unlocked; ???; <frozen importlib._bootstrap>:671: in _load_unlocked; ???; psi4conda\envs\psi16\lib\site-packages\_pytest\assertion\rewrite.py:168: in exec_module; exec(co, module.__dict__); psi4conda\envs\psi16\lib\site-packages\qcelemental\tests\test_molparse_to_string.py:270: in <module>; ""subject1"": qcel.models.Molecule(; psi4conda\envs\psi16\lib\site-packages\qcelemental\models\molecule.py:294: in __init__; super().__init__(**kwargs); pydantic\main.p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:2918,error,error,2918,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,2,['error'],['error']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Users/shantigp/projects$ curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.3-py36-Linux-x86_64.sh"" -o Psi4conda-1.3-py36-Linux-x86_64.sh --keepalive-time 2; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 515M 100 515M 0 0 4751k 0 0:01:51 0:01:51 --:--:-- 4323k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478018358:99,down,download,99,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478018358,1,['down'],['download']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Windows/System32$ curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.3-py36-WindowsWSL-x86_64.sh"" -o Psi4conda-1.3-py36-WindowsWSL-x86_64.sh --keepalive-time 2; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0Warning: Failed to create the file Psi4conda-1.3-py36-WindowsWSL-x86_64.sh:; Warning: Permission denied; 0 515M 0 3759 0 0 6382 0 23:31:28 --:--:-- 23:31:28 6371; curl: (23) Failed writing body (0 != 3759)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478015030:92,down,download,92,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478015030,1,['down'],['download']
Availability,"decl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18077,error,error,18077,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"decl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28401,error,error,28401,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16803,error,error,16803,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ding NUM_FROZEN_DOCC doesn't work because it would need; to be different for fragment A than Fragment B. On Fri, Oct 2, 2020 at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A = 18446744073709551611; > FOCC B = 1; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2012>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:1764,error,error,1764,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354,1,['error'],['error']
Availability,"double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30555,error,error,30555,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37610,error,error,37610,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21288,error,error,21288,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11746,error,error,11746,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18482,error,error,18482,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44179,error,error,44179,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45890,error,error,45890,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"d，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16613,error,error,16613,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https://github.com/dsirianni> hit them), so we switched toward the; > die+traceback. Now SCF will behave like optimizations.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1130#issuecomment-411567479>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdvbzSmwMSXIINgOIb089mSzOfCS1ks5uO2AMgaJpZM4V0pOZ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:2166,error,error-msg,2166,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,4,['error'],"['error', 'error-msg']"
Availability,"e *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38205,error,error,38205,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23169,error,error,23169,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20516,error,error,20516,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22969,error,error,22969,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33892,error,error,33892,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8149,error,error,8149,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e PK integral calculation. For me, it took building Psi4 entirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all in the output file. The current theory is that the `python` process gets aborted by a SIGABRT and cannot write the message to the output file. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1160,Error,Error,1160,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,1,['Error'],['Error']
Availability,"e appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis functions in the first two MOs. To me, something messed up with core s orbitals in the SCF indicates a problem with the basis set projection, a problem with the DKH, or perhaps even an index start error if only the first MO is wrong. ; Fun!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1795,error,error,1795,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142,2,['error'],['error']
Availability,"e buffer holds the information necessary to get that data, *when it is explicitly told to*. . I am sorry for not being clear, but this stuff is very easy to get lost in. I meant that trying to access tensor elements directly after calling `buf4_init`. Getting back to the subject of this PR: . 1. Lets leave the comments in `file4_init` alone, since the `buf4/file2_init` functions are the ones being used externally, `file4_init`s are usually only found w/in DPD itself as far as I know.. ; 2. In `buf4_init()` and `file2_init()` We can put note/warning separate from the description of `label`, something to the tune of ; > Make sure that you use the correct `label` and `inputfile` if you *intend* to read from or write to an existing quantity on disk. If you *intend* to populate a new quantity on disk, ensure that the `label` is not already used in `inputfile`. PSIO::tocprint(int filenum) can be used to display the current list of labels in use in the outputfile. . BTW: That last hint is particularly useful for debugging I/O related errors. Also, If you intend … better than it will be loaded… since it indicates this may or may not be done, and it does **not** happen now. . The case where an tensor is held in core via the cache system does not need to be mentioned since it does not change any of this behavior. To go on to your question about the inputfile, label relationship. The file is one of those defined in [psifiles.h](https://github.com/psi4/psi4/blob/master/psi4/include/psi4/psifiles.h), and these macros provide an easy way to know which number file a quantity belongs in. Thinking of the file as a dictionary is not so far from reality, and will serve for the purpose of explaining. The label is going to be used to lookup the offset into the file (number of bytes from the beginning) where some numbers (the elements of the tensor) are found. If writing it will replace these, if reading they used in any operations involving the buffer we are using to manage all of this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/550#issuecomment-267512911:1997,error,errors,1997,https://psicode.org,https://github.com/psi4/psi4/pull/550#issuecomment-267512911,2,['error'],['errors']
Availability,"e reply and suggestions @loriab !. > Good, thanks!; > ; > Assuming [this is the log](https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=i386&ver=1%3A1.2.1-1&stamp=1546604357&raw=0) to look at, a few comments:. It's the ia32 (32bit) build, the x86_64 one is here:; https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=amd64&ver=1%3A1.2.1-1&stamp=1546603567&raw=0. > * no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`). Thanks, I thought I had removed them already. > * psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`). It is using python3, this must be some indirect dependency which I can do nothing about.; ; > * production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8. OK, I will look into that. > * I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`). Hrm right, I will take another look at building the manual, thanks for pointing that out. > * threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270. Ok, I'll try to run that during bulid as well. > * Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`). That one is likely due to 32bit: `tests/options1/input.dat` tried to allocate more than 4 GB in the last two attempts in the `check set_memory() wrapper` test; the same applies to `json-v11-energy` and `json_data[""memory""] = ""5GB""`. . So those are accounted",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762:977,avail,available,977,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762,1,['avail'],['available']
Availability,"e,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDD",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13312,error,error,13312,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e-05 DIIS; @DF-RKS iter 8: -308.55887443471090 -5.78261e-05 8.58740e-06 DIIS; @DF-RKS iter 9: -308.55891429039167 -3.98557e-05 5.23007e-06 DIIS ; @DF-RKS iter 10: -308.55893438187678 -2.00915e-05 3.97102e-06 DIIS ; @DF-RKS iter 11: -308.55897076821287 -3.63863e-05 3.09810e-06 DIIS ; @DF-RKS iter 12: -308.55899251437626 -2.17462e-05 1.29222e-06 DIIS ; @DF-RKS iter 13: -308.55899611302931 -3.59865e-06 5.63064e-07 DIIS ; @DF-RKS iter 14: -308.55899645885273 -3.45823e-07 2.29741e-07 DIIS ; Energy and wave function converged.; ```. And with `set wcombine false`:; ```...; ==> Integral Setup <==; ; DFHelper Memory: AOs need 6.464 GiB; user supplied 6.464 GiB. Using in-core AOs.; ...; ==> Iterations <==; ; Total Energy Delta E RMS |[F,P]|; ; @DF-RKS iter SAD: -306.90916690803959 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -306.98727406041530 -7.81072e-02 1.83756e-03 DIIS; @DF-RKS iter 2: -307.13667252428678 -1.49398e-01 1.47236e-03 DIIS; @DF-RKS iter 3: -307.32880507487312 -1.92133e-01 1.25216e-04 DIIS; @DF-RKS iter 4: -307.32990958370664 -1.10451e-03 7.65745e-05 DIIS; @DF-RKS iter 5: -307.33036354773054 -4.53964e-04 1.70705e-05 DIIS; @DF-RKS iter 6: -307.33039129462924 -2.77469e-05 5.09682e-06 DIIS; @DF-RKS iter 7: -307.33039390006070 -2.60543e-06 1.20852e-06 DIIS; @DF-RKS iter 8: -307.33039428809019 -3.88029e-07 4.42881e-07 DIIS; Energy and wave function converged.; ```. Both jobs were run with 8 threads and 29337MB of memory, on the same machine (An `Intel(R) Xeon(R) Gold 6126 CPU @ 2.60GHz`). As my be relevant, other settings are:; ```set {; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; }; ```. Should I have expected cherry-picking 9163cbd08865d26129cfbaf5c302fc14f870f30f into 1.4 to have resolved this discrepancy? Or should I be making `set wcombine false` a standard part of my scripts for now?. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182:3209,robust,robust,3209,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182,1,['robust'],['robust']
Availability,"e-enabled and so probably needs tweaking somewhere). Building ambit bails out with the same lack of MathOpenMP that I was seeing before #1053:. ```; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=C;CXX;Fortran, C/CXX/Fortran=GNU/GNU/; -- Found TargetOpenMP: 1 ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:108 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); cmake/FindTargetLAPACK.cmake:30 (find_package); CMakeLists.txt:90 (find_package). -- Configuring incomplete, errors occurred!; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeError.log"".; external/upstream/ambit/CMakeFiles/ambit_external.dir/build.make:106: recipe for target 'external/upstream/ambit/ambit_external-prefix/src/ambit_external-stamp/ambit_external-configure' failed; make[2]: *** [external/upstream/ambit/ambit_external-prefix/src/ambit_external-stamp/ambit_external-configure] Error 1; CMakeFiles/Makefile2:1220: recipe for target 'external/upstream/ambit/CMakeFiles/ambit_external.dir/all' failed; make[1]: *** [external/upstream/ambit/CMakeFiles/ambit_external.dir/all] Error 2. ```; Later on, I'll also try building against CUDA to see if gpu_dfcc now builds (it had the OpenMPMath error when I tried the other day), although that also involves fighting g++ versions, etc...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280:1652,error,errors,1652,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"e.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, char, char, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:189: note: psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData(const psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&); /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:3285,error,error,3285,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"e/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:2551,error,error,2551,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"e/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3429,Error,Error,3429,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879,1,['Error'],['Error']
Availability,"e: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; !",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:2674,Error,Error,2674,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by QChem reproduce the results provided in the Trofimov, Stelter, Schirmer paper. However, the energies provided by Psi4 seem to have an inconsistent deviation from the values: for some states, the energies reported are near exact:; ```; Lit: 9.63 eV; Psi4: 9.6455240 eV; QChem: 9.631168 eV; ```; for others, the excitation energy deviates as much as 0.08 eV:; ```; Lit: 15.33 eV; Psi4: 15.2573251 eV; QChem: 15.318842 eV; ```. ### **N2**; In the case of the N2 system, we again saw no errors in the ADC(1) results. QChem continues to be able to reproduce excitation energies for ADC(2) calculations, but in Psi4, for several states in the ADC(2) calculation, we see warnings about a strongly rotated CIS state and zero eigenvalues. ### **Psi4 1.3.2 -- N2 ADC(2) excitation energies**; ```; 1 Ag state : 0.9479767 (a.u.), 25.7957601 (eV); 2 Ag state : 1.0193053 (a.u.), 27.7367101 (eV); #WARNI",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:3079,error,error,3079,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['error'],['error']
Availability,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5276,down,down,5276,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,4,"['down', 'recover']","['down', 'recover']"
Availability,"ecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34324,error,error,34324,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12723,error,error,12723,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- LAZ Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-linux-gnu/libpthread.so ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:99 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:45 (find_dependency); CMakeLists.txt:25 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; CMakeFiles/psi4-core.dir/build.make:108: recipe for target 'psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure' failed; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure] Error 1; CMakeFiles/Makefile2:646: recipe for target 'CMakeFiles/psi4-core.dir/all' failed; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; (I'm not convinced that uncommenting the cmake_print_properties bit at the end of FindMathOpenMP.cmake produced much more in the way of output.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516:4882,error,errors,4882,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516,4,"['Error', 'error']","['Error', 'errors']"
Availability,"ed out>) at Python/ceval.c:4161 ; > > #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084 ; > > #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679 ; > > #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; > > args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; > > kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433 ; > > #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0) ; > > at Python/ceval.c:771 ; > > #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; > > locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981 ; > > #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0) ; > > at Python/pythonrun.c:1914 ; > > #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) () ; > > from /usr/lib/libboost_python3.so.1.54.0 ; > > #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446 ; > > #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111 ; > > Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. ; > > ; > > Thanks! ; > > ; > >  ; > > Reply to this email directly or view it on GitHub. ; > > ; > > ; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22192736:8336,down,down,8336,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22192736,2,['down'],['down']
Availability,"eometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\compute.py"", line 105, in compute\n output_data = executor.compute(input_data, config)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 121, in compute\n pversion = parse_version(self.get_version())\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 89, in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 304, in popen\n ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 858, in __",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:1788,Error,Error,1788,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['Error'],['Error']
Availability,"erived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true>, true, false, boost::shared_ptr<psi::Matrix>, unsigned long, boost::shared_ptr<psi::Matrix> >::base_set_item(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, _object*, _object*) in export_mints.cc.o; boost::python::vector_indexing_suite<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true> >::base_append(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, boost::python::api::object) in export_mints.cc.o; ...; ""_PyExc_ValueError"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyFile_AsFile"", referenced from:; boost::python::exec_file(boost::python::str, boost::python::api::object, boost::python::api::object) in libboost_python-1_57.a(exec.o); ""_PyFile_FromString"", referenced from:; boost::python::exec_file(boost::python::str, boost::python::api::object, boost::python::api::object) in libboost_python-1_57.a(exec.o); ""_PyFloat_FromDouble"", referenced from:; boost::python::to_python_value<double const&>::operator()(double const&) const in export_mints.cc.o; boost::python::to_python_value<double&>::operator()(double const&) const in export_mints.cc.o; boost::python::converter::arg_to_python<double>::arg_to_python(double const&) in export_mints.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_functional.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_chkpt.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_blas_lapack",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:27861,error,errors,27861,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['error'],['errors']
Availability,"error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36817,error,error,36817,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,error is a Windows install of conda that chocolatey seems to be failing connection on today. It was passing CI earlier.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810,1,['error'],['error']
Availability,est); dfccsd-grad = 43.20 sec*proc (1 test); dfccsd-t-grad = 38.87 sec*proc (1 test); dfccsdat = 20.44 sec*proc (1 test); dfccsdl = 4.62 sec*proc (1 test); dfccsdt = 10.41 sec*proc (1 test); dfep2 = 7.13 sec*proc (2 tests); dfmp2 = 121.95 sec*proc (11 tests); dfomp2 = 943.08 sec*proc (7 tests); dfomp2.5 = 233.40 sec*proc (4 tests); dfomp3 = 229.00 sec*proc (4 tests); dfscf = 28.93 sec*proc (1 test); dft = 5629.04 sec*proc (26 tests); docs = 1.78 sec*proc (2 tests); ecp = 57.50 sec*proc (2 tests); fci = 7.32 sec*proc (2 tests); fcidump = 6.32 sec*proc (1 test); findif = 698.00 sec*proc (5 tests); fnocc = 141.78 sec*proc (4 tests); freq = 1043.60 sec*proc (6 tests); gradient = 1568.40 sec*proc (16 tests); json = 19.71 sec*proc (8 tests); longtests = 933.44 sec*proc (5 tests); mcscf = 5.98 sec*proc (3 tests); minitests = 44.49 sec*proc (3 tests); mints = 40.79 sec*proc (14 tests); misc = 369.08 sec*proc (16 tests); mp2 = 283.13 sec*proc (13 tests); nbody = 73.23 sec*proc (2 tests); numpy = 1.44 sec*proc (1 test); ocepa = 739.92 sec*proc (6 tests); omp = 845.55 sec*proc (18 tests); opt = 956.86 sec*proc (21 tests); prop = 1.97 sec*proc (1 test); properties = 104.12 sec*proc (10 tests); psi = 34317.61 sec*proc (400 tests); psi4numpy = 23.83 sec*proc (6 tests); psimrcc = 87.03 sec*proc (8 tests); python = 1082.76 sec*proc (10 tests); pywrap = 3836.93 sec*proc (12 tests); quicktests = 4351.03 sec*proc (137 tests); rasci = 45.35 sec*proc (3 tests); sapt = 1501.22 sec*proc (20 tests); scf = 6069.20 sec*proc (51 tests); shorttests = 47.02 sec*proc (4 tests); smoketests = 175.49 sec*proc (11 tests); stability = 7.67 sec*proc (2 tests); tutorial = 383.76 sec*proc (6 tests); x2c = 76.86 sec*proc (3 tests). Total Test time (real) = 3000.10 sec. The following tests FAILED:; 	360 - cubeprop-esp (Failed); 	371 - dft-bench-interaction (Timeout); 	373 - pywrap-align (Failed); 	374 - pywrap-align-chiral (Failed); 	401 - json-schema_0_properties (Failed); Errors while running CTest; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:40052,Error,Errors,40052,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Error'],['Errors']
Availability,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2505,Error,Error,2505,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,2,['Error'],['Error']
Availability,"etric.optimize.Optimize(coords, M, IC, engine, dirname, params, print_info = (ic==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\compute.py"", line 105, in compute\n output_data = executor.compute(input_data, config)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 121, in compute\n pversion = parse_version(self.get_version())\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 89, in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:1678,error,errors,1678,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['error'],['errors']
Availability,"evel'; (whatever its final name or design) is that a user could easily elect the; degree to which the optimizer should try different things to reach; convergence. On Tue, Nov 6, 2018 at 4:47 PM Lori A. Burns <notifications@github.com>; wrote:. > PRs psi-rking/optking#24 <https://github.com/psi-rking/optking/pull/24>; > and #1335 <https://github.com/psi4/psi4/pull/1335> are a pair. Together,; > they get most optimizations working for Psi. In particular have working:; >; > - ordinary, opt-is-full job optimizations; > - collecting all the psivars so psi can read them in. basically,; > collecting enough to generate a skeleton (mol, basis, psivars) that can be; > passed back from psi4.optimize(..., return_wfn=True); > - inlining optking's logging output into the psi4 output file; > - resetting psi4's options on either side of the; > optking.run_json_dict() call. The trouble was that the psi4-s imported; > by optking were clearing and setting options (as is proper for indep json; > runs) such that the calling psi4 didn't have its original options in; > globals upon optking termination; > - starting to catch optking errors (str in json) and re-raising them; > as psi4 errors.; >; > Yes, that AlgError vs OptError for exceeding geom_maxiter really stumped; > me for a while b/c I only got the final error (""dynamic level exceeded""); > and I thought it was behaving differently btwn direct optking and psi4; > initiated runs. To me it seems clear that if geom_maxiter is exceeded, then; > optimizer quits directly (though perhaps that's clearer when geom_maxiter=2; > than =200).; >; > @psi-rking <https://github.com/psi-rking> @AlexHeide; > <https://github.com/AlexHeide>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1335#issuecomment-436437450>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTHzCC2j_z9TFbx5ofRV3X4D0BTSDks5ushF5gaJpZM4YQL0t>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1335#issuecomment-436668061:1407,error,errors,1407,https://psicode.org,https://github.com/psi4/psi4/pull/1335#issuecomment-436668061,6,['error'],"['error', 'errors']"
Availability,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869,3,['error'],['error']
Availability,extra note: `svml` error seems to pop up when switching Intel versions — not pinned down to compiler/mkl/etc.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1036#issuecomment-395821551:19,error,error,19,https://psicode.org,https://github.com/psi4/psi4/issues/1036#issuecomment-395821551,2,"['down', 'error']","['down', 'error']"
Availability,"fc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46556,error,error,46556,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"few comments:. It's the ia32 (32bit) build, the x86_64 one is here:; https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=amd64&ver=1%3A1.2.1-1&stamp=1546603567&raw=0. > * no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`). Thanks, I thought I had removed them already. > * psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`). It is using python3, this must be some indirect dependency which I can do nothing about.; ; > * production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8. OK, I will look into that. > * I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`). Hrm right, I will take another look at building the manual, thanks for pointing that out. > * threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270. Ok, I'll try to run that during bulid as well. > * Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`). That one is likely due to 32bit: `tests/options1/input.dat` tried to allocate more than 4 GB in the last two attempts in the `check set_memory() wrapper` test; the same applies to `json-v11-energy` and `json_data[""memory""] = ""5GB""`. . So those are accounted for, the ones which are weird are the . ```; Exit Status: infile ( -11 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```; failures. I've updated the packaging and am running a new build/test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762:1562,failure,failures,1562,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762,2,['failure'],['failures']
Availability,"fix for this has commenced at https://github.com/obrien951/sns-mp2/tree/serial_wfn . it doesn't strictly involve psi4 changes, so it's possible we may mint v1.3 and then produce a new `psi4-rt` conda metapackage with snsmp2 restored after the fix is available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1514#issuecomment-465349722:250,avail,available,250,https://psicode.org,https://github.com/psi4/psi4/issues/1514#issuecomment-465349722,1,['avail'],['available']
Availability,"fixed_dihedral is at least allowing the calculation to run, but it appears as soon as the next optimization cycle starts the following error code pops up ""Process finished with exit code -1073741819 (0xC0000005)"". wondering if the scratch data is the cause? ""Scratch directory: C:\Users\vike\AppData\Local\Temp/"". Is there a way to specify the scratch directory?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1485964679:135,error,error,135,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1485964679,1,['error'],['error']
Availability,flat namespace errors are a nightmare.. It is easier and faster to compile against the `psi4-dev` miniconda package.; It comes with a cmake advisor (run `psi4-path-advisor -h)` that will set a correct `cmake` command line with proper flags and library location.; Custom CXX_FLAGS should not be needed anymore then.; You can use the miniconda provided gcc/clang setup or your own gcc. edit: This way you also ensure your python and psi4 has the same numpy/mkl setup.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614781646:15,error,errors,15,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614781646,1,['error'],['errors']
Availability,"fnocc::CoupledCluster::compute_energy() (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x1330A20: psi::fnocc::fnocc(psi::Options&) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0xA5D569: py_psi_fnocc() (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0xA8C2AD: boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator()(_object*, _object*) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55C4D9D: boost::python::objects::function::call(_object*, _object*) const (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55C4AD4: boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55CFDCC: boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== ; ==14111== HEAP SUMMARY:; ==14111== in use at exit: 22,890,520 bytes in 26,750 blocks; ==14111== total heap usage: 806,896 allocs, 780,146 frees, 145,885,736 bytes allocated; ==14111== ; ==14111== LEAK SUMMARY:; ==14111== definitely lost: 27,876 bytes in 493 blocks; ==14111== indirectly lost: 5,344 bytes in 40 blocks; ==14111== possibly lost: 13,024,793 bytes in 10,784 blocks; ==14111== still reachable: 9,832,507 bytes in 15,433 blocks; ==14111== suppressed: 0 bytes in 0 blocks; ==14111== Rerun with --leak-check=full to see details of leaked memory; ==14111== ; ==14111== For counts of detected and suppressed errors, rerun with: -v; ==14111== Use --track-origins=yes to see where uninitialised values come from; ==14111== ERROR SUMMARY: 692778 errors from 1000 contexts (suppressed: 1311 from 53); Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/121#issuecomment-123755185:2985,error,errors,2985,https://psicode.org,https://github.com/psi4/psi4/issues/121#issuecomment-123755185,4,"['ERROR', 'error', 'fault']","['ERROR', 'errors', 'fault']"
Availability,"for gdb? There isn't much more; ```; Starting program: /home/kruse/miniconda3/bin/python /usr/qc/psi4fork.bin/bin/psi4 -n4 water.in; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [New Thread 0x2aaaf01ac780 (LWP 10083)]; [New Thread 0x2aab0f5ae800 (LWP 10084)]; [New Thread 0x2aab37400880 (LWP 10085)]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00002aaac4d3f06e in std::local_Rb_tree_decrement (__x=0x2aaaae4b3ff0 <psi::SphericalGrid::lebedev_mapping_+8>); at /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++98/tree.cc:97; 97 /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++98/tree.cc: No such file or directory.; ```. I needed to reproduce the backtrace error from normal execution. Not always a useful crash, too. But there seem to be different errors.; Intel: [stacktrace.txt](https://github.com/psi4/psi4/files/2610768/stacktrace.txt); AMD: [stacktrace_amd.txt](https://github.com/psi4/psi4/files/2610774/stacktrace_amd.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-441237264:420,fault,fault,420,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-441237264,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"for the record, these exports in export_mints.cc are what requires the cxx standard downgrade. because of these, need the libmints/eri.h header and that brings in the l2 headers. hence the export_mints reasoning is the same as that for libmints/eri.cc. ```; py::class_<Libint2TwoElectronInt, std::shared_ptr<Libint2TwoElectronInt>>(m, ""TwoElectronInt"", pyTwoBodyAOInt,; ""Computes two-electron repulsion integrals""); .def(""compute_shell"", compute_shell_ints(&TwoBodyAOInt::compute_shell), ""Compute ERIs between 4 shells""); .def(""shell_significant"", compute_shell_significant(&TwoBodyAOInt::shell_significant),; ""Determines if the P,Q,R,S shell combination is significant"");. py::class_<Libint2ERI, std::shared_ptr<Libint2ERI>>(m, ""ERI"", pyTwoBodyAOInt, ""Computes normal two electron repulsion integrals"");; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2392#issuecomment-1007660665:84,down,downgrade,84,https://psicode.org,https://github.com/psi4/psi4/pull/2392#issuecomment-1007660665,1,['down'],['downgrade']
Availability,"four/runner.py"", '; 'line 137, in build_input\n'; ' cfourrec[""infiles""][""GENBAS""] = '; 'genbas.read_text()\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1236, in read_text\n'; "" with self.open(mode='r', encoding=encoding, ""; 'errors=errors) as f:\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1222, in open\n'; ' return io.open(self, mode, buffering, '; 'encoding, errors, newline,\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1078, in _opener\n'; ' return self._accessor.open(self, flags, '; 'mode)\n'; 'FileNotFoundError: [Errno 2] No such file or '; 'directory: '; ""'/xstorage/tobias/bin/cfour/basis/GENBAS'\n"",; 'error_type': 'unknown_error',; 'extras': None},; 'extras': None,; 'id': None,; 'input_data': {'driver': 'energy',; 'keywords': {'CC_CONV': 12, 'SCF_CONV': 12},; 'model': {'basis': 'aug-pvqz', 'method': 'ccsd(t)'},; 'molecule': {'atom_labels': ['', '', ''],; 'atomic_numbers': [8, 1, 1],; 'fix_com': False,; 'fix_orientation': False,; 'fragment_charges': [0.0],; 'fragment_multiplicities': [1],; 'fragments': [[0, 1, 2]],; 'geometry': [0.0,; 0.0,; -0.12403886030029525,; 0.0,; -1.431430901356359,; 0.9842933627189459,; 0.0,; 1.431430901356359,; 0.9842933627189459],; 'mass_numbers': [16, 1, 1],; 'masses': [15.99491461957,; 1.00782503223,; 1.00782503223],; 'molecular_charge': 0.0,; 'molecular_multiplicity': 1,; 'name': 'H2O',; 'provenance': {'creator': 'QCElemental',; 'routine': 'qcelemental.molparse.from_string',; 'version': 'v0.24.0'},; 'real': [True, True, True],; 'schema_name': 'qcschema_molecule',; 'schema_version': 2,; 'symbols': ['O', 'H', 'H'],; 'validated': True},; 'provenance': {'cpu': 'Intel(R) Xeon(R) CPU E7-4870 v2 @ '; '2.30GHz',; 'creator': 'QCEngine',; 'hostname': 'nod10',; 'qcengine_version': 'v0.23.0',; 'username': 'tobias',; 'version': 'v0.23.0',; 'wall_time': 1.2955999374389648}},; 'success': False}; ```; ; Could you please help me what causes this error?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048:3504,error,error,3504,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048,2,['error'],['error']
Availability,frac test cast truncated to a couple points that reliably converge across computers via 9439a808a05c48b0ee3c7d319998721bd38e403b. the end.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-157785748:49,reliab,reliably,49,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-157785748,1,['reliab'],['reliably']
Availability,future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:8163,error,error,8163,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:9990,error,error,9990,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7902,error,error,7902,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,9,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7641,error,error,7641,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7380,error,error,7380,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7119,error,error,7119,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:36090,error,error,36090,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. -- Docs: https://docs.pytest.org/en/latest/warnings.html; ================================================ 12 pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:83389,error,error,83389,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6858,error,error,6858,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35829,error,error,35829,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6597,error,error,6597,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,9,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35568,error,error,35568,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6336,error,error,6336,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: Depre,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35307,error,error,35307,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6075,error,error,6075,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,220,['error'],['error']
Availability,"fwiw, no difference in test system behavior between the two originally reported environments. Both fail to converge with nthreads=8 and show the same small error with nthreads=1. Psi is the 1.4 conda package, so bugfix in the PR not applied. MKLs and iomp5's in the 2019–2021 range. Defaults-based env has gomp present (been so since the gcc 7.3->7.5 transition a couple months ago) but it's not linked into psi or showing trouble. ```; (trial140def) psilocaluser@bash:psinet:/psi/gits/trial: conda list -n trial140def | grep -e gcc -e ""\-ng"" -e gomp -e mkl -e intel -e ""1\.4+94""; _libgcc_mutex 0.1 main ; blas 1.0 mkl ; intel-openmp 2021.3.0 h06a4308_3350 ; libgcc-ng 9.3.0 h5101ec6_17 ; libgfortran-ng 7.5.0 ha8ba4b0_17 ; libgomp 9.3.0 h5101ec6_17 ; libstdcxx-ng 9.3.0 hd4cf53a_17 ; mkl 2020.2 256 ; mkl-service 2.3.0 py38he904b0f_0 ; mkl_fft 1.3.0 py38h54f3939_0 ; mkl_random 1.1.1 py38h0573a6f_0 ; psi4 1.4+9485035 py38hd63c0ca_0 psi4; (trial140def) psilocaluser@bash:psinet:/psi/gits/trial: conda list -n trial140ana | grep -e gcc -e ""\-ng"" -e gomp -e mkl -e intel -e ""1\.4+94""; blas 1.0 mkl anaconda; intel-openmp 2020.2 254 anaconda; libgcc-ng 9.1.0 hdf63c60_0 anaconda; libgfortran-ng 7.3.0 hdf63c60_0 anaconda; libstdcxx-ng 9.1.0 hdf63c60_0 anaconda; mkl 2019.4 243 anaconda; mkl-service 2.3.0 py38he904b0f_0 anaconda; mkl_fft 1.2.0 py38h23d657b_0 anaconda; mkl_random 1.1.0 py38h962f231_0 anaconda; psi4 1.4+9485035 py38hd63c0ca_0 psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-905661580:156,error,error,156,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-905661580,1,['error'],['error']
Availability,"g &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8893,error,error,8893,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"g things there unless absolutely necessary for my research. > Unfortunately, open-shell Brueckner or OO coupled cluster does not seem to be a common feature in QC programs, so I am trying to survey which programs have open-shell capable OO methods. Also, a performant OMP2 or OMP2.5 implementation could potentially be useful for us, even if it does not directly solve the lack of an RBCCD(T) implementation. I don't know if your Robosurfer can use this, but depending on your orbital-optimized method, once you have the energy, the gradient is free. All the orbital-optimized methods in Psi have this property. > o_O No, in fact I would have completely missed that! I checked the method table [here](http://www.psicode.org/psi4manual/master/notes_c.html#alternate-implementations) and thought Psi4 cannot do BCCD(T) at all. Perhaps BCCD and BCCD(T) could be added as methods to that docpage?. That page is for methods that _multiple modules_ support, so you can straighten out which module you want given your specific use for a method. That said, is there a place in the manual where we list all the methods we have? I genuinely don't think so. We should add it, if there isn't one. If you want to see all the energy keywords that Psi recognizes, you can find it in the code [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L41). I'd be remiss if I didn't point out that the `dct` module _also_ has some orbital optimized methods. The best one is the default upon entering `energy(dct)`, ODC-12. Use of the others is not recommended for _any_ purpose other than benchmarking. We also have density-fitting for ODC-12. I'll warn you that there is some slight error in the DF gradients, on the order of E-5. That is _also_ on my to-fix list, but given some other papers I need to write, I don't expect to get to that until Winter 2020. The other potential dealbreaker is that method _also_ lacks frozen core support, DF or not. Fixing that is a Spring 2021 target.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450:1981,error,error,1981,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450,1,['error'],['error']
Availability,"gdma1 is the test that's failing on Travis. (For once, timeout is not at fault.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275582318:73,fault,fault,73,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275582318,1,['fault'],['fault']
Availability,"ge:; > >; > > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In; > function ‘bool py_psi_set_local_option_array(const string&, const; > string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a; > member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool; > py_psi_set_global_option_array(const string&, pybind11::list,; > psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13:; > error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])); > { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374:; > recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for; > unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for; > target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; > CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all'; > failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127:; > recipe for target 'all' failed make[3]: *** [all] Interrupt; > CMakeFiles/psi4_core.dir/build.make:111: recipe for target; > 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]:; > *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; > CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all'; > failed make[1]: *** [CMakeFiles/psi4_core.dir/all] I",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074858:1831,error,error,1831,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074858,1,['error'],['error']
Availability,"general note: now that I have the correct base of `master`, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2003#issuecomment-687845899:128,down,down,128,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687845899,1,['down'],['down']
Availability,"gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt Makefile:138: recipe for target '",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1542,error,error,1542,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,"got it, thanks. I asked basisset_parser.cc to print out the basis file it was reading, ; and I found in addition to read the basis file; $(PSI4)/share/psi/basis/6-31g.gbs. it also reads; $(PSI4)/share/psi/basis/cc-pvdz-jkfit.gbs. On 6/14/13 10:37 AM, Lori Burns wrote:. > The reason this doesn't work in the beta branch is that scf_type ; > direct does a few steps density-fitted, then switches over to the ; > exact algorithm. The necessary auxiliary basis set (cc-pvdz-jkfit ; > http://sirius.chem.vt.edu/psi4manual/master/basissets_byfamily.html) ; > is not available for the atoms the original poster listed. In the ; > development branch, there's a check that automatically turns off the ; > density-fitting steps if the aux basis is not available. We'll be ; > releasing the development branch fairly soon, so this shouldn't come ; > up again. In the meantime, if you add |set df_scf_guess false| for ; > atoms that are missing the aux set, it won't try the density-fitting ; > steps and your inputs should work fine.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/psi4/psi4.0b4/issues/7#issuecomment-19470973.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7#issuecomment-19472479:561,avail,available,561,https://psicode.org,https://github.com/psi4/psi4/issues/7#issuecomment-19472479,2,['avail'],['available']
Availability,"h), r/u ks set exclusively by option. You can use ‘scf’ to mean HF, and then it works just the same as DFT. I’d advocate thoroughly adding ‘hf’ (that is not just to energy() like it has been) so it’s on-par with DFT. The r/u/ro options were a nice thought, but not thoroughly carried out, with disturbing consequences, as you found. # Integrate DFT with driver routines. for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft. for ssuper in superfunctional_list():; if ((not ssuper.is_c_hybrid()) and (not ssuper.is_c_lrc()) and (not ssuper.is_x_lrc())):; procedures['gradient'][ssuper.name().lower()] = run_dft_gradient. > On Jun 8, 2015, at 9:49 PM, David Sherrill notifications@github.com wrote:; > ; > Is there an advantage to doing; > ; > gradient('b3lyp'); > ; > instead of; > ; > set reference rks; > set dft_functional b3lyp; > gradient('scf')?; > ; > I guess the former is certainly shorter. But primarily I'm wondering; > whether one is easier to check than the other regarding whether the; > gradient is available. We need to know on a functional-by-functional basis; > whether we have analytic gradients or not. If that's much easier to handle; > with one style vs the other, that would be an argument for doing it that; > way. Then we can decide what to do with the HF cases to make them play; > nicely with our desired solution for the DFT ones.; > ; > David; > ; > On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > > ; > > # (a) for HF; > > ; > > energy(‘scf’); > > ; > > # (b) for unrestricted HF; > > ; > > set reference uhf; > > energy(‘scf’); > > ; > > # (c) for B3LYP; > > ; > > set dft_functional b3lyp; > > set reference rks; > > energy(‘scf’); > > ; > > # (d) also for B3LYP; > > ; > > energy(‘b3lyp’); > > ; > > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > > ; > > set dft_functional b3lyp; > > energy(‘scf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:1447,avail,available,1447,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['avail'],['available']
Availability,"har,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48182,error,error,48182,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"har,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52438,error,error,52438,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"har,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12520,error,error,12520,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"hat happens, then the old binary; file should be wiped out, and I guess it is not being removed. It is; possible this bug has been fixed in the latest version as we have looked at; this problem before, but I'm not sure. The 'dynamic_level' idea is still under development, and hasn't been much; tested.; If you look in /psi4/psi4/src/psi4/optking/set_params.cc, you can see what; the dynamic level is doing. It is changing parameters towards typically; more robust levels. You can do the same thing by changing input keywords.; For example, the behavior of dynamic_level=3 shown there can be produced by; setting the analogous keywords. Opt_params.coordinates = OPT_PARAMS::BOTH;. Opt_params.consecutive_backsteps_allowed = 1;. Opt_params.step_type = OPT_PARAMS::RFO;. Opt_params.intrafragment_step_limit = 0.1;. Opt_params.intrafragment_step_limit_min = 0.1;. Opt_params.intrafragment_step_limit_max = 0.1;. All this to say that you can skip the dynamic_level usage (or simply start; with dynamic_level = 3 [don't know if anyone has ever done that!] and I; expect the i/o error will go away. On the stability of the back-transformation, optking accounts for Delta(q); for a torsion value going from -178 to +178 degrees, etc.. However, the; formula for the derivative (B-matrix element) is undefined and also; discontinuous at 180. A real pain. I hope to try to fix this someday, but; when I do, it'll probably be in the newer python optimizer I'm developing. On Wed, Nov 15, 2017 at 5:21 PM, Chaya Stern <notifications@github.com>; wrote:. > This seems to be an error in writing rather than an error in the; > constrained optimization, isn't it?; >; > This error shows up when dynamic level is raised to 3 after the first; > convergence check when it tries to write optimization data to binary file.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/858#issuecomment-344762514>, or mute; > the t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344949158:1183,error,error,1183,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344949158,2,['error'],['error']
Availability,"helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:4527,fault,fault,4527,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['fault'],['fault']
Availability,"home/toon/miniconda3/envs/p4dev/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 2045, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1281, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1056, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/p4util/python_helpers.py"", line 80, in _pybuild_basis; mol.to_dict(), key, resolved_target, fitrole, other, return_dict=True, return_atomlist=return_atomlist); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 679, in pyconstruct; verbose=verbose); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 838, in construct; filename = cls.make_filename(basgbs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 1396, in make_filename; basisname = basisname.lower(). AttributeError: 'NoneType' object has no attribute 'lower'. Printing out the relevant lines from the Psithon --> Python processed input file:; core.IO.set_default_namespace(""""); core.set_global_option(""SCF_TYPE"", ""pk""); core.set_global_option(""BASIS"", ""ano-rcc""); core.set_global_option(""RELATIVISTIC"", ""x2c""); core.set_global_option(""REFERENCE"", ""uhf""); --> energy('hf'). Psi4 stopped on: Monday, 29 April 2019 07:36PM; Psi4 wall time for execution: 0:00:00.18. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:5559,error,error,5559,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['error'],['error']
Availability,"hon Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile.; > ; > If it helps, I'm running Ubuntu, with gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Make",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1384,error,error,1384,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,"https://github.com/psi4/psi4/pull/1316/files#diff-ed72addaa8414fc1c5e4b58b14f3b1d1R3 will make sure builds with conda pkg 0.1.2 don't use that and instead build and use an internal 0.1.3. But b/c that's an ATLEAST not EXACT, ppl with 0.1.3 in conda and building pre-this-PR psi4 will get errors at runtime. unfortunate, but that's what we get for violating semantic versioning. hopefully far fewer of these in future as approach 1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1316#issuecomment-447904724:288,error,errors,288,https://psicode.org,https://github.com/psi4/psi4/pull/1316#issuecomment-447904724,1,['error'],['errors']
Availability,"i4.energy('ccsd', return_wfn=True); t2 = wfn.T2(); ```; At the time when the python bound function is called and the code for `CCEenergyWavefunction::T2()` is executed the `global_dpd_` the dpd object that the `global_dpd_` points to has been deleted out from under it (you can see [here](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/libdpd/init.cc#L59) that `dpd_set_default` will assign the `global_dpd_` pointer to `dpd_list[0]`, and below it is the code for `dpd_close` that will delete the object. I see two possible solutions. . - The easiest to implement would be to have the getters/setters check that `global_dpd_` is not `nullptr`, and if it is construct the dpd. Before doing the geting/setting. The function would also have to free the dpd object as well as other modules will assume that `global_dpd_` is null until they initialize it and `dpd_init` will throw when they try to create it. - The other option is to simply start phasing out the `global_dpd_` entirely. A data member can be added to the `CCEnergyWavefunction` and the member functions of the class can be modified to use that data member instead of the `global_dpd_`. The initialization of the data member is moved into the construtor and the dpd will be valid until the wavefunction is destroyed. The same would need to be done for the cclambda wavefunction as well. . The constructing the dpd object is far from trival as it allocates memory for and computes index translations for all possible pairs and quartets of the orbital subspaces provided, since this is only done once at the beginning of each module using a DPD I haven't looked into how significan the overhead is but it may be an issue for the first option. The second option is better for code quality, and I once played around with this idea in a plugin years ago, but I never got to the point where I could test if there were any unforeseen consequences down the pipeline (subsequent calls to other CC* modules).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978:2664,down,down,2664,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978,2,['down'],['down']
Availability,"i::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17111,error,error,17111,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"i::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15021,error,error,15021,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(man",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7715,error,error,7715,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10014,error,error,10014,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"if you'll rebase now, the Linux `using_mp2d` CI error should go away. there'll also be a Windows spot check section, https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-windows.yml#L191-L197 . If you add your failing Win test there, we should get better output for debugging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760:48,error,error,48,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760,1,['error'],['error']
Availability,"ight want to test run with lower AM), there'll be a `libint-*.tgz` file produced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmake --build <build_dir> -j<N>`. definitely do this step in parallel. ### Note on AM=7; Regular AM is 5. If you only need 7, you can use this tarball rather than generating your own with `--target export` in L2 repo: https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2_rev1.tgz Start above directions at ""Now back at your psi4 clone..."". Still GCC only, not Intel compilers. ### Exhibit A; ```; cmake -S. -Bbuild \; -G Ninja \; -D LIBINT_BUILD_LIBRARY_AS_SUBPROJECT=OFF \; -D CMAKE_INSTALL_PREFIX=/path/to/l2/install \; -D REQUIRE_CXX_API=ON \; -D REQUIRE_CXX_API_COMPILED=OFF \; -D BUILD_TESTING=ON \; -D CMAKE_PREFIX_PATH=""/psi/toolchainconda/envs/singleboost;/psi/toolchainconda/envs/singlegmp;/psi/toolchainconda/envs/singleeigen"" \; -D ENABLE_MPFR=OFF \; -D LIBINT_LOCAL_EIGEN3_INSTALL=OFF \; -D CMAKE_CXX_COMPILER=$CXX \; -D CMAKE_C_COMPILER=$CC \; -D ENABLE_FORTRAN=OFF \; -D LIBINT2_SHGAUSS_ORDERING=standard \; -D ERI3_PURE_SH=OFF \; -D ERI2_PURE_SH=OFF \; -D ENABLE_ERI=2 \; -D ENABLE_ERI3=2 \; -D ENABLE_ERI2=2 \; -D ENABLE_ONEBODY=2 \; -D ENABLE_G12=1 \; -D DISABLE_ONEBODY_PROPERTY_DERIVS=ON \; -D MULTIPOLE_MAX_ORDER=4 \; -D WITH_G12_MAX_AM=3 \; -D WITH_ERI_MAX_AM=""10;3;2"" \; -D WITH_ERI3_MAX_AM=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:2418,down,download,2418,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['down'],['download']
Availability,"il.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6782,error,error,6782,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,ilds. ```; [ 15%] Building CXX object src/psi4/libqt/CMakeFiles/qt.dir/ras_set.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libqt && /usr/bin/g++-6 -DFC_SYMBOL=2 -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -isystem /home/travis/miniconda/envs/p4env/include/python3.5m -march=native -O3 -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/qt.dir/ras_set.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/ras_set.cc; [ 15%] Building CXX object src/psi4/libqt/CMakeFiles/qt.dir/reorder_qt.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libqt && /usr/bin/g++-6 -DFC_SYMBOL=2 -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -isystem /home/travis/miniconda/envs/p4env/include/python3.5m -march=native -O3 -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/qt.dir/reorder_qt.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/reorder_qt.cc; /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/reorder_qt.cc:310:1: error: expected ‘}’ at end of input; } // namespace psi; ^; make[5]: *** [src/psi4/libqt/CMakeFiles/qt.dir/reorder_qt.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; make[5]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [src/psi4/libqt/CMakeFiles/qt.dir/all] Error 2; make[4]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory `/home/travis/build/psi4/psi4/build'; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory `/home/travis/build/psi4/psi4/build'; make: *** [all] Error 2; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1186#issuecomment-418163840:1215,error,error,1215,https://psicode.org,https://github.com/psi4/psi4/pull/1186#issuecomment-418163840,7,"['Error', 'error']","['Error', 'error']"
Availability,"im/anaconda3/include"" ../configure --enable-eri=2 --enable-eri3=2 --enable-eri2=2 --with-eri-max-am=5 --with-eri2-max-am=6 --with-eri3-max-am=6 --with-shgauss-ordering=gaussian --prefix=/u/andysim/programming/libint/installdir3 --enable-eri2-pure-sh --enable-eri3-pure-sh`. 3. `make install` (this will take a *very* long time). 4. `make export` - this will generate a tarball that can be used to build a version for Psi4 called `libint-2.7.0-beta.1.tgz`. 5. Untar that tarball somewhere else and modify the file `include/libint2_params.h` to read; ```; #ifndef LIBINT2_MAX_AM_default; # define LIBINT2_MAX_AM_default 4; #endif. #ifndef LIBINT2_MAX_AM_default1; # define LIBINT2_MAX_AM_default1 LIBINT2_MAX_AM_default; #endif. #ifndef LIBINT2_MAX_AM_default2; # define LIBINT2_MAX_AM_default2 LIBINT2_MAX_AM_default; #endif; ```; from line 81 onwards. 6. Make a `build` subdir and from there `cmake .. -DCMAKE_INSTALL_PREFIX=/u/andysim/programming/libint/installdir_2.6 -DLIBINT2_SHGAUSS_ORDERING=gaussian -DCMAKE_CXX_FLAGS=""-fPIC""` The fPIC flag is needed, or you'll get some nasty link errors. 7. Now you can build Psi4. Yay! `cmake .. -DCMAKE_BUILD_TYPE=Debug -DLibint2_DIR=/u/andysim/programming/libint/installdir_2.6/lib/cmake/libint2 -DLibint_DIR=/u/andysim/programming/libint1/installdir/share/cmake/Libint -DCMAKE_CXX_FLAGS=""-g -O0 -gxx-name=/v/apps/gcc/5.4.0/bin/g++ $CXXFLAGS""` The libint1 should be the hacked version with the `Libint_t` changed to `Libint1_t`. Also I strongly recommend adding the `-O0` flag to the compiler flags, because our CMake debug build doesn't do this (we should change that) and the code takes a _very_ long time to compile with optimization. A lot of this will be streamlined in the not so distant future, and much of the complication will be eased when we nuke libint1. Until then, the above command should be sufficient to get you up and running with a development build. Please try it out - I'd love to have some help with getting the derivatives working :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417:1620,error,errors,1620,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417,1,['error'],['errors']
Availability,"imary Basis <==. Basis Set: JUN-CC-PVDZ; Blend: JUN-CC-PVDZ; Number of shells: 6; Number of basis function: 10; Number of Cartesian functions: 10; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (JUN-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry HE line 39 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/def2-qzvpp-jkfit.gbs . Computing basis projection from 3-21G to JUN-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 0 0 0 0; -------------------------------------------------------; Total 10 10 1 1 1 0; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 0.000 GiB; user supplied 0.366 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Memory [MiB]: 375; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (JUN-CC-PVDZ AUX); Blend: DEF2-QZVPP-JKFIT; Number of shells: 18; Number of basis function: 46; Number of Cartesian functions: 50; Spherical Harmonics?: true; Max angular momentum: 2. Minimum eigenvalue in the overlap matrix is 3.6142168109E-01.; Using Symmetric Orthogonalization. SCF Guess: Orbitals guess was supplied from a previous computation. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -2.85515015411516 -2.85515e+00 1.19401e-03 ; @DF-UHF iter 1: -2.85520007568163 -4.99216e-05 7.84987e-05 DIIS; @DF-UHF iter 2: -2.85520042336024 -3.47679e-07 7.68575e-06 DIIS; @DF-UHF iter 3: -2.85520042767878 -4.31854e-09 3.18063e-07 DIIS; @DF-UHF iter 4: -2.85520042768697 -8.19389e-12 7.59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:7692,Mask,Mask,7692,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Mask'],['Mask']
Availability,"ing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1888,down,down,1888,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['down'],['down']
Availability,"ing>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long time we had geometry optimizations exit smoothly even if failed for iterations exceeded. That caused some problems (I think @dsirianni hit them), so we switched toward the die+traceback. Now SCF will behave like optimizations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1632,error,error,1632,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,5,['error'],"['error', 'error-msg']"
Availability,"int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48417,error,error,48417,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24997,error,error,24997,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13095,error,error,13095,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39902,error,error,39902,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15915,error,error,15915,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ion as the error mentions. This is either occurring because:; 1) Your PSIDATADIR path is pointing to an older library version; 2) You wrote a custom plugin that still uses this functionality. Please view the following topic: http://forum.psicode.org/t/wavefunction-passing-update/139. Cheers,; Daniel Smith. > On Mar 10, 2016, at 9:58 AM, hernan3009 notifications@github.com wrote:; > ; > It was possible to compile and install psi4 without problems, but the make command returned; > ; > hernan@carlos:~/Power Method/Psi4/pluginintegrales$ make; > /usr/bin/g++ -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DFC_SYMBOL=2 -DHAVE_SYSTEM_NATIVE_LAPACK -DHAVE_SYSTEM_NATIVE_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused -I/home/hernan/Programas/psi4/instalacion/interfaces/include -I/home/hernan/Programas/psi4/instalacion/src/lib -I/home/hernan/Programas/psi4/psi4/src/lib -I/home/hernan/Programas/psi4/psi4/include -I/home/hernan/Programas/psi4/instalacion/include -I/home/hernan/Programas/psi4/instalacion/boost/include -I/usr/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include -c pluginintegrales.cc; > pluginintegrales.cc: In function ‘psi::PsiReturnType psi::pluginintegrales::pluginintegrales(psi::Options&)’:; > pluginintegrales.cc:63:64: error: ‘class psi::Process::Environment’ has no member named ‘wavefunction’; > boost::shared_ptr<Wavefunction> wfn = Process::environment.wavefunction();; > ^; > make: **\* [pluginintegrales.o] Error 1; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/308#issuecomment-194954608.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-194993406:1763,error,error,1763,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-194993406,2,"['Error', 'error']","['Error', 'error']"
Availability,"ion with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in . File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy']lowername. File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'); ```. For the record I copy my file 'pymodule.py' here:. ```; import psi4; import re; import os; import inputparser; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; import p4util; from p4xcpt import *. def run_dmrg(name, **kwargs):; r""""""Function encoding sequence of PSI module and plugin calls so that; dmrg can be called via :py:func:`~driver.energy`. For post-scf plugins. >>> energy('dmrg'). """"""; lowername = name.lower(); kwargs = p4util.kwargs_lower(kwargs). # Your plugin's psi4 run sequence goes here; #psi4.set_global_option('BASIS', 'sto-3g'); psi4.set_lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1844,error,error,1844,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,2,['error'],['error']
Availability,"ionError as err:; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; @@ -1474,7 +1474,7 @@ class Molecule(LibmintsMolecule):; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0); ; diff --git a/psi4/src/psi4/libmints/molecule.h b/psi4/src/psi4/libmints/molecule.h; index 30ef61e..6129121 100644; --- a/psi4/src/psi4/libmints/molecule.h; +++ b/psi4/src/psi4/libmints/molecule.h; @@ -317,9 +317,9 @@ class PSI_API Molecule {; ; /// @{; /// Tests to see of an atom is at the passed position with a given tolerance; - int atom_at_position1(double*, double tol = 0.05) const;; - int atom_at_position2(Vector3&, double tol = 0.05) const;; - int atom_at_position3(const std::array<double, 3>&, const double tol = 0.05) const;; + int atom_at_position1(double*, double tol = 1.e-6) const;; + int atom_at_position2(Vector3&, double tol = 1.e-6) const;; + int atom_at_position3(const std::array<double, 3>&, const double tol = 1.e-6) const;; /// @}; ; /// Do we reinterpret coordentries during a call to update_geometry?; @@ -505,7 +505,7 @@ class PSI_API Molecule {; * Force the molecule to have the symmetry specified in pg_.; * This is to handle noise coming in from optking.; */; - void symmetrize(double tol = 0.05, bool suppress_mol_print_in_exc = false);; + void symmetrize(double tol = 1.e-6, bool suppress_mol_print_in_exc = false);; /// @}; ; /**; @@ -668,7 +668,7 @@ class PSI_API Molecule {; /// Returns the Schoenflies symbol; std::string schoenflies_symbol() const;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879:1880,toler,tolerance,1880,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879,1,['toler'],['tolerance']
Availability,"itals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vecto",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3051,error,error,3051,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,['error'],['error']
Availability,"itude more lines of code than the variadic version) and is limited to about 10-20 parameters (depending on the compiler). In fact the lack of variadic templates is why the boost tuple is limited to 10 parameters. Although 10 is often more than enough, there are reasons to need more, particularly for loop unrolling and extensive logic trees. For example I was able to replace 118 lines of logic (assigning atomic names/masses/ etc.) with about 4 thanks to variadic templates. I think the latter is far easier to read and maintain. I know I get a lot of hate about my love of variadic templates so perhaps this analogy will help: anytime you have used a Python tuple, the only true equivalent is a variadic template. Rvalue references are probably the only other feature I'd label as an essential C++11 feature. Not supporting them can lead to needing extensive code redesign or major performance hits when objects interact. With foresight, rvalue references can be simulated by unique pointers (available in Boost), but the reality is it is often hard to have such foresight. As for the other main C++11 features, standard library implementations of shared/unique pointers, the new chrono and random number generator libraries are all in Boost, a dependency I foresee us having forever. Lamdas are syntactic sugar for static functions. Strong enums are just little wrapper classes around a primitive type . Initializer lists are perhaps borderline essential, but ultimately I think are not needed when you realize that they have always existed for primitive data types, and a constructor is meant to provide essentially the same support for user created objects. The auto keyword is an abomination and should never be used [there is a big difference between you knowing what type something is and the compiler knowing what type something is; the compiler has caught many of my errors where I thought I was getting an object of type T, but really it was type M (usually failing to dereference a share",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85#issuecomment-97772824:2318,avail,available,2318,https://psicode.org,https://github.com/psi4/psi4/issues/85#issuecomment-97772824,2,['avail'],['available']
Availability,"iver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasiri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:2210,Error,Error,2210,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['Error'],['Error']
Availability,"k (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:3604,Error,Error,3604,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"l of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could work for all the downstreams on c-f that want to use it. (It could be worse -- in integral package land, there's also commonly source-generation-time options :-); * the production-level Linux libint2 package has 26k source files, takes way more than 6h to build running on 12 cores, and needs `ulimit` reset on the building computer to complete; * Windows libint2 package has only ever been built on @andysim 's laptop. I worry that between the careful choice of compiler he had to make and the clang-cl details that something would conflict with c-f's locked-down build tooling. Of course we get away with this now because libint2 gets pulled along with psi from `-c psi4`. I've read some of those threads that it took to get OpenMM GPU code working at production grade on c-f, and I judge that a bigger hurdle than libint2. But libint2 is formidable nonetheless. Glad to talk further, though I don't think I have blocks of time to actually work on this this year. Thanks for using psi4 enou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:2397,down,downstreams,2397,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['down'],['downstreams']
Availability,"l psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12306,error,error,12306,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"l psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44408,error,error,44408,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36489,error,error,36489,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36064,error,error,36064,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50591,error,error,50591,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35099,error,error,35099,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301705E96 Unknown Unknown Unknown; libpython3.6m.so. 00002AC3018614B5 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301810E03 Unknown Unknown Unknown; libpython3.6m.so. 00002AC30182F8FA Unknown Unknown Unknown; python 0000000000400C1D Unknown Unknown Unknown; libc.so.6 00002AC3026F9A15 Unknown Unknown Unknown; python 000000000040",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373052900:1334,fault,fault,1334,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900,1,['fault'],['fault']
Availability,"long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8371,error,error,8371,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"looks like it found another one . ```; [ 5%] Building CXX object src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o; cd /home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libdiis && /usr/bin/g++-10 -DUSING_LAPACK_MKL -I/home/vsts/work/1/s/psi4/include -I/home/vsts/work/1/s/psi4/src -I/usr/share/miniconda/envs/p4env/include/python3.8 -isystem /usr/share/miniconda/envs/p4env/include -march=native -pedantic-errors -O3 -DNDEBUG -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fopenmp -MD -MT src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o -MF CMakeFiles/diis.dir/diismanager.cc.o.d -o CMakeFiles/diis.dir/diismanager.cc.o -c /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc; In file included from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.h:38,; from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc:29:; /home/vsts/work/1/s/psi4/include/psi4/pybind11.h:46:52: error: extra ‘;’ [-Wpedantic]; 46 | PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);; | ^; make[5]: *** [src/psi4/libdiis/CMakeFiles/diis.dir/build.make:76: src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o] Error 1; make[5]: Leaving directory '/home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033:432,error,errors,432,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"looks like pcmsolver is the culprit. add `psi4::libint2=*=hc9558a2_9 pytest=5 psi4::pcmsolver=*=py38h6d17ec8_2` to the env specs. py38 passes with that. note that you'll have to adjust the python version in the pcmsolver buildstring. Yes, v1.5 would be the primary victim. v1.6 is latest, so the newest-solving packages from `-c psi4` are built to work with it. Like wise v1.7.dev* and `-c psi4/label/dev`. In this case, v1.5 could have benefitted from more pins. For solid reproducibility, the psi4conda installers have the advantage. I'll have to add the add'l packages to the psicode download page command matrix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412:587,down,download,587,https://psicode.org,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412,1,['down'],['download']
Availability,"looks like typos in options snagging up the docs:. ```; /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:359: ERROR: Undefined substitution referenced: ""optking_frag_ref_atoms"".; /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:359: ERROR: Undefined substitution referenced: ""otking__frag_ref_atoms"".; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1337727223:134,ERROR,ERROR,134,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1337727223,2,['ERROR'],['ERROR']
Availability,"lq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30114,error,error,30114,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/pro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11946,Error,Error,11946,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,4,"['Error', 'error']","['Error', 'error']"
Availability,"m `git describe`; - get the branch and tag contents, including when ppl have neglected to pull tags and have none defined; - make it so when ppl download zip distributions, they're not prevented from compiling for lack of version info; - be able to reset commit increment to preserve monotonic versioning as in https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/src/bin/psi4_main/gitversion.py#L105; - make sure the version gets recomputed _every_ time, even if someone just pulls a change to `README.md` that technically changes the version; - get all that info ; - into the output file header; - to essentially ""configure_file"" the https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/psi4-config.in file so that it gets written to the bottom of it; - into place for https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/doc/sphinxman/source/conf.py.in#L58-L73 to absorb it for the docs build; - so that psi4 command-line can report version. The test is if the docs index.html, an output file, `psi4 --version`, and `psi4-config --version --githash` all return the same correct thing after a pull that doesn't technically require any recompile. I don't doubt that a better formulation than at present could be devised, and that'd be nice to have, especially pure CMake, but as the initial formulation only partially hit the first point, I just reverted back to what worked. I did have to change from the pre-CMakeRewrite version this bit (https://github.com/ryanmrichard/psi4/commit/18a41e0d01a9fa903cdce98bba52c785f81560b2) which is probably why it's compiling again upon install. Perhaps that bit could be fixed by moving the `versioned_code` object lib up to the top level?. Basically, I'm open to fixes, but versioning is a real can of worms, and I'm willing to tolerate eight extra file compiles to avoid opening it. btw, I'm storing my changes at https://github.com/loriab/psi4/commits/CMakeRewrite for the moment, since I'm breaking some things that are purportedly working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239050499:1973,toler,tolerate,1973,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239050499,1,['toler'],['tolerate']
Availability,"ma2lapl2=0x0, v4sigma2lapltau=0x0, v4sigma2tau2=0x0, v4sigmalapl3=0x0, v4sigmalapl2tau=0x0, v4sigmalapltau2=0x0, v4sigmatau3=0x0, v4lapl4=0x0, v4lapl3tau=0x0, v4lapl2tau2=0x0, v4lapltau3=0x0, ; > v4tau4=0x0) at /psi/gits/libxc/src/mix_func.c:119; > #5 0x00007fffecf71998 in xc_gga (func=0x555556ca7500, np=255, rho=0x555556e575c0, sigma=0x555556ccda80, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, v2rho2=0x0, v2rhosigma=0x0, v2sigma2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rhosigma2=0x0, v3sigma3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho2sigma2=0x0, v4rhosigma3=0x0, v4sigma4=0x0); > at /psi/gits/libxc/src/gga.c:126; > #6 0x00007fffecf71b16 in xc_gga_exc_vxc (p=<optimized out>, np=<optimized out>, rho=<optimized out>, sigma=<optimized out>, zk=<optimized out>, vrho=<optimized out>, vsigma=0x555556c12720) at /psi/gits/libxc/src/gga.c:160; > #7 0x00007fffef1a9541 in psi::LibXCFunctional::compute_functional (this=0x896d, in=..., out=..., npoints=-1, deriv=1) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/LibXCfunctional.cc:549; > #8 0x00007fffef1b899f in psi::SuperFunctional::compute_functional (this=0x896d, vals=..., npoints=6) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/superfunctional.cc:633; > #9 0x00007fffef1737ba in psi::RV::compute_V (this=0x896d, ret=<error reading variable: Cannot access memory at address 0x896d>) at /psi/gits/hrw-demo/psi4/src/psi4/libfock/v.cc:1350; > #10 0x00007fffef7752c3 in psi::scf::RHF::form_V (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:180; > #11 0x00007fffef77451b in psi::scf::RHF::form_G (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:185; > ```; > ; > Please let me know when is a good point to try Psi4+Libxc 5.1 again and if your Libxc 6 PR needs adding atop this (surely not?), thanks. Yes, it turns out that the hotfix branch was still a work-in-progress by the time I was forced to go on holidays. I hope to get the remaining issues in the Python frontend fixed today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798:3266,error,error,3266,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798,1,['error'],['error']
Availability,macpsinet seems out of sorts even though I rebooted it earlier this week. Will attend to it tomorrow.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/798#issuecomment-327985876:43,reboot,rebooted,43,https://psicode.org,https://github.com/psi4/psi4/pull/798#issuecomment-327985876,1,['reboot'],['rebooted']
Availability,"make configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not a way CMake wants to act. I'm still working on a fix. You'll see ""exponent has no digits"" errors. In any case, if the generator has to run again (which is probably correct -- it's not the dependency structure that's wrong, it's the generated config.h), there's no time to be saved.~. EDIT: latest push fixes step 6; EDIT: latest push fixes step 7, also the MAX_AMs now start with WITH_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:2280,error,error,2280,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,6,['error'],"['error', 'errors']"
Availability,"managed to get a pair of builds (current master and this PR's branch) that do not entirely swallow the exception messages for write errors in the PK integral calculation. For me, it took building Psi4 entirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1101,Error,Error,1101,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,1,['Error'],['Error']
Availability,"manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9652,error,error,9652,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,maybe a bkgd dependency like clang version changed such that mac isn't getting dftd4 3.6 but an oldr 3.3 hence the errors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586:115,error,errors,115,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586,1,['error'],['errors']
Availability,"mebody looking over the code for the first time (which is what we want). _Accordingly_, here's my proposal for how to make the code more readable. First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate. The code is now divided into the following => level chunks:. => Prep Auxiliary Quantities <=; * Zeroing, Sizing, Atom Blocking all go here. => Prep Atom Pairs <=; * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it. => Prep Bra-Bra Shell Pairs <=; * What is currently, ""Store shell pairs that are significant by Schwarz estimate"". => Prep Bra-Ket Shell Pairs <=; * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets. => Integral Formation Loop <=; * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning. _______________________________________________. How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look. And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653:1498,down,down,1498,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653,2,['down'],['down']
Availability,"merge conflicts now repaired, @JonathonMisiewicz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2536#issuecomment-1092933878:20,repair,repaired,20,https://psicode.org,https://github.com/psi4/psi4/pull/2536#issuecomment-1092933878,1,['repair'],['repaired']
Availability,"metry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1522,Error,Error,1522,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,1,['Error'],['Error']
Availability,"ming install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f3728f000); libpython2.7.so.1.0 => /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 (0x0000151f36d12000); libcublas.so.9.1 => /usr/lib/x86_64-linux-gnu/libcublas.so.9.1 (0x0000151f3377b000); libcusolver.so.9.1 => /usr/lib/x86_64-linux-gnu/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1654,down,downstream,1654,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,1,['down'],['downstream']
Availability,"mints9 is known failure – it's the only test case failure remaining after KtB-INV, my fault. When the python & json tests alone fail, it's probably because the `which python` python is of a different version than that with which psi4 was compiled. All other test cases have the compilation python baked in to `bin/psi4` shebang, but python & json tests are using the library directly and hence the `which python` python. More to the point, good to know this problem further confirmed with ATLAS. Absent changes to dfocc, and since OpenBLAS seems free and sound, perhaps we should just discourage ATLAS and promote OpenBLAS.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-277546386:16,failure,failure,16,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-277546386,3,"['failure', 'fault']","['failure', 'fault']"
Availability,"mmend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns. But what I value more than that is (1) Mol not breaking for downstream code we don't control, (2) a pass through the psi codebase making sure `Z` and `mass` are being used in accordance with the programmers' intentions (apparently not in optrot), and (3) you not going down a Mol rabbit hole. Maybe we should talk more at the conf call tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363473061:2296,down,downstream,2296,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061,2,['down'],"['down', 'downstream']"
Availability,"mol {; > 0 3; > symmetry c1; > C 0.0000000000 0.0000000000 -0.5928430915; > H -0.0000000000 0.9469373770 -1.1509808737; > H 0.0000000000 -0.9469373770 -1.1509808737; > }; >; > basis = core.BasisSet.build(mol, ""ORBITAL"", ""cc-pvdz"", quiet=True); > factory = core.IntegralFactory(basis); >; > # np.dot(so2ao, ao2so) should always be the identity. The functions are inverses.; >; > # We have a problem!; > petite = core.PetiteList(basis, factory, True); > so2ao = petite.sotoao().nph[0]; > print(so2ao); > print(so2ao.shape) # (24, 25); > ao2so = petite.aotoso().nph[0]; > print(np.dot(so2ao, ao2so)); >; > # Works fine!; > petite = core.PetiteList(basis, factory, False); > so2ao = petite.sotoao().nph[0]; > print(so2ao); > print(so2ao.shape) # (24, 24); > ao2so = petite.aotoso().nph[0]; > print(np.dot(so2ao, ao2so)); >; > The next question is what we do about this. I see two solutions:; >; > 1. Put a flag in sotoao that throws if include_pure_transform_ is; > true. I've run this change through full tests and didn't get any errors.; > However, somebody can assume sotoao() is the transpose of aotoso() and; > get rubbish.; > 2. Remove the functionality of the include_pure_transform flag; > entirely. The transformations are always invertible, but we lose whatever; > efficiency gain motivated including the flag in the first place.; >; > I don't know which is the best solution, or if there's a third.; >; > Pinging @andysim <https://github.com/andysim>, @susilehtola; > <https://github.com/susilehtola>, @jturney <https://github.com/jturney>,; > and @fevangelista <https://github.com/fevangelista>, all of whom have; > either touched this code or expressed interest in this issue previously.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1763?email_source=notifications&email_token=AAXVA5WSYVY7DDERYLO3GDLQWURWFA5CNFSM4JTXOXB2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1763#issuecomment-560454475:2769,error,errors,2769,https://psicode.org,https://github.com/psi4/psi4/issues/1763#issuecomment-560454475,1,['error'],['errors']
Availability,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-382181157:309,avail,available,309,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157,1,['avail'],['available']
Availability,"my 2 cents on this:; The geometry you posted looks broken to me (too long 'bonds'). I'd guess the optimizer had some troubles displacing the geometry correctly.; Often it is enough to set `opt_coordinates both`, which mixes cartesian and redundant coordinates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-953037136:238,redundant,redundant,238,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-953037136,1,['redundant'],['redundant']
Availability,"n easily loop over things, I favor any lists of energies or; dipoles as also including the ground state (state 0). So, we can have. CI/CC ROOT 0 ENERGY [or whatever it's called, I forget]; CI/CC ROOT 1 ENERGY; etc. as well as. CI/CC ROOT 0 DIPOLE x; CI/CC ROOT 1 DIPOLE x. Including ROOT 0 in the lists above will remove unnecessary annoying logic; when looping over roots for processing/printing output. For CI use cases,; we will always want to loop over all roots including ROOT 0. For the ground state only, we can also duplicate the ROOT 0 information; into variable names without the ""ROOT n"" designation, which is what people; will want to grab if they just want g.s. info. CI/CC DIPOLE x. (Actually, strictly speaking, the root number that should go here should; probably be FOLLOW_ROOT, which defaults to ROOT1 (now should be ->; ROOT0)... FOLLOW_ROOT is supposed to allow you to optimize an excited state; instead of the ground state in an MCSCF or geometry opt). The CI code has always assumed numbering starts with 1 in the user; interface, so any input options regarding roots will need to have -1 added; (except the total number of roots, obviously). Best,; David. On Fri, Nov 11, 2016 at 10:27 PM, Andy Simmonett notifications@github.com; wrote:. > This is great; I really like that you've addressed the inconsistency; > between CI and CC, which I didn't notice before. The scheme in your last; > message looks good to me. I think that numbering the first excited state 1,; > and the second 2, _etc._ makes the most sense, for obvious reasons. Zero; > basing the excited states would lead to an off-by-one error in the cardinal; > and ordinal notation. LGTM.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/506#issuecomment-260098726, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdlnHpEnsW3uYECUYCgCd3NnmYLimks5q9TIfgaJpZM4Krp5j; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260126337:2791,error,error,2791,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260126337,1,['error'],['error']
Availability,"n lib3index.a(denominator.cc.o); __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv in libefp_solver.a(efp_solver.cc.o); __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv in libmints.a(oeprop.cc.o); ...; ""__ZTISt13bad_exception"", referenced from:; __ZTIN5boost16exception_detail14bad_exception_E in libpsio.a(filemanager.cc.o); __ZTIN5boost16exception_detail14bad_exception_E in libboost_thread-1_57.a(thread.o); ""__ZTISt13runtime_error"", referenced from:; __ZTIN5boost9xpressive11regex_errorE in create_new_plugin.cc.o; __ZTIN5boost9xpressive11regex_errorE in libplugin.a(load_plugin.cc.o); __ZTIN3psi12PsiExceptionE in libpsi4util.a(exception.cc.o); __ZTIN5boost9xpressive11regex_errorE in libmints.a(basisset.cc.o); __ZTIN5boost6system12system_errorE in libboost_filesystem-1_57.a(operations.o); __ZTIN5boost16exception_detail19error_info_injectorISt13runtime_errorEE in libboost_regex-1_57.a(instances.o); __ZTIN5boost17bad_function_callE in libboost_python-1_57.a(errors.o); ...; ""__ZTISt14overflow_error"", referenced from:; __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libmints.a(sieve.cc.o); __ZN5boost7numeric6odeint24bulirsch_stoer_dense_outINSt3__16vectorIdNS3_9allocatorIdEEEEdS7_dNS1_13range_algebraENS1_18default_operationsENS1_17initially_resizerEE7do_stepIN10interfaces19LnTransformedRadialEEENS3_4pairIddEET_ in libpcm.a(Meddle.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(Meddle.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(CPCMSolver.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(IEFSolver.cpp.o); ""__ZTISt16invalid_argument"", referenced from:; __ZTIN5boost16exception_detail19error_info_injectorISt16invalid_argumentEE in create_new_plugin.cc.o; __ZTIN5boost16exception_detail19error_info_injectorISt16invalid_argumentEE in libmints.a(basisset_parser.cc.o); __ZTIN5boost16excepti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:73927,error,errors,73927,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,1,['error'],['errors']
Availability,"n/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEEDED) Shared library: [libimf.so]; 0x0000000000000001 (NEEDED) Shared library: [libsvml.so]; 0x0000000000000001 (NEEDED) Shared library: [libstdc++.so.6]; 0x0000000000000001 (NEEDED) Shared libr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1478,error,errors,1478,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188,1,['error'],['errors']
Availability,"n::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>,; > boost::python::detail::container_elementstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, unsigned long,; > boost::python::detail::final_vector_derived_policies<std::__1::vector&lt; > ;boost::shared_ptr<psi::Matrix>,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true> >, unsigned; > long>, boost::shared_ptrpsi::Matrix, unsigned; > long>::base_get_slice_data(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, PySliceObject_,; > unsigned long&, unsigned long&) in export_mints.cc.o; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyExc_OverflowError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > long>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > int>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::converter::registration const&, char const*) in; > libboost_python-1_57.a(from_python.o); > ""_PyExc_RuntimeError"", referenced from:; > translate_psi_ex",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:24163,error,errors,24163,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['error'],['errors']
Availability,"nce; 306:psimrcc-ccsd_t-4; 420:psi4numpy-cphf; 421:psi4numpy-dfmp2; 422:psi4numpy-rhf; 423:psi4numpy-rhf-gradient; 424:psi4numpy-rhf-hessian; 425:psi4numpy-fci; 429:python-energy; 430:python-curve; 431:python-pubchem; 432:python-mints9; 433:python-mints2; 434:python-cc54; 435:python-3-index-transforms; 436:python-mints13; 437:python-cc_amps; 438:json-schema-1-energy; 439:json-schema-1-ghost; 440:json-schema-1-orient; 441:json-schema-1-throws; 442:json-schema-1-gradient; 443:json-schema-1-properties; 444:gcp-pbeh3c; 445:gcp-hf3c; 446:gcp-hf3c-gradient; 447:gcp-hf3c-hessian; 448:gcp-dft-custom-hybrid; ```. And now my problem is on the import psi4. I tried adding the correct PYTHONPATH as follows:. ```; export PATH=/usr/local/bin:$PATH # python interpreter; export PATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/bin:$PATH # psi4 executable; export PYTHONPATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib//:$PYTHONPATH # psi4 pymodule; ```. But I get a new kind of error. Any idea how to fix it? :. ```; >>> import psi4; Traceback (most recent call last):; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; Expected in: flat namespace; in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796:1072,error,error,1072,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796,1,['error'],['error']
Availability,"ne 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4031,fault,fault,4031,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['fault'],['fault']
Availability,"ne 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https://github.com/dsirianni> hit them), so we switched toward the; > die+traceback. Now SCF will behave like optimizations.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1130#issuecomment-411567479>, or mute; > the thread; > <https://github.com/notificatio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1928,error,error,1928,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['error'],['error']
Availability,"ne. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:43 2017; Module time:; 	user time = 0.42 seconds = 0.01 minutes; 	system time = 0.37 seconds = 0.01 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 5.26 seconds = 0.09 minutes; 	system time = 0.90 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:43 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? no; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 0; Number of active occupied orbitals: 17; Number of active virtual orbitals: 56; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 20.82 mb; memory requirements for QCISD(T) = 19.95 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 43.60 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:12331,avail,available,12331,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['avail'],['available']
Availability,"ne; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /usr/bin/python (found version ""2.7.12"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so ; -- Using pybind11: /usr/qc/psi4.git/objdir/stage/usr/qc/psi4.bin/include (version 2.0.0 for Py2.7.12 and -std=c++11) ; -- Using Python 2.7: /usr/bin/python ; -- Looking for include file pthread.h ; -- Looking for include file pthread.h - found ; -- Looking for pthread_create ; -- Looking for pthread_create - found ; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; -- Disabled CheMPS2 ; -- Disabled dkh ; -- Using libefp: /usr/qc/psi4.bin/lib/libefp.a (version 1.3.0) ; -- Disabled erd ; -- Disabled gdma ; -- Using libint: /usr/qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:2361,down,download,2361,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,1,['down'],['download']
Availability,"nel directly. may need to clear out space.; * Go through each active conda package off https://anaconda.org/psi4/repo, find the most recent build set (L/M, active py versions) that psi/psi-rt/psi-dev is using and _add_ (not replace) the `main` label. this makes a `conda install psi4 -c psi4` get everything psi4 needs. for the moment `conda install psi4 -c psi4/label/dev` will get the same set, until package psi4-1.4a1.dev1 gets uploaded. may help to check versions and build versions against ltrtver in conda_build_config.yaml. this step takes a while. ### constructor stage. * move into constructor_cutter_unified. there's a rEADME there. ; * edit pythons if necessary; * edit release/hash/ltrtver of cookiecutter.json .; * for non-rc's channel_tag should be empty string; * leave git set to a `rc` since that has more details; * copy cookiecutter.json to cookiecutter.json-vXXX; * cookiecutter/{{.../construct.yaml rarely needs editing; * do clear out .constructor so that everyting downloaded afresh; * clean out build/; * python run.py check for an py_ bad noarch pkgs; * if fetching times out, may have to run run.py several times. clear out build/ in between. it's the fetching that takes a long time, not constucting; * in the end, should have several constructors; ```; >>> lh build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh; ```. * use command in readme to upload to vergil; * log in to vergil to make windows wsl symlinks. * worth downloading at least one L and M and installing it and r",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372:1243,down,downloaded,1243,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372,2,['down'],['downloaded']
Availability,"new to conda (used to pip), needed to create env first...; `conda create -n p4dev35 python=3.5`. `psi4-path-advisor --intel`; ```; ...; -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include); ```; Any ideas what that is about?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386429024:360,Error,Error,360,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386429024,1,['Error'],['Error']
Availability,"ng &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9474,error,error,9474,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ng&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt Makefile:138: recipe for target 'all' failed make: *** [all] Interrupt; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1789,Error,Error,1789,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['Error'],['Error']
Availability,"ng<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG', 'CANONICALIZE_INACTIVE_FAVG', 'CARTESIAN_SYM_TOLERANCE', 'CART_HESS_READ', 'CC', 'CC3_FOLLOW_ROOT', 'CCD_E_CONVERGENCE', 'CCD_MAXITER', 'CCD_T_CONVERGENCE', 'CCL_ENERGY', 'CC_A_RAS3_MAX', 'CC_B_RAS3_MAX', 'CC_DIIS_MAX_VECS', 'CC_DIIS_MIN_VECS', 'CC_EX_LEVEL', 'CC_FIX_EXTERNAL', 'CC_FIX_EXTERNAL_MIN', 'CC_LAMBDA', 'CC_MACRO', 'CC_MAXITER', 'CC_MIXED', 'CC_NUM_THREADS', 'CC_OS_SCALE', 'CC_RAS34_MAX', 'CC_RAS3_MAX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6202,Avail,Available,6202,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['Avail'],['Available']
Availability,"nsigned int>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned short>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned char>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); ""_PyExc_ReferenceError"", referenced from:; boost::python::converter::(anonymous namespace)::lvalue_result_from_python(_object*, boost::python::converter::registration const&, char const*) in libboost_python-1_57.a(from_python.o); ""_PyExc_RuntimeError"", referenced from:; translate_psi_exception(psi::PsiException const&) in python.cc.o; _no_init in libboost_python-1_57.a(class.o); boost::python::objects::(anonymous namespace)::get_class(boost::python::type_info) in libboost_python-1_57.a(class.o); boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); boost::python::objects::function::add_to_namespace(boost::python::api::object const&, char const*, boost::python::api::object const&, char const*) in libboost_python-1_57.a(function.o); boost::python::detail::pure_virtual_called() in libboost_python-1_57.a(function.o); boost::python::(anonymous namespace)::instance_reduce(boost::python::api::object) in libboost_python-1_57.a(pickle_support.o); ...; ""_PyExc_StopIteration"", referenced from:; boost::python::objects::stop_iteration_error() in libboost_python-1_57.a(iterator.o); ""_PyExc_TypeError"", referenced from:; boost::python::indexing_suite<std::__1::vector<double, std::__1::allocator<double> >, boost::python::detail::final_vector_derived_policies<std::__1::vector<double, std::__1::allocator<double> >, true>, true, false, double, unsigned long, double>::base_set_item(std::__1::vector<double, std::__1::allocator<double> >&, _object*, _object*) in export_mints.cc.o; boost::python::vector_indexing_suite<std::__1::vector<double, st",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:24069,error,errors,24069,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['error'],['errors']
Availability,"nt __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29554,error,error,29554,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"nt,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49173,error,error,49173,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"nt,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18274,error,error,18274,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ntage of having a centralized library that all of Psi is supposed to use to do I/O. Then, improvements can be done in only one place (that library), unless there is a design problem with that library's API. The I/O library could be improved to use HDF5, or whatever, on the backend. So, do we need an all-new interface between the CC libraries and libpsio, or is it just that libpsio itself needs its backend replaced?. Best,. David. ________________________________; From: Andrew James <notifications@github.com>; Sent: Thursday, September 20, 2018 10:33:45 AM; To: psi4/psi4; Cc: Sherrill, David; Mention; Subject: [psi4/psi4] Coupled Cluster Rewrite (#1247). We (@amjames<https://github.com/amjames> and @robertodr<https://github.com/robertodr>) propose a partial rewrite of the coupled cluster and DPD functionalities in Psi4.; The main motivation is to make the pending PR #1061, Expose wavefunction and amplitudes to python<https://github.com/psi4/psi4/pull/1061> available satisfying the constraints and comments offered by @dgasmith<https://github.com/dgasmith> and @amjames<https://github.com/amjames>.; Exposing the T and Lambda amplitudes to the Python layer will have a series of beneficial consequences:. * It will be possible to experiment with these quantities easily.; * Writing and reading amplitudes to file (HDF5<https://portal.hdfgroup.org/display/support>, Zarr<https://zarr.readthedocs.io/en/stable/>, or any other format) is more easily managed from Python, especially if we need to preserve compatibility with Windows.; * Restart capabilities. Summary of proposed changes (incomplete); cc* modules. * Create a single cc folder where all the other cc* folders will live as subfolders.; * Provide a top-level CCWavefunction class, partly modeled on the existing CIWavefunction class to overtake the whole implementation of the CC functionality.; * The class will manage MOInfo,Params, DPD as local data members. This will ensure that the lifetime of these objects is tied to a pa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1247#issuecomment-423216907:1321,avail,available,1321,https://psicode.org,https://github.com/psi4/psi4/issues/1247#issuecomment-423216907,1,['avail'],['available']
Availability,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19871,error,error,19871,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41803,error,error,41803,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ntirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all in the output file. The current theory is that the `python` process gets aborted by a SIGABRT and cannot write the message to the output file. I think chasing that down is beyond the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1224,error,error,1224,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,7,"['Error', 'down', 'error', 'failure']","['Error', 'down', 'error', 'failure']"
Availability,"ntra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==10081==ABORTING; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). =================================================================; ==10025==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 282802 byte(s) in 124 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Direct leak of 2 byte(s) in 2 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f17949fe0 in _PyObject_Alloc.isra.0 (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe6fe0). Indirect leak of 19819 byte(s) in 22 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Indirect leak of 648 byte(s) in 1 object(s) allocated from:; #0 0x7f0f92dd6df8 in __interceptor_realloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:75; #1 0x557f1797673c in _PyObject_GC_Resize (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0x11373c). SUMMARY: AddressSanitizer: 303271 byte(s) leaked in 149 allocation(s). 0% tests passed, 1 tests failed out of 1. Label Time Summary:; casscf = 27.28 sec*proc (1 test); psi = 27.28 sec*proc (1 test); quicktests = 27.28 sec*proc (1 test). Total Test time (real) = 27.46 sec. The following tests FAILED:; 	 3 - casscf-fzc-sp (Failed); Errors while running CTest; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756:19438,Error,Errors,19438,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756,1,['Error'],['Errors']
Availability,"nually-specified variables were not used by the project:. OpenMP_CXX_LIBRARY_DIRS. ```; The second way to edit link.txt gives error message from OMP:; ```; OMP: Error #15: Initializing libiomp5.so, but found libiomp5.so already initialized.; OMP: Hint: This means that multiple copies of the OpenMP runtime have been linked into the program. That is dangerous, since it can degrade performance or cause incorrect results. The best thing to do is to ensure that only a single OpenMP runtime is linked into the process, e.g. by avoiding static linking of the OpenMP runtime in any library. As an unsafe, unsupported, undocumented workaround you can set the environment variable KMP_DUPLICATE_LIB_OK=TRUE to allow the program to continue to execute, but that may cause crashes or silently produce incorrect results. For more information, please see http://www.intel.com/software/products/support/.; Aborted (core dumped); ```; To force running psi4, I follow OMP error message's suggestion (`export KMP_DUPLICATE_LIB_OK=TRUE`), but dft-custom-gga does not work (failed due to the same reason - not converged ). From my several trials, this problem seems not to be related to OMP libraries. Regardless of using either `gomp` or `iomp`, dft-custom-gga test fails under single thread. In other words, whenever multi-thread is used for calculations, it gives good SCF convergence within few iterations, which seems similar with the issue #994 @hokru reported. I thought it might be problem of incompatibilities between GCC compiler and Intel OMP libraries. Like @loriab setting, I changed to use icpc intel compiler (v 18.0.3), instead of gcc (v5.4.0). Re-built '<objdir>' by cmake. Then, opened '<objdir>/psi4-core-prefix/src/psi4-core-build/src/CMakeFiles/core.dir/link.txt' and added '/opt/intel/lib/intel64' (basically intel 64bit libraries) to set library folder path.; Then, Intel Compiler + Intel OMP libraries works even single thread calculation for dft-custom-gga test. Anyway, I am not sure why on",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-397364809:1129,error,error,1129,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-397364809,2,['error'],['error']
Availability,"o the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one could also just return it to the user as is. Again the idea being that a psi4 user can use adcc implicitly for calculations, without needing to worry that he/she does. > Should adcc be distributed/build with psi4 in the end? (conda, cmake, etc.). Not sure what will work best. We are working on getting adcc distributed via conda ourselves, so I guess one could just pull it from there as part of the usual psi4 installation procedure. If the interfacing is done on the python level as I described above and as I did in the PR so far, this should not introduce big changes. One could even easily make th",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:1609,toler,tolerances,1609,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['toler'],['tolerances']
Availability,"oc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procroutin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:1599,Error,Error,1599,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"oh no, not again. Yes, one had to download patched files for the previous version from their homepage.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281:34,down,download,34,https://psicode.org,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281,1,['down'],['download']
Availability,"ok, I have built psi4 v1.3.2 with python v3.11 from conda-forge. I had to make one src modification to get it to compile:. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) git diff; diff --git a/psi4/src/create_new_plugin.cc b/psi4/src/create_new_plugin.cc; index 3734a7b..6f2bde2 100644; --- a/psi4/src/create_new_plugin.cc; +++ b/psi4/src/create_new_plugin.cc; @@ -32,6 +32,7 @@; #include <regex>; #include <sstream>; #include <string>; +#include <iterator>; ; #include ""psi4/psi4-dec.h"". ```. After that, I get the error, just like you reported: `ImportError: cannot import name 'core' from partially initialized module 'psi4' (most likely due to a circular import)`. However, the suffix for the `core<stuff>.so` library is badly formed, so it's `coreNone`. When I add a symlink to a proper name, it works just fine. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) ll stage/lib/psi4/; total 25704; lrwxrwxrwx. 1 psilocaluser psilocaluser 8 Nov 1 15:57 core.cpython-311-x86_64-linux-gnu.so -> coreNone; -rwxr-xr-x. 1 psilocaluser psilocaluser 26286096 Nov 1 16:14 coreNone; drwxr-xr-x. 7 psilocaluser psilocaluser 4096 Nov 1 15:58 driver; -rw-r--r--. 1 psilocaluser psilocaluser 5898 Nov 1 15:08 extras.py; -rw-r--r--. 1 psilocaluser psilocaluser 2934 Nov 1 14:50 header.py; -rw-r--r--. 1 psilocaluser psilocaluser 3693 Nov 1 15:08 __init__.py; -rw-r--r--. 1 psilocaluser psilocaluser 1144 Nov 1 16:14 metadata.py; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 16:14 __pycache__; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 15:20 tests; ```; ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; 	SCF energy........................................................PASSED; ```. Full conda env is this:. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) conda list; # packages in envi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719:558,error,error,558,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719,1,['error'],['error']
Availability,"ok, docs and hopefully a fix for efp is up. > especially need to know how developers decide what's worth logging. I don't have a good answer. On the DDD side, stuff goes in the log that no longer appends nicely to the output (because its run in a separate process), so logging is on the generous side. In general, the stuff we want to log doesn't map evenly to the (critical=50, error=40, warn=30, info=20, debug=10) levels that Python sets up. Something more like https://www.ibm.com/docs/en/cognos-analytics/10.2.2?topic=SSEP7J_10.2.2/com.ibm.swg.ba.cognos.ug_rtm_wb.10.2.2.doc/c_n30e74.html with ""debug-low"" etc. might be better. After all, geometry of the molecule is pretty essential, but it's not ""progress of the job"", so I called it debug. For the moment, log contents are a free-for-all, so I've tried to make that clear in the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2512#issuecomment-1082126210:379,error,error,379,https://psicode.org,https://github.com/psi4/psi4/pull/2512#issuecomment-1082126210,2,['error'],['error']
Availability,"ok, folks, this now gives correct answers and fixes the azure error. * @dgasmith, what's the prospect of a g2g 2.0 release; * all those who consider pointers their allies should check that my formation of `xyz` is equivalent to https://github.com/dgasmith/gau2grid/compare/v1.3.1...master#diff-f8f6cc08ea43fcbc6d2e07d960e118c2L69-R94",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608,1,['error'],['error']
Availability,"ok, i updated to gcc_5.1.0, however when running ./psi4 : i get the following error : . Traceback (most recent call last):; File ""./psi4"", line 126, in <module>; import psi4; File ""/home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/**init**.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/core.so: undefined symbol: __intel_avx_rep_memset. Any idea how to get rid of this ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261747759:78,error,error,78,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261747759,1,['error'],['error']
Availability,"ok, the `dft_blocking_schemes` error only appears with a new l2, so for now this PR is good to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2446#issuecomment-1045014086:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/pull/2446#issuecomment-1045014086,1,['error'],['error']
Availability,"on MacOS bigSur I am using `-DOpenMP_LIBRARY_DIRS=/usr/local/Cellar/libomp/12.0.1/lib` where I have brew installation `libomp.a` and `libomp.dylib1 but still getting:. ```; ld: library not found for -lMathOpenMP_LIBRARIES-NOTFOUND; clang: error: linker command failed with exit code 1 (use -v to see invocation); ```. I used conda's version and it worked. In the words of GROMACs, ""Sadly, the interactions of hardware, libraries, and compilers are only going to continue to get more complex."". And to add ""Thanks to MacOS and Intel :( """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636:239,error,error,239,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636,1,['error'],['error']
Availability,"on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'gradient', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:4331,error,error,4331,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['error'],['error']
Availability,"on and linking were completed successfully! However, one of 299 tests was failed. Regards,; Alexander. > 99% tests passed, 1 tests failed out of 299; > ; > Label Time Summary:; > adc = 34.90 sec (2 tests); > autotest = 175.66 sec (26 tests); > casscf = 8.94 sec (8 tests); > cc = 402.14 sec (59 tests); > cdomp2 = 1.93 sec (2 tests); > cepa = 2.56 sec (5 tests); > ci = 0.76 sec (1 test); > cisd = 13.09 sec (7 tests); > cubeprop = 1.58 sec (1 test); > dcft = 237.84 sec (13 tests); > df = 162.69 sec (32 tests); > dfccd = 0.38 sec (1 test); > dfccd-grad = 1.05 sec (1 test); > dfccdl = 0.39 sec (1 test); > dfccsd = 0.46 sec (1 test); > dfccsd-grad = 1.40 sec (1 test); > dfccsdat = 0.82 sec (1 test); > dfccsdl = 0.48 sec (1 test); > dfccsdt = 0.63 sec (1 test); > dfmp2 = 50.96 sec (8 tests); > dfomp2 = 8.14 sec (6 tests); > dfomp2.5 = 6.34 sec (4 tests); > dfomp3 = 6.42 sec (4 tests); > dfscf = 77.65 sec (1 test); > dft = 549.70 sec (10 tests); > docs = 0.49 sec (3 tests); > fci = 18.26 sec (6 tests); > findif = 360.17 sec (5 tests); > fnocc = 12.59 sec (4 tests); > freq = 2.36 sec (1 test); > gradient = 19.53 sec (13 tests); > libefp = 4.24 sec (5 tests); > longtests = 2490.57 sec (5 tests); > mcscf = 0.79 sec (3 tests); > mints = 20.27 sec (8 tests); > misc = 125.96 sec (14 tests); > mp2 = 240.79 sec (10 tests); > ocepa = 31.90 sec (6 tests); > omp = 35.55 sec (18 tests); > opt = 911.35 sec (19 tests); > properties = 13.38 sec (3 tests); > psi = 5265.29 sec (299 tests); > psimrcc = 44.08 sec (8 tests); > pywrap = 98.47 sec (14 tests); > quicktests = 348.61 sec (87 tests); > rasci = 28.47 sec (3 tests); > sapt = 1698.31 sec (7 tests); > scf = 751.84 sec (29 tests); > shorttests = 2425.46 sec (206 tests); > sowreap = 1.22 sec (3 tests); > stability = 2.04 sec (2 tests); > tutorial = 23.38 sec (6 tests); > x2c = 0.96 sec (3 tests); > ; > Total Test time (real) = 5267.01 sec; > ; > The following tests FAILED:; > 259 - pywrap-opt-sowreap (Failed); > Errors while running CTest",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312#issuecomment-196383757:2065,Error,Errors,2065,https://psicode.org,https://github.com/psi4/psi4/issues/312#issuecomment-196383757,1,['Error'],['Errors']
Availability,"on value of 15 degrees and want to keep it there, apparently. If you; can build a starting geometry that satisfies the desired constraint, then; you've got better odds of success using ""frozen"" coordinates. I tried a; double-zeta HF optimization with frozen_dihedral = ""4 10 11 6"" with; dynamic_level =1, and the optimization converged within 10 iterations. On Tue, Nov 14, 2017 at 11:28 AM, Chaya Stern <notifications@github.com>; wrote:. > I tried running it again with opt_coordinates = cartesian with a; > restrained dihedral and dynamic_level = 1. However, it crashed again,; > this time when it raises dynamic level to 3 it crashed when it tries to; > write the optimization data to binary file. Here's; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.out#L12821-L12831>; > the traceback:; >; > 	Writing optimization data to binary file.; > 	; > Fatal Error: PSIO Error; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495011512596/work/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); > psi::psio_error(unsigned int, unsigned int); > psi::PSIO::write(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); > psi::PSIO::write_entry(unsigned int, char const*, char*, unsigned long); > psi::psio_write_entry(unsigned int, char const*, char*, unsigned long); >; > Also, it still seems to be using internal coordinates (unless I'm not; > understanding the output file).; > Here is the new input; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.dat>; > and output; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.out>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344476280:1021,Error,Error,1021,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344476280,4,"['Error', 'error']","['Error', 'error']"
Availability,"on-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::converter::registration const&, char const*) in; > libboost_python-1_57.a(from_python.o); > ""_PyExc_RuntimeError"", referenced from:; > translate_psi_exception(psi::PsiException const&) in python.cc.o; > _no_init in libboost_python-1_57.a(class.o); > boost::python::objects::(anonymous; > namespace)::get_class(boost::python::type_info) in; > libboost_python-1_57.a(class.o); > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ; > boost::python::objects::function::add_to_namespace(boost::python::api::object; > const&, char const_, boost::python::api::object const&, char const_) in; > libboost_python-1_57.a(function.o); > boost::python::detail::pure_virtual_called() in; > libboost_python-1_57.a(function.o); > boost::python::(anonymous; > namespace)::instance_reduce(boost::python::api::object) in; > libboost_python-1_57.a(pickle_support.o); > ...; > ""_PyExc_StopIteration"", referenced from:; > boost::python::objects::stop_iteration_error() in; > libboost_python-1_57.a(iterator.o); > ""_PyExc_TypeError"", referenced from:; > boost::python::indexing_suite<std::__1::vector<double,; > std::__1::allocator<double> >,; > boost::python::detail::final_vector_derived_policies<std::__1::vector<double,; > std::__1::allocator<double> >, true>, true, false, double, unsigned long,; > double>::base_set_item(std::__1::vector<double, std::__1::allocator<double>; > &, _object_, _object_) in export_mints.cc.o; > boost::pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:25482,error,errors,25482,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['error'],['errors']
Availability,"on.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Test project /home/raimis/psi4.git/linux_build; Constructing a list of tests; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 360; Start 360: cubeprop-esp. 360: Test command: /shared/raimis/opt/miniconda/envs/psi4/bin/python ""/home/raimis/psi4.git/tests/runtest.py"" ""/home/raimis/psi4.git/tests/cubeprop-esp/input.dat"" ""/home/raimis/psi4.git/linux_build/testresults.log"" ""false"" ""/home/raimis/psi4.git"" ""false"" ""/home/raimis/psi4.git/linux_build/tests/cubeprop-esp/output.dat"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/""; 360: Test timeout computed to be: 1500; 360: 	Comparing Dt......................................................PASSED; 360: Traceback (most recent call last):; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"", line 264, in <module>; 360: exec(content); 360: File ""<string>"", line 37, in <module>; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/psi4/driver/p4util/util.py"", line 387, in compare_cubes; 360: raise TestComparisonError(message); 360: ; 360: TestComparisonError: 	Comparing ESP: computed cube file does not match expected cube file.; 360: Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); 1/1 Test #360: cubeprop-esp .....................***Failed 6.27 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; cubeprop = 6.27 sec*proc (1 test); psi = 6.27 sec*proc (1 test). Total Test time (real) = 6.33 sec. The following tests FAILED:; 	360 - cubeprop-esp (Failed); Errors while running CTest; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937:2245,Error,Errors,2245,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937,1,['Error'],['Errors']
Availability,"on::detail::no_proxy_helperstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >,; > boost::python::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>,; > boost::python::detail::container_elementstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, unsigned long,; > boost::python::detail::final_vector_derived_policies<std::__1::vector&lt; > ;boost::shared_ptr<psi::Matrix>,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true> >, unsigned; > long>, boost::shared_ptrpsi::Matrix, unsigned; > long>::base_get_slice_data(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, PySliceObject_,; > unsigned long&, unsigned long&) in export_mints.cc.o; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyExc_OverflowError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > long>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > int>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::conv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:24016,error,errors,24016,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['error'],['errors']
Availability,"onal={..., 'dispersion': {...}}` now work. they go through the same route, but the pieces are treated a little differently. ""params"" are the final say -- the user option `DFT_DISPERSION_PARAMETERS` has no effect. ""name"" and ""citation"" aren't ""blessed"" like the official ones, so they're not going to get printed unless they match official ones. I think that's reasonable -- don't want to be printing citations unquestioned.; - [x] now tracing citations again. see below for examples. always printing the disp level citation. printing the dash param citation if available (not listed for many common functionals. No opportunity for user-defined citation. It can be put it, but I didn't see the point of trusting unverified values.; - [x] put in a few more checks that'll catch some problems when adding new official fctl dictionaries.; - [x] renamed some files based on slack discussion. ```; ================================================================================; => DLDF+D09: Empirical Dispersion <=. Podeszwa and Szalewicz Dispersion Correction; Pernal, K.; Podeszwa, R.; Patkowski, K.; Szalewicz, K. (2009), Phys. Rev. Lett., 103: 263201. s6 = 1.000000. ================================================================================; => OTPSS-D: Empirical Dispersion <=. Grimme's -D2 Dispersion Correction; Grimme, S. (2006), J. Comp. Chem., 27: 1787-1799; Parametrisation from: L. Goerigk, S. Grimme, J. Chem. Theory. Comput. 6, 107-126, 2010. s6 = 1.000000; alpha6 = 20.000000; sr6 = 1.150000. ================================================================================; => Custom: Empirical Dispersion <=. Grimme's -D2 Dispersion Correction; Grimme, S. (2006), J. Comp. Chem., 27: 1787-1799. s6 = 2.750000; alpha6 = 20.000000; sr6 = 1.100000. ================================================================================; ```. Also been rebased. Windows is failing b/c it's downloading py27. I'll have to investigate why. In particular, 7921cf1 and 2a273ca ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1151#issuecomment-426866307:1981,down,downloading,1981,https://psicode.org,https://github.com/psi4/psi4/pull/1151#issuecomment-426866307,2,['down'],['downloading']
Availability,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1745,down,downhill,1745,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316,1,['down'],['downhill']
Availability,"optking was aborting prematurely. I just pushed the fix to the problem. For this case I found consecutive_backsteps = 2 [or more], as well as dynamic_level = 1 to now be helpful. (Don't use both at once as that is somewhat redundant.) Sometime I will type up some tips on problematic optimizations. But now optking will at least move you substantially closer to the minimum. Though one may always have to restart an optimization, these options will minimize the manual effort necessary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/153#issuecomment-127808983:223,redundant,redundant,223,https://psicode.org,https://github.com/psi4/psi4/issues/153#issuecomment-127808983,1,['redundant'],['redundant']
Availability,"or LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25646,error,error,25646,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"or LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43251,error,error,43251,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ories/psi4/objdir]$ otool -L /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so:; 	@rpath/core.cpython-37m-darwin.so (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1); 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libiomp5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.25.0); 	/usr/local/lib/gcc/8/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); ```. As you said, it seems ```gcc``` tries to impose ```gomp```. How can I bypass it ?; Because I still have the error:; ```; E ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; E Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; E Expected in: flat namespace; E in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; ```. which (I think) is due to that right ?. PS: ```echo $DYLD_LIBRARY_PATH``` gives ```/opt/intel/lib``` only. And in case it helps, here is the output of my configuration step, which seems correct:; ```cmake -H. -Bobjdir -DOpenMP_LIBRARY_DIRS=/opt/intel/lib```; ```; -- The C compiler identification is GNU 8.3.0; -- The CXX compiler identification is GNU 8.3.0; -- Checking whether C compiler has -isysroot; -- Checking whether C compiler has -isysroot - yes; -- Checking whether C compiler supports OSX deployment target flag; -- Checking whether C compiler supports OSX deployment target flag -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:1933,error,error,1933,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,1,['error'],['error']
Availability,"ost recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:11275,Error,Error,11275,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"ouble *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32880,error,error,32880,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:3432,error,error,3432,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,2,"['down', 'error']","['downstream', 'error']"
Availability,"owername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d\n"", count == 1, i != pshells_ - 1);; std::stringstream error;; error << ""DFHelper: not enough memory for (p shell) AO blocking!""; << "" required memory: "" << constraint * 8 / (1024 * 1024 * 1024.0) << ""[GiB]."";; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1844,Error,Error,1844,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,4,"['Error', 'error']","['Error', 'error']"
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38916,error,error,38916,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46282,error,error,46282,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53105,error,error,53105,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"patibility/) since people compile against our packages. The `gcc-5` on the psi4 channel is one I swiped from msarahan a year or so ago at the time of our last gcc crisis. I'd very much like to go back to using a defaults channel gcc, esp. for the gcc/libgcc separation. I tried out their `gcc_linux-64` at SciPy and it worked great. I planned to use their new toolchain system underneath Intel compilers but haven't had a chance to work on it. One aspect that might be immediately helpful to you is that because of our initial drive to make psi4 as static as possible, the psi4 package has no `libstdc++.so` runtime dependency. Only dep is on `libgcc_s.so` which can usually be picked up anywhere. In fact, we keep `gcc-5` away from travis builds so that different compilers can be properly tested. Below is a dependency readout from a recent build for general consultation. And yes, I've hit the conda inspect multiple packages message, too. There are plans down the road to drop `std::regex`, which means we could go back to general c++11 compliance and 4.8.5 would be ok. But because the packages are compiled against, we'd prefer to stay >=5.2 anyways. So summary is that current setup is stable but not ideal and we're not attached. Just haven't had time or need to roll out the latest tools. Short of another gcc packages revamp, are there particular problems/conflicts we could help tackle?. ```; + ldd -v /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/core.so; 	linux-vdso.so.1 => (0x00007fff87fc4000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4318faf000); 	libc.so.6 => /lib64/libc.so.6 (0x00007f4318bed000); 	libpcm.so.1 => /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00007f4312184000); 	libxc.so => /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/../../../libxc.so (0x00007f4311d74000); 	libdl.so.2 => /lib64/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/812#issuecomment-332960335:1166,down,down,1166,https://psicode.org,https://github.com/psi4/psi4/issues/812#issuecomment-332960335,1,['down'],['down']
Availability,"perhaps this analogy will help: anytime you have used a Python tuple, the only true equivalent is a variadic template. Rvalue references are probably the only other feature I'd label as an essential C++11 feature. Not supporting them can lead to needing extensive code redesign or major performance hits when objects interact. With foresight, rvalue references can be simulated by unique pointers (available in Boost), but the reality is it is often hard to have such foresight. As for the other main C++11 features, standard library implementations of shared/unique pointers, the new chrono and random number generator libraries are all in Boost, a dependency I foresee us having forever. Lamdas are syntactic sugar for static functions. Strong enums are just little wrapper classes around a primitive type . Initializer lists are perhaps borderline essential, but ultimately I think are not needed when you realize that they have always existed for primitive data types, and a constructor is meant to provide essentially the same support for user created objects. The auto keyword is an abomination and should never be used [there is a big difference between you knowing what type something is and the compiler knowing what type something is; the compiler has caught many of my errors where I thought I was getting an object of type T, but really it was type M (usually failing to dereference a shared pointer). If M has the same members as T, auto will allow this behavior to work, undermining the type system and leading to hard to find errors, in my opinion]. The nullptr type is nice, but the fringe cases I've seen where standard NULL fails to accomplish the same behavior are bit contrived. . I think those are the main features of C++11 that people would be using; I think many of them are nice, and simplify code (except for auto, which I still facepalm on). I'm curious to hear other developers' thoughts on the matter. Edit: clean-up, clarification, and removal of repost of initial post.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85#issuecomment-97772824:3200,error,errors,3200,https://psicode.org,https://github.com/psi4/psi4/issues/85#issuecomment-97772824,4,['error'],['errors']
Availability,"persion::compute_gradient(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::SuperFunctional::build(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int) in libfunctional.a(superfactory.cc.o); ""_Py_SetProgramName"", referenced from:; psi::Python::run(__sFILE*) in python.cc.o; ""__PyEval_SliceIndex"", referenced from:; boost::python::api::(anonymous namespace)::apply_slice(_object*, _object*, _object*) in libboost_python-1_57.a(object_protocol.o); boost::python::api::(anonymous namespace)::assign_slice(_object*, _object*, _object*, _object*) in libboost_python-1_57.a(object_protocol.o); ""__PyObject_New"", referenced from:; boost::python::objects::make_nurse_and_patient(_object*, _object*) in libboost_python-1_57.a(life_support.o); ""__PyType_Lookup"", referenced from:; boost::python::class_setattro(_object*, _object*, _object*) in libboost_python-1_57.a(class.o); ""__Py_NoneStruct"", referenced from:; boost::python::detail::none() in export_psio.cc.o; boost::python::converter::shared_ptr_from_python<psi::PSIOManager>::convertible(_object*) in export_psio.cc.o; boost::python::converter::pointer_arg_from_python<char const*>::operator()() const in export_psio.cc.o; boost::python::converter::pointer_arg_from_python<char const*>::pointer_arg_from_python(_object*) in export_psio.cc.o; boost::python::converter::shared_ptr_from_python<psi::PSIO>::convertible(_object*) in export_psio.cc.o; boost::python::api::object::object() in export_psio.cc.o; boost::python::detail::none() in export_mints.cc.o; ...; ""__Py_NotImplementedStruct"", referenced from:; boost::python::objects::(anonymous namespace)::not_implemented(_object*, _object*) in libboost_python-1_57.a(function.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:77193,error,error,77193,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,5,"['Error', 'error']","['Error', 'error']"
Availability,"ping that this needs a rebase to resolve a conflict. does anything special need to be added for UHF dipole derivatives?. it'd be nice to get an open-shell in the test_vib_analysis II/III/IV section, at least checking hessian and DD match for dertype=2/1/0. that can be a follow-up PR, but if you have reference Hessian and other arrays lying around from another code, let's collect them into that file. (it's a convoluted file to handle different programs' std orientations, so if you wade in, feel free to ping me for a map.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/842#issuecomment-583597940:0,ping,ping,0,https://psicode.org,https://github.com/psi4/psi4/pull/842#issuecomment-583597940,2,['ping'],['ping']
Availability,"pinging @loriab for review, not sure who else is intimately familiar with the schema harness (besides DGAS, not sure if he's reviewing lately?)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126#issuecomment-821885823:0,ping,pinging,0,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-821885823,1,['ping'],['pinging']
Availability,pinging @yxie326 that there's things to address in case the GH notification got buried.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1865#issuecomment-618496737:0,ping,pinging,0,https://psicode.org,https://github.com/psi4/psi4/pull/1865#issuecomment-618496737,1,['ping'],['pinging']
Availability,"plain won't load the basis file. I think some extra checks get turned on during the conda build. Hence [this knowledge](http://psicode.org/psi4manual/master/manage_git.html#how-to-locate-non-ascii-characters-in-the-codebase). Agree that it'd be nice to allow non-ascii. And probably much easier now that we're py3-only. I just haven't investigated the codecs stuff. ```; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/work/build/stage/lib//python3.6/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 859, in construct; names[index] = parser.load_file(fullfilename); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/work/build/stage/lib//python3.6/site-packages/psi4/driver/qcdb/libmintsbasissetparser.py"", line 78, in load_file; contents = infile.readlines(); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.6/encodings/ascii.py"", line 26, in decode; return codecs.ascii_decode(input, self.errors)[0]. UnicodeDecodeError: 'ascii' codec can't decode byte 0xce in position 169: ordinal not in range(128); Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 3.43 sec; ----------------------------------------------------------; Test Failed.; ""cbs-xtpl-energy"" end time: Nov 27 14:59 EST; ""cbs-xtpl-energy"" time elapsed: 00:00:03; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1380#issuecomment-442458119:1166,error,errors,1166,https://psicode.org,https://github.com/psi4/psi4/pull/1380#issuecomment-442458119,1,['error'],['errors']
Availability,psi4 does not crash. I was at first under the impression it did because of all the errors that got thrown at me. If the stderr from the subprocess is hidden from the user (i guess it's stderr) it should be all good.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/656#issuecomment-288354092:83,error,errors,83,https://psicode.org,https://github.com/psi4/psi4/issues/656#issuecomment-288354092,1,['error'],['errors']
Availability,"psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5382,Error,Error,5382,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Error'],['Error']
Availability,"psi::Matrix> > >, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true>, boost::python::detail::container_element<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true> >, unsigned long>, boost::shared_ptr<psi::Matrix>, unsigned long>::base_get_slice_data(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, PySliceObject*, unsigned long&, unsigned long&) in export_mints.cc.o; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyExc_OverflowError"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned long>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned int>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned short>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned char>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); ""_PyExc_ReferenceError"", referenced from:; boost::python::converter::(anonymous namespace)::lvalue_result_from_python(_object*, boost::python::converter::registration const&, char const*) in libboost_python-1_57.a(from_python.o); ""_PyExc_RuntimeError"", referenced from:; translate_psi_exception(psi::PsiException const&) in python.cc.o;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:22814,error,errors,22814,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['error'],['errors']
Availability,"psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41197,error,error,41197,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10521,error,error,10521,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"python.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1333,down,down,1333,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188,1,['down'],['down']
Availability,"python3.8/site-packages/qcengine/util.py"", '; 'line 114, in compute_wrapper\n'; ' yield metadata\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/compute.py"", '; 'line 91, in compute\n'; ' output_data = executor.compute(input_data, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 71, in compute\n'; ' job_inputs = self.build_input(input_model, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 137, in build_input\n'; ' cfourrec[""infiles""][""GENBAS""] = '; 'genbas.read_text()\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1236, in read_text\n'; "" with self.open(mode='r', encoding=encoding, ""; 'errors=errors) as f:\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1222, in open\n'; ' return io.open(self, mode, buffering, '; 'encoding, errors, newline,\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1078, in _opener\n'; ' return self._accessor.open(self, flags, '; 'mode)\n'; 'FileNotFoundError: [Errno 2] No such file or '; 'directory: '; ""'/xstorage/tobias/bin/cfour/basis/GENBAS'\n"",; 'error_type': 'unknown_error',; 'extras': None},; 'extras': None,; 'id': None,; 'input_data': {'driver': 'energy',; 'keywords': {'CC_CONV': 12, 'SCF_CONV': 12},; 'model': {'basis': 'aug-pvqz', 'method': 'ccsd(t)'},; 'molecule': {'atom_labels': ['', '', ''],; 'atomic_numbers': [8, 1, 1],; 'fix_com': False,; 'fix_orientation': False,; 'fragment_charges': [0.0],; 'fragment_multiplicities': [1],; 'fragments': [[0, 1, 2]],; 'geometry': [0.0,; 0.0,; -0.12403886030029525,; 0.0,; -1.431430901356359,; 0.9842933627189459,; 0.0,; 1.431430901356359,; 0.9842933627189459],; 'mass_numbers': [16, 1, 1],; 'masses': [15.99491461957,; 1.00782503223,; 1.00782503223],; 'molecular_charge': 0.0,; 'molecular_multiplicity': 1,; 'name': 'H2O',; 'p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048:1939,error,errors,1939,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048,2,['error'],['errors']
Availability,"qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20067,error,error,20067,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"r(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; @using_gcp; def test_grimme_3c():. s16di = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/driver.py:494: in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); ../lib/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:16786,avail,available,16786,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"r(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; def test_dftd3():; """"""dftd3/energy""""""; #! Exercises the various DFT-D corrections, both through python directly and through c++. ref_d2 = [-0.00390110, -0.00165271, -0.00058118]; ref_d3zero = [-0.00285088, -0.00084340, -0.00031923]; ref_d3bj = [-0.00784595, -0.00394347, -0.00226683]. ref_pbe_d2 = [-0.00278650, -0.00118051, -0.00041513]; ref_pbe_d3zero = [-0.00175474, -0.00045421, -0.00016839]; ref_pbe_d3bj = [-0.00475937, -0.00235265, -0.00131239]. eneyne = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:7949,avail,available,7949,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"r, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, char, char, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:189: note: psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData(const psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&); /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:174: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: initializer expression list treated as compound expression; make[2]: **\* [src/lib/libPsiUtil/CMakeFiles/PsiUtil.dir/Implementations/Timer.cc.o] Error 1; make[1]: **\* [src/lib/libPsiUtil/CMakeFiles/PsiUtil.dir/all] Error 2; make: **\* [all] Error 2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:4720,error,error,4720,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,4,"['Error', 'error']","['Error', 'error']"
Availability,"r,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\q",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52859,error,error,52859,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"r,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13511,error,error,13511,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,rad1 (Failed); 	125 - dfmp2-grad2 (Failed); 	126 - dfmp2-grad3 (Failed); 	127 - dfmp2-grad4 (Failed); 	132 - dfomp2-grad1 (Failed); 	133 - dfomp2-grad2 (Failed); 	136 - dfomp3-grad1 (Failed); 	137 - dfomp3-grad2 (Failed); 	140 - dfomp2p5-grad1 (Failed); 	141 - dfomp2p5-grad2 (Failed); 	146 - dft-freq (Failed); 	147 - dft-grad (Failed); 	151 - dft1 (Failed); 	152 - dft1-alt (Failed); 	154 - dft3 (Failed); 	157 - extern1 (Failed); 	165 - fd-freq-energy-large (Failed); 	166 - fd-freq-gradient (Failed); 	167 - fd-freq-gradient-large (Failed); 	168 - fd-gradient (Failed); 	169 - freq-isotope (Failed); 	171 - fnocc2 (Failed); 	176 - gibbs (Failed); 	192 - mp2-1 (Failed); 	194 - mp2-grad1 (Failed); 	195 - mp2-grad2 (Failed); 	196 - mp2-module (Failed); 	197 - mp2_5-grad1 (Failed); 	198 - mp2_5-grad2 (Failed); 	199 - mp3-grad1 (Failed); 	200 - mp3-grad2 (Failed); 	206 - ocepa-grad1 (Failed); 	207 - ocepa-grad2 (Failed); 	216 - omp2-grad1 (Failed); 	217 - omp2-grad2 (Failed); 	220 - omp2_5-grad1 (Failed); 	221 - omp2_5-grad2 (Failed); 	227 - omp3-grad1 (Failed); 	228 - omp3-grad2 (Failed); 	229 - opt-lindep-change (Failed); 	230 - opt1 (Failed); 	232 - opt2 (Failed); 	233 - opt2-fd (Failed); 	234 - opt3 (Failed); 	235 - opt4 (Failed); 	236 - opt5 (Failed); 	237 - opt6 (Failed); 	238 - opt7 (Failed); 	239 - opt8 (Failed); 	240 - opt9 (Failed); 	241 - opt11 (Failed); 	242 - opt12 (Failed); 	243 - opt13 (Failed); 	244 - opt14 (Failed); 	245 - opt-irc-1 (Failed); 	246 - opt-irc-2 (Failed); 	247 - opt_freeze_coords (Failed); 	261 - pubchem1 (Failed); 	263 - pywrap-alias (Failed); 	264 - pywrap-all (Failed); 	268 - pywrap-checkrun-rhf (Failed); 	269 - pywrap-checkrun-rohf (Failed); 	270 - pywrap-checkrun-uhf (Failed); 	272 - pywrap-db2 (Failed); 	275 - pywrap-freq-g-sowreap (Failed); 	301 - scf6 (Failed); 	309 - tu3-h2o-opt (Failed); 	310 - tu4-h2o-freq (Failed); 	322 - cubeprop-esp (Failed); 	335 - dftd3-energy (Failed); 	336 - dftd3-grad (Failed); Errors while running CTest; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/605#issuecomment-277397753:2930,Error,Errors,2930,https://psicode.org,https://github.com/psi4/psi4/pull/605#issuecomment-277397753,1,['Error'],['Errors']
Availability,"re errors if I continue. In file included from /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:29:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:147: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, int, int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘)’ before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Tabl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:939,error,error,939,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"re lots o' blockers:; * no mkl; * no c++11; * no intel compiler capability for multiarch packages; * psi4 has dependencies that aren't quite vanilla upstream; * psi4 likes to provide addons from projects that aren't released cleanly; * psi4 users have grown accustomed to `-c psi4` and `-c psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1026,down,downgrade,1026,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['down'],['downgrade']
Availability,"regarding v2rdm_casscf, I think everything is now compatible with this PR on the C side; the plugin compiles against @robertodr 's fcidump branch. However, I get python errors when running any input file that are unrelated to v2rdm_casscf:. Traceback (most recent call last):; File ""/Users/deprince/software/robertodr/psi4/install/bin/psi4"", line 158, in <module>; import psi4; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/__init__.py"", line 31, in <module>; from psi4.driver.molutil import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/molutil.py"", line 35, in <module>; from psi4.driver.p4util import constants, filter_comments; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/__init__.py"", line 32, in <module>; from .util import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/util.py"", line 39, in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/proc_table.py"", line 35, in <module>; from . import sapt; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 32, in <module>; from psi4.driver import p4util; ImportError: cannot import name p4util",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355307312:169,error,errors,169,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355307312,1,['error'],['errors']
Availability,"resumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f37",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1270,down,downstream,1270,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,4,"['Error', 'down']","['Error', 'downstream']"
Availability,"rk/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib libz.dylib core.so; $ install_name_tool -change /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib libz.dylib core.so; $ otool -L core.so; core.so:; 	@rpath/core.so (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libpcm.1.dylib (compatibility version 1.0.0, current version 0.0.0); 	@rpath/libxc.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	@rpath/libgdma.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libderiv.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libint.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libdkh.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/liberd.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libsimint.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libefp.dylib (compatibility version 0.0.0, current version 0.0.0); 	libz.dylib (compatibility version 1.0.0, current version 1.0.0); 	libz.dylib (compatibility version 1.0.0, current version 1.0.0); 	@rpath/libchemps2.2.dylib (compatibility version 2.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```. Now, this will lead to a ton of undefined symbols. But I don't really care, since I don't want to actually call any functions from `core.so` anyways. So I change the `sys.setdlopenflags` to RTLD_LAZY. i.e. ```; import sys; flags = sys.getdlopenflags(); sys.setdlopenflags(0x1) # RTLD_LAZY; import core; sys.setdlopenflags(flags). import numpy as np. random = np.random.RandomState(0); N = 46; A = random.randn(N, N). U, s, VT = np.linalg.svd(A, full_matrices=True); A_reconstructed = U.dot(np.diag(s)).dot(VT); print(np.linalg.norm(A-A_reconstructed)); ```. And I still get the error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311749244:3837,error,error,3837,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311749244,1,['error'],['error']
Availability,"rror LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42729,error,error,42729,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"rror LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51165,error,error,51165,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"s I haven't met it before. Thanks!. ```; > (gha_eco_rb5) PYTHONPATH=stage/lib/ pytest stage/lib/psi4/tests/ -k ""basic or tu1""; ============================================================================================================ test session starts ============================================================================================================; platform linux -- Python 3.10.0, pytest-7.1.0, pluggy-0.13.1; rootdir: /psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4, configfile: pytest.ini; plugins: forked-1.3.0, xdist-2.3.0; collected 3507 items / 3504 deselected / 3 selected . stage/lib/psi4/tests/test_psi4.py F [ 33%]; stage/lib/psi4/tests/test_psi4_qcschema.py . [ 66%]; stage/lib/psi4/tests/tu1-h2o-energy/test_input.py F [100%]. ================================================================================================================= FAILURES ==================================================================================================================; ______________________________________________________________________________________________________________ test_psi4_basic ______________________________________________________________________________________________________________. @pytest.mark.smoke; def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation; ; h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""); ; psi4.set_options({'basis': ""cc-pVDZ""}); psi4.energy('scf'); ; > assert psi4.compare_values(-176.0266327341067125, psi4.variable('SCF TOTAL ENERGY'), 6, 'SCF energy'). stage/lib/psi4/tests/test_psi4.py:23: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/lib/psi4/driver/qcdb/testing.py:104: in _mergedapis_compare_values; return qcel.testing.compare_values(expected, computed, **kwargs); /psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:1497,FAILURE,FAILURES,1497,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,1,['FAILURE'],['FAILURES']
Availability,"s have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference and dispersion depends a lot on computing the psi4 (and other) versions. Hence the ""pull tags"" message. I can believe there's a way that communication breaks down. I'd suggest you compare commands and cat-ed files and see where the discrepancy in workflow/environment arises.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:4448,down,down,4448,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,2,['down'],['down']
Availability,"s will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1784,failure,failure,1784,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469,1,['failure'],['failure']
Availability,"s, and ran the `dft-bench-ionisation` test (wB97X-D, revTPSS, PW6B95, TPSS, PWB6K only):.   | N=1 | N=4 | N=1 | N=4; -- | -- | -- | -- | --; Psi4/1.2-rc2-acml-5.3.1 | FAIL |   |   |  ; Psi4/1.2-rc2-lapack-3.8.0 | 395.944 | 299.438 | 1.00 | 1.32; Psi4/1.2-rc2 (1.2rc2.dev35) | 268.523 | 223.574 | 1.47 | 1.77; Psi4/1.2-rc2-blis-0.3.2 | 356.723 | 262.964 | 1.11 | 1.51; Psi4/1.2-rc2-openblas-0.2.20 | FAIL |   |   |  ; Psi4/1.2-rc2-openblas-0.3.0 | FAIL |   |   |  . All compiled with gcc-7.1.0, cmake-3.8.2, dftd3-3.2-r0:. `cmake -H. -BBUILDS/$1 -DCMAKE_INSTALL_PREFIX=/opt/packages/psi4/$1 -DLAPACK_INCLUDE_DIRS=/path/to/lapack -DMAX_AM_ERI=5` . ACML-5.3.1 is a binary. . Netlib's BLAS and lapack (3.8.0) compiled with `-O3 -march=barcelona -fPIC` and `-O3 -frecursive -march=barcelona -fPIC` respectively, including deprecated functions. I had to add `-DENABLE_dkh=ON` to the psi4 build options, otherwise the fortran compiler wouldn't get picked up. The 1.2rc2.dev35 is a binary that was available in conda, compiled against `mkl 2018.0.2, intel-openmp 2018.0.0`. Flame's blis-0.3.2 was compiled into netlib's lapack-3.8.0, with `./configure auto`; lapack compiled as above. OpenBLAS-0.2.20 was compiled with `USE_THREAD=0 USE_OPENMP=0 TARGET=BARCELONA`. OpenBLAS-0.3.0 was compiled with both: ; `make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32` and ; `make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 CFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" FFLAGS=""-fPIC -fopenmp -fstack-protector-strong""` and; `make CC=gcc FC=gfortran DYNAMIC_ARCH=1 BINARY=64 NO_LAPACK=0 NO_AFFINITY=1 USE_THREAD=0 USE_OPENMP=0 NUM_THREADS=32 CFLAGS=""-fopenmp -march=barcelona -ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe"" FFLAGS=""-fopenmp -march=barcelona -ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe""` ; linked using the `.so` and `.a`; it doesn't pass at all even with `psi4 -n 1`. The node I used is a 2 x Quad-Core AMD Opteron(tm) Process",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-394986909:1160,avail,available,1160,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-394986909,1,['avail'],['available']
Availability,"s?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH` has to be hinted (`find_package(gdma CONFIG REQUIRED HINTS ${CMAKE_PREFIX_PATH}/gdma)`) and the current way I've done can't be robust (think ;-lists). I can understand your wanting to separate out extproj() installations as not-quite-up-to-snuff, but the extra hinting level is annoying, so how about keeping `externals/` (controlled by a keyword maybe; `INSTALL_EXTPROJ_SEPARATE`) and dropping the extra namespacing level. So a default installation looks like below. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - bin/; - chemps2; - lib/; - libchemps2.a; - libgdma.a; - libint.a; - libderiv.a; - libdkh.a; - share/; - cmake/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That way, can have `externals/` in `CMAKE_PREFIX_PATH` and all the configs can be detected. In the `INSTALL_EXTPROJ_SEPARATE`, `externals/` is missing and the external/bin-s join the main bin, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:5415,robust,robust,5415,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,2,['robust'],['robust']
Availability,"same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors generated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356726977:1252,error,error,1252,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977,3,['error'],"['error', 'errors']"
Availability,"several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:20<00:30, 3.87s/it]|Examining libblas[build=*mkl]: 64%|█████████████████████████████████▍ | 9/14 [00:30<00:24, 4.99s/it]|Examining conflict for geometric torsiondrive: 43%|███████████████▍ | 6/14 [00:16<00:10, 1.28s/it]\Examining conflict for matplotlib psi4 geometric torsiondrive: 86%|████████████████▎ | 12/14 [00:43<00:07, 3.92s/it]|Examining conflict for matplotlib psi4 geometric: 93%|█████████████████████████████▋ | 13/14 [00:47<00:04, 4.52s/it]/Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 19it [01:06, 3.74Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 20it [01:06, 3.94Examining conflict for matplotlib python: : 20it [01:11, 3.94s/it] failed /. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package libblas conflicts for:; matplotlib -> numpy=1.11 -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; psi4 -> numpy -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; torsiondrive -> numpy[version='>=1.11,<2.0a0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; libblas[build=*mkl]; geometric -> numpy[version='>=1.18,<2.0a0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; qcelemental -> numpy[version='>=1.12.0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']. Package vs2008_runtime conflicts for:; qcelemental -> python -> vs2008_runtime; geometric -> python -> vs2008_runtime; qcengine -> python -> vs2008_runtime; matplotlib -> python[version='>=2.7,<2.8.0a0'] -> vs2008_runtime[version='>=9.0.30729.1,<10.0a0']. Package six conflicts for:; matplotlib -> cycler -> six[version='>=1.5']; geometric -> six; psi4 -> pytest -> six[version='>=1.10.0']; torsiondrive -> geometric[version='>=0.9.7'] -> six. Package blas conflicts for:; blas[bui",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:5223,Avail,Available,5223,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['Avail'],['Available']
Availability,short study of the total error in the absolute energies for two cases added.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581#issuecomment-475229104:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/pull/1581#issuecomment-475229104,1,['error'],['error']
Availability,"si4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular momentum error on mac binary.; * simint max is AM7 both past and near future. Only libint is changing.; * Between higher AM and optimizing for multiple architectures, the new libint pkg is heavy, >120mb zipped. For psi4 CI, I'm planning to pull the old AM6 to lessen the strain on Travis. This won't help downstream projects that summon a built psi4 to test their addon.; * I haven't posted the AM8 package yet, as I want the stack to finish building, and I wanted to give you all a heads-up. I'll post to this issue when the package goes up. Will only be in -c psi4/label/dev for now, not -c psi4. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1533>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJyuo4E3GnVs6-g7y6p4rUmgxalOsks5vNL55gaJpZM4a6ozS>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:3265,error,error,3265,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,2,"['down', 'error']","['downstream', 'error']"
Availability,"si@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45423,error,error,45423,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"signed __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11347,error,error,11347,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,site-packages/psi4/tests/test_addons.py:925: Psi4 not detecting plugin resp. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_resp). ================================================================== warnings summary ==================================================================; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:5553,error,error,5553,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"somehow we're hitting gcc 4.8 headers (from gfortran?!) in the clang build, hence no regex, hence fail. ```; 7%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/benchmark.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libmints && /usr/bin/clang++-3.6 -DMAX_AM_ERI=6 -DUSING_Libint -DUSING_dkh -DUSING_simint -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -I/home/travis/build/psi4/psi4/psi4/src/psi4/libiwl/options -isystem /home/travis/miniconda/envs/p4env/include/python3.6m -isystem /home/travis/miniconda/envs/p4env/include -march=native -O3 -DNDEBUG -fPIC -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/mints.dir/benchmark.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/benchmark.cc; /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/basisset.cc:855:17: error: no matching function for call to 'regex_replace'; basisname = std::regex_replace(basisname, std::regex(""\\(|\\)|,""), ""_"");; ^~~~~~~~~~~~~~~~~~; /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/regex.h:2182:5: note: candidate template ignored: could not match 'basic_string<type-parameter-0-1, char_traits<type-parameter-0-1>, allocator<type-parameter-0-1> >' against 'char const[2]'; regex_replace(const basic_string<_Ch_type>& __s,; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/regex.h:2162:5: note: candidate function template not viable: requires at least 5 arguments, but 3 were provided; regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,; ^; ```. probably something in the win adds, I guess (thinmints diff btwn fail & pass https://github.com/psi4/psi4/commit/466138dd585209f6fe20d530c10ecb2896c2eef6). will keep investigating. fyi @raimis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1197#issuecomment-417072124:874,error,error,874,https://psicode.org,https://github.com/psi4/psi4/pull/1197#issuecomment-417072124,1,['error'],['error']
Availability,"spgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42504,error,error,42504,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"splay the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5491,avail,available,5491,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"ssues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3000,error,error,3000,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,['error'],['error']
Availability,"st.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7639,error,error,7639,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"stall/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1759,Error,Error,1759,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['Error'],['Error']
Availability,still getting the same error after running the following:. conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge -c psi4; psi4 --test. :(,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640,1,['error'],['error']
Availability,"structure of `qcdb.molparse` (or `qcel.molparse`) which now handles Molecule I/O; ```; def from_arrays(**arrays):; validate_and_type ...; construct_molrec_dictionary ...; return molrec. def from_string(str):; parse ...; return from_arrays(**arrays). def from_schema(schema_dict):; process ...; return from_arrays(**arrays). def to_string(molrec, dtype):; format_by_dtype ...; return str. def to_schema(molrec, dtype):; depending_on_schema_flavor_dtype_rearrange_and_remove_fields ...; return dict; ```. then proper objects like `qcdb.Molecule` and `psi4.core.Molecule` can hook in through; ```; class Molecule():; def to_dict(self):; convert_object_structure_into_molrec ...; return molrec. @classmethod; def from_dict(cls, molrec):; construct_object_from_molrec_contents ...; return mol. @staticmethod; def from_string(str):; molrec = molparse.from_string(str); return Molecule.from_dict(molrec). def to_string(self, dtype):; return molparse.to_string(self.to_dict(), dtype=dtype). @staticmethod; def from_arrays(**arrays):; molrec = molparse.from_arrays(**arrays); return Molecule.from_dict(molrec). def to_schema(self, dtype):; return molparse.to_schema(self.to_dict(), dtype=dtype); ```. The above is more detailed than you need, but it's about time I wrote it down. By external function, I just meant one that returns your findif dictionary. If you want to keep arrays as numpy structures, then can have a flag that does or does not call `unnp` (or similar) and things that are destined for a JSON file (like a `to_schema()` call) can be sure to use `to_dict(np_out=False)` while internal calls can do `to_dict(np_out=True)`. I suggest it merely as a way to avoid lots of `np.array(inp)` and `to_list`s. And keep in mind that the above structure is necessary b/c the ""molrec"" psi4 internal repr dict isn't quite the same as the QCSchema dict, so some translation necessary. Possibly you can avoid that complication. This answer is more background than specifics. Glad to talk the latter instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1289#issuecomment-429944965:1298,down,down,1298,https://psicode.org,https://github.com/psi4/psi4/pull/1289#issuecomment-429944965,1,['down'],['down']
Availability,"sual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7064,error,error,7064,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49630,error,error,49630,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42913,error,error,42913,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29366,error,error,29366,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t at /psi/toolchainconda/envs/py310:; #; # Name Version Build Channel; dftd3 3.2.1 h84218bc_2 psi4; (py310) psilocaluser@bash:psinet:/psi/gits/hrw-detangle/objdir_py310: (r2scan) conda list gcp; # packages in environment at /psi/toolchainconda/envs/py310:; #; # Name Version Build Channel; gcp 2.0.2 he991be0_2 psi4; gcp-correction 2.3.1 h1990efc_3 conda-forge; (py310) psilocaluser@bash:psinet:/psi/gits/hrw-detangle/objdir_py310: (r2scan) pytest ../tests/pytests/test_psi4.py ; ================================================================================== test session starts ==================================================================================; platform linux -- Python 3.10.4, pytest-7.1.2, pluggy-1.0.0; rootdir: /psi/gits/hrw-detangle, configfile: pytest.ini; plugins: forked-1.3.0, xdist-2.5.0; collected 0 items / 1 error . ======================================================================================== ERRORS =========================================================================================; ______________________________________________________________________ ERROR collecting tests/pytests/test_psi4.py ______________________________________________________________________; ImportError while importing test module '/psi/gits/hrw-detangle/tests/pytests/test_psi4.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; ../tests/pytests/test_psi4.py:4: in <module>; import psi4; stage/lib/psi4/__init__.py:75: in <module>; from .driver import endorsed_plugins; stage/lib/psi4/driver/__init__.py:46: in <module>; from psi4.driver.molutil import *; stage/lib/psi4/driver/molutil.py:36: in <module>; from psi4.driver.p4util import temp_circular_import_blocker; stage/lib/psi4/driver/p4util/__init__.py:35: in <module>; from .fcidump import *; stage/lib/psi4/driver/p4util/fcidump.py:43: in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; stage/lib/psi4/driver/procrouting/__init__.py:2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1444984342:1341,ERROR,ERRORS,1341,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1444984342,2,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"t recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; ciwfn = core.detci(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:12365,Error,Error,12365,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"t set on the remote machine; (probably didn't re-source ~/.bashrc after installing psi4. However, it; should be writing to local disks. I can see psi...clean files in the local; directory, are those scratch files?. No, psi.[pid].clean is a little text file that contains a list of all the; scratch files to clean up. You should look at the list of scratch files in; this psi.[pid].clean file to see where it is writing the scratch files, and; make sure that it isn't to a NFS-mounted directory. Otherwise you'll take; a huge performance hit. On Thu, Mar 1, 2018 at 11:05 AM, Lori A. Burns <notifications@github.com>; wrote:. > Possible, but I really doubt it, as glibc mismatches aren't usually; > healable. Usually this is a symptom of packages depending on different; > versions of a library and symbols getting sometimes loaded one way and; > sometimes another depending on import order. Often fixable by swapping; > import order, but in the psi-in-jupyter case, there's simply nothing to; > swap.; >; > I thoroughly expected this to be fixed when I built with the newer; > compilers and was alarmed when it wasn't. @sergsb; > <https://github.com/sergsb>, would you want to try the conda env line in #862; > (comment) <https://github.com/psi4/psi4/issues/862#issuecomment-347074303>; > ? Possibly more defaults packages have been updated to the new compilers; > since November and healed the problem.; >; > Only thing else I can think of is that I'm still linking libc++ statically; > (which it should be entirely safe to do, being the least-fundamental of the; > glibc, libgcc_s, libstdc++ trio) and that's running into a symbol error; > with the jupyter stack.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/862#issuecomment-369640226>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdr3o6Z-YaJeCQ901ywG8eMHjO8c5ks5taBxDgaJpZM4Qhais>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369646381:1749,error,error,1749,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369646381,2,['error'],['error']
Availability,"t threading itself automatically. If we roll back to 1.1 does the issue become better?. -Daniel Smith; Sent from my iPhone. . > On Jun 6, 2018, at 04:29, Peter Kraus <notifications@github.com> wrote:; > ; > To add to Lori's table from here, I've compiled the 1.2-rc2 tag against various blas/lapack combinations, and ran the dft-bench-ionisation test (wB97X-D, revTPSS, PW6B95, TPSS, PWB6K only):; > ; > 	N=1	N=4	N=1	N=4; > Psi4/1.2-rc2-acml-5.3.1	FAIL	 	 	 ; > Psi4/1.2-rc2-lapack-3.8.0	395.944	299.438	1.00	1.32; > Psi4/1.2-rc2 (1.2rc2.dev35)	268.523	223.574	1.47	1.77; > Psi4/1.2-rc2-blis-0.3.2	356.723	262.964	1.11	1.51; > Psi4/1.2-rc2-openblas-0.2.20	FAIL	 	 	 ; > Psi4/1.2-rc2-openblas-0.3.0	FAIL	 	 	 ; > All compiled with gcc-7.1.0, cmake-3.8.2, dftd3-3.2-r0.; > ; > ACML-5.3.1 is a binary.; > ; > Netlib's BLAS and lapack (3.8.0) compiled with -O3 -march=barcelona -fPIC and -O3 -frecursive -march=barcelona -fPIC respectively, including deprecated functions. I had to add -DENABLE_dkh=ON to the psi4 build options, otherwise the fortran compiler wouldn't get picked up.; > ; > The 1.2rc2.dev35 is a binary that was available in conda, compiled against mkl 2018.0.2, intel-openmp 2018.0.0.; > ; > Flame's blis-0.3.2 was compiled into netlib's lapack-3.8.0, with ./configure auto; lapack compiled as above.; > ; > OpenBLAS-0.2.20 was compiled with USE_THREAD=0 USE_OPENMP=0 TARGET=BARCELONA. OpenBLAS-0.3.0 was compiled with both make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 and make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 CFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" FFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" and linked using the .so and .a; it doesn't pass at all even with psi4 -n 1.; > ; > The node I used is a 2 x Quad-Core AMD Opteron(tm) Processor 2352, running up-to-date Debian 8.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-395091290:1198,avail,available,1198,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-395091290,1,['avail'],['available']
Availability,"t,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45150,error,error,45150,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15258,error,error,15258,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25949,error,error,25949,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21544,error,error,21544,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40117,error,error,40117,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16347,error,error,16347,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24203,error,error,24203,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48621,error,error,48621,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [CMakeFiles/psi4_core.dir/all] Error 2; make[1]: Leaving directory `/scratch/appssf/psi4/build'; make: *** [all] Error 2; ```; For compiling, I was using ""make -j 8"". I will try to compile serially and see if that was the cause for the installation problem. Best regards and thank you very much for your help. Sam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:5012,Error,Error,5012,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,5,['Error'],['Error']
Availability,"t_tu1_h2o_energy():; > ctest_runner(__file__). stage/lib/psi4/tests/tu1-h2o-energy/test_input.py:5: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. inputdatloc = '/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/tests/tu1-h2o-energy/test_input.py', extra_infiles = None, outfiles = None. def ctest_runner(inputdatloc, extra_infiles: List =None, outfiles: List =None):; """"""Called from a mock PyTest function, this takes a full path ``inputdatloc`` to an ``""input.dat""`` file set up for; CTest and submits it to the ``psi4`` executable. Any auxiliary files with names listed in ``extra_infiles`` that reside; alongside ``inputdatloc`` are placed in the Psi4 execution directory.; ; """"""; from qcengine.util import execute; import psi4; ; # Pass runtime env through to `execute`; # * appending Psi4 import path (after all, it worked previous line) since partial/relative paths not robust; psiimport = Path(psi4.__file__).parent.parent; env = os.environ.copy(); env[""PYTHONPATH""] = env[""PYTHONPATH""] + os.pathsep + str(psiimport); ; ctestdir = Path(inputdatloc).resolve().parent; ; if (ctestdir / ""input.dat"").exists():; inputdat = ""input.dat""; elif (ctestdir / ""input.py"").exists():; inputdat = ""input.py""; ; infiles = [inputdat]; if extra_infiles:; infiles.extend(extra_infiles); infiles_with_contents = {Path(fl).name: (ctestdir / fl).read_text() for fl in infiles}; ; # Note: The simple `command = [""psi4"", ""input.dat""]` works fine for Linux and Mac but not for Windows.; # L/M/W ok with `command = [which(""psi4""), ""input.dat""]` where `which` on Windows finds the psi4.bat file that points to the psi4 python script. -or-; # L/M/W ok with `command = [sys.executable, psi4.executable, ""input.dat""]` aka `python /full/path/bin/psi4 input.dat`.; # Latter chosen as `psi4.executable` is path computed by `imp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:5704,robust,robust,5704,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,2,['robust'],['robust']
Availability,"tall configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f3728f000); libpython2.7.so.1.0 => /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 (0x0000151f36d12000); libcublas.so.9.1 => /usr/lib/x86_64-linux-gnu/libcublas.so.9.1 (0x0000151f3377b000); libcusolver.so.9.1 => /usr/lib/x86_64-linux-gnu/libcusolver.so.9.1 (0x0000151f2e006000); libcudart.so.9.1 => /usr/lib/x86_64-linux-gnu/libcudart.so.9.1 (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1712,Error,Error,1712,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,2,['Error'],['Error']
Availability,"tations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:2011,error,error,2011,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"tegrals for the SCF and/or MP2. And if they pick an; unsupported combination (conventional SCF plus DF MP2 gradients) we should; print an error message explaining that's not available. Are we still defaulting to DF for SCF? (at least when there is no post HF; module that wants the conventional ints)? Probably should until / unless; we get efficient conventional SCF, and arguably even then. David. On Sunday, March 6, 2016, Ugur Bozkaya notifications@github.com wrote:. > Hi Lori,; > ; > Let us start with your first question for the HF molecule. I run your job,; > and it terminates ""normally"". Since it is a gradient job I do not simply; > grab integrals from SCF, but I compute both JKFIT and RI basis DF; > integrals. Hence, it does not matter to start with the conventional; > integrals the df-mp2 code proceeds. However, the gradient is not correct; > because the MO coefficients are from conventional SCF, but it should be; > from DF-SCF. I think in the case df-mp2 gradients, if user set the; > conventional SCF, then we should throw an error. Alternatively we may; > change the reference to DF-SCF and throw a warning for user to explain what; > we did. Both solutions are okay for me.; > ; > DFOCC uses frozen cores properly in energy and gradients. I did not add; > the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients.; > However, OCC does not use frozen cores in the energy and gradients. In case; > of OCC the problem is that you need to define different MO class with; > libtrans, which is not obvious how to do it. I know it is possible now.; > Andy explained it for me. As a result, there is no plan for OCC module.; > However, frozen virtuals will be added to DFOCC. In fact, I am waiting for; > RC1 release, then I will implement add it to Psi4.; > ; > For the final question, your reference gradient is wrong (mp2tot_vals).; > This is a very good example how 3-point numeric gradients are unreliable; > for challenging systems. I reproduce problem with you",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192920861:1505,error,error,1505,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192920861,2,['error'],['error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18967,error,error,18967,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42077,error,error,42077,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50061,error,error,50061,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"th a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2277,down,downgrade,2277,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['down'],['downgrade']
Availability,"thanks @robertodr and all. In which version will this be available? @raimis, we should change our code when it's available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818#issuecomment-352287559:57,avail,available,57,https://psicode.org,https://github.com/psi4/psi4/pull/818#issuecomment-352287559,2,['avail'],['available']
Availability,"thanks for the ping @JonathonMisiewicz; yes, there are definitely too many irons in the fire, since I had already forgotten about this whole shenanigan. [GauXC](https://github.com/wavefunction91/GauXC) is definitely where things like the orbital and geometric Hessian matrix elements should be computed, since the code gets very complicated for meta-GGAs and it also is completely independent of the form of the atomic-orbital basis set, meaning that the same code will not only work for the 40+ Gaussian-basis DFT programs but also for programs using Slater-type orbitals or numerical atomic orbitals. Opened up https://github.com/wavefunction91/GauXC/issues/139 for tracking.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790:15,ping,ping,15,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790,1,['ping'],['ping']
Availability,"that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed globally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:1446,error,errors,1446,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,1,['error'],['errors']
Availability,"that would be needed; that isn't being kept. On Fri, Feb 14, 2020 at 1:08 PM Jonathon Misiewicz <notifications@github.com>; wrote:. > The following input file segfaults:; >; > molecule {; > symmetry c1; > H; > H 1 1.0; > }; >; > set basis cc-pvdz; > e, wfn = energy('fci', return_wfn=True); > wfn.form_tpdm(); >; > The issue is that the driver cleans up DETCI after every energy call; > <https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3579>.; > That cleanup frees the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ciwave.cc#L458>.; > But form_tpdm works by creating a new CI vector; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/tpdm.cc#L56>,; > which is set with the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/civect.cc#L115>,; > which the driver freed, giving rise to a bad access exception.; >; > So which code is supposed to be responsible for DETCI cleanup? If that's; > the responsibility of procrouting, then form_tpdm is always going to; > segfault, so form_tpdm shouldn't be exposed to Python at all, and the; > user should have the TPDM be formed and kept via set tpdm true. If; > cleanup is not the responsibility of procrouting, then which code is; > supposed to be responsible for it? Leave it to the destructor?; >; > DETCI design decisions are above my pay grade, so I'm leaving this to DGAS; > and CDS. The 1.4 paper is of course higher priority, but I need this; > feature working very badly, so I will start pinging on Tuesday.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1812?email_source=notifications&email_token=AAXVA5XS3UFCJKRLHOJNWI3RC3M2FA5CNFSM4KVNDPSKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4INUQSEQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SRRGB7SRIJPXE5OATRC3M2FANCNFSM4KVNDPSA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160:2383,ping,pinging,2383,https://psicode.org,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160,2,['ping'],['pinging']
Availability,"the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:945,Error,Error,945,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['Error'],['Error']
Availability,"the one failure is just our old friend `stability1`, so merging anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/436#issuecomment-230519138:8,failure,failure,8,https://psicode.org,https://github.com/psi4/psi4/pull/436#issuecomment-230519138,1,['failure'],['failure']
Availability,there is a syntax error when [] and * are in the file.; [my3-21g] is putted in the input file?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823#issuecomment-337808388:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/issues/823#issuecomment-337808388,1,['error'],['error']
Availability,"this will get past molecule. ```; diff --git a/psi4/driver/qcdb/molecule.py b/psi4/driver/qcdb/molecule.py; index f8f7ea6..361f059 100644; --- a/psi4/driver/qcdb/molecule.py; +++ b/psi4/driver/qcdb/molecule.py; @@ -1171,7 +1171,7 @@ class Molecule(LibmintsMolecule):; provenance=None,; connectivity=None,; missing_enabled_return='error',; - tooclose=0.1,; + tooclose=1.e-6, #0.1,; zero_ghost_fragments=False,; nonphysical=False,; mtol=1.e-3,; @@ -1465,7 +1465,7 @@ class Molecule(LibmintsMolecule):; # to_dict, but is included as a check. in practice, only fills in mass; # numbers and heals user chgmult.; try:; - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); except qcel.ValidationError as err:; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; @@ -1474,7 +1474,7 @@ class Molecule(LibmintsMolecule):; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0); ; diff --git a/psi4/src/psi4/libmints/molecule.h b/psi4/src/psi4/libmints/molecule.h; index 30ef61e..6129121 100644; --- a/psi4/src/psi4/libmints/molecule.h; +++ b/psi4/src/psi4/libmints/molecule.h; @@ -317,9 +317,9 @@ class PSI_API Molecule {; ; /// @{; /// Tests to see of an atom is at the passed position with a given tolerance; - int atom_at_position1(double*, double tol = 0.05) const;; - int atom_at_position2(Vector3&, double tol = 0.0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879:330,error,error,330,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879,1,['error'],['error']
Availability,"this'll probably pass CI, but there's a segfault lurking in `nbody-multi-level` with `Dimension` and `wfn.set_scalar_variable` that I haven't tracked down. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64; (gdb) bt; #0 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #1 0x00007fffefd91a81 in psi::Matrix::Matrix(psi::Matrix const*) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #2 0x00007fffefd94334 in psi::Matrix::clone() const () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffefc687b3 in psi::Wavefunction::set_array_variable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<psi::Matrix>) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffefc67fba in psi::Wavefunction::set_gradient(std::shared_ptr<psi::Matrix>) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffeea99b09 in void pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::Wavefunction, std::shared_ptr<psi::Matrix>, pybind11::name, pybind11::is_method, pybind11::sibling, char [34]>(void (psi::Wavefunction::*)(std::shared_ptr<psi::Matrix>), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [34])::{lambda(psi::Wavefunction*, std::shared_ptr<psi::Matrix>)#1}, void, psi::Wavefunction*, std::shared_ptr<psi::Matrix>, pybind11",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368:150,down,down,150,https://psicode.org,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368,2,"['down', 'fault']","['down', 'fault']"
Availability,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4115,error,error,4115,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,5,"['Error', 'error']","['Error', 'error']"
Availability,"time that there seems to be some little; symmetry-breaking noise in nearly all Psi4 gradients, and I have not taken; the time to follow up on it. It puzzles me, because we never saw stuff; like this in Psi3... those gradients were already symmetric and did not; need a ""symmetrize"" function to be called.... The only part of Psi that; I've checked that seems immune to this problem is Daniel Crawford's CC; gradients, which are perfectly symmetric. On Wed, Jan 30, 2019 at 10:40 AM Jonathon Misiewicz <; notifications@github.com> wrote:. > Discovered while remedying test cases where reference numbers needed to be; > changed due to my upcoming #1143; > <https://github.com/psi4/psi4/issues/1143> fix. DFOCC gradients are not; > symmetrized. If you'd like an example, just look in the reference output; > files; > <https://github.com/psi4/psi4/blob/master/tests/dfomp3-grad2/output.ref#L603-L604>!; > Symmetry of the overlap gradient is broken in the seventh decimal place.; > The other terms have some errors, but much smaller. That the overlap; > gradient is most afflicted is unsurprising, since the overlap integrals are; > contracted against one of the many ""generalized Fock matrices"". This one; > depends on the 1RDM and 2RDM, which are not currently symmetrized.; >; > I'm hoping to include this in 1.3 with the #1143; > <https://github.com/psi4/psi4/issues/1143> fix, since this bug could lead; > to optimizations failing, as we saw with DFMP2 two weeks ago (#1483; > <https://github.com/psi4/psi4/pull/1483>). Because individual terms are; > printed, the individual terms need to be symmetrized, and it may take me; > some time to find where the symmetrize calls need to be placed. If it; > takes too long, I'm fine with delaying to 1.4.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1504>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782:1034,error,errors,1034,https://psicode.org,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782,1,['error'],['errors']
Availability,"tion_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8750,error,error,8750,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColum",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:1819,error,error,1819,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"trapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2550,error,error,2550,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,['error'],['error']
Availability,"trf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28176,error,error,28176,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"try running the psiapi test outright, like https://github.com/psi4/psi4/blob/master/.travis.yml#L179 to see more errors. any extra packages needed that the bare travis env doesn't have?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-356018808:113,error,errors,113,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356018808,1,['error'],['errors']
Availability,"try:; dftd3rec['stdout']; except KeyError as err:; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; @using_gcp; def test_grimme_3c():. s16di = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/dri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:16671,avail,available,16671,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"try:; dftd3rec['stdout']; except KeyError as err:; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; def test_dftd3():; """"""dftd3/energy""""""; #! Exercises the various DFT-D corrections, both through python directly and through c++. ref_d2 = [-0.00390110, -0.00165271, -0.00058118]; ref_d3zero = [-0.00285088, -0.00084340, -0.00031923]; ref_d3bj = [-0.00784595, -0.00394347, -0.00226683]. ref_pbe_d2 = [-0.00278650, -0.00118051, -0.00041513]; ref_pbe_d3zero = [-0.00175474, -0.00045421, -0.00016839]; ref_pbe_d3bj = [-0.00475937, -0.00235265, -0.00131239]. eneyne = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.1261",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:7834,avail,available,7834,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,turns out the downloaded basis sets files from the SI don't comply with the expected angular momentum notation. E.g. there is a J where a K should be. (psi4 does G-H-I-K-L etc.),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1346#issuecomment-437581646:14,down,downloaded,14,https://psicode.org,https://github.com/psi4/psi4/pull/1346#issuecomment-437581646,1,['down'],['downloaded']
Availability,"ub.com wrote:; > ; > Dear Pis4 developers.; > ; > I've got in issue when link psi4 binary:; > ; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of`tmpnam_r' is dangerous, better use `mkstemp'; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function`posix_tempnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use`mkstemp'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; > builtin_converters.cpp:(.text+0x1286): undefined reference to`PyUnicodeUCS4_AsWideChar'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; > builtin_converters.cpp:(.text+0x455): undefined reference to`PyUnicodeUCS4_FromEncodedObject'; > collect2: error: ld returned 1 exit status; > make[2]: **\* [bin/psi4] Ошибка 1; > make[1]: **\* [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; > make: **\* [all] Ошибка 2; > I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x; > ; > Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; > http://packages.ubuntu.com/trusty/libboost-all-dev; > ; > My python interpreter support UCS-4.; > ; > python -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > python3 -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; > in particular, I only need to generate MOLDEN file from SCF calculations.; > ; > With respect, Vladimir.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/94#issuecomment-100760375:1644,error,error,1644,https://psicode.org,https://github.com/psi4/psi4/issues/94#issuecomment-100760375,2,"['avail', 'error']","['available', 'error']"
Availability,"uble *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34075,error,error,34075,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52658,error,error,52658,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33511,error,error,33511,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble with intel 16.0.3 on my mac. I have not been able to compile PSI4 with intel. . Here is what appears if I do, icpc -v. ```; icpc version 16.0.3 (gcc version 4.9.0 compatibility) ; ```. I got a bunch of errors in dcft/dcft_df_tensor.cc about how the compiler can't recognize "">>"", so I changed all instances of "">>"" to ""> >"". This seems to work, but I get another error in detci/ciwave.h. . ```; In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: namespace ""std"" has no member ""tuple""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: expected a "">""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: expected a "")""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: namespace ""std"" has no member ""tuple""; std::vector<std::tuple<int, int, double> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: expected a "">""; std::vector<std::tuple<int, int, double> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: expected a "")""; std::vector<std::tuple<int, int, double> > states_vec);; ^. compilation aborted for /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc (code 2); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232825635:1081,error,error,1081,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232825635,4,['error'],['error']
Availability,"uble,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44941,error,error,44941,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:29,error,errors,29,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"urve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4645,Error,Error,4645,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,2,"['Error', 'avail']","['Error', 'available']"
Availability,"using intel-gdb I am getting a segfault at:; `0x00002aaac4d3f06e in std::local_Rb_tree_decrement (__x=0x2aaaae4b3ff0 <psi::SphericalGrid::lebedev_mapping_+8>)`. Possibly multi-threading related, since I have not seen an error for single-threaded _yet_.; edit: Also no error for a `debug` compilation yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-441222929:220,error,error,220,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-441222929,2,['error'],['error']
Availability,"v2rdm strikes again! :-). fwiw, the original author (DePrince) isn't dedicated to preserving the plugin, but it's handy for catching things that may affect downstream users. Right now we're pulling from https://github.com/loriab/v2rdm_casscf/tree/v2rdm8, so if you want to PR a switchout of ERISeive to there for post-1.8, that'd be fine. In any case, it might be worth getting in a deprecation warning now for v1.8 on ERISeive.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2933#issuecomment-1527847196:156,down,downstream,156,https://psicode.org,https://github.com/psi4/psi4/pull/2933#issuecomment-1527847196,1,['down'],['downstream']
Availability,"vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>, true, false,; > boost::shared_ptrpsi::Matrix, unsigned long,; > boost::shared_ptrpsi::Matrix; > ::base_set_item(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, _object_,; > _object_) in export_mints.cc.o; > ; > boost::python::vector_indexing_suitestd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true,; > boost::python::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>; > ::base_append(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&,; > boost::python::api::object) in export_mints.cc.o; > ...; > ""_PyExc_ValueError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyFile_AsFile"", referenced from:; > boost::python::exec_file(boost::python::str,; > boost::python::api::object, boost::python::api::object) in; > libboost_python-1_57.a(exec.o); > ""_PyFile_FromString"", referenced from:; > boost::python::exec_file(boost::python::str,; > boost::python::api::object, boost::python::api::object) in; > libboost_python-1_57.a(exec.o); > ""_PyFloat_FromDouble"", referenced from:; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_mints.cc.o; > boost::python::to_python_value<double&>::operator()(double const&); > const in export_mints.cc.o; > ; > boost::python::converter::arg_to_python<double>::arg_to_python(double; > const&) in export_mints.cc.o; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_functional.cc.o; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_chkpt.cc.o; > boost::python::to_python_value<double const&>::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:29445,error,errors,29445,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['error'],['errors']
Availability,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5158,Error,Error,5158,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,2,"['Error', 'error']","['Error', 'errors']"
Availability,"vided into several (3-4) regions where the; > outer region gets the most accurate grid and the grid get step-wise more; > coarse towards the inner region(s).; >; > Additionally this PR changes the Bragg-Slater (BS) radii and completes the; > Treutler-Ahlrichs integration code with the recommended mapping values. Old; > radii were of unknown origin.; >; > *Because of the updated BS radii, this PR will impact the total energies; > of any DFT calculation and can change how many grid points are generated; > even without pruning.* (11/33 DFT tests fail); > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - updated BS radii and extended to 104 elements; > - implementation of missing Treutler-Eta mapping parameter; > - DFT_PRUNE_TYPE keyword:; > - Treutler grid pruning (DFT_PRUNE_TYPE=TREUTLER); > - a more robust grid pruning (DFT_PRUNE_TYPE=ROBUST); > - old pruning using a function (DFT_PRUNE_TYPE=FUNCTION); > - modified Becke mu from Ochsenfeld for smoother integration (however; > no time savings); > - possibility to scale Treutler-Etas to better treat diffuse basis sets; > - better print out of options; > - testing and error overview; > - option to properly disable all pruning (currently only indirect way); >; > Questions; >; > - How to C++? Explicit guidance or help is welcome.; > - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Stat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:1260,robust,robust,1260,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,5,"['ROBUST', 'error', 'robust']","['ROBUST', 'error', 'robust']"
Availability,"way your objdir and recompile from scratch. . -Daniel Smith; Sent from my iPhone. . > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > ; > After a recent git pull, psi4 failed to compile. It seems that the error was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi so all Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile.; > ; > If it helps, I'm running Ubuntu, with gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1058,error,error,1058,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:263,failure,failures,263,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033,1,['failure'],['failures']
Availability,"whoops, we forgot that this PR was adding a setter to accompany an existing getter, not exposing afresh, so a change in case was not appropriate. as usual, v2rdm found the trouble:. ```; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/work/v2rdm_solver.cc:420:57: error: no member named 'Lagrangian' in 'psi::Wavefunction'; did you mean 'lagrangian'?; Lagrangian_ = SharedMatrix(reference_wavefunction_->Lagrangian());; ^~~~~~~~~~; lagrangian; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho/include/psi4/libmints/wavefunction.h:576:18: note: 'lagrangian' declared here; SharedMatrix lagrangian() const;; ^; ```. Please change back to caps C-side. I'm inclined to have Py-side match C-side, but there's leeway for the export_ files. Sorry for the zigzag advice, @lcyyork.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2064#issuecomment-745855220:277,error,error,277,https://psicode.org,https://github.com/psi4/psi4/pull/2064#issuecomment-745855220,1,['error'],['error']
Availability,"wrt to the security issues you brought up @yurivict I know that cmake's ExternalProject tools make it possible to check fingerprints after the download step, but this is usually done when some tarball is being downloaded. In our case we are actually using git to clone a repo with the source code, I don't know how you can check the fingerprint for a repo. Now, if we do download any of the external projects as a tarball I completely agree with you that we should probably start checking the fingerprints.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-344296003:143,down,download,143,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-344296003,3,['down'],"['download', 'downloaded']"
Availability,"y makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue, but it sounds like an extra `rm -rf` or two gets the desired behavior?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:1500,robust,robust,1500,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,2,"['robust', 'toler']","['robust', 'tolerable']"
Availability,"y: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of abc combinations: 46194526. Computing (T) correction... % complete total time; ```. Stderr. ```; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:5861,avail,available,5861,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['avail'],['available']
Availability,y:762: Psi4 not detecting plugin gpu_dfcc. Build plugin if necessary and add to envvar PYTHONPATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:798: Psi4 not detecting GCP. Add `gcp` to envvar PSIPATH or PATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:909: Psi4 not detecting plugin snsmp2. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_snsmp2); SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:925: Psi4 not detecting plugin resp. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_resp). ================================================================== warnings summary ==================================================================; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:5031,error,error,5031,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"y` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:13227,avail,available,13227,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"ymmetry molecules that make me wonder if we have some; small noise coming from our general SCF gradient machinery. She is hoping; to post an issue on that as soon as she gets a little free time. This; might be a cause of the occasional small differences between analytic and; finite difference gradients observed by @raimis. @raimis, were your tests; run with a 3 point finite difference stencil, or 5 points? 5 points should; be more numerically stable (probably good to also crank up d_convergence; like @andysim did). The check done by @andysim looks pretty clean to me and suggest that, at; least for this test case, the wB97X-D gradients are fine. On Tue, Dec 12, 2017 at 1:44 PM, Andy Simmonett <notifications@github.com>; wrote:. > Thank you very much for looking into this, @raimis; > <https://github.com/raimis> - especially the detailed benchmarks. If my; > memories from way back (circa 2010) are correct, @robparrish; > <https://github.com/robparrish> and I were trying to write a prototype DF; > gradient code and hit a very strange error. The finite difference tests we; > did for hybrids all looked good, but for range-separated functionals we; > were getting quite large noise. The direct range-separated code worked; > fine, confirming that the derivative integrals were correct, and pointing; > the fact that we somehow messed up the chain rule in our haste. Since then; > Rob did a complete rewrite of the entire SCF machinery and made it; > infinitely better so, inspired by your detailed comments, I decided to; > revisit. This input; >; > memory 6Gb; >; > molecule C4NH4 {; > -1 1; > C 0.00000000 0.00000000 2.13868804; > N 0.00000000 0.00000000 4.42197911; > C 0.00000000 0.00000000 -0.46134192; > C -1.47758582 0.00000000 -2.82593059; > C 1.47758582 0.00000000 -2.82593059; > H -2.41269553 -1.74021190 -3.52915989; > H -2.41269553 1.74021190 -3.52915989; > H 2.41269553 1.74021190 -3.52915989; > H 2.41269553 -1.74021190 -3.52915989; > units bohr; > }; >; > set {; > basis 6-3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-351166112:1138,error,error,1138,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-351166112,1,['error'],['error']
Availability,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30985,error,error,30985,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37192,error,error,37192,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11139,error,error,11139,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cde",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29742,error,error,29742,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14837,error,error,14837,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27431,error,error,27431,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35278,error,error,35278,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9110,error,error,9110,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39131,error,error,39131,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16129,error,error,16129,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29930,error,error,29930,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14634,error,error,14634,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37003,error,error,37003,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37435,error,error,37435,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45686,error,error,45686,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9843,error,error,9843,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14247,error,error,14247,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53362,error,error,53362,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44597,error,error,44597,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52051,error,error,52051,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35893,error,error,35893,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DOR",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28590,error,error,28590,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42323,error,error,42323,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Deployability, (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2282,Install,Install,2282,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1591; > Commit Summary; >; > - first try of Treutler pruning. Error very large; > - testing; > - testing stage; > - adds Treutlers M4 fitting radii and new BS radii; > - adds switch for 3 different pruning schemes; > - BSrad in Angstrom works best..; > - cleaning up; > - adds smooth Becke mu of Ochsenfeld; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/cubature.cc; > <https://github.com/psi4/psi4/pull/1591/files#diff-0> (235); > - *M* psi4/src/psi4/libfock/cubature.h; > <https://github.com/psi4/psi4/pull/1591/files#diff-1> (9); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/1591/files#diff-2> (5); > - *M* tests/dft-b3lyp/input.dat; > <https://github.com/psi4/psi4/pull/1591/files#diff-3> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1591.patch; > - https://github.com/psi4/psi4/pull/1591.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1591>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdvDQ8k3q9iMmt3WyUH9_hci95FKbks5vdu4LgaJpZM4ceQFR>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:3325,Patch,Patch,3325,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability, -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1502,Install,Install,1502,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 -0.02542132788092; 2 0.00000000000000 0.00000000000000 0.04001842268283; 3 0.00000000000000 0.00000000000000 -0.00008157403367; 4 -0.01223146212679 0.00000000000000 -0.00730812502865; 5 0.01223146212679 0.00000000000000 -0.00730812502865; 6 -0.00012673181204 -0.00131081707156 0.00002518232226; 7 -0.00012673181204 0.00131081707156 0.00002518232226; 8 0.00012673181204 0.00131081707156 0.00002518232226; 9 0.00012673181204 -0.00131081707156 0.00002518232226; ```. ---. A large part of the error comes from remaining XC grid errors. Removing the XC component and switching to the following functional:. ```; func = {; ""name"": ""random"",; ""x_hf"": {; ""alpha"": 0.6,; ""beta"": 1.0,; ""omega"": 0.2; },; ""c_functionals"": {}; }; ```. We get:; ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 0.00751539716985; 2 0.00000000000000 -0.00000000000000 -0.11630695396167; 3 0.00000000000000 0.00000000000000 -0.01206645849208; 4 0.03096553875899 0.00000000000000 0.01320113763483; 5 -0.03096553875899 -0.00000000000000 0.01320113763483; 6 0.03065040266884 0.05175861616944 0.02361393500320; 7 0.03065040266884 -0.05175861616944 0.02361393500320; 8 -0.03065040266884 -0.05175861616944 0.02361393500320; 9 -0.03065040266884 0.05175861616944 0.02361393500320. ## F-D gradient (Symmetry 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 0.00751479730193; 2 0.00000000000000 0.00000000000000 -0.11630874980790; 3 0.00000000000000 0.00000000000000 -0.01206654646408; 4 0.03096551832591 0.00000000000000 0.01320234499567; 5 -0.03096551832591 0.00000000000000 0.01320234499567; 6 0.03065025750579 0.05175880408362 0.02361395224468; 7 0.03065025750579 -0.05175880408362 0.02361395224468; 8 -0.03065025750579 -0.05175880408362 0.02361395224468; ```. ---. Additional comments fixed. This is ready to go from my end. A re-review of the updated components wouldn't be a bad idea.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1043#issuecomment-397310129:3182,update,updated,3182,https://psicode.org,https://github.com/psi4/psi4/pull/1043#issuecomment-397310129,1,['update'],['updated']
Deployability," 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (disk",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:7804,install,install,7804,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability," <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long time we had geometry optimizations exit smoothly even if failed for iterations exceeded. That caused some problems (I think @dsirianni hit them), so we switched toward the die+traceback. Now",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1267,patch,patch,1267,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,1,['patch'],['patch']
Deployability," > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11260,install,install,11260,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability," All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most rece",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1664,install,install,1664,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; > double Econstant = wfn->molecule()->nuclear_repulsion_energy();; > ^; > In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; > double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; > ^; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; > make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; > make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; > make[3]: *** [all] Error 2; > make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; > make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; > make: *** [all] Error 2; > The output generated by psi4-path-advisor --gcc is; > ; > /home/shouck/miniconda3/envs/p4dev/bin/cmake \; > -H. \; > -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; > -Bobjdir; > @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to ON in psi4DepsCache.cmake by default; changing it to; > ; > set(ENABLE_CheMPS2 OFF CACHE BOOL """"); > set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); > allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!; > ; > CMakeError.log; > CMakeOutput.log; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347970165:2385,update,updated,2385,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347970165,1,['update'],['updated']
Deployability," File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > super",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3044,install,install,3044,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," Libxc 3-->4 changes + new dict func initialization. This is the first use of `use_libxc` for a LRC. ---. Ok, I believe I'm now using `use_libxc` correctly for LRC fctls (test case still unhappy):. ```; funcs.append({; ""name"": ""M11"",; ""x_functionals"": {; ""HYB_MGGA_X_M11"": {; ""use_libxc"": True; }; },; ""x_hf"": {; ""use_libxc"": ""HYB_MGGA_X_M11""; },; ""c_functionals"": {; ""MGGA_C_M11"": {}; },; ""description"": ' M11 Meta-GGA XC Functional\n',; ""citation"": ' R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011\n',; ""doi"": '10.1021/jz201170d',; }); ```. Aren't really any other M11 fctls in Libxc to get confused by:; ```; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11_L 75 /*M11-L correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11 76 /*M11 correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_X_M11_L 226 /*M11-L exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_HYB_MGGA_X_M11 297 /*M11 hybrid exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_MGGA_X_M11 225 /* Worker for M11 functional */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_HYB_MGGA_XC_M11 462 /* M11 functional from Minnesota */; ```; This turns into psi output; ```; => Composite Functional: M11 <=. M11 Meta-GGA XC Functional. R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011. Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_HYB_MGGA_X_M11 [omega = 0.2500]. => Exact (HF) Exchange <=. 1.5720 HF,LR [omega = 0.2500]; 0.4280 HF. => Correlation Functionals <=. 1.0000 XC_MGGA_C_M11; ```; which doesn't match; ![screen shot 2018-04-20 at 2 19 31 pm](https://user-images.githubusercontent.com/2314730/39067238-f8f2c778-44a5-11e8-9e51-deda8f244f1a.png); from page 7 of https://comp.chem.umn.edu/mfm/mfm_Manual_v1.9.pdf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383182397:1154,install,install-libxc,1154,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383182397,3,['install'],['install-libxc']
Deployability," New Methods ; ----------- ; ; - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT (#1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:1109,Upgrade,Upgrade,1109,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Upgrade'],['Upgrade']
Deployability," NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12575,Install,Install,12575,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); -option(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_UBSAN"" Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_MSAN"" Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF); # These options are relevant to pasture; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); @@ -114,6 +110,14 @@ option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); +option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=address -fno-omit-frame-pointer""); +option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); +option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=undefined -fno-omit-frame-pointer""); +option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals"" 5); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); diff --git a/cmake/custom_sanitize.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343290538:2448,Release,Release,2448,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343290538,2,['Release'],['Release']
Deployability," Sebastian,. Which version of Psi is this, beta5? We have been having a little trouble; reproducing the problem. Also, do you have a .psi4rc file, and if so, what's in it?. Thanks,; David. On Wed, Feb 4, 2015 at 5:47 PM, Sebastian Wouters notifications@github.com; wrote:. > Hi,; > ; > The input file for the problem described below:; > ; > molecule C6H6 {; > 0 1; > C 0.0 1.855 0.0; > C 0.0 -1.855 0.0; > C 1.6064771240201337 0.9275 0.0; > C 1.6064771240201337 -0.9275 0.0; > C -1.6064771240201337 0.9275 0.0; > C -1.6064771240201337 -0.9275 0.0; > H 0.0 3.289 0.0; > H 0.0 -3.289 0.0; > H 2.848357553047019 1.6445 0.0; > H 2.848357553047019 -1.6445 0.0; > H -2.848357553047019 1.6445 0.0; > H -2.848357553047019 -1.6445 0.0; > units au; > }; > ; > set basis cc-pVDZ; > set reference rhf; > set e_convergence 1e-12; > set d_convergence 1e-12; > set ints_tolerance 0.0; > ; > optimize('b3lyp'); > ; > When you run the geometry optimization in the /tmp folder, the geometry of; > the SCF doesn't get updated:; > ; > First SCF:; > ; > Geometry (in Bohr), charge = 0, multiplicity = 1:; > ; > Center X Y Z; > ; > ---; > ; > ```; > C -0.000000000000 1.855000000000 0.000000000000; > C 0.000000000000 -1.855000000000 0.000000000000; > C 1.606477124020 0.927500000000 0.000000000000; > C 1.606477124020 -0.927500000000 0.000000000000; > C -1.606477124020 0.927500000000 0.000000000000; > C -1.606477124020 -0.927500000000 0.000000000000; > H -0.000000000000 3.289000000000 0.000000000000; > H 0.000000000000 -3.289000000000 0.000000000000; > H 2.848357553047 1.644500000000 0.000000000000; > H 2.848357553047 -1.644500000000 0.000000000000; > H -2.848357553047 1.644500000000 0.000000000000; > H -2.848357553047 -1.644500000000 0.000000000000; > ```; > ; > At the end of optking:; > ; > ```; > Writing optimization data to binary file.; > Structure for next step:; > Cartesian Geometry (in Angstrom); > C -0.0000000000 0.9816237969 0.0000000000; > C 0.0000000000 -0.9816237969 0.0000000000; > C 0.850111145",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/66#issuecomment-73061426:1003,update,updated,1003,https://psicode.org,https://github.com/psi4/psi4/issues/66#issuecomment-73061426,1,['update'],['updated']
Deployability," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4033,configurat,configuration,4033,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,2,['configurat'],['configuration']
Deployability," So I would make another python module, `psi2adcc` say, and in it implement the routing between psi4 and adcc. Then adcc is one of its `setup.py` dependencies. In this python module I will need to adapt `psi4.driver.procedures['energy']['adc2']` and similar and add my energy function. So far, so good. Now the problem I see is that in a vanilla Psi4 version without adcc-support, `psi4.driver.procedures['energy']['adc2']` is assigned to `run_adc`, which rightfully runs the ADC(2) implementation in Psi4. If my plugin is loaded, however, this should become a `select_adc2` method, which either picks the `run_adc` in my plugin or the `run_adc` in Psi4, depending on some user settings. One option to resolve this is to give the adcc methods a different name, e.g. `adcc-adc(2)`. This is roughly what is done e.g. in the `gpu_dfcc` plugin to distinguish against the CPU versions if I understand correctly. For me this solution does not feel very satisfying, however, because now it's again the user's responsibility to select the right ADC implementation.; Another option is to implement a dummy `select_adc` in Psi4, which does no branching and always falls to the built-in implementation. This could then be monkey-patched in my plugin by wrapping it somehow ... but that is not clean either. . Alternative is to integrate deeper into the python layer and subject to the availablity of the `adcc` module either have two branches in `select_adc` or just one. That's what I will pursue now if there are no other thoughts. --. About the wavefunction object: I have not looked at the Psi4 implementation details (or the schema) so far, but roughly speaking it's (for each excited state) the excitation energy, a few property vectors and AO density matrices. Theoretically one could also export the full excitation vector, but that involves copying a rank-4 tensor, so I would not do that. But one can export important amplitudes, which is a mapping from a pair / quadruple of integers to a real value.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584:1573,patch,patched,1573,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584,2,"['integrat', 'patch']","['integrate', 'patched']"
Deployability, [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4181,Install,Install,4181,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability, [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4354,Install,Install,4354,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," _A_ tests/isapt2/plot-ref/Geom.png; > https://github.com/psi4/psi4/pull/470/files#diff-239 (0); > - _A_ tests/isapt2/plot-ref/Geom.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-240 (0); > - _A_ tests/isapt2/plot-ref/VA.png; > https://github.com/psi4/psi4/pull/470/files#diff-241 (0); > - _A_ tests/isapt2/plot-ref/VA.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-242 (0); > - _A_ tests/isapt2/plot-ref/VB.png; > https://github.com/psi4/psi4/pull/470/files#diff-243 (0); > - _A_ tests/isapt2/plot-ref/VB.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-244 (0); > - _A_ tests/isapt2/plot-ref/VC.png; > https://github.com/psi4/psi4/pull/470/files#diff-245 (0); > - _A_ tests/isapt2/plot-ref/VC.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-246 (0); > - _A_ tests/isapt2/plot-ref/dDA.png; > https://github.com/psi4/psi4/pull/470/files#diff-247 (0); > - _A_ tests/isapt2/plot-ref/dDA.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-248 (0); > - _A_ tests/isapt2/plot-ref/dDB.png; > https://github.com/psi4/psi4/pull/470/files#diff-249 (0); > - _A_ tests/isapt2/plot-ref/dDB.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-250 (0); > - _A_ tests/isapt2/plot-ref/geom.xyz; > https://github.com/psi4/psi4/pull/470/files#diff-251 (0); > - _A_ tests/isapt2/plot-ref/orient.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-252 (0); > - _A_ tests/isapt2/plot-ref/run.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-253 (0); > - _A_ tests/isapt2/plot-ref/vis.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-254 (0); > ; > Patch Links:; > - https://github.com/psi4/psi4/pull/470.patch; > - https://github.com/psi4/psi4/pull/470.diff; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/470, or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACizP-4KJoFubALyaZOx9fsbCOSSIV8Pks5qs0hXgaJpZM4KElEp; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470#issuecomment-249267903:27429,Patch,Patch,27429,https://psicode.org,https://github.com/psi4/psi4/pull/470#issuecomment-249267903,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability," and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5621,install,install,5621,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," are present here. * Use the observed hash to edit psi4/metadata.py and commit immediately. ```; >>> git tag -a v1.1rc1 6100822 -m ""v1.1rc1"". >>> vi psi4/metadata.py ; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; index 6cbc05e..fdc202e 100644; --- a/psi4/metadata.py; +++ b/psi4/metadata.py; @@ -1,5 +1,5 @@; __version__ = '1.1rc1'; -__version_long = '1.1rc1+zzzzzzz'; +__version_long = '1.1rc1+6100822'; __version_upcoming_annotated_v_tag = '1.1rc2'. >>> psi4/versioner.py ; Amazing, this can't actually happen that git hash stored at git commit.; >>> git add psi4/metadata.py; >>> git commit -m ""Records tag for v1.1rc1""; ```. * 5. **OBSERVE** Current versioning state. * Nothing to make note of, this is just a snapshot. ```; >>> psi4/versioner.py ; Defining development snapshot version: 1.1rc2.dev1+4e0596e (computed); 1.1rc2.dev1 {master} 4e0596e 1.0.0.999 1.0 <-- 1.1rc2.dev1+4e0596e. >>> git describe --abbrev=7 --long --always HEAD; v1.1rc1-1-g4e0596e. >>> git describe --abbrev=7 --long --dirty; v1.1rc1-1-g4e0596e. >>> git tag; v1.0; v1.1a1; v1.1rc1. >>> cat psi4/metadata.py ; __version__ = '1.1rc1'; __version_long = '1.1rc1+6100822'; __version_upcoming_annotated_v_tag = '1.1rc2'. >>> cat metadata.out.py | head -8; __version__ = '1.1rc2.dev1'; __version_branch_name = 'master'; __version_cmake = '1.0.0.999'; __version_is_clean = 'True'; __version_last_release = '1.0'; __version_long = '1.1rc2.dev1+4e0596e'; __version_prerelease = 'False'; __version_release = 'False'. >>> git log --oneline; 4e0596e Records tag for v1.1rc1; 6100822 v1.1rc1; cbee32b Fixes pcmsolver/scf for py3. Moves source for libefp upstream.; ```. 6. **ACTION** Move bump to remote. * Temporarily disengage ""Include administrators"" on protected master branch. ```; >>> git push origin master; >>> git push origin v1.1rc1; ```. * Now https://github.com/loriab/psi4/releases says v1.1rc1 6100822. Notes; -----. * To delete a tag:. * >>> git tag -d v1.1a1; * >>> git push origin :refs/tags/v1.1a1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:7133,release,releases,7133,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['release'],['releases']
Deployability," be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6180,install,installed,6180,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability," dependencies `conda install boost mpfr eigen ninja`. Only header-only parts of Boost are used. Eigen is needed for the l2 c++ interface. Ninja is because l2 now makes files with weird enough names that when the get written to `Makefile`s, `make` can't process them. EFV is strongly recommending Ninja, too. . 2. Make sure a Libint1 package is **not** in your conda environment. Even if you're properly pointing to a `Libint1_t`-modified l1 via `-DLibint_DIR`, the compiler will still find those conventional Libint1 headers in `$CONDA_PREFIX`. If you have `psi4-dev` installed, `conda remove libint --force` to remove libint(1) but keep `psi4-path-advisor`. 3. In https://github.com/loriab/psi4/blob/libint2/external/upstream/libint2/CMakeLists.txt and https://github.com/loriab/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:1192,configurat,configuration,1192,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,2,['configurat'],['configuration']
Deployability, detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting mo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3499,Install,Install,3499,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability, enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16145,Install,Install,16145,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," for TARGET blas:; blas.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; blas.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; blas.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; blas.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapk:; lapk.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; lapk.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapk.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapk.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapack:; lapack.INTERFACE_COMPILE_DEFINITIONS = ""USING_LAPACK_MKL""; lapack.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapack.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapack.INTERFACE_LINK_LIBRARIES = ""lapk;blas;tgt::MathOpenMP"". -- Found LAPACK MKL: /opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so;... ```. Building then fails with:; ```; [ 90%] Performing configure step for 'psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- LAZ Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516:3247,Release,Release,3247,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516,1,['Release'],['Release']
Deployability, from collections import OrderedDict. def main(argv):; info = OrderedDict(); info['--cc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icc'; info['--cxx'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc' # aka PLUGIN_CXX; info['--fc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/ifort'; info['--version'] = psiver; info['--githash'] = githash; if 'ON' == 'ON':; info['--prefix'] = '/opt/anaconda1anaconda2anaconda3'; else:; info['--prefix'] = '/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl'; info['--top-level-psi4-dir'] = '/scratch/cdsgroup/conda-builds/work'; info['--max-am-eri'] = '4'; info['--python-version'] = '2.7'; info['--has-pcmsolver'] = 'ON'; info['--has-chemps2'] = 'ON'; info['--includes'] = '-I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include' # aka PLUGIN_INCLUDES; info['--defines'] = '-DHAVE_PCMSOLVER -DHAVE_DKH -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H'; info['--ldflags'] = ' -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel' # aka PLUGIN_LDFLAGS. skipping LIBC_INTERJECT; info['--flags'] = '-DRESTRICT=,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172395303:1796,install,install,1796,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172395303,1,['install'],['install']
Deployability," gives you a basic cmake command covering python, sphinx, link-time qc addons, and run-time qc addons. There's a help menu `-h` that gives more info. There's other options that will also pre-configure compilers. For example, at GaTech `psi4-path-advisor --intel` works. On Macs with XCode, `psi4-path-advisor --clang` works. Just read the help. For DGAS, there's an ""--disable"""", but I don't encourage it. It gives you a fully functional cmake command, but those are just setting up CMake cache - like the plugins you can always add your own CMake variables to the command. Plugins from a conda Psi4; -------------------------. Works on Linux. I need to adjust at least cache_pybind11_DIR on Mac. How to bump a version; ---------------------. * 0. **ACTION** Check everything in. * 1. **OBSERVE** Current versioning state. * Be on master of (i) a direct clone or (ii) clone-of-fork with master up-to-date with upstream (including tags!!!) and with upstream as remote. * https://github.com/psi4/psi4/releases says v1.1a1 007a9b6. ```; >>> git tag; v1.0; v1.1a1. >>> cat psi4/metadata.py ; __version__ = '1.1a1'; __version_long = '1.1a1+007a9b6'; __version_upcoming_annotated_v_tag = '1.1a2'. >>> git describe --abbrev=7 --long --always HEAD; v1.1a1-417-gcbee32b. >>> git describe --abbrev=7 --long --dirty; v1.1a1-417-gcbee32b. >>> ./psi4/versioner.py ; Defining development snapshot version: 1.1a2.dev417+cbee32b (computed); 1.1a2.dev417 {master} cbee32b 1.0.0.999 1.0 <-- 1.1a2.dev417+cbee32b. >>> git diff. ```. * Observe that current latest tag matches metadata scipt and git describe, that GH releases matches metadata script, that upcoming in metadata script matches current versioner version. * Note that current tag is ""v1.1a1"". Decide on imminent tag, say ""v1.1rc1"". * 2. **ACTION** Bump tag in code. * Edit current & prospective tag in psi4/metadata.py. Use your decided-upon tag ""v1.1rc1"" and a speculative next tag, say ""v1.1rc2"", and use 7 ""z""s for the part you can't predict. ```; >>> vi ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:3213,release,releases,3213,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['release'],['releases']
Deployability," guess the former is certainly shorter. But primarily I'm wondering; whether one is easier to check than the other regarding whether the; gradient is available. We need to know on a functional-by-functional basis; whether we have analytic gradients or not. If that's much easier to handle; with one style vs the other, that would be an argument for doing it that; way. Then we can decide what to do with the HF cases to make them play; nicely with our desired solution for the DFT ones. David. On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; wrote:. > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > ; > # (a) for HF; > ; > energy(‘scf’); > ; > # (b) for unrestricted HF; > ; > set reference uhf; > energy(‘scf’); > ; > # (c) for B3LYP; > ; > set dft_functional b3lyp; > set reference rks; > energy(‘scf’); > ; > # (d) also for B3LYP; > ; > energy(‘b3lyp’); > ; > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > ; > set dft_functional b3lyp; > energy(‘scf'); > ; > # (e) for unrestricted B3LYP; > ; > set dft_functional b3lyp; > set reference uks; > energy(‘scf’); > ; > # (f) also for unrestricted B3LYP; > ; > set reference uks; > energy(‘b3lyp’); > ; > # (g) also for unrestricted B3LYP (since energy command trumps options,; > ; > uhf gets translated to uks); > set reference uhf; > energy(‘b3lyp’); > ; > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > reference into the energy() call for HF or DFT (though for the latter you’d; > have to use dft_functional keyword.; > ; > Francesco brings up a related and overdue point. If you specify an; > open-shell molecule and no reference, it complains at you b/c rhf (the; > default) is unsuitable. I couldn’t say concretely, but some other programs; > will switch to an appropriate reference for open-shell. For psi4, it would; > have to be rhf/rks because we don’t have roks. T",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110194494:1086,toggle,toggle,1086,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110194494,1,['toggle'],['toggle']
Deployability," in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:10610,install,install,10610,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability," in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 304, in popen\n ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 858, in __init__\n self._execute_child(args, executable, preexec_fn, close_fds,\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 1251, in _execute_child\n args = list2cmdline(args)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 553, in list2cmdline\n for arg in map(os.fsdecode, seq):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\os.py"", line 818, in fsdecode\n filename = fspath(filename) # Does type-checking of `filename`.\nTypeError: expected str, bytes or os.PathLike object, not NoneType\n\n')); ```; From yml install; ```; Collecting package metadata (repodata.json): done; Solving environment: |; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:19<00:29, 3.66s/it]|Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental psi4: 57%|▌| 8/14 [00:22<00:10, \Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 19it [01:02, 3.49Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 20it [01:02, 3.71Examining conflict for matplotlib python: : 20it [01:07, 3.71s/it] failed -; Solving environment: /; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:20<00:30, 3.87s/it]|Examining libblas[build=*mkl]: 64%|█████████████████████████████████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:3406,install,install,3406,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['install'],['install']
Deployability," is not yet released and will not be until I do a few applications and write a paper myself. The recommended version to use is still v1.6 in the meantime and CASPT2 is therefore not supported yet. But that doesn't mean it shouldn't work.; - One important thing is that I haven't made CASPT2 parallel yet. You will have to wait forever when the number of virtuals is modest / large.; - A second important remark is that I also currently use only pseudocanonical orbitals for DMRG-CASPT2, so for elongated molecules you will waste your time at the moment, because the virtual dimension is way smaller by using localized orbitals. But for that I need to implement the full 4-RDM instead of the diagonal one, and that is not for the very near future. The cumulant approximation is also ready on the other hand, but will only be used in conjunction with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1036,release,releases,1036,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,2,['release'],['releases']
Deployability," missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2658,install,installed,2658,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability, module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14178,Install,Install,14178,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," of atoms: 3; Number of AO shells: 5; Number of primitives: 15; Number of atomic orbitals: 7; Number of basis functions: 7. Integral cutoff 1.00e-12; Number of threads: 2. Performing in-core PK; Using 812 doubles for integral storage.; We computed 133 shell quartets total.; Whereas there are 120 unique shell quartets.; 10.83 percent of shell quartets recomputed by reordering.; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 375; Schwarz Cutoff: 1E-12. OpenMP threads: 2; Minimum eigenvalue in the overlap matrix is 4.3422219878E-01.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ^C; Program received signal SIGINT, Interrupt.; 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64 libuuid-2.23.2-33.el7.x86_64; (gdb) bt; #0 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #1 0x00007fffec18dc21 in __kmp_api_GOMP_parallel_40_alias () from /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; #2 0x00007fffe3cab007 in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #3 0x00007fffe3cbb4ae in psi::DFHelper::prepare_AO_core() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #4 0x00007fffe3cbbb99 in psi::DFHelper::initialize() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-384510030:4548,install,install,4548,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030,1,['install'],['install']
Deployability," project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2543,Install,Installing,2543,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability," repository. And it doesn’t allow you to make private a fork of a public repo, though there does seem to be an alternative: https://help.github.com/articles/duplicating-a-repository/ https://help.github.com/articles/duplicating-a-repository/ . And in the beginning we didn’t want everyone to have to pay for storing private repositories if they wanted private forks (moot now since github offers private storage for scientists). That’s more of the history of how the current scheme came to be. I’m open to better schemes, but I think most of our problems can be solved by an automated public/private master sync when safe. Lori. > On May 3, 2015, at 12:18 PM, andysim notifications@github.com wrote:; > ; > It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago whe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1168,release,release,1168,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['release'],['release']
Deployability, resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15467,Install,Install,15467,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1162,Install,Install,1162,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6407,install,install,6407,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability," select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11640,install,install,11640,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3545,Release,Release,3545,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability," to the slack channel. I usually don't use slack, but I'll try to get something set up. > There are different levels of integration. An independent plugin, a deep C-layer integration and a; > python-level integration. Some of the questions depends on what you want to aim for (or need). Well, also depends a bit what you guys have in mind and how deep we want the integration to be. My thoughts:; - A **C-layer integration** is possible, but might be quite hard, since our iterative solvers are written in `python`. Given one falls back to solvers in C from psi4, in theory one can integrate adcc into the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one coul",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:1038,integrat,integration,1038,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['integrat'],['integration']
Deployability," use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12414,Install,Install,12414,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /usr/bin/python3.4 (found version ""3.4.5"") ; -- Found PythonLibs: /usr/lib64/libpython3.4m.so; -- pybind11 v2.0.0; -- Configuring done; -- Generating done; -- Build files have been written to: /usr/qc/psi4.git/objdir/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build. ```. For reasons unknown to me I cannot reproduce my previous compilation error. Previously I could reproduce it even when cloning a brand new copy of psi4. Now it finishes the compilation normally.; Maybe the old psi4 installation directory interfered somehow? Just guessing at this point. However, I still cannot execute psi4. If I use a symlink to the installed binary I get a python error:; ```; import psi4; ImportError: No module named psi4; ```; If I use the full path i get `Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.` instead. But maybe PR https://github.com/psi4/psi4/pull/563 will fix these things for me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:4485,install,installation,4485,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,2,['install'],"['installation', 'installed']"
Deployability," | c-f | | C; qcelemental | yes | | | | psi4 copied from c-f | Py; qcengine | yes | | | | psi4 copied from c-f | Py; ambit | no | psi4 | psi4 | --- | | C++; chemps2 | no | psi4 | psi4 | --- | | C++; dftd3 | no | psi4 | psi4 | psi4 | | Fortran; dkh | no | psi4 | psi4 | --- | | Fortran; gcp | no | psi4 | psi4 | psi4 | | Fortran; gdma | no | psi4 | psi4 | --- | | Fortran; pcmsolver | no | psi4 | psi4 | --- | | C++, Fortran; simint | no | psi4 | psi4 | --- | | C++. * not req'd means present in Linux conda package but not required for a minimal conda package; * gcp should switch to mctc-gcp already on c-f for L but needs a MKL build; * gdma is a little behind in releases b/c psi actually uses a home-adapted library instead of the executable; * pcmsolver latest (v1.3, I think) can't work with psi4 after core-developer of both gave a medium-effort try. But there's a slight problem with previous release v1.2, too, so psi4 uses an unpublished v1.2.1.1 (or something like that). a patch in the conda-recipe from v1.2.1 upstream is probably the better sol'n; * simint is peculiar in that you need to choose a target instruction set at compile time. usual psi default may not be general enough for c-f. ### `psi4-rt`. project | req'd | linux | osx | win | noarch | lang; -----|-----|-----|-----|-----|-----|-----; libtensorlight | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; adcc | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; fockci | no | | | | psi4 | Py; mp2d | no | psi4 | psi4 | --- | | C++; openfermion | no | | | | psi4 | Py; openfermionpsi4 | no | | | | psi4 | Py; pycppe | no | psi4 | psi4 | --- | | C++; pylibefp | no | psi4 | psi4 | --- | | C++; libefp | no | psi4 | psi4 | --- | | C; resp | no | | | | psi4 | Py; snsmp2 | no | | | | psi4 | Py; v2rdm_casscf | no | psi4 | psi4 | --- | | C++, Fortran. * openfermion is better housed on c-f anyways. devs are willing (I have an open issue on this with them). only issue is that they have several o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900:1279,patch,patch,1279,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900,1,['patch'],['patch']
Deployability, |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cann,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4045,Install,Installing,4045,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability," │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5620,install,installed,5620,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6777,install,install,6777,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"""Nightly"" isn't actually nightly, so it's missing some bug fixes. My hunch is that this is the same bug #1938 fixed. In which case, all we can do is tell you to compile from master or wait until we update ""nightly"" again. @bgpeyton, does this look right to you?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1954#issuecomment-658153944:198,update,update,198,https://psicode.org,https://github.com/psi4/psi4/issues/1954#issuecomment-658153944,1,['update'],['update']
Deployability,"""gg"" is ""gau2grid"" which is a required dependency. that's built in to the dep list (search for ""nofortran"" build and click the little ""i"") https://anaconda.org/psi4/psi4/files, so I don't know how mamba let you install that psi4 without gau2grid. I'm not quite sure what you're trying to solve. iirc, the ambertools issue was a libgfortran one, so ideally defaults and c-f would get back in sync. I can build a new nofortran build for you, but not for several days. Alternately, you can try a dual-environment setup keeping psi in a defaults-based env and keeping c-f based deps in a c-f-based env. There's a gha that models that at [github/workflows/ecosys](https://github.com/psi4/psi4/blob/master/.github/workflows/ecosystem.yml). If you continue with the nofortran build, be aware that in psi4 current master, py37 isn't supported, libint is now v2, and libxc is v5.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578#issuecomment-1125631043:211,install,install,211,https://psicode.org,https://github.com/psi4/psi4/issues/2578#issuecomment-1125631043,1,['install'],['install']
Deployability,"# **Upgrade Guide**; ~~wavefunctions must declare a density fitted basis, even if density fitting is not used. This may be ""bypassed"" by selecting zero as the basis, as in:`wfn.set_basisset(""DF_BASIS_SCF"", core.BasisSet.zero_ao_basis_set())`~~; No longer necessary, per #1014 . # **Bug Fixes**; A bug causing IRCs to converge to the initial transition state was fixed (#882)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-388170219:4,Upgrade,Upgrade,4,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-388170219,1,['Upgrade'],['Upgrade']
Deployability,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-386064898:56,update,updates,56,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898,6,"['release', 'update', 'upgrade']","['release', 'updated', 'updates', 'upgrade']"
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8cb0765`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1315/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1315 +/- ##; =========================================; Coverage ? 70.32% ; =========================================; Files ? 1508 ; Lines ? 326837 ; Branches ? 0 ; =========================================; Hits ? 229863 ; Misses ? 96974 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=footer). Last update [8cb0765...ed8cf13](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980:1164,update,update,1164,https://psicode.org,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980,2,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=h1) Report; > Merging [#1671](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=desc) into [master](https://codecov.io/gh/psi4/psi4/commit/7fb7634f7f591a7c53bdf885228731390782df28?src=pr&el=desc) will **not change** coverage.; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1671/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1671 +/- ##; =======================================; Coverage 70.9% 70.9% ; =======================================; Files 1468 1468 ; Lines 316368 316368 ; =======================================; Hits 224327 224327 ; Misses 92041 92041; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=footer). Last update [7fb7634...b61a16b](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011:1172,update,update,1172,https://psicode.org,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011,2,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8d6a59d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1676/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1676 +/- ##; =========================================; Coverage ? 71.08% ; =========================================; Files ? 1468 ; Lines ? 315595 ; Branches ? 0 ; =========================================; Hits ? 224354 ; Misses ? 91241 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=footer). Last update [8d6a59d...aeac164](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321:1164,update,update,1164,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321,2,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@51ebbbd`). ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=footer). Last update [51ebbbd...410be6f](https://codecov.io/gh/psi4/psi4/compare/51ebbbd3257f39b516004b987f2ca650a036c320...410be6f525e84987e109ad06e4af65f2dbc289f0?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/594#issuecomment-276026020:522,update,update,522,https://psicode.org,https://github.com/psi4/psi4/pull/594#issuecomment-276026020,2,['update'],['update']
Deployability,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/960#issuecomment-397056473:230,update,update,230,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473,6,"['install', 'update']","['installing', 'update', 'updates']"
Deployability,"### Conda changes since v1.1; * MKL linked dynamically through free Anaconda-provided `mkl_rt.so` rather than statically linked. This saves size (since NumPy also uses `mkl_rt`) and eliminates incorrect results and threading damping associated with multiple programs accessing BLAS/LAPACK from multiple sources (#748, #755).; * Psi4 no longer installs a non-standard gcc5.2 alongside Psi4 on Linux (or gcc feature on Mac). This was necessary when conda's default 4.8.5 was too low for Psi4's c++11 requirements, but since conda's default has leaped to 7.2.0, we use default again. Note that only libraries (e.g., `libstdc++`) are installed alongside Psi4 now, not compilers (e.g., `g++`).; * (generic, not psi4, conda) `conda activate env` works multishell, not just on `bash`. Since conda 4.4 c. Dec 2017",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-386708662:343,install,installs,343,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386708662,2,['install'],"['installed', 'installs']"
Deployability,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-381256278:4,Upgrade,Upgrade,4,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278,1,['Upgrade'],['Upgrade']
Deployability,"### conda stage (cont.). * build the stack in the usual `***` configuration on L & M. should be (`psi4`, `psi4-rt`, `psi4-dev`) * python_versions for L & M. Also single `psi4-docs` from L.; * Poodle emits with `--label dev` so upload there to the subchannel directly. may need to clear out space.; * Go through each active conda package off https://anaconda.org/psi4/repo, find the most recent build set (L/M, active py versions) that psi/psi-rt/psi-dev is using and _add_ (not replace) the `main` label. this makes a `conda install psi4 -c psi4` get everything psi4 needs. for the moment `conda install psi4 -c psi4/label/dev` will get the same set, until package psi4-1.4a1.dev1 gets uploaded. may help to check versions and build versions against ltrtver in conda_build_config.yaml. this step takes a while. ### constructor stage. * move into constructor_cutter_unified. there's a rEADME there. ; * edit pythons if necessary; * edit release/hash/ltrtver of cookiecutter.json .; * for non-rc's channel_tag should be empty string; * leave git set to a `rc` since that has more details; * copy cookiecutter.json to cookiecutter.json-vXXX; * cookiecutter/{{.../construct.yaml rarely needs editing; * do clear out .constructor so that everyting downloaded afresh; * clean out build/; * python run.py check for an py_ bad noarch pkgs; * if fetching times out, may have to run run.py several times. clear out build/ in between. it's the fetching that takes a long time, not constucting; * in the end, should have several constructors; ```; >>> lh build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluse",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372:62,configurat,configuration,62,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372,8,"['configurat', 'install', 'release']","['configuration', 'install', 'release']"
Deployability,"%> (-9.29%)` | :arrow_down: |; | [psi4/src/psi4/scfgrad/scf\_grad.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9zY2ZncmFkL3NjZl9ncmFkLmNj) | `95.09% <0.00%> (-1.19%)` | :arrow_down: |; | [psi4/src/psi4/liboptions/liboptions.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJvcHRpb25zL2xpYm9wdGlvbnMuY2M=) | `56.26% <0.00%> (-0.91%)` | :arrow_down: |; | [psi4/src/psi4/libmints/vector.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJtaW50cy92ZWN0b3IuY2M=) | `62.27% <0.00%> (-0.60%)` | :arrow_down: |; | [psi4/src/psi4/libfock/points.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9saWJmb2NrL3BvaW50cy5jYw==) | `72.24% <0.00%> (-0.27%)` | :arrow_down: |; | [psi4/src/core.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvY29yZS5jYw==) | `82.19% <0.00%> (-0.25%)` | :arrow_down: |; | [psi4/driver/driver.py](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9kcml2ZXIvZHJpdmVyLnB5) | `79.10% <0.00%> (-0.22%)` | :arrow_down: |; | [psi4/src/psi4/cc/ccenergy/ccenergy.cc](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree#diff-cHNpNC9zcmMvcHNpNC9jYy9jY2VuZXJneS9jY2VuZXJneS5jYw==) | `67.49% <0.00%> (-0.17%)` | :arrow_down: |; | ... and [99 more](https://codecov.io/gh/psi4/psi4/pull/1443/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=footer). Last update [e273d32...a90a350](https://codecov.io/gh/psi4/psi4/pull/1443?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1443#issuecomment-507008299:3344,update,update,3344,https://psicode.org,https://github.com/psi4/psi4/pull/1443#issuecomment-507008299,2,['update'],['update']
Deployability,%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4532,Install,Install,4532,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:4931,install,installed,4931,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"'python=3.8']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:1767,install,installed,1767,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"(B) seconded. All of the tests are total energies / gradients, so I think it's fine to update the reference values, as long as the shifts aren't huge. . Related, the `dft-custom-mgga` could be retired in favour of the interaction/ionisation tests, or is it covering something that those don't?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494030116:87,update,update,87,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494030116,1,['update'],['update']
Deployability,"(developer or user-interest) that this PR has or will; > accomplish.; >; > - Changes ORBSYM (the symmetry of each orbital) from Psi4's internal; > convention of ordering irreps to the traditional FCIDUMP ordering; > - Adds ISYM (the symmetry of the overall wavefunction); > - Updates the fcidump test to match new ordering; >; > Questions; >; > - Does this change in convention break anything in Psi4? (Or anything; > that uses Psi4?); > - Since I altered the tests to match the output, how to verify; > correctness of this change?; >; > Checklist; >; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1453; > Commit Summary; >; > - added helper function, correct ORBSYM output; > - added isym to fcidump, updated tests; >; > File Changes; >; > - *M* psi4/driver/p4util/fcidump.py; > <https://github.com/psi4/psi4/pull/1453/files#diff-0> (29); > - *M* tests/fcidump/Ne.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-1> (3); > - *M* tests/fcidump/Ne.C1.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-2> (1); > - *M* tests/fcidump/Ne.C1.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-3> (1); > - *M* tests/fcidump/Ne.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-4> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1453.patch; > - https://github.com/psi4/psi4/pull/1453.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1453>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdjvy0hVobCbhOq3qA4biT25rt88rks5u_UxTgaJpZM4ZnaXM>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754:1927,Patch,Patch,1927,https://psicode.org,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"(indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasiriann",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1433,install,install,1433,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,") compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4378,Install,Installing,4378,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"); > File ""<string>"", line 30, in <module>; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https:/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1543,patch,patch,1543,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['patch'],['patch']
Deployability,"* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2747,install,installed,2747,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"* Yes, eventually will support `linux-64`, `osx-64`, `osx-arm64`, `win-64` arch. staged-recipes won't have osx-arm64, though.; * Still TBD if Windows psi4 packages will include Fortran addons like dkh, gdma, pcmsolver.; * All arch will be explicitly linked to MKL (that is, `libblas=*=*mkl`). dependencies that themselves need blas/lapack are getting linked generically so runtime selection is an option, but psi4 itself is getting fixed to MKL. I'm open to someday linking psi4 generically, but I think other distributions need to be tested and any performance and oversubscription issues addressed first.; * yes, as Matt says, you have to dig around on Azure, find ""artifacts"", download, and then can install locally (or upload to a separate anaconda.org acct).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483880346:703,install,install,703,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483880346,1,['install'],['install']
Deployability,"* Yes, this sounds like a pybind11 update issue. Any pybind11 update requires a _full_ recompile. But it sounds like you've got that taken care of with the fresh objdir. Fortunately, now that pybind has hit 2.0, we plan to stick with that version, so these problems will be fewer.; * Very observant on the compilers detected for pybind. But it really doesn't matter because ""compilation"" and installation of pybind is just copying a dozen files into place.; * On the python detection, there's two places this could be happening, and one, like the above is irrelevant. It's the second one (in the psi4-core target) that really matters. Could you send me your analogs of the CMake output snippets below? Or send me the whole thing, but it'll have to be both the initial CMake configuration and the psi4-core configuration that runs during the course of the compilation. Psi4 and pybind11 use exactly the same Python detection scheme, so I'm surprised and would like to understand what's happening in your setup.; * As far as actually telling psi4 and cmake what Python to use w/o editing CMakeCache's, I'd recc setting one (EXE) or all of https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L39-L41 . But my impression is that you shouldn't have to. Main CMake configuration; ```; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Found PythonInterp: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/bin/python3.5 (found version ""3.5.2"") ; -- Found PythonLibs: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libpython3.5m.so; -- Found Python 3.5: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/bin/python3.5; -- Suitable CheMPS2 could not be located, Building CheMPS2 instead.; -- Suitable dkh could not be located, Building dkh instead.; -- Found libefp: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/libefp.so (found version 1.3.0); -- Found gdma: /theoryfs2/ds/cdsgroup/miniconda/envs/texternals35/lib/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273512333:35,update,update,35,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273512333,5,"['configurat', 'install', 'update']","['configuration', 'installation', 'update']"
Deployability,"* add to the branch list https://github.com/psi4/psi4/blob/master/.travis.yml#L179; * bump copyright; * tests/runtest.py; * README.md; * https://github.com/psi4/psi4/blob/fbb2ff444490bf6b43cb6e027637d8fd857adcee/doc/sphinxman/source/conf.py.in#L118; * tests/psitest.pl. * (not done) main README updates. * tl;dr for version bump. ```; # be on clean master up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3rc1'; -__version_long = '1.3rc1+5a7522a'; -__version_upcoming_annotated_v_tag = '1.3rc2'; +__version__ = '1.3rc2'; +__version_long = '1.3rc2+zzzzzzz'; +__version_upcoming_annotated_v_tag = '1.3rc3'. >>> git add psi4/metadata.py; >>> git commit -m ""v1.3rc2""; [master bc8d7f5] v1.3rc2. >>> git log --oneline | head -1; bc8d7f5 v1.3rc2; >>> git tag -a v1.3rc2 bc8d7f5 -m ""v1.3rc2"". >>> vi psi4/metadata.py ; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version_long = '1.3rc2+zzzzzzz'; +__version_long = '1.3rc2+bc8d7f5'. >>> git add psi4/metadata.py; >>> git commit -m ""Records tag for v1.3rc2""; [master 16dbd3e] Records tag for v1.3rc2. # goto GH:psi4/psi4 > Settings > Branches > master > Edit; # https://github.com/psi4/psi4/settings/branch_protection_rules/424295; # uncheck ""Include administrators"" and Save changes. >>> git push upstream master; >>> git push upstream v1.3rc2. # re-engage ""Include administrators"" protections. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-463867007:295,update,updates,295,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-463867007,1,['update'],['updates']
Deployability,"* edit RN and ""publish"" release. this establishes release data for GH api; * close off RN issue; * before stack build, consider max pinnings on deps, particularly any fast-moving deps (e.g., qcel) and whether they need version space to grow compatibly and grow incompatibly.; * check in all release, constructor recipe changes on L/M. synchronize both to psi4meta; * reset for normal operation; * new ltrtver with new release.dev label; * names back to master for psi4-multiout, psi4-docs; * build string back to 0 if psi4-multiout needed multiple passes; * poodle back to `***` stack; * crontab back to 2am ""norm"". comment out ""anom"". * new PR with edits to main README badges, py, etc; * tweet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468798867:24,release,release,24,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468798867,4,['release'],['release']
Deployability,"* generating download site directions above; * shift alias to new installs/content file; * NYI commit new files, PR, and upload site. * On GH site ""Draft a New Release"". * grab the 1.3 manual by `cp -pR master 1.3` on godaddy; * NYI adjust the front-matter tags. ## reset; * NYI new ltrt line; * NYI psi4-multi and psi4-docs back to master; * NYI turn off anom and go back to norm",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468650036:66,install,installs,66,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468650036,2,"['Release', 'install']","['Release', 'installs']"
Deployability,"* in final pass before tag, check that `external/` repos and commits match have been updated from conda recipes sources. also check versions with conda_build_config.yaml; * check introduction.rst for any compiler and python min requirements to edit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468092980:85,update,updated,85,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468092980,1,['update'],['updated']
Deployability,"* run `make sphinxman` at least once by hand and check in resulting psifiles.py and all the updated and new `samples/` files and dirs. * figure out any new `Additional Contributors` since last release and edit header.py accordingly. Get their particulars for codemeta.json. invite any >=3 PRs to GH org. * follow the procedure outlined in [cbcy](https://github.com/psi4/psi4meta/blob/master/conda-recipes/conda_build_config.yaml) and [poodle](https://github.com/psi4/psi4meta/blob/master/psinet-nightly/kitandkapoodle.py) (I haven't pushed the versions with enhanced comments) to; * update upstream and downstream deps/addons that may have advanced since last release. edit recipes and psi4 `external/` code.; * rebuild the psi4, psi4-rt, psi4-dev, psi4-docs stack on Linux and Mac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-460674604:92,update,updated,92,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-460674604,4,"['release', 'update']","['release', 'update', 'updated']"
Deployability,"* when publishing a new installer page, move the ""latest"" alias https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md to the new page so that ""Downloads"" on the naviagtion bar points there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-465437366:24,install,installer,24,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-465437366,2,['install'],"['installer', 'installs']"
Deployability,"******. CC integral sort will use 116.60 mb. Number of (ab|cd) temporary files: 2; Number of (ab|ci) temporary files: 3; Starting temporary file number: 270. Initial sort........done. Sort (IJ|KL)........done.; Sort (IJ|KA) 1/2....done.; Sort (IJ|KA) 2/2....done.; Sort (IA|JB)........done.; Sort (IJ|AB)........done.; Sort (IA|BC) 1/3....done.; Sort (IA|BC) 2/3....done.; Sort (IA|BC) 3/3....done.; Sort (AB|CD) 1/2....done.; Sort (AB|CD) 2/2....done. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:43 2017; Module time:; 	user time = 0.42 seconds = 0.01 minutes; 	system time = 0.37 seconds = 0.01 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 5.26 seconds = 0.09 minutes; 	system time = 0.90 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:43 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? no; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 0; Number of active occupied orbitals: 17; Number of active virtual orbitals: 56; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 20.82 mb; memory requirements for QCISD(T) = 19.95 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 43.60 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:11881,Configurat,Configuration,11881,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['Configurat'],['Configuration']
Deployability,"**Update on the Azure CI failures**; The problem seems _not_ to be entirely controllable through flags. Parts of the xtensor stack code base (xtensor itself, xsimd, possibly xtensor-python) need to be changed and I am working on it. Once I have PR submitted to all these projects, they are hopefully merged and new releases minted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1443#issuecomment-487287211:2,Update,Update,2,https://psicode.org,https://github.com/psi4/psi4/pull/1443#issuecomment-487287211,2,"['Update', 'release']","['Update', 'releases']"
Deployability,"**Update**. I've completely replaced the C++-based implementation of PE with a light-weight Python-side version.; Further, I had to bump pybind11 to `v.2.2.4` for the CPPE library to work correctly, and I pinned a release version of CPPE in the `ExternalProject`. So I guess this PR will be ready for merge soon. I'm going to add some simple documentation now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-506426047:2,Update,Update,2,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-506426047,3,"['Update', 'release']","['Update', 'release']"
Deployability,**Update**: Tests now pass in Azure Linux builds including a few quicktests for adcc. I'll proceed to add documentation when I get round to it (I'm a bit busy at the moment).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-555941172:2,Update,Update,2,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-555941172,1,['Update'],['Update']
Deployability,"**user summary**:; This is not a bug that is affecting any DFT calculations currently run with PSI4.; The bug is found in unused code. ---. The radial grid is entirely build with https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L2433. The function supposed to call `build_becke` `build_treutler` is never called, instead a dummy function is called that only populates the `RadialGrid` class, which is never used in `cubature.cc` anyway (looks like it is nowhere used). . On the plus side, the bug fixed with this PR is never encountered. The downside is that the TREUTLER scheme is not entirely correct because at least the eta mapping parameters (`TreutlerEta`) are missing. If `build_treutler` is correct or not, I cannot 100% say. In a quick & dirty fashion I enforced it. _Without_ eta (set to 1.0) all DFT `ctests` pass. That's good!; I added the missing eta parameters with updated BS radii a while ago, but didn't notice that the etas changed nothing. I thought the effect was just too small. But there is a very minor one. Including the etas has 11 of 37 tests fail. (Did not run the pytests). I will refactor `cubature.cc` ..somehow.. in the near future. ---. I will approve & merge tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400:906,update,updated,906,https://psicode.org,https://github.com/psi4/psi4/pull/2044#issuecomment-745602400,1,['update'],['updated']
Deployability,*Psi4* 1.3.2 packages for *Windows*!. Installation:; ```; conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2; ```; The 1.3.2 version for *Windows* is actually: https://github.com/psi4/psi4/tree/v1.3.2 + #1648 = https://github.com/raimis/psi4/commit/82e852b7e61f9813a665e1f6f35203d01e5fb1b9. Build logs:; - *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=737; - *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=738,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-494354023:38,Install,Installation,38,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494354023,2,"['Install', 'install']","['Installation', 'install']"
Deployability,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-461430448:118,pipeline,pipeline,118,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448,4,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,"*kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; > ciwfn = core.detci(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1021#issuecomment-388980081>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdoBl5TkzfuztMHuD5aseZ9qEjGVeks5tygHBgaJpZM4T-hi0>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:12758,install,install,12758,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,"+1 to installing both at the same time, ideally just at environment creation",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3046#issuecomment-1706690051:6,install,installing,6,https://psicode.org,https://github.com/psi4/psi4/issues/3046#issuecomment-1706690051,1,['install'],['installing']
Deployability,", it has minimal, run-time libraries, not compilers, though, for linux, full gcc and run-time gcc are the same. It doesn't have the run-time qc addons (e.g., dftd3). psi4-deps - does not have psi4 itself (though fine to install it alongside). Does have all the link-time and run-time addons. Does have cmake and sphinx (and python). Of gcc-ness, has full packages, that is, compilers, not runtime packages. installer - has full-featured psi4 itself, all link-time qc addons, all run-time qc addons, and minimal gcc runtime libraries. How to just get Psi4 with minimal conda interaction; ---------------------------------------------------. Download one of the six installers (Linux/Mac; Py27, 35, 36; presently at http://vergil.chemistry.gatech.edu/download/). `bash` it. Follow the prompts and _do_ make the adjustments to PATH and PSI_SCRATCH that it suggests at the end. Test with `psi4 --test`. Done. How to get a pre-build Psi4 into a conda environment of an existing Ana/Miniconda installation; ----------------------------------------------------------------------------------------------. `conda create -n p4env python=x.x psi4 psi4-deps -c psi4/label/devel -c psi4`. Same for Mac/Linux. Substitute desired python version: 2.7, 3.5, 3.6. Only reason for psi4-deps is to get the qc runtime addons; could say ""dftd3 gcp v2rdm_casscf"" instead of ""psi4-deps""; or leave them out if you don't want them. Activate environment and make the adjustmets to PATH and PSI_SCRATCH that it suggests at the end. Test with `psi4 --test`. How to use all those conda packages to compile Psi4 faster and easier; ---------------------------------------------------------------------. `conda create -n p4deps python=x.x psi4-deps -c psi4`. Same for Mac/Linux. Substitute desired python version: 2.7, 3.5, 3.6. Fine to choose your own env name. Activate environment, `source activate p4deps`. Go to where you've cloned psi4. Execute `psi4-path-advisor`. It gives you a basic cmake command covering python, sphinx, l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:1260,install,installation,1260,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['install'],['installation']
Deployability,", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:9048,install,install,9048,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,", post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:2571,install,install,2571,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"- I never had the plugins working yet. I was going to do that after I had the external projects all working (still working on chemps2).; - I go back and forth on what to do with external dependencies. Fully installing them is certainly an option. On the other hand I like the idea of keeping it somewhat separate in case the user wants to later install a hand optimized version of that library,.; - We already should be able to detect them if they were compiled statically. For the libraries I wrapped we certainly can force static builds, but it may be hard for other libraries if they don't support that.; - I'll take a look at the new python based version and see if I can get it to work",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235604777:207,install,installing,207,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235604777,2,['install'],"['install', 'installing']"
Deployability,"- If we don't want to install fsapt I can add an exclusion; - I'll add an exclusion for that too; - It's the Python interface. That's a super non normal install location for Linux, so I prefer that when you do the Conda-binary tweak the `CMAKE_INSTALL_LIBDIR` variable. Side note, we have to decide whether we are only distributing `psi4.so` or all libraries. In theory, it would be nice to move each libraries' Python interface into its library and treat each as an individual module. Alternatively, if we only want to distribute `psi4.so` then we may want to explore compiling all the source into a single library (i.e. don't have the intermediate libraries like mints,scf_solver, etc.). CMake tracks rebuilding on a file by file basis so this shouldn't add any time to recompilation (in fact it may shorten them as it may allow for better dependency tracking).; - Actually it should. When I do `find_package` Psi4, Psi4 needs those scripts to configure itself; - An oversight ; - What versioning is missing?; - Quite frankly I don't like having both samples and tests, it's a ton of code duplication. I hadn't been worrying about samples so they've been along for the ride (and got messed up with the folder shuffle somehow); - If you mean `setup.py`, feel free to write it, but in my opinion it is again code duplication, I had envisioned this as the final interface. On my laptop I install with:. ``` .sh; cmake -Bbuild -H.; make; make install ; ```. I feel like that's as nice as it gets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-234531219:22,install,install,22,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-234531219,4,['install'],['install']
Deployability,"- Very cool. I'm not sure exactly if I'd be able to make that work for my plugin, because so many of the things are still either `icc/icpc` specific or tied to your build machine, but it will make getting the info out easier.; - Using conda's `info/has_prefix` / string replacement stuff for relocatable build, I assume some of strings will get modified on installation to point to the proper place.; - I'm not a collaborator on the psi4/psi4 issue tracker, so I can't see that issue. But if anyone on your team wants to take the RESP plugin and modify or improve it, that would be great.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172396551:357,install,installation,357,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172396551,1,['install'],['installation']
Deployability,"- [ ] Beyond just debug/release CMake build type, have a ""profiling"" build where both debugging and optimization are enabled. This is required if one wants to run perf/Vtune and get meaningful results. With modern compilers the debugging symbols contain enough information that compiler optimizations do not make debugging/profiling impossible.; - [ ] Investigate the possibility of building everything with LTO. Possible benefits: smaller binary sizes, performance improvement, unused functions are automatically stripped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-1228529965:24,release,release,24,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-1228529965,1,['release'],['release']
Deployability,"- [ ] Rename the `DFTGrid` class to `IntegrationGrid`. As written, it's confusing that non-DFT classes use it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2412#issuecomment-1123731523:37,Integrat,IntegrationGrid,37,https://psicode.org,https://github.com/psi4/psi4/issues/2412#issuecomment-1123731523,1,['Integrat'],['IntegrationGrid']
Deployability,-- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12893,Install,Install,12893,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"---------------------. Works on Linux. I need to adjust at least cache_pybind11_DIR on Mac. How to bump a version; ---------------------. * 0. **ACTION** Check everything in. * 1. **OBSERVE** Current versioning state. * Be on master of (i) a direct clone or (ii) clone-of-fork with master up-to-date with upstream (including tags!!!) and with upstream as remote. * https://github.com/psi4/psi4/releases says v1.1a1 007a9b6. ```; >>> git tag; v1.0; v1.1a1. >>> cat psi4/metadata.py ; __version__ = '1.1a1'; __version_long = '1.1a1+007a9b6'; __version_upcoming_annotated_v_tag = '1.1a2'. >>> git describe --abbrev=7 --long --always HEAD; v1.1a1-417-gcbee32b. >>> git describe --abbrev=7 --long --dirty; v1.1a1-417-gcbee32b. >>> ./psi4/versioner.py ; Defining development snapshot version: 1.1a2.dev417+cbee32b (computed); 1.1a2.dev417 {master} cbee32b 1.0.0.999 1.0 <-- 1.1a2.dev417+cbee32b. >>> git diff. ```. * Observe that current latest tag matches metadata scipt and git describe, that GH releases matches metadata script, that upcoming in metadata script matches current versioner version. * Note that current tag is ""v1.1a1"". Decide on imminent tag, say ""v1.1rc1"". * 2. **ACTION** Bump tag in code. * Edit current & prospective tag in psi4/metadata.py. Use your decided-upon tag ""v1.1rc1"" and a speculative next tag, say ""v1.1rc2"", and use 7 ""z""s for the part you can't predict. ```; >>> vi psi4/metadata.py. >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; index 5d87b55..6cbc05e 100644; --- a/psi4/metadata.py; +++ b/psi4/metadata.py; @@ -1,6 +1,6 @@; -__version__ = '1.1a1'; -__version_long = '1.1a1+007a9b6'; -__version_upcoming_annotated_v_tag = '1.1a2'; +__version__ = '1.1rc1'; +__version_long = '1.1rc1+zzzzzzz'; +__version_upcoming_annotated_v_tag = '1.1rc2'. >>> git add psi4/metadata.py. >>> git commit -m ""v1.1rc1""; ```. * 3. **OBSERVE** Undefined version state. ```; >>> git describe --abbrev=7 --long --always HEAD; v1.1a1-418-g6100822. >>> git describe --abbrev=7 --",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:3811,release,releases,3811,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['release'],['releases']
Deployability,---------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3476,Install,Installing,3476,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"---; libint2 | yes | psi4 | psi4 | psi4 | | C++; libxc | yes | psi4 | psi4 | c-f | | C; gau2grid | yes | psi4 | psi4 | c-f | | C; qcelemental | yes | | | | psi4 copied from c-f | Py; qcengine | yes | | | | psi4 copied from c-f | Py; ambit | no | psi4 | psi4 | --- | | C++; chemps2 | no | psi4 | psi4 | --- | | C++; dftd3 | no | psi4 | psi4 | psi4 | | Fortran; dkh | no | psi4 | psi4 | --- | | Fortran; gcp | no | psi4 | psi4 | psi4 | | Fortran; gdma | no | psi4 | psi4 | --- | | Fortran; pcmsolver | no | psi4 | psi4 | --- | | C++, Fortran; simint | no | psi4 | psi4 | --- | | C++. * not req'd means present in Linux conda package but not required for a minimal conda package; * gcp should switch to mctc-gcp already on c-f for L but needs a MKL build; * gdma is a little behind in releases b/c psi actually uses a home-adapted library instead of the executable; * pcmsolver latest (v1.3, I think) can't work with psi4 after core-developer of both gave a medium-effort try. But there's a slight problem with previous release v1.2, too, so psi4 uses an unpublished v1.2.1.1 (or something like that). a patch in the conda-recipe from v1.2.1 upstream is probably the better sol'n; * simint is peculiar in that you need to choose a target instruction set at compile time. usual psi default may not be general enough for c-f. ### `psi4-rt`. project | req'd | linux | osx | win | noarch | lang; -----|-----|-----|-----|-----|-----|-----; libtensorlight | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; adcc | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; fockci | no | | | | psi4 | Py; mp2d | no | psi4 | psi4 | --- | | C++; openfermion | no | | | | psi4 | Py; openfermionpsi4 | no | | | | psi4 | Py; pycppe | no | psi4 | psi4 | --- | | C++; pylibefp | no | psi4 | psi4 | --- | | C++; libefp | no | psi4 | psi4 | --- | | C; resp | no | | | | psi4 | Py; snsmp2 | no | | | | psi4 | Py; v2rdm_casscf | no | psi4 | psi4 | --- | | C++, Fortran. * openfermion is better hous",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900:1195,release,release,1195,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900,1,['release'],['release']
Deployability,". Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound.; > ; > program fc scf singles mp2corl mp2tot; > occ fc -25.94361432 -0.00068837 -0.05940725 -26.00302157; > detci fc -25.94361432 -0.06094168 -26.00455600; > qchem fc -25.94361432 -0.00068837 -0.05940725 -26.00302157; > molpro fc -25.94361432 -0.00054735 -0.05936497 -26.00297929; > $molecule; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > $end; > ; > $rem; > JOBTYPE sp; > unrestricted false; > n_frozen_core fc; > scf_guess sad; > BASIS cc-pVdZ; > basis2 6-31g; > correlation mp2; > THRESH 12; > SCF_CONVERGENCE 8; > SYM_IGNORE TRUE; > SYMMETRY FALSE; > MEM_TOTAL 1600; > MEM_STATIC 512; > INTEGRALS_BUFFER 512; > MAX_SCF_CYCLES 200; > $end; > molecule bh_h2p {; > 1 2; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > set basis cc-pvdz; > set scf_type pk; > set mp2_type conv; > set guess sad; > set freeze_core true; > set e_convergence 8; > set d_convergence 7; > set reference rohf; > ; > set qc_module detci # toggle detci/occ; > energy('mp2'); > memory,200,m; > nosym; > noorient; > angstrom; > geometry={; > B 0.10369114 0.00000000 0.00000000; > H -1.13269886 0.00000000 0.00000000; > H 3.00000000 0.37149000 0.00000000; > H 3.00000000 -0.37149000 0.00000000; > }; > ; > GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9; > ; > SET,CHARGE=1; > SET,SPIN=1; > ; > basis=cc-pVDZ; > ; > rhf; > rccsd; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/311.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/311#issuecomment-195804600:1843,toggle,toggle,1843,https://psicode.org,https://github.com/psi4/psi4/issues/311#issuecomment-195804600,1,['toggle'],['toggle']
Deployability,". Use `void xc_func_set_ext_params_name(xc_func_type *p, const char *name, double par);` i.e.; ```; xc_func_set_ext_params_name(func, ""_omega"", value_of_omega);; ```; > Now only the ft97 is a problem among ctests. pytests were clean before, but I'll check again. I've never seen anyone use that functional. It looks like it uses `GGA_X_FT97_B` and `GGA_C_FT97`. The latter appears to misbehave, https://gitlab.com/libxc/libxc/-/issues/275. > Are any of these now available in v5.1 that I should be activating?; > ; > ```; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: B3TLAP not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: BP86VWN not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: LDA0 not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: CAM-LDA0 not in Psi4. LDA0 and CAM-LDA0 are introduced in the upcoming 5.1.0. . I can probably also add P86VWN; it's a trivial modification. https://gitlab.com/libxc/libxc/-/issues/277. > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: LRC-BOP not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: PBEsol not in Psi4. PBEsol has been in libxc for ages, since version 2.1.0 released in March 2014. I've opened up a ticket on LRC-BOP (https://gitlab.com/libxc/libxc/-/issues/276); it might not make it to the next release. > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: t-HCTH not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: t-HCTHh not in Psi4. These have also been in libxc for ages, since version 4.0.0 in 2017. `MGGA_X_TAU_HCTH`+`MGGA_C_TAU_HCTH` and `HYB_MGGA_X_TAU_HCTH`+`MGGA_C_HYB_TAU_HCTH`. > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: wM05-D not in Psi4.; > SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: wM06-D3 not in Psi4. These are the range-separated Minnesota functionals by Chai et al, for which we've had a tracker open for a while https://gitlab.com/libxc/libxc/-/issues/180",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755266459:1515,release,released,1515,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755266459,4,['release'],"['release', 'released']"
Deployability,". may need to clear out space.; * Go through each active conda package off https://anaconda.org/psi4/repo, find the most recent build set (L/M, active py versions) that psi/psi-rt/psi-dev is using and _add_ (not replace) the `main` label. this makes a `conda install psi4 -c psi4` get everything psi4 needs. for the moment `conda install psi4 -c psi4/label/dev` will get the same set, until package psi4-1.4a1.dev1 gets uploaded. may help to check versions and build versions against ltrtver in conda_build_config.yaml. this step takes a while. ### constructor stage. * move into constructor_cutter_unified. there's a rEADME there. ; * edit pythons if necessary; * edit release/hash/ltrtver of cookiecutter.json .; * for non-rc's channel_tag should be empty string; * leave git set to a `rc` since that has more details; * copy cookiecutter.json to cookiecutter.json-vXXX; * cookiecutter/{{.../construct.yaml rarely needs editing; * do clear out .constructor so that everyting downloaded afresh; * clean out build/; * python run.py check for an py_ bad noarch pkgs; * if fetching times out, may have to run run.py several times. clear out build/ in between. it's the fetching that takes a long time, not constucting; * in the end, should have several constructors; ```; >>> lh build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh; ```. * use command in readme to upload to vergil; * log in to vergil to make windows wsl symlinks. * worth downloading at least one L and M and installing it and running tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372:2235,install,installing,2235,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372,2,['install'],['installing']
Deployability,.) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_pcmsolver SKIPPED (Not detecting module pcmsolver. Install package if necessar...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6080,Install,Install,6080,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,...) [ 56%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[libint2] PASSED [ 58%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_integrals[simint] SKIPPED (Not detecting module simint. Install package if nec...) [ 60%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_json PASSED [ 61%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if ne...) [ 63%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_grimme_3c PASSED [ 65%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable ...) [ 67%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to e...) [ 69%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enabl...) [ 70%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary ...) [ 72%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enabl...) [ 74%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_mdi.py::test_mdi_water SKIPPED (Not detecting module mdi. Install package if necessary to enable tests.) [ 76%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py::test_spacious_option PASSED [ 78%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 80%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PA,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:6521,Install,Install,6521,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5232,install,install,5232,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524,1,['install'],['install']
Deployability,".8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.9']. pkgs/r/linux-64 No change; pkgs/main/linux-64 No change; pkgs/main/noarch No change; psi4/noarch No change; pkgs/r/noarch No change; psi4/linux-64 No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:3242,install,install,3242,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['install']
Deployability,.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:708: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_mdi.py:11: Not detecting module mdi. Install package if necessary to,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16489,Install,Install,16489,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,".get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5412,install,install,5412,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,".py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; type_val = set_cholesky_from('MP2_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: DFOCC requires SCF_TYPE = DISK_DF; ```; 8. CI; - CISD/cc-pVDZ: **ALL FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:8866,install,install,8866,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,".so.1 (0x00007f1a72ec0000); libgcc_s.so.1 => /cluster/apps/gcc/5.2.0/lib64/libgcc_s.so.1 (0x00007f1a72caa000); libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f1a72a8c000); libc.so.6 => /lib64/libc.so.6 (0x00007f1a726f8000); libutil.so.1 => /lib64/libutil.so.1 (0x00007f1a724f5000); /lib64/ld-linux-x86-64.so.2 (0x00007f1a78d6a000); libgfortran.so.3 => /cluster/apps/gcc/5.2.0/lib64/libgfortran.so.3 (0x00007f1a721d5000); librt.so.1 => /lib64/librt.so.1 (0x00007f1a71fcd000); libquadmath.so.0 => /cluster/apps/gcc/5.2.0/lib/../lib64/libquadmath.so.0 (0x00007f1a71d8d000); [sfux@develop01 x86_64]$ ; ```. I did a quick test with. ```; #! Sample UHF/6-31G** CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'); ```; to verify that the installation does not crash on startup. So far everything looks fine. I have a comment about the shebang line in the psi4 python script. After the installation it was set to an absolute path:. #!/cluster/apps/python/2.7.12/x86_64/bin/python. On larger clusters, there are usually multiple python versions installed in non-standard locations. Therefore when I install executable python scripts on our cluster, I usually change the shebang line to. #!/usr/bin/env python. This way, it takes the first python interpreter that is found in $PATH. This can be convenient for systems with multiple python versions. On our cluster, we use environment modules to manage different versions of the same software. If I have a python script with the generic shebang line, I can choose the Python interpreter by loading the corresponding module; ```. [sfux@euler04 ~]$ module load python/2.7.6; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.6; [sfux@euler04 ~]$ module purge; [sfux@euler04 ~]$ module load new python/2.7.9; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.9; [sfux@euler04 ~]$ module ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275104849:1797,install,installation,1797,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275104849,1,['install'],['installation']
Deployability,".txt (with just ambit added as an extra option). Adding gpu_dfcc into the build (and restarting from scratch with CMAKE_CUDA_COMPILER, CUDA_TOOLKIT_ROOT_DIR, and c and c++ compilers set to gcc-4.9) fails when building with:; ```; [ 82%] Performing configure step for 'gpu_dfcc_external'; loading initial cache file /home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/tmp/gpu_dfcc_external-cache-Release.cmake; -- Psi4 script: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/bin/psi4; -- Psi4 headers: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/include; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure' fai",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:1088,configurat,configuration,1088,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,1,['configurat'],['configuration']
Deployability,"/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 40, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1558, in run_dfocc; > type_val = set_cholesky_from('MP2_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1540, in set_cholesky_from; > raise ValidationError("" DFOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: DFOCC requires SCF_TYPE = DISK_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC E",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:8914,install,install,8914,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability,/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/numpy.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pybind11.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/pytypes.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-g,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:3150,Install,Installing,3150,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; > 6. FNOCC; > - QCISD(T)/cc-pVDZ: *ENERGY FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > re",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:7331,install,install,7331,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability,"/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:7782,install,install,7782,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/embed.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/functional.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/iostream.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2850,Install,Installing,2850,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability,"0) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enable Flexiblas support from Fedora (#2246) ; ; Bug Fixes ; --------- ; ; - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#1815) ; - Fix to omp call (#1823) ; - Handle very bad linear dependencies (#1844) ; - Fixes to vibrational analysis (#1845) ; - Fix threading in SAPT CPHF (#1849) ; - Fix MP2 handling of 1-electron cases (#1857) ; - Replace seg fault with error in DETCI and DFOCC (#1858, #1861) ; - Fix printing of custom basis sets in banner (#1880) ; - Remove omp_set_nested (#1883) ; - Fix seg fault in CCEnergyWavefunction::rotation() (#1887) ; - Threading fix in ESP potential build (#1900) ; - Proper computation of TDMs from DETCI (#1910) ; - Close DETCI files (#1926) ; - Fix UHF after RHF CCSD gradient crash (#1928) ; - Fix ECPa f-electron combinations (#1930) ; - Keep default_psio_manager alive (#1933) ; - Fix printing of coordinates (#1938) ; - Fixes to Treutler gcc5 (#1945) ; - Fix string setting in options (#1955) ; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:6392,Patch,Patches,6392,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Patch'],['Patches']
Deployability,"0395757 -0.003634444122; @IRC 11 -92.852777598444 -0.003517202687; @IRC 12 -92.856140015989 -0.003362417545; @IRC 13 -92.859308223013 -0.003168207024; @IRC 14 -92.862250220465 -0.002941997452; @IRC 15 -92.864943075409 -0.002692854944; @IRC 16 -92.867368006399 -0.002424930990; @IRC 17 -92.869505711996 -0.002137705597; @IRC 18 -92.871329201900 -0.001823489904; @IRC 19 -92.872798961306 -0.001469759406; @IRC 20 -92.873862613736 -0.001063652429; @IRC 21 -92.874464128325 -0.000601514589; @IRC 22 -92.874561860949 -0.000097732624; @IRC 23 -92.874559174537 0.000002686412; @IRC 24 -92.874584188151 -0.000025013614; @IRC 25 -92.874518478044 0.000065710108; @IRC 26 -92.874584083068 -0.000065605025; @IRC 27 -92.874584016106 0.000000066962; @IRC ----------------------------------------------; ```. Compared to the reference from 2017, the first step has an energy difference on the order of 1e-4, and the energy difference remains at or below 1e-4 up to step 22. If I had to guess, this is due to PR #1663, where I fixed an error in the initial displacement for the IRC. At step 22, the geometry is very close to the minimum, so the next step ends up raising the energy. The two IRCs then bounce around, with the reference IRC bouncing in the fourth decimal place and the current IRC bouncing in the fifth. This is enough bounce for the final energies to be outside convergence criteria. Unless somebody has the time and drive to improve the IRC termination cutoff in C-Optking, I recommend changing the reference value for now and investigating this in Py-Optking, whenever that comes out. Meanwhile, I have most of the occ tests fixed locally, but `ocepa-grad2` is proving more difficult. My Psi4Numpy converges with no problems, so the issue probably isn't in the coupled-DIIS approach itself... My current guess is that it's the fact that the ""residuals"" `occ` throws into DIIS aren't the residuals but the residuals divided by the MPPT-like denominators from the standard amplitude update algorithm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226:3006,update,update,3006,https://psicode.org,https://github.com/psi4/psi4/issues/1793#issuecomment-592806226,1,['update'],['update']
Deployability,"1) Cool. 2) I discussed this with @lothian, who seemed fine with it (it involves no; changes to his code :) So, I think we're settled unless anyone else has; objections. I agree there needs to be some thought about returning SO vs MO densities; --- different quantities will be needed in different circumstances. Your; proposed solution seems reasonable. Probably we should review all the; cases where densities are wanted. On Sat, Nov 12, 2016 at 10:34 AM, Daniel Smith notifications@github.com; wrote:. > @CDSherrill https://github.com/CDSherrill; > 1) It should always be in the SO basis. Apologies this was answered; > elsewhere.; > ; > 2) If we are set on this on I can patch up the CI code and add patch; > notes. The ""CI DIPOLE X"" is the followed root or the dipole from the state; > averaged density depending on user specifications.; > ; > We also need to think about the psi4/driver/driver.py:molden function and; > #504 https://github.com/psi4/psi4/issues/504. properties is now; > guaranteed to return an updated SO basis density; however, the current; > molden function requires a MO density. We could have a simple switch on; > that function that indices if the incoming density is in the AO or MO basis; > and transform accordingly.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/506#issuecomment-260128691, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdnGO262FwLyE6w4D5rdgQvLpsDC3ks5q9dxpgaJpZM4Krp5j; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260131914:675,patch,patch,675,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260131914,6,"['patch', 'update']","['patch', 'updated']"
Deployability,"1) I would lean towards a Psi compiled one so that we know exactly what its doing and how it works. I think if anyone is tweaking `dftd3` they can handle a python-based system call.; 2) No reason not to patch it IMO, only difference between the two is more keywords after the patch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/383#issuecomment-220617126:203,patch,patch,203,https://psicode.org,https://github.com/psi4/psi4/pull/383#issuecomment-220617126,2,['patch'],['patch']
Deployability,"1-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4162,Install,Installing,4162,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"1. Psi doesn't tabulate these, and I've mostly seen them for DFT. Scaling factors handy for getting oriented with a vib spectrum, but they're not uniquely determined for a method/basis.; 2. Yes, IR intensities are available as of psi4 1.6 in late May provided analytic gradients are available (as opposed to Hessian by finite difference of energies).; 3. I'm not sure what ""mode"" you were looking at. I can clarify if you post a link. Once upon a time, there was a `frequency(..., mode=(continuous|sow|reap))` but that had to do with farming out finite difference jobs and is now defunct anyways. There's `irrep` https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1511-L1517 that allows a partial frequency job for only a symmetry subset. Example here https://github.com/psi4/psi4/blob/master/tests/fd-freq-gradient/input.dat#L75 . There's no singling out of particular modes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2698#issuecomment-1225919509:487,continuous,continuous,487,https://psicode.org,https://github.com/psi4/psi4/issues/2698#issuecomment-1225919509,1,['continuous'],['continuous']
Deployability,"1. Thanks for the update! What is the other library that has those capabilities? I can look into this, sounds helpful.; 2. I'm using Psi4 version 1.9.1. Should I be updating it to something else for more stability analysis capabilities?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236#issuecomment-2444497182:18,update,update,18,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2444497182,1,['update'],['update']
Deployability,"1.) Thank you, I read it from a graduate student thesis I remember summarizing it with different levels of basis sets and theories but definitely needed some validation on that front. . 2.) Awesome I will give it a shot and check it out, let you know if I run into any problems. . 3.) `mode=(continuous|sow|reap))` ah I think I got confused on the parameter meant. I thought it was a way to single out individual modes. . This is great and moves me a long! Thank you!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2698#issuecomment-1226074577:292,continuous,continuous,292,https://psicode.org,https://github.com/psi4/psi4/issues/2698#issuecomment-1226074577,1,['continuous'],['continuous']
Deployability,"1.0.0|1.0.24|...|1.0rc216] would require; │ └─ pychemps2 >=1.7.1 with the potential options; │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ pychemps2 1.7.1 would require; │ │ └─ chemps2 1.7.1 , which requires; │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.8.3 would require; │ └─ chemps2 1.8.3 , which requires; │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ └─ python 2.7* with the potential options; │ ├─ python [2.7.13|2.7.14] would require; │ │ └─ openssl 1.0.* , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ ├─ python [2.7.14|2.7.15] would require; │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ ├─ python 2.7.14 would require; │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ ├─ python 2.7.15 would require; │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ ├─ python 2.7.16 would require; │ │ └─ openssl >=1.1.1b,<1.1.2a , which can be installed;; │ ├─ python [2.7.16|2.7.17] would require; │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ └─ python 2.7.18, which can be installed;; ├─ psi4 1.1+add49b9 would require; │ └─ gcc-5-mp , which requires; │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ └─ blas 1.0 mkl, which can be installed;; └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; └─ pychemps2 1.7.1 , which cannot be installed (as previously explained).; `",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:8453,install,installed,8453,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,9,['install'],['installed']
Deployability,1.2 release notes updated. As this is likely the final version please read through them and ensure that all changes have been properly added!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-397891870:4,release,release,4,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-397891870,2,"['release', 'update']","['release', 'updated']"
Deployability,"1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6092,install,installed,6092,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,1.2rc2 was tagged last week. Please try it out and report problems here on GitHub. Linux installers and packages available from http://vergil.chemistry.gatech.edu/nu-psicode/install-v1.2rc2.html .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/960#issuecomment-391862109:89,install,installers,89,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-391862109,2,['install'],"['install-', 'installers']"
Deployability,"1.3.1 on 1.3.x branch is assembled [compare](https://github.com/psi4/psi4/compare/v1.3...1.3.x) and its draft RN [here](https://github.com/psi4/psi4/releases/tag/untagged-d9164f626682f599d037). It fully passes CI locally. I'll spin up the c-b stack for testing, but windows for adding stuff is pretty much today, Wednesday.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-481804831:149,release,releases,149,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-481804831,1,['release'],['releases']
Deployability,"10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2195,install,installed,2195,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be instal",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5359,install,installed,5359,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"146fbbc437223786b7c970b50ddd2969be80d3fd.; Sorry, this should be a fully updated psi4. Last commit was 1/6/2017.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565#issuecomment-271911488:73,update,updated,73,https://psicode.org,https://github.com/psi4/psi4/issues/565#issuecomment-271911488,1,['update'],['updated']
Deployability,"2017-01-24 09:28:13.812117187 +0100; ***************; *** 73,78 ****; --- 73,93 ----; set(ATLAS_LAPACK_LIBS atlas lapack); ; #-------------------------------------------------------------------------------; + # OPENBLAS; + ; + set(OPENBLAS_BLAS_INCLUDE_PATH_SUFFIXES); + set(OPENBLAS_LAPACK_INCLUDE_PATH_SUFFIXES); + ; + set(OPENBLAS_BLAS_HEADERS cblas.h openblas_config.h f77blas.h); + set(OPENBLAS_LAPACK_HEADERS lapacke.h lapacke_config.h lapacke_mangling.h lapacke_utils.h); + ; + set(OPENBLAS_BLAS_LIBRARY_PATH_SUFFIXES openblas); + set(OPENBLAS_LAPACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAPACK_LIBS openblas); + ; + #-------------------------------------------------------------------------------; # MKL; ; set(MKL_BLAS_INCLUDE_PATH_SUFFIXES); [sfux@develop01 psi4]$ ls; cdash CMakeAddOpenBLAS.patch _conda_vers.py doc LICENSE plugins README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:2365,patch,patch,2365,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['patch'],['patch']
Deployability,2:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:3706,Install,Installing,3706,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability,"2_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5416,install,installable,5416,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installable']
Deployability,"3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enable Flexiblas support from Fedora (#2246) ; ; Bug Fixes ; --------- ; ; - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#18",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:4142,Update,Update,4142,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Update'],['Update']
Deployability,"35,7 +135,7 @@ if route == 2:; """"""); user_obedient = False; while not user_obedient:; - Nrxn = raw_input(' Nrxn = ').strip().lower(); + Nrxn = input(' Nrxn = ').strip().lower(); if Nrxn.isdigit():; Nrxn = int(Nrxn); user_obedient = True; @@ -174,10 +174,7 @@ for xyzfile in (glob.glob('*.' + fext) + glob.glob('*.p4m')):; f.close(); ; # use Molecule object to read geometry in xyz file; - if xyzfile.endswith(fext):; - mol = qcdb.Molecule.init_with_xyz(xyzfile, no_com=True, no_reorient=True); - else:; - mol = qcdb.Molecule(''.join(text)); + mol = qcdb.Molecule.from_string(''.join(text), fix_com=True, fix_orientation=True); Nsyst = mol.natom(); ; # alter second line; @@ -203,8 +200,7 @@ for xyzfile in (glob.glob('*.' + fext) + glob.glob('*.p4m')):; ; if route == 3 and mol.nfragments() == 1:; ; - frag_pattern = mol.BFS(); - mol = mol.auto_fragments(); + frag_pattern, mol = mol.BFS(return_molecule=True); Nmol1 = mol.fragments[0][1] - mol.fragments[0][0] + 1; Nmol2 = mol.fragments[1][1] - mol.fragments[1][0] + 1; ; (p4dev37) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir37/asdf: (mp2d) git diff ../../psi4/driver/qcdb/psiutil.py; diff --git a/psi4/driver/qcdb/psiutil.py b/psi4/driver/qcdb/psiutil.py; index abb8e76..76eb6a7 100644; --- a/psi4/driver/qcdb/psiutil.py; +++ b/psi4/driver/qcdb/psiutil.py; @@ -291,7 +291,7 @@ def compare_arrays(expected, computed, digits, label, verbose=1):; ; ; def query_yes_no(question, default=True):; - """"""Ask a yes/no question via raw_input() and return their answer.; + """"""Ask a yes/no question via input() and return their answer.; ; *question* is a string that is presented to the user.; *default* is the presumed answer if the user just hits <Enter>.; @@ -316,7 +316,7 @@ def query_yes_no(question, default=True):; ; while True:; sys.stdout.write(question + prompt); - choice = raw_input().strip().lower(); + choice = input().strip().lower(); if default is not None and choice == '':; return default; elif yes.match(choice):; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1367#issuecomment-441157772:3319,release,release,3319,https://psicode.org,https://github.com/psi4/psi4/issues/1367#issuecomment-441157772,1,['release'],['release']
Deployability,"4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/pro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:11149,install,install,11149,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"42) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module (#1873) ; - Remove debugging and timing code from psimrcc (#1879, #1901) ; - Add cython (#1889) ; - Update tolerances for mkl 2020.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:2333,Update,Update,2333,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Update'],['Update']
Deployability,"4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6385,Release,Release,6385,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability,"4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2934,install,installed,2934,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"57.a(function.o); > ""_PyDict_Type"", referenced from:; > boost::python::converter::pyobject_type<boost::python::dict,; > &(PyDict_Type)>::get_pytype() in export_mints.cc.o; > boost::python::converter::pyobject_type<boost::python::dict,; > &(PyDict_Type)>::check(_object*) in python.cc.o; > boost::python::converter::pyobject_type<boost::python::dict,; > &(PyDict_Type)>::get_pytype() in python.cc.o; > ; > boost::python::converter::pytype_object_manager_traits<&(PyDict_Type),; > boost::python::dict>::adopt(_object_) in libmints.a(basisset.cc.o); > boost::python::detail::dict_base::call(boost::python::api::object; > const&) in libboost_python-1_57.a(dict.o); > boost::python::detail::(anonymous; > namespace)::check_exact(boost::python::detail::dict_base const_) in; > libboost_python-1_57.a(dict.o); > ; > boost::python::detail::register_dict_pytype_ptr::register_dict_pytype_ptr(); > in libboost_python-1_57.a(dict.o); > ...; > ""_PyDict_Update"", referenced from:; > boost::python::detail::dict_base::update(boost::python::api::object; > const&) in libboost_python-1_57.a(dict.o); > ""_PyDict_Values"", referenced from:; > boost::python::detail::dict_base::values() const in; > libboost_python-1_57.a(dict.o); > ""_PyErr_Clear"", referenced from:; > boost::python::objects::instance_new(_typeobject_, _object_,; > _object_) in libboost_python-1_57.a(class.o); > boost::python::api::getattr(boost::python::api::object const&,; > boost::python::api::object const&, boost::python::api::object const&) in; > libboost_python-1_57.a(object_protocol.o); > boost::python::api::getattr(boost::python::api::object const&, char; > const_, boost::python::api::object const&) in; > libboost_python-1_57.a(object_protocol.o); > boost::python::objects::function::call(_object_, _object_) const in; > libboost_python-1_57.a(function.o); > ; > boost::python::objects::function::add_to_namespace(boost::python::api::object; > const&, char const_, boost::python::api::object const&, char const_) in; > libboost_python-1_5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:6336,update,update,6336,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,2,['update'],['update']
Deployability,"726f8000); libutil.so.1 => /lib64/libutil.so.1 (0x00007f1a724f5000); /lib64/ld-linux-x86-64.so.2 (0x00007f1a78d6a000); libgfortran.so.3 => /cluster/apps/gcc/5.2.0/lib64/libgfortran.so.3 (0x00007f1a721d5000); librt.so.1 => /lib64/librt.so.1 (0x00007f1a71fcd000); libquadmath.so.0 => /cluster/apps/gcc/5.2.0/lib/../lib64/libquadmath.so.0 (0x00007f1a71d8d000); [sfux@develop01 x86_64]$ ; ```. I did a quick test with. ```; #! Sample UHF/6-31G** CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'); ```; to verify that the installation does not crash on startup. So far everything looks fine. I have a comment about the shebang line in the psi4 python script. After the installation it was set to an absolute path:. #!/cluster/apps/python/2.7.12/x86_64/bin/python. On larger clusters, there are usually multiple python versions installed in non-standard locations. Therefore when I install executable python scripts on our cluster, I usually change the shebang line to. #!/usr/bin/env python. This way, it takes the first python interpreter that is found in $PATH. This can be convenient for systems with multiple python versions. On our cluster, we use environment modules to manage different versions of the same software. If I have a python script with the generic shebang line, I can choose the Python interpreter by loading the corresponding module; ```. [sfux@euler04 ~]$ module load python/2.7.6; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.6; [sfux@euler04 ~]$ module purge; [sfux@euler04 ~]$ module load new python/2.7.9; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.9; [sfux@euler04 ~]$ module purge; [sfux@euler04 ~]$ module load new python/2.7.12; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.12; [sfux@euler04 ~]$; ```. Best regards and thank you again for your help",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275104849:2009,install,install,2009,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275104849,1,['install'],['install']
Deployability,"73,78 ****; --- 73,93 ----; set(ATLAS_LAPACK_LIBS atlas lapack); ; #-------------------------------------------------------------------------------; + # OPENBLAS; + ; + set(OPENBLAS_BLAS_INCLUDE_PATH_SUFFIXES); + set(OPENBLAS_LAPACK_INCLUDE_PATH_SUFFIXES); + ; + set(OPENBLAS_BLAS_HEADERS cblas.h openblas_config.h f77blas.h); + set(OPENBLAS_LAPACK_HEADERS lapacke.h lapacke_config.h lapacke_mangling.h lapacke_utils.h); + ; + set(OPENBLAS_BLAS_LIBRARY_PATH_SUFFIXES openblas); + set(OPENBLAS_LAPACK_LIBRARY_PATH_SUFFIXES openblas); + ; + set(OPENBLAS_BLAS_LIBS openblas); + set(OPENBLAS_LAPACK_LIBS openblas); + ; + #-------------------------------------------------------------------------------; # MKL; ; set(MKL_BLAS_INCLUDE_PATH_SUFFIXES); [sfux@develop01 psi4]$ ls; cdash CMakeAddOpenBLAS.patch _conda_vers.py doc LICENSE plugins README.md _setup.py; cmake CMakeLists.txt CTestConfig.cmake external media psi4 samples tests; [sfux@develop01 psi4_]$ patch -p1 --verbose < CMakeAddOpenBLAS.patch ; Hmm... Looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/ConfigMath.cmake psi4/cmake/math/ConfigMath.cmake; |*** psi4_/cmake/math/ConfigMath.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/ConfigMath.cmake 2017-01-24 09:52:50.074349042 +0100; --------------------------; Patching file cmake/math/ConfigMath.cmake using Plan A...; Hunk #1 succeeded at 14.; Hmm... The next patch looks like a new-style context diff to me...; The text leading up to this was:; --------------------------; |diff -crB psi4_/cmake/math/MathLibs.cmake psi4/cmake/math/MathLibs.cmake; |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:2404,patch,patch,2404,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['patch'],['patch']
Deployability,"9 sec; Start 513: dftd3-version; 4/5 Test #513: dftd3-version .................... Passed 27.06 sec; Start 514: dftd3-nbody-cp-gradient; 5/5 Test #514: dftd3-nbody-cp-gradient .......... Passed 33.83 sec. 100% tests passed, 0 tests failed out of 5; ```; version control files have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:3233,release,release,3233,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,4,['release'],['release']
Deployability,": CXX_ho;eri_c2_d0_l4;eri_c2_d1_l3;eri_c2_d2_l3;eri_c3_d0_l4;eri_c3_d1_l3;eri_c3_d2_l3;eri_c4_d0_l5;eri_c4_d1_l2;eri_c4_d2_l2;impure_sh;onebody_d0_l4;onebody_d1_l3;onebody_d2_l3;sss; -- Libint2Config components found: CXX_ho;C;eri_c2_d0_l2;eri_c2_d0_l3;eri_c2_d0_l4;eri_c2_d0_l5;eri_c2_d0_l6;eri_c2_d1_l2;eri_c2_d1_l3;eri_c2_d1_l4;eri_c2_d1_l5;eri_c2_d2_l2;eri_c2_d2_l3;eri_c2_d2_l4;eri_c3_d0_l2;eri_c3_d0_l3;eri_c3_d0_l4;eri_c3_d0_l5;eri_c3_d0_l6;eri_c3_d1_l2;eri_c3_d1_l3;eri_c3_d1_l4;eri_c3_d1_l5;eri_c3_d2_l2;eri_c3_d2_l3;eri_c3_d2_l4;eri_c4_d0_l2;eri_c4_d0_l3;eri_c4_d0_l4;eri_c4_d0_l5;eri_c4_d1_l2;eri_c4_d1_l3;eri_c4_d1_l4;eri_c4_d2_l2;eri_c4_d2_l3;g12_d0_l2;g12_d0_l3;g12_d0_l4;g12_d1_l2;g12_d1_l3;g12_d1_l4;impure_sh;onebody_d0_l2;onebody_d0_l3;onebody_d0_l4;onebody_d0_l5;onebody_d0_l6;onebody_d1_l2;onebody_d1_l3;onebody_d1_l4;onebody_d1_l5;onebody_d2_l2;onebody_d2_l3;onebody_d2_l4;shared;sss; -- Found Libint2 5: /mnt/f/psi4/build_linux/stage/lib/libint2.so.2 (found version 2.7.2); -- Suitable qcelemental could not be located, Building qcelemental instead.; -- Suitable qcengine could not be located, Building qcengine instead.; -- Suitable optking could not be located, Building optking instead.; -- Found Libxc: /mnt/f/psi4/build_linux/stage/lib/libxc.a (found version 6.1.0); -- Suitable BrianQC could not be located, please contact info@brianqc.com to obtain BrianQC; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi sphinx-autodoc-typehints graphviz python-graphviz autodoc-pydantic -c conda-forge -c psi4); -- Adding test cases: Psi4; -- Configuring done (71.4s); -- Generating done (129.1s); -- Build files have been written to: /mnt/f/psi4/build_linux; ```. is there anything missing?. THANKS!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119:4807,install,install,4807,https://psicode.org,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119,1,['install'],['install']
Deployability,": PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); ; ValidationError: FNOCC requires SCF_TYPE = DISK_DF; ```; 7. DFOCC (OMP2/cc-pVDZ): **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 227, in select_omp2; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:7954,install,install,7954,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"://azure.archive.ubuntu.com/ubuntu focal/universe amd64 libclang-common-6.0-dev amd64 1:6.0.1-14 [3015 kB]; 2022-12-01T16:30:07.1867680Z Get:4 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 libclang1-6.0 amd64 1:6.0.1-14 [7472 kB]; 2022-12-01T16:31:01.2307594Z Get:5 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 clang-6.0 amd64 1:6.0.1-14 [9831 kB]; 2022-12-01T16:32:37.6678852Z Get:6 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 libomp5-10 amd64 1:10.0.0-4ubuntu1 [300 kB]; 2022-12-01T16:32:38.5410720Z Get:7 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 libomp-10-dev amd64 1:10.0.0-4ubuntu1 [47.7 kB]; 2022-12-01T16:32:38.5769178Z Get:8 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 llvm-6.0-runtime amd64 1:6.0.1-14 [207 kB]; 2022-12-01T16:32:38.6670727Z Get:9 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 llvm-6.0 amd64 1:6.0.1-14 [4889 kB]; 2022-12-01T16:33:14.3718902Z Get:10 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 llvm-6.0-dev amd64 1:6.0.1-14 [24.0 MB]; 2022-12-01T16:35:33.4054716Z Get:11 http://azure.archive.ubuntu.com/ubuntu focal/universe amd64 libomp-dev amd64 1:10.0-50~exp1 [2824 B]; 2022-12-01T16:35:33.4069243Z Fetched 65.0 MB in 12min 10s (89.1 kB/s); 2022-12-01T16:35:33.4339396Z E: Failed to fetch http://azure.archive.ubuntu.com/ubuntu/pool/main/libj/libjsoncpp/libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb 503 Service Unavailable [IP: 52.147.219.192 80]; 2022-12-01T16:35:33.4341544Z E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?; 2022-12-01T16:35:33.4444758Z ##[error]Bash exited with code '100'.; 2022-12-01T16:35:33.4494014Z ##[section]Finishing: Apt-Get Packages; 2022-12-01T16:35:33.6248939Z ##[section]Starting: Checkout psi4/psi4@refs/pull/2816/merge to s; 2022-12-01T16:35:33.6261343Z `. Seems to be an issue with loading and installing packages with apt-get? Maybe this is a one-time thing that can be fixed with a CI restart.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2816#issuecomment-1334145597:1999,update,update,1999,https://psicode.org,https://github.com/psi4/psi4/pull/2816#issuecomment-1334145597,2,"['install', 'update']","['installing', 'update']"
Deployability,":call(_object*, _object*) const in libboost_python-1_57.a(function.o); ""_PyDict_Type"", referenced from:; boost::python::converter::pyobject_type<boost::python::dict, &(PyDict_Type)>::get_pytype() in export_mints.cc.o; boost::python::converter::pyobject_type<boost::python::dict, &(PyDict_Type)>::check(_object*) in python.cc.o; boost::python::converter::pyobject_type<boost::python::dict, &(PyDict_Type)>::get_pytype() in python.cc.o; boost::python::converter::pytype_object_manager_traits<&(PyDict_Type), boost::python::dict>::adopt(_object*) in libmints.a(basisset.cc.o); boost::python::detail::dict_base::call(boost::python::api::object const&) in libboost_python-1_57.a(dict.o); boost::python::detail::(anonymous namespace)::check_exact(boost::python::detail::dict_base const*) in libboost_python-1_57.a(dict.o); boost::python::detail::register_dict_pytype_ptr::register_dict_pytype_ptr() in libboost_python-1_57.a(dict.o); ...; ""_PyDict_Update"", referenced from:; boost::python::detail::dict_base::update(boost::python::api::object const&) in libboost_python-1_57.a(dict.o); ""_PyDict_Values"", referenced from:; boost::python::detail::dict_base::values() const in libboost_python-1_57.a(dict.o); ""_PyErr_Clear"", referenced from:; boost::python::objects::instance_new(_typeobject*, _object*, _object*) in libboost_python-1_57.a(class.o); boost::python::api::getattr(boost::python::api::object const&, boost::python::api::object const&, boost::python::api::object const&) in libboost_python-1_57.a(object_protocol.o); boost::python::api::getattr(boost::python::api::object const&, char const*, boost::python::api::object const&) in libboost_python-1_57.a(object_protocol.o); boost::python::objects::function::call(_object*, _object*) const in libboost_python-1_57.a(function.o); boost::python::objects::function::add_to_namespace(boost::python::api::object const&, char const*, boost::python::api::object const&, char const*) in libboost_python-1_57.a(function.o); ""_PyErr_ExceptionMatches"", refere",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:5776,update,update,5776,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,2,['update'],['update']
Deployability,"; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2845,install,installed,2845,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"======================. All tests listed below examine calls to both `energy()` and `gradient()` when; employing the `scf_type mem_df` and `scf_type disk_df` settings. Each test; employs a different model chemistry (indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/User",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1228,install,install,1228,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"============================== warnings summary ===================================================; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:599; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:701; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:698; psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:699; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi16\lib\site-packages\qcelemental\molparse\from_arrays.py:702; `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; =================================== 3950 deselected, 5 warnings, 1 error in 20.79s ====================================; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:5347,release,release,5347,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,6,['release'],['release']
Deployability,==================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13056,Install,Install,13056,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability,"====================================================================; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:599: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:701: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 2700 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 1773 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 92 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 2330 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 2270 warnings; `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:698: 3 warnings; psi4conda\envs\psi4env\lib\site-packages\qcelemental\molparse\from_arrays.py:699: 3 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py: 1414 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py: 954 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_option.py: 48 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4.py: 1302 warnings; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_psi4_qcschema.py: 1266 warnings; `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional informat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:9711,release,release,9711,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,2,['release'],['release']
Deployability,"=> /lib64/libpthread.so.0 (0x00007f1a72a8c000); libc.so.6 => /lib64/libc.so.6 (0x00007f1a726f8000); libutil.so.1 => /lib64/libutil.so.1 (0x00007f1a724f5000); /lib64/ld-linux-x86-64.so.2 (0x00007f1a78d6a000); libgfortran.so.3 => /cluster/apps/gcc/5.2.0/lib64/libgfortran.so.3 (0x00007f1a721d5000); librt.so.1 => /lib64/librt.so.1 (0x00007f1a71fcd000); libquadmath.so.0 => /cluster/apps/gcc/5.2.0/lib/../lib64/libquadmath.so.0 (0x00007f1a71d8d000); [sfux@develop01 x86_64]$ ; ```. I did a quick test with. ```; #! Sample UHF/6-31G** CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'); ```; to verify that the installation does not crash on startup. So far everything looks fine. I have a comment about the shebang line in the psi4 python script. After the installation it was set to an absolute path:. #!/cluster/apps/python/2.7.12/x86_64/bin/python. On larger clusters, there are usually multiple python versions installed in non-standard locations. Therefore when I install executable python scripts on our cluster, I usually change the shebang line to. #!/usr/bin/env python. This way, it takes the first python interpreter that is found in $PATH. This can be convenient for systems with multiple python versions. On our cluster, we use environment modules to manage different versions of the same software. If I have a python script with the generic shebang line, I can choose the Python interpreter by loading the corresponding module; ```. [sfux@euler04 ~]$ module load python/2.7.6; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.6; [sfux@euler04 ~]$ module purge; [sfux@euler04 ~]$ module load new python/2.7.9; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python -V; Python 2.7.9; [sfux@euler04 ~]$ module purge; [sfux@euler04 ~]$ module load new python/2.7.12; Autoloading openblas/0.2.13_seq; [sfux@euler04 ~]$ /usr/bin/env python ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275104849:1955,install,installed,1955,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275104849,1,['install'],['installed']
Deployability,"> * Beyond just debug/release CMake build type, have a ""profiling"" build where both debugging and optimization are enabled. This is required if one wants to run perf/Vtune and get meaningful results. With modern compilers the debugging symbols contain enough information that compiler optimizations do not make debugging/profiling impossible. Before making a custom option, perhaps `RelWithDebInfo` is enough?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/402#issuecomment-1228536374:22,release,release,22,https://psicode.org,https://github.com/psi4/psi4/issues/402#issuecomment-1228536374,1,['release'],['release']
Deployability,"> * I'm jealous you were able to pull this off, I gave up in a fit of rage the last time I tried to do this migration. Yeah, there were some bizarre bits -- had to basically restructure the driver import structure in #3033 to unwind the circular import to let pydantic see the classes it demanded. Thankfully Levi did the really hard part for qcel. > * Having 1.9 drop with pydantic =2 constrained everywhere would be a small problem (I think that's what the contents of this PR would require?). We'd be stuck on 1.8.something, which isn't the end of the world but also not preferred.; > * Waiting until the QCArchive stack works with v1/v2 at installation time and then having the next-ish Psi4 release be pydantic =2 sounds like a great idea (I think this is what you're suggesting?). Ok, good. Yes, I was suggesting psi v1.10 in May 2024 be pydantic=2 only and let v1.9 stay v1/v2-compatible. I don't want downstream to get locked into too-narrow a slice of the stack to cope with other constraints. So long as psi4 as v1/v2 isn't holding openff back, I think this is the way to go. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034#issuecomment-1809344855:644,install,installation,644,https://psicode.org,https://github.com/psi4/psi4/pull/3034#issuecomment-1809344855,2,"['install', 'release']","['installation', 'release']"
Deployability,"> 1. Libxc: This line https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfunctional/LibXCfunctional.cc#L38 > includes libxc/xc.h when libxc installs include/xc.h. Yes, I've been pushing for namespaced headers (point 2 of https://gitlab.com/libxc/libxc/issues/61). If we really must, Psi can do non-namespaced libxc, but haven't gotten much response either way from upstream. > 2. Libxc project doesn't install .cmake files that you rely on. Only cmake build installs .cmake files and cmake build is broken:; https://gitlab.com/libxc/libxc/issues/66; https://gitlab.com/libxc/libxc/issues/67; https://gitlab.com/libxc/libxc/issues/68. I've fixed the latter two of these in https://gitlab.com/libxc/libxc/merge_requests/113. Not sure what to do about the first -- I really wish they would namespace their headers. The greater Libxc problem is that even if the above two points were cleaned up, there is no upstream Libxc release that has ever worked with Psi4. The Libxc3 series didn't have cmake. Early Libxc4 changed the interface so that some features we needed weren't accessible. Current Libxc4 master has those features, but they're not available in a release. When the questions of https://gitlab.com/libxc/libxc/issues/61 are resolved, https://github.com/psi4/psi4/pull/1101 is ready. > Libint: Similarly to Libxc, Libint has problems in its cmake build and it can't be used evaleev/libint#111 evaleev/libint#112. Thanks for pinging me on these. I don't watch that repo.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-433085737:147,install,installs,147,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-433085737,5,"['install', 'release']","['install', 'installs', 'release']"
Deployability,"> ; > ; > Just to make sure, you have also installed `ipykernel` into the environment, and added that kernel into your notebook spec using something like [this guide](https://medium.com/@nrk25693/how-to-add-your-conda-environment-to-your-jupyter-notebook-in-just-4-steps-abeab8b8d084), correct? And you're sure your jupyter is loading the correct kernel (i.e. the correct conda env)?. Thanks for your reply. I followed the instructions in your reference but it still doesnt work. Now I see the option to change the kernel in the Notebook to `p4env`, but when trying to import psi4 in that environment I get another error; `ImportError: DLL load failed while importing core`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2329#issuecomment-947965342:43,install,installed,43,https://psicode.org,https://github.com/psi4/psi4/issues/2329#issuecomment-947965342,2,['install'],['installed']
Deployability,"> ; > ; > Thanks for trying out psi4! If you're on windows, your conda install line is just right. If you're on linux or mac, you don't actually need the `-c conda-forge`, though it's harmless. Since you're installing from conda, the `psi4 --psiapi` is unnecessary --- activating the environment suffices.; > ; > I don't have much personal experience with tab help in jupyter, but `help(psi4.set_memory)` returns a sensible docstring for me in interactive python. What you describe does sound with `AttributeError` does sound wrong. If the in-jupyter help is giving you trouble, searching the generated API (https://psicode.org/psi4manual/master/psi4api.html) may work better. If you're new, perhaps check out the tutorials at https://psicode.org/psi4manual/master/index_tutorials.html . Thanks for replying! When I try the `help(psi4.set_memory` it says that there's no `set_memory` attribute. The cell with the `import psi4` runs ok, but it seems it cant access any attribute.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2329#issuecomment-947961590:71,install,install,71,https://psicode.org,https://github.com/psi4/psi4/issues/2329#issuecomment-947961590,2,['install'],"['install', 'installing']"
Deployability,"> > > An alternative question this raises for me is whether the active_molecule should get updated at some point in the optimization. Updating the active molecule patches the issue but is that desired?; > ; > > My vote would be ""no""; it's too much like changing the input. However, I do think that some users would expect the final active molecule to be updated for them. And workflows inside the python input may seem more intuitive that way.; > ; > I may not be following this right. I'd say the state of the psi4 active mol _during_ an optimization is arbitrary -- whatever works for you. In cpp-optking, I think the communication was through legacymolecule anyways. The molecule optking is acting on _should_ be updated by the time control returns to the user at the end of the opt. I thought this was already happening through https://github.com/psi4/psi4/pull/2727/files#diff-acf663ccea13592c4c656cf89c7b62e6f5bd3b2e8b4f12ba354129bd39d096f8R1296-R1297 . That's consistent with cpp-optking, and I think that must be happening b/c many of the tests check NRE before and after opt. OK, you changed my hasty mind on that. What concerns me is that the user may, in some instances, not realize that the default active molecule is the one that optking is acting on and changing. But the upside convenience wins, I agree.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1260085584:91,update,updated,91,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1260085584,8,"['patch', 'update']","['patches', 'updated']"
Deployability,"> > > Could also do an option like MAX_RADIAL_MOMENT, where all orders up to a given max order are computed just in case someone wants something higher than 4.; > ; > > Great suggestions @zachglick @jeffschriber, I will get them changed ASAP; > ; > If 2, 3, 4 are all that's ever wanted and there's trivial additional cost, I advocate always computing and storing them all. Fewer options, more cheap results always better. Good idea, @zachglick. Updated my code, tests all passed :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2056#issuecomment-767181617:446,Update,Updated,446,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-767181617,1,['Update'],['Updated']
Deployability,"> > > Do you have all the patches installed?; > > ; > > ; > > Define patches; > ; > Sorry, should have clarified. https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches. Wow, talking about a blast from the past.... haven't done this in over 20 years",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216:26,patch,patches,26,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071556216,4,"['install', 'patch']","['installed', 'patches']"
Deployability,"> > @hokru For ωB97M-V, it doesn't seem to be possible to change the ω parameter directly from the psithon interface—there's a check at; > > https://github.com/psi4/psi4/blob/d9093c75c71c2b33fbe86f32b25d138675ac22eb/psi4/src/psi4/libfunctional/LibXCfunctional.cc#L218; > > ; > > that disallows it. I want to be on the safe side and not manually change it without knowing why the limitation is put in place.; > ; > @susilehtola? It looks like this code was added as part of Psi adopting LIbXC in May 2017, so this may be as simple as ""it's perfectly legitimate to change omega here; the code needs to be modernized already."". Looks like hacky code. I'll send a patch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641#issuecomment-1194210633:660,patch,patch,660,https://psicode.org,https://github.com/psi4/psi4/issues/2641#issuecomment-1194210633,2,['patch'],['patch']
Deployability,"> > @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play.; > ; > Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache.; > ; > https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477; > ; > The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling. That is helpful. I got it in the end by taking the `psi4-path-advisor cmake` command without evaluation, modifying it, and running that. I still think that being explicit in the debug build tips is for the best, given the developer demographic for Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171:1226,Release,Release,1226,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312914171,2,['Release'],['Release']
Deployability,"> > Are you also zeroing out the diagonal for FMI in the UHF case? I looks like only the Fmi matrix is cleared there.; > ; > Yes, on lines 75-77. Look for the little patch of green _between_ the red. OK, now I see what you're doing. My only suggestion is that you modify the comment under RHF to read:. // This is because the amplitude update in RHF uses the full residual while the ROHF and UHF updates separate out the diagonal contributions from the Fock matrix [cf. Eqs. (1) and (2) of Stanton et al., J. Chem. Phys. 94, 4334-4345 (1991)].",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2703#issuecomment-1227100111:166,patch,patch,166,https://psicode.org,https://github.com/psi4/psi4/pull/2703#issuecomment-1227100111,6,"['patch', 'update']","['patch', 'update', 'updates']"
Deployability,"> > Do you have all the patches installed?; > ; > Define patches. Sorry, should have clarified.; https://www.mrcc.hu/index.php/download-mrcc/mrcc-binary-2/category/5-mrcc-patches",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117:24,patch,patches,24,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070626117,4,"['install', 'patch']","['installed', 'patches']"
Deployability,"> > I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more.; > ; > This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated.; > ; > @andyj10224, if you rebase as of this morning, the clang CI lane will work again. @loriab @JonathonMisiewicz I updated my qcel/qcng, and the mp2 hessian tests now pass. Now I just need to compile the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083:227,update,update,227,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946829083,2,['update'],"['update', 'updated']"
Deployability,"> > Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated.; > ; > I think it'd be most useful to continue scf5 as a regression test. That is, record new refs for the in-between-conv-and-df algorithms collected at tight convergences, then check them against usual 6 decimal places. Then we'll know in future if code changes affect the algorithms.; > ; > How are you generating the `samples/` files? If it's any other way than autogenerated via the docs build, please don't go to the trouble. We can catch the changes en masse before release. > I strongly agree with Lori about having this as a regression test rather than an accuracy test. Put the new, approximate energies with all the others. That should be a good indicator to others working with the SCF system of what accuracy to expect. All right, sounds like a plan! I will do this, then!. Also, Lori, to answer your question about samples, I have been editing them manually. Thank you for letting me know about their autogeneration!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1310407815:899,release,release,899,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1310407815,2,['release'],['release']
Deployability,"> > Still having trouble getting the `density_tolerance_` variable in SuperFunctional updated when I set the cutoff value through the LibXCFunctional class.; > ; > Is this necessary at all? I mean, do we want to set the density cutoff _also_ through the LibXCFunctional class? How much flexibility is wanted?. Where are you trying to set this at? The first thing that comes to mind is the functional can be ""locked"" so that when a threaded V matrix is computed we can correctly replicate the `SuperFunctional` to compute on each thread. It may be worth double checking that you have the correct locking guards around this like other setters.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-612060219:86,update,updated,86,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-612060219,1,['update'],['updated']
Deployability,"> > Warning that orbital energies then become ambiguous as well. Do you want the ""orbital energies"" at the correlated level of theory or the reference?; > > If there's no standard either way, then it may be best to let the user toggle which one they want in this corner case.; > ; > I don't know what behavior is expected; energy expectation value might be one option but there might be different definitions for the Fock operator. Most of all, you can't reorder the orbitals... This seems like a difficult issue to get right.; At this point I'd prefer to give a warning in the manual and output about the orbital energy field and print whatever the respective theory module puts there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-671863488:228,toggle,toggle,228,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-671863488,1,['toggle'],['toggle']
Deployability,"> > Yes, it turns out that the hotfix branch was still a work-in-progress by the time I was forced to go on holidays. I hope to get the remaining issues in the Python frontend fixed today.; > ; > Thanks for the update! Psi isn't using the Python frontend, but maybe there's more quirks involved. Oh, that was another bug, which Miguel fixed last night. You should be able to use it now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754868565:31,hotfix,hotfix,31,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754868565,2,"['hotfix', 'update']","['hotfix', 'update']"
Deployability,"> > ah! thanks for that. it looks like it's called in `get_core_size();`, this issue is probably resolved if 229 assigns in both outcomes.; > ; > Um, @schiebermc, you mean you are fine with the patch in #1667 as-is..?. Yes. Although others who are actively moving the code around might want to consider if there are any repercussions to calling `AO_core()` with the default `memory_`. I do not think so. . `get_core_size()` is just used when considering which object to build, MemDFJK or DiskDFJK in: https://github.com/psi4/psi4/blob/a6305a1b251d0812ecc93438bc907a91964b0ca9/psi4/src/psi4/libfock/jk.cc#L172. As you pointed out, this call had the unintended consequence of reassigning `AO_core_`. Another solution could be to make sure `memory_` gets set (so the default is not used) before:; https://github.com/psi4/psi4/blob/a6305a1b251d0812ecc93438bc907a91964b0ca9/psi4/src/psi4/libfock/MemDFJK.cc#L68. Unfortunately, this might have resulted in the wrong code (disk based MemDFJK) being used where `required_core_size_` \in [256M, memory_].",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503753281:194,patch,patch,194,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503753281,1,['patch'],['patch']
Deployability,"> @davpoolechem, tests/python/3-index-transforms/input.py isn't running correctly. Do you happen to understand how to edit it while still preserving the intent of the test?; > ; > ```; > Fatal Error: SCF_SUBTYPE=INCORE was specified, but there is not enough memory to do in-core! Increase the amount of memory allocated to Psi4 or allow for out-of-core to be used.; > ```. After some quick tinkering, I was fix the issue by adding the line. `psi4.set_options({ ""scf_subtype"": ""auto"" })`. under the definition of `mol`. Setting `SCF_SUBTYPE` explicitly like this circumvents the switch to the `INCORE` MemDF algorithm in the DFHelper constructor that is causing the exception. . Cross-checking against the test output from another Psi4 build leads to basically no difference in the output files, specifically in MemDF header printout, so I believe the intent of the test is also preserved (i.e., there are no alterations into what configurations of MemDF are tested).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904:930,configurat,configurations,930,https://psicode.org,https://github.com/psi4/psi4/pull/3131#issuecomment-1936037904,1,['configurat'],['configurations']
Deployability,"> @loriab changed the build system, and it's no longer clear to me how you even build Psi4 with debug symbols. Can you explain how you do that now? I assume that something needs to change with eval $(conda/psi4-path-advisor.py cmake)... It's not at all clear to me where the line in Lori's last comment comes into play. Sorry, I didn't realize the path-advisor route looked so opaque. It didn't so much change the build system as automate generation of two files (conda env spec and cmake cache) that seed the build process. So to switch to debug, one wants to `-D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""`. This can be done (a) skipping the `psi4-path-advisor cmake` stage entirely and only running cmake to configure, (b) running `psi4-path-advisor cmake` then editing the cache file it produces before running the cmake configure, (c) running `psi4-path-advisor cmake` to produce the cache file, then running approximately `cmake -S. -Bobjdir -Cpath/to/cache -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_FLAGS=""-O0""` to overwrite what's in cache. . https://github.com/psi4/psi4/blob/master/conda/psi4-path-advisor.py#L477. The jotted directions I had in the post above were for when you already have a Release objdir and you want a Debug and don't mind it being irrecoverable to Release. Then one can hack up the objdir/CMakeCache.txt by changing CMAKE_BUILD_TYPE and adding O0, then recompiling.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095:1206,Release,Release,1206,https://psicode.org,https://github.com/psi4/psi4/pull/3206#issuecomment-2312837095,2,['Release'],['Release']
Deployability,"> @susilehtola, I've switched the build-from-src libxc target to v6.1 somewhere, and I'll make sure that makes it into the psi v1.8 release. c-f packaging is already at v6.1. Is there anything else to do in psi4 libxc-wise? Otherwise, I'll bump this to v1.9. No need to merge this in since the libxc master branch API breakage will still happen at some point. This is just here so that if people want to try out the master branch, they can...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1904#issuecomment-1521696864:132,release,release,132,https://psicode.org,https://github.com/psi4/psi4/pull/1904#issuecomment-1521696864,1,['release'],['release']
Deployability,"> Almost certainly what's going on is that a fundamental library (gcc, mkl are the usual suspects) is in conflict between jupyter's ldd and psi4's (envname/lib/pythonx.x/site-packages/psi4/core.so). The usual hack is to switch around import order between psi4, numpy, matplotlib, etc, until one works. Ah, I ran into this for the first time recently with another module. > Indeed, if I install psi4 the way you listed into p4env and then create another env into which I install jupyter (and same version of python; all from conda-forge) and then adjust the path (sys.path.append('/path/to/p4env/lib/python3.6/site-packages/), I can import psi4 just fine. Okay, I'll give this a shot. > The medium-term solution is to go with the new compilers that conda is rolling out (7.2). Then psi can rejoin the common gcc track of the rest of the conda ecosystem. Fortunately, I was working on that this week. Is there anything actionable with this or do I sit tight until there's a new psi4 release?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-345406827:386,install,install,386,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-345406827,4,"['install', 'release', 'rolling']","['install', 'release', 'rolling']"
Deployability,"> Already known and fixed in the developer version of Psi. We're planning to release a v1.3.2 with the fix soon, though I don't have an estimate of when ""soon"" is. In the meantime, you can either downgrade NumPy, as mentioned, or use the developer version. Precise instructions on how to use the developer version depend on how you installed Psi in the first place. OK",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1610#issuecomment-487277664:77,release,release,77,https://psicode.org,https://github.com/psi4/psi4/issues/1610#issuecomment-487277664,2,"['install', 'release']","['installed', 'release']"
Deployability,"> Are there any Python bindings that hit the deprecated fns?. I don't think so? They are not used in `py::class_<Dimension>` in `export_mints.cc`, if there are other places to look for Python bindings let me know and I will check. > This would be a good time to get the deprecation warnings in, so the fns can be removed by 1.10. Perhaps, but I delayed it because. 1. I was not sure that this would get thorough reviews before 1.9 is released. This is something that could disrupt people's codes/plugins that rely on it. I do not know how widely they are used, thus I want to give people time to stumble into the deprecation warning and yell before it is too late.; 2. These functions are not exactly unused, even in Psi4 itself. It will not be a trivial task to rip them out, and I doubt that I will have enough free time to complete it before May 2024.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953#issuecomment-1810074282:434,release,released,434,https://psicode.org,https://github.com/psi4/psi4/pull/2953#issuecomment-1810074282,1,['release'],['released']
Deployability,"> Are there particular packages you'd need besides required, optimization, and dispersion?. No, so far, I am just exploring a few ideas/experiments (using qcengine mostly) and only require `psi4`. I can get `psi4` running, but integration with other internal packages is very challenging (if not impossible) without a binary-compatible c-f package. > Many of the deps are compiled or psi is using a slight fork or need windows work. do you have specialties? :-). I can only develop a package on my Linux machine. No problem to also build on the CI for osx/windows, but debugging is much harder on those platforms. I have experience building CMake based C/C++ packages on c-f (as long as it does not require diving too deep in the C/C++ code). > Roughly, my plan is to start compiling psi4 locally with c-f conditions and the very basic deps and post them to a psi4/label/cf channel. Libint2 must still pull from psi4 channel for the forseeable future. Glad to talk strategy, esp. after 12 Dec. Beside libint2, it looks like you are quite close here. I don't know if you are aware of it but you can easily run a c-f build (almost identical to the ones on the CI) using the `build_locally.py` script. See https://conda-forge.org/docs/maintainer/updating_pkgs.html#testing-changes-locally for the details. That script is available in the feedstock repo but also in the `staged-recipes` repo for package that does not yet exist.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1337307605:227,integrat,integration,227,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1337307605,1,['integrat'],['integration']
Deployability,"> Are you also zeroing out the diagonal for FMI in the UHF case? I looks like only the Fmi matrix is cleared there. Yes, on lines 75-77. Look for the little patch of green _between_ the red.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2703#issuecomment-1227086053:157,patch,patch,157,https://psicode.org,https://github.com/psi4/psi4/pull/2703#issuecomment-1227086053,2,['patch'],['patch']
Deployability,"> Are you building Psi4 for packaging or for single-deployment use?. For packaging. > Psi4 does check for external packages . If does, but it falls back on the bundled version when it doesn't find the external package for some reason when it actually exists. There should be a clear way to require to use external packages.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-343715965:52,deploy,deployment,52,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-343715965,2,['deploy'],['deployment']
Deployability,"> As for the others, the samples were last generated pre-1.1. Something else killed the knob, perhaps the Py-side inversion. To clarify, `samples/` are generated for each release and after #2364 will be generated for each PR. It's the `output.ref` set that are largely circa pre-1.1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010185016:171,release,release,171,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010185016,1,['release'],['release']
Deployability,"> Before we merge, just wanting to confirm if the right conda install libint2 -c psi4/label/dev is available?. I hope so -- they should be: https://anaconda.org/psi4/libint2/files",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-730250341:62,install,install,62,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-730250341,1,['install'],['install']
Deployability,"> Blocking this PR until we can resolve the question of ""is `TwoBodyAOInt` responsible for sieving, or is `ERISieve`""? Happy to talk about this after ACS Chicago. To add an update to this, some of us (Jonathan, I, and others) discussed this issue at PsiCon 2022. We came to the conclusion that TwoBodyAOInt would be responsible for sieving, and that ERISieve will be removed from Psi4. As use of ERISieve is seemingly localized to the PKJK algorithm, I will be the one responsible for its removal. Until then, this PR will likely be further delayed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2695#issuecomment-1345254017:173,update,update,173,https://psicode.org,https://github.com/psi4/psi4/pull/2695#issuecomment-1345254017,1,['update'],['update']
Deployability,"> Can you elaborate on how DDD affects our ability to output to file?. Sure. For everything but analytic single points (effectively, any composite, finite difference, or many-body expansion), the individual pieces are sent to qcengine as a qcschema atomicinput job that returns a qcschema atomicresult (that has the usual output file printout as a field). So all the usual output is collected, but some of the most important stuff (the atomicresult) is in a dict, which would be weird for an output file. Also, the psi4 output file isn't a wonderfully behaved object for being opened and closed and reset, potentially for dozens of jobs running at the same time. It looks like the individual pieces outputs are being accumulated in the outfile now in DDD (see below). But logging _is_ a natural object for accumulating the results of potentially multiple libraries into one file or stream, so it seems the right trajectory to get started along for distributed calcs. ```; gof = core.get_output_file(). # EITHER ...; # from psi4.driver import schema_wrapper; # self.result = schema_wrapper.run_qcschema(self.plan()); # ... OR ...; self.result = qcng.compute(; self.plan(),; ""psi4"",; raise_error=True,; # local_options below suitable for continuous mode; local_options={; ""memory"": core.get_memory() / (2 ** 30),; ""ncores"": core.get_num_threads(),; },; ); # ... END. core.set_output_file(gof, True); core.reopen_outfile(); logger.debug(pp.pformat(self.result.dict())); core.print_out(_drink_filter(self.result.dict()[""stdout""])); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2512#issuecomment-1082191447:1236,continuous,continuous,1236,https://psicode.org,https://github.com/psi4/psi4/pull/2512#issuecomment-1082191447,1,['continuous'],['continuous']
Deployability,"> Cool, this looks really neat! I was thinking this might take a bit to get in, but looks fairly integrated as is. Thanks! It's the first time I try to contribute to psi4, and I found it actually rather easy to; add my project given the online documentation :+1: . > IIRC Armadillo is header only which makes things significantly easier to interface too. I don't think the inclusion of the library for this extension will be an issue. Unfortunately, it is _not really_ header-only... Probably I'll switch to something header-only (like Eigen) if I find the time. Anyways, the inclusion of armadillo has not been a problem until now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-445555668:97,integrat,integrated,97,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-445555668,1,['integrat'],['integrated']
Deployability,"> DESTDIR is always set during build and install. It contains the real stage directory path that cmake uses to determine where files are installed. You mean _you_ are setting `DESTDIR` as an environment variable, right? Whereas old psi used to use it explicitly (https://github.com/psi4/psi4/blob/1.2.x/external/upstream/libxc/CMakeLists.txt#L33), that string doesn't appear in the source now, and in an objdir, it only activates if the envvar is set, and I've tested with GNU Make that it isn't set by default. >> That (and basically any envvar) is untested; in my opinion, CMake has too many input routes already :-). > What does this mean?; > Every port uses DESTDIR to supply stage directory. It is super well tested. I meant environment variables capable of influencing the psi4 build system have not been exercised -- I've stuck with CMake variables. I was not acquainted with user use of DESTDIR, as `CMAKE_INSTALL_PREFIX` has worked fine for users and other ports like Fedora (https://src.fedoraproject.org/rpms/psi4/blob/rawhide/f/psi4.spec#_134). > psi4 build adds DESTDIR to its inner stage directory which causes this problem. When I run an install and set envvar DESTDIR, I do see the two dirs under it that are your original issue. I'm glad to finally understand how this comes about, and I can look into this eventually. For now, I'd suggest either using `CMAKE_INSTALL_PREFIX` or the subdirectory (one of two) from env DESTDIR; either looks to contain the full installation directory you need.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325736040:41,install,install,41,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325736040,4,['install'],"['install', 'installation', 'installed']"
Deployability,> Do you have all the patches installed?. Define patches,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077:22,patch,patches,22,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070621077,3,"['install', 'patch']","['installed', 'patches']"
Deployability,"> For conda n00bs like myself who want a speclfic command to execute, your Dockerfile would now look like the following (using python3.9 since that is what comes with miniconda3:4.10.3). Can confirm this works. @loriab if you suggest any changes to the command below just let me know. You can do it all at once (in fact for new conda environments, it's always slightly preferred to use a single command line so that the solver knows all the requirements at once. so, `conda install psi4=1.5 python=3.9 libint2=*=hc9558a2_9 pytest=5 pcmsolver=*=py39h6d17ec8_2 -c psi4` should do nicely. >> For solid reproducibility, the psi4conda installers have the advantage. > What exactly do you mean by this? Is there a preferred way to install psi4 other than conda install psi4=1.5 -c psi4? Pardon my lack of depth with the nuances of conda distributions. oh, there's a single-file installer (""installer"" off https://psicode.org/installs/v16/) that fits the analogy `miniconda:""conda install python""::psi4conda:""conda install python psi4""` . Not what you'd want if psi4 is one of many changing envs, but it'd be fine for docker.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2596#issuecomment-1151767997:474,install,install,474,https://psicode.org,https://github.com/psi4/psi4/issues/2596#issuecomment-1151767997,9,['install'],"['install', 'installer', 'installers', 'installs']"
Deployability,"> Good points. The code does run UHF/UKS as needed, and the MBIS routine can handle these cases as well. I have a few reference values for free atom volumes for elements H, Li, C, N, O, F, Ne, Si, S, and Cl, and we match these values. So I feel good about getting those ground states correct, but in general they many not be accurate, particularly for transition metals I'd imagine. I am inclined to trust the source of the ground state occupancy values from SAD, though. Note that SAD hasn't been using those values in a long time; instead it runs spin-restricted calculations. Also, SAD isn't symmetry aware at the moment, which is a problem especially for transition metals and lanthanides and actinides where e.g. the s and d orbitals are very close in energy and the energy differences between different configurations are just eV. The proper way to do it is to impose symmetry, so that the occupations can be controlled. This is the way it is in PySCF; the ground states are from fully numerical calculations I did in https://journals.aps.org/pra/abstract/10.1103/PhysRevA.101.012516",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679:809,configurat,configurations,809,https://psicode.org,https://github.com/psi4/psi4/pull/2127#issuecomment-791695679,1,['configurat'],['configurations']
Deployability,"> Great!; > ; > If you need more precision, set the PySCF grids by a pair of numbers, rather than by grid level. That should disable PySCF's numerical integration grid pruning. Psi is not pruned, by default. That does not suffice. In addition to setting the grid with e.g. `mf.grids.atom_grid = (100,590)` you need to turn pruning off explicitly with `mf.grids.prune = None`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911#issuecomment-1487415356:151,integrat,integration,151,https://psicode.org,https://github.com/psi4/psi4/issues/2911#issuecomment-1487415356,1,['integrat'],['integration']
Deployability,"> Have you tried with Python 3.11 yet?. update, I've built python 3.11 rc and numpy from source (first time ever). I did have to use the most recent v2.10.0 pb11. By turning off some diis (see below), I can get the variant on test tu1 to run through 6 SCF iterations (not to convergence) before segfaulting. major things still to investigate -- installing scipy, what lapack libraries for numpy is pip hiding from me, are the timer files closing cleanly when it throws the install-scipy-or-disable-accelerator message. and, of course, all this is on master, not the 1.3.2 of interest to you. . ```; memory 600 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; set scf scf_initial_accelerator none; set diis off; energy('scf'). compare_values(-76.0266327341067125, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1235824357:40,update,update,40,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1235824357,3,"['install', 'update']","['install-scipy-or-disable-accelerator', 'installing', 'update']"
Deployability,"> Hey all, I have updated the code to account for the two density matrices present in UHF.; > ; > I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance.; > ; > I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz). Link to my tests:. https://docs.google.com/spreadsheets/d/1PDt8LPHo_kWV-ukY3Zm24qJUc-QLf5Cv7CXCKkYzFvs/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847:18,update,updated,18,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736847,1,['update'],['updated']
Deployability,"> Hi @kzinovjev just checking over this again and noticed that the [populations](https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/src/psi4/libmints/oeprop.cc#L2099-L2104) and [widths](https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/src/psi4/libmints/oeprop.cc#L2182-L2188) might already be printed can you check they match what you are printing?. Hi @jthorton, currently only the atomic charges (so, the sum of populations of all the shells) and the widths of the last shell for each atom are printed. In contrast, with this patch the full result of MBIS density fitting is printed, so populations and widths of all the shells. This is helpful if one wants to split the atomic charges into core/valence shells, as in [MEDFF](http://dx.doi.org/10.1021/acs.jctc.6b00969), [IPML](https://doi.org/10.1063/1.5009502) or [EMLE](https://doi.org/10.1021/acs.jctc.2c00914) methods.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3102#issuecomment-1919813943:588,patch,patch,588,https://psicode.org,https://github.com/psi4/psi4/pull/3102#issuecomment-1919813943,1,['patch'],['patch']
Deployability,"> Hi @susilehtola, I've been following Libxc v5.1 https://gitlab.com/libxc/libxc/-/issues/186 with interest. When I compiled this branch (after rebase; including your fixes from the spring, thanks!) in late December against the the Libxc 5.0 branch, I got about the same Psi4 test results as recorded above -- lots of `Matrix::power: C_DSYEV failed`.; > ; > However, when I compile this branch against the new Libxc 5.1 hotfix branch, I don't even get that far. After disabling OpenMP, I get segfaults (dft-psivar):; > ; > ```; > (gdb) bt; > #0 0x00007ffff78351d7 in raise () from /lib64/libc.so.6; > #1 0x00007ffff78368c8 in abort () from /lib64/libc.so.6; > #2 0x00007ffff782e146 in __assert_fail_base () from /lib64/libc.so.6; > #3 0x00007ffff782e1f2 in __assert_fail () from /lib64/libc.so.6; > #4 0x00007fffed70db12 in xc_mix_func (func=func@entry=0x555556ca7500, np=np@entry=255, rho=rho@entry=0x555556e575c0, sigma=sigma@entry=0x555556ccda80, lapl=lapl@entry=0x0, tau=tau@entry=0x0, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, vlapl=0x0, vtau=0x0, v2rho2=0x0, v2rhosigma=0x0, v2rholapl=0x0, v2rhotau=0x0, v2sigma2=0x0, ; > v2sigmalapl=0x0, v2sigmatau=0x0, v2lapl2=0x0, v2lapltau=0x0, v2tau2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rho2lapl=0x0, v3rho2tau=0x0, v3rhosigma2=0x0, v3rhosigmalapl=0x0, v3rhosigmatau=0x0, v3rholapl2=0x0, v3rholapltau=0x0, v3rhotau2=0x0, v3sigma3=0x0, v3sigma2lapl=0x0, v3sigma2tau=0x0, v3sigmalapl2=0x0, v3sigmalapltau=0x0, v3sigmatau2=0x0, ; > v3lapl3=0x0, v3lapl2tau=0x0, v3lapltau2=0x0, v3tau3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho3lapl=0x0, v4rho3tau=0x0, v4rho2sigma2=0x0, v4rho2sigmalapl=0x0, v4rho2sigmatau=0x0, v4rho2lapl2=0x0, v4rho2lapltau=0x0, v4rho2tau2=0x0, v4rhosigma3=0x0, v4rhosigma2lapl=0x0, v4rhosigma2tau=0x0, v4rhosigmalapl2=0x0, v4rhosigmalapltau=0x0, ; > v4rhosigmatau2=0x0, v4rholapl3=0x0, v4rholapl2tau=0x0, v4rholapltau2=0x0, v4rhotau3=0x0, v4sigma4=0x0, v4sigma3lapl=0x0, v4sigma3tau=0x0, v4sigma2lapl2=0x0, v4sigma2lapltau",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798:420,hotfix,hotfix,420,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798,1,['hotfix'],['hotfix']
Deployability,"> Hi, did you get a chance to look at this further? So long as as big problems aren't uncovered in last week's rc3, we'd like to do the 1.4 release including the new databases this week. I think the items in [#2154 (comment)](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272) were pretty small. Let me know if you need advice for the rebase. I need to run, some tests, if the database after the changes is still fine since I didn't manage to put up automated tests, yet.; Running, whole test set might add significant overhead to the already time-consuming test suite. Are there any recommendations on `pytest.mark` to qualify it for the `heaviest` league?; I imagine, running some small-basis SAPT0 for mb case, and UMP2 for CP/un-CP one. > remove no_com, etc. if not really; - [x] done . > clarify in docstrings whether 1.9 is R_eq or AA; - [x] done, I think. See the latest changes `R=0.9R_eq`. > allow uncp in ACTV rather than hardcoding both it and ACTV_CP to cp, unless there's a good reason not to; - [x] done, TBH I've worked exclusively with mid-bond version with CP, I don't know if unCP with mid-bonds makes even sense. Need someone with `unCP` experience to comment on that. > I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.; - [x] rebased. as for DRYifing two files, I don't think it's desired to couple these two files, as they should be in-principle, runnable standalone.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595:140,release,release,140,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-878539595,1,['release'],['release']
Deployability,"> Hm, is there a requirement on the ordering used in Libint2? This may complicate packaging... Yes, there's ordering requirements at two different levels. The cartgauss_ordering has to be chosen at code-generation time, but fortunately psi4 uses `standard`. The spgauss_ordering can be selected at code-compile time, and here psi4 uses `gaussian` (not default). So for binary distribution, yes, there's going to be packaging complications. I've translated both stages of libint2 build to cmake and added in `find_package(..., COMPONENTS ...)` selectors https://github.com/evaleev/libint/pull/148/files#diff-4cfbbb105ca3b371b7251a6e37a56f74R41 so that downstream programs can avoid detecting unsuitable installations. Of course that doesn't help non-cmake downstreams much ...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-685960414:702,install,installations,702,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-685960414,1,['install'],['installations']
Deployability,"> I add to use the conda-forge/label/libint_dev channel for libint. Yes, that's going to be the case for the foreseeable future until https://github.com/evaleev/libint/pull/259 gets reviewed and merged and released, as I can't in good conscience replace a released version with a PR version outside the psi4 channel. > Upon importing psi4 I noticed a bunch of prints that wasn't here before:. You guessed correctly -- I'm trying to debug some infernal Windows relative path behavior. > I tested the psi4 package on linux-64 using the staged-recipes artifacts and it works perfectly. . Great, good to hear!. ------. Note to anyone reading this thread seeking Mac packages: most of the iterations I skip Mac, so look for a CI run that took a long time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483939202:206,release,released,206,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483939202,2,['release'],['released']
Deployability,"> I am all for moving forward with this as it blocks other PRs.; We could make an issue about MKL instabilities and keep monitoring it for now?. I agree. We know how to coerce any MKL into a correct answer. Poor cholesky-basis is exonerated and instead lauded as the coal mine canary. Time to get PRs moving again. > (CI runs on intel for now, right?). I don't think we have any guarantee of hardware brand or instruction set. Agree that should try threaded non-MKL again someday.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896#issuecomment-633708219:277,canary,canary,277,https://psicode.org,https://github.com/psi4/psi4/pull/1896#issuecomment-633708219,1,['canary'],['canary']
Deployability,"> I am not planning to look at this code until your other two PRs (#2155 and #2187) are closer to acceptance but am leaving some ""triage"" comments.; > ; > * Labels in the title are an eyesore, and GitHub has its own labels feature. I've added them as proper labels instead. Similarly, in future, please mark a PR as draft rather than add a ""[Work in Progress]"" text tag.; > * It isn't clear to me if there's anything in particular you want to get by submitting this PR when it's not even marked for review. Did you submit this to get feedback on the ""Do we need a new JK object?"" question?; > * I am going to ask that _in future_, you have more descriptive git commits rather than whatever words are currently on your mind. As somebody who has to debug Psi decently often, commit histories are often an invaluable clue to figuring out what the intention behind some obscure piece of code is. I'd _prefer_ if you cleaned up the commit messages for this PR, but I'm not going to insist on it. Also, I opened this PR early in order to a) Update the Psi developers on the progress of the new CFMM code, and b) To get y'all to start thinking about the future of the JK class, and potential design choices for if a user would like to run, per se DF-J + linK, CFMM-J + chain-of-spheres K, etc. Also, most of my ""non-sense"" PR messages result from the fact that I have to change branches, so I make a quick push to GH before I switch to another project, and can be safely ignored, as they don't mean anything. I will avoid doing such a thing in the future though, and add more descriptive Git messages :) However, the descriptive commit messages DO mean something.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2311#issuecomment-933583054:1035,Update,Update,1035,https://psicode.org,https://github.com/psi4/psi4/pull/2311#issuecomment-933583054,1,['Update'],['Update']
Deployability,"> I am using the latest git snapshot of the master branch. gtk. [this](https://anaconda.org/psi4/psi4-dev/files) is what I was talking about. It hides dependency tracking from many psi builders and seeds cmake configuration. I was hoping that could carry most builds until FindMPFR called by Libint2Config and I come to terms. Are you building libint2 through psi or using the libint2 conda-package or detecting other pre-built (will need to silence find_apckage(... components) in that case)? For now, I'd add `find_package(eigen)` and hack cmake_module_path as needed. And this should stay open until I get it patched correctly upstream. ```; ambit >=0.5.1,<0.6.0a0, chemps2 >=1.8.9,<1.8.10.0a0, cmake >=3.8, dkh >=1.2,<1.3.0a0, eigen, gau2grid >=2.0.3,<3.0a0, gcc_linux-64 7.*, gdma >=2.2.6,<2.2.7.0a0, gfortran_linux-64 7.*, gxx_linux-64 7.*, hdf5 >=1.10.6,<1.10.7.0a0, libint2 2.6.0 hc9558a2_9, libxc >=4.3.4,<5.0a0, mkl-devel 2019.*, mpfr, msgpack-python, networkx >=2.4, numpy >=0.12.0, pcmsolver >=1.2.1,<1.2.2.0a0, pybind11-headers >=2.5.0,<2.6.0a0, pytest, pytest-xdist, python >=3.8,<3.9.0a0, qcelemental >=0.17.0,<1.0, qcengine >=0.17.0,<1.0, simint >=0.7,<0.8.0a0; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507:210,configurat,configuration,210,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737400507,2,"['configurat', 'patch']","['configuration', 'patched']"
Deployability,"> I can put in an INSIST_FIND_PACKAGE signal, but it'd probably be a universal one, as I'd rather not proliferate another set of variables. IMO, it's best to have a set of variables per-bundled dependency, because some packages might be either missing, or have some problems on some platforms, and it's better to be able to turn them on/off individually. Bundled ```pybind11``` also installs files; ```; include/pybind11/attr.h; include/pybind11/cast.h; ...; share/cmake/pybind11/pybind11Tools.cmake; ```; ```; that are in direct conflict with standalone package. These files just can't be installed by psi4. > I'm glad to look at your build directive if that'd help. Thank you for your offer! I am ok for now, but I will ask you if I run into problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-343774871:383,install,installs,383,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-343774871,2,['install'],"['installed', 'installs']"
Deployability,> I do think we should try to get the changes into one psi4 release cycle. Regarding the deprecation message/schedule: do you mean that they should be deprecated now and then removed before 1.7 RC1?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2693#issuecomment-1256964070:60,release,release,60,https://psicode.org,https://github.com/psi4/psi4/pull/2693#issuecomment-1256964070,1,['release'],['release']
Deployability,"> I don't know the DFT infrastructure at all, so can you give me a big picture overview of what this PR is doing? I know that DFT relies on numerical integration, and I know that a block contains numerical integration points, but I don't know what a block is used for. Instead of making a loop over all grid points that calculates basis function values and XC contributions one by one , the points are grouped together into blocks for efficiency reasons.; Currently there is no connection between a single grid point and the atom it originally belongs to. One block of points can even contain grid points from multiple atoms. This connection is lost immediately after the grid is constructed. Adding it back is a bit awkward and e.g. `remove_distant_points(extents_->maxR());` needs to be rewritten with the new data structure. This feature is needed for algorithms or methods that look at contributions from atoms when looping over the grid points. Right now, those new things are not needed, and thus not used anywhere, but they will be used for COSX and ddCOSMO. So you might want to access for a given atom all blocks of grid points, where a block has only grid points from that atom. This is what `atomic_blocks` provides. However that leads to a double-loop (see examples) and possibly worse parallelization. For a simple loop over all block, like what is used now, you want to know the atom to which the current block belongs (-> `parent_atom`) to collect values by atom. Two options the developers can chose from. This is part 1 to get it the basics out faster and allow COSX and ddCOSMO development to continue. cubature.cc still needs a big cleanup, but that has to wait.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2336#issuecomment-952307104:150,integrat,integration,150,https://psicode.org,https://github.com/psi4/psi4/pull/2336#issuecomment-952307104,4,['integrat'],['integration']
Deployability,"> I don't reproduce a failure of tests/pytests/test_standard_suite.py::test_mp2_hessian_module on master. I don't have enough details to say more. This test would need a recent qcel/qcng pair to pass. Andy's trying to update his. I'd be surprised if this PR is implicated. @andyj10224, if you rebase as of this morning, the clang CI lane will work again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530:218,update,update,218,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946767530,1,['update'],['update']
Deployability,"> I don't see any issues cropping up. I should make some documentation updates though to inform users how optking inherits logging from psi4. Just that users should make sure to import psi4 before optking for optking to inherit logging from psi4. Great, thanks for checking, @AlexHeide !",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2932#issuecomment-1526615935:71,update,updates,71,https://psicode.org,https://github.com/psi4/psi4/pull/2932#issuecomment-1526615935,1,['update'],['updates']
Deployability,"> I finished about half of the review and then got confused about the ""big picture."" If you're only intending to support point charges, then what happens if a user passes in an external potential object with basis functions attached? I can't find a place in this code that limits the kind of external potentials that can be considered. And why are there lines of code to get and append basis functions from/to the external potential? If you don't intend to support basis function external potentials (and it isn't clear to me if you intend to or not), then there should be a user-friendly error message when a user tries this. And on the topic, what is the technical barrier to including basis function external potentials? Is there a reason why those are being excluded from this PR, if they are?; > ; > I'll need to re-review once changes are made, and this issue of basis function external potentials is clarified. Please see the updated description above. I removes unnecessary code to make this PR specifically for point charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855:933,update,updated,933,https://psicode.org,https://github.com/psi4/psi4/pull/2131#issuecomment-800707855,2,['update'],['updated']
Deployability,"> I got the static_assert error again now. The file it's triggering on hasn't had recent changes, so I don't know why it's popping up now, unless it's an intermittant/brownout strategy to push upgrades. Anyways, switching the llvm version https://github.com/psi4/psi4/pull/2791/files#diff-9f5f8e4d87a7d1fbb0e8f30d1c680c5f42f6af10c04aa81d342c7dfa5af9a99fR10 at least gets the build started. Hmmmm, I see. Thank you for looking into this! I just rebased and pushed again, so we will see if that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2808#issuecomment-1333851983:193,upgrade,upgrades,193,https://psicode.org,https://github.com/psi4/psi4/pull/2808#issuecomment-1333851983,1,['upgrade'],['upgrades']
Deployability,"> I just updated the docs too. One thing I am confused about, why is the `screening` keyword only in the sapt module?. Very good question. @zachglick [added the option](https://github.com/psi4/psi4/commit/e1977af9ae69b77ca518c3169efb23018b51ffb0), so perhaps he can shed some light on this one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-898701048:9,update,updated,9,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-898701048,1,['update'],['updated']
Deployability,"> I may be not quite following the INSIST_FIND_PACKAGE reasoning. ENABLE_PkgName=ON/OFF turns it off completely. And I would like to control bundling. I want cmake to fail when external package isn't found. I am trying to create the FreeBSD port for psi4. Package build infrastructure is all automated, and is very rigorous. So if the package is chosen to be installed externally, there is no reason to even try to download it from github. It's besides the point here, but such downloads are also a security risk, because you don't check the downloaded file's fingerprints.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-343778164:359,install,installed,359,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-343778164,1,['install'],['installed']
Deployability,"> I may not be following this right. I'd say the state of the psi4 active mol during an optimization is arbitrary -- whatever works for you. In cpp-optking, I think the communication was through legacymolecule anyways. The molecule optking is acting on should be updated by the time control returns to the user at the end of the opt. I thought this was already happening through https://github.com/psi4/psi4/pull/2727/files#diff-acf663ccea13592c4c656cf89c7b62e6f5bd3b2e8b4f12ba354129bd39d096f8R1296-R1297 . That's consistent with cpp-optking, and I think that must be happening b/c many of the tests check NRE before and after opt. I want to make sure that the active molecule behavior is as expected. Whatever molecule the driver uses will be updated. This will be either the active molecule OR the passed molecule. If the molecule is passed the active molecule is not updated in any way. All the asserts pass here. ```python; import math. molecule h2o {; pubchem:water; }. molecule h2o2 {; pubchem:hydrogen peroxide; }. # quick comparison. h2o2 is active molecule; h2o2_nre = h2o2.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_nre, active_nre). # optimize h2o2 (active molecule) expect repulsion energy to match; E = optimize(""scf/sto-3g""); h2o2_opt_nre = h2o2.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_opt_nre, active_nre). # optimize h2o. nuclear repulsion does not match. active molecule is still h2o2; # Currently (next commit will fix) h2o2 would be optimized by this call. (optking side issue); E = optimize(""scf/sto-3g"", molecule=h2o); h2o_opt_nre = h2o.nuclear_repulsion_energy(); active_nre = core.get_active_molecule().nuclear_repulsion_energy(). assert math.isclose(h2o2_opt_nre, active_nre); ```; The whole wrong molecule being optimized thing is an optking side issue that is fixed on optking/master.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262796555:263,update,updated,263,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262796555,3,['update'],['updated']
Deployability,"> I really want to know how you stumbled onto this. :-) Yeah, so ""superbigam"" is now 7-7-4-12-7-5, and when I built that in Dec for 2.8.0 I only set the 12 for eri3, forgetting my own advice to make eri2 equal eri3. So rebuilding for 2.8.2, I knew I had to add symbols to the configuration.cc patch for eri2. Started searching patterns and realized I had P twice in the spdfg string. Then realized libmints (where I thought I had copied it from) had the same trouble. Then realized that libint had a mix of troubles.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288:276,configurat,configuration,276,https://psicode.org,https://github.com/psi4/psi4/pull/3130#issuecomment-1932715288,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"> I see no problem in bumping to CMake 3.15+: it's quite easy to get a recent version of CMake. I don't either, for users. Anyone successfully updated cmake on lgtm?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048#issuecomment-761829181:143,update,updated,143,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-761829181,1,['update'],['updated']
Deployability,"> I see that this PR passes without needing to update any tests. Do you think some QCFractal tests would be helpful to have, especially now that we have the distributed driver? I know psi4 has tests that use QCSchema, QCElemental, and QCEngine. Yeah, I think a QCFractal Snowflake test on each of findif, manybody, composite would good, provided solving the dependency env isn't too painful, since a database, etc. are needed. There's unlikely to be a conda pkg for the `next` qcf until September at least.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645#issuecomment-1199824123:47,update,update,47,https://psicode.org,https://github.com/psi4/psi4/pull/2645#issuecomment-1199824123,1,['update'],['update']
Deployability,"> I started running on a remote machine, and even though I have PSI_SCRATCH; set on my local machine, I don't have it set on the remote machine; (probably didn't re-source ~/.bashrc after installing psi4. However, it; should be writing to local disks. I can see psi...clean files in the local; directory, are those scratch files?. No, psi.[pid].clean is a little text file that contains a list of all the; scratch files to clean up. You should look at the list of scratch files in; this psi.[pid].clean file to see where it is writing the scratch files, and; make sure that it isn't to a NFS-mounted directory. Otherwise you'll take; a huge performance hit. On Thu, Mar 1, 2018 at 11:05 AM, Lori A. Burns <notifications@github.com>; wrote:. > Possible, but I really doubt it, as glibc mismatches aren't usually; > healable. Usually this is a symptom of packages depending on different; > versions of a library and symbols getting sometimes loaded one way and; > sometimes another depending on import order. Often fixable by swapping; > import order, but in the psi-in-jupyter case, there's simply nothing to; > swap.; >; > I thoroughly expected this to be fixed when I built with the newer; > compilers and was alarmed when it wasn't. @sergsb; > <https://github.com/sergsb>, would you want to try the conda env line in #862; > (comment) <https://github.com/psi4/psi4/issues/862#issuecomment-347074303>; > ? Possibly more defaults packages have been updated to the new compilers; > since November and healed the problem.; >; > Only thing else I can think of is that I'm still linking libc++ statically; > (which it should be entirely safe to do, being the least-fundamental of the; > glibc, libgcc_s, libstdc++ trio) and that's running into a symbol error; > with the jupyter stack.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/862#issuecomment-369640226>, or mute; > the thread;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369646381:188,install,installing,188,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369646381,2,['install'],['installing']
Deployability,"> I think for a locally compiled psi4 you also have to remove the install dir, if one exists. You're right in general that cmake can find deps in the psi4 installation, which may be unexpected behavior. And it never hurts to remove the install dir. But in this case, should be safe b/c switching out the libint will be in the conda env, so the `libintConfig.cmake` will be there, too. The troublesome scenario I can think of is you have a conda env with libint and libxc, where you're only using the latter in the psi4 build. your libint is a local or cmake compile at am6. then you upgrade the pkgs in the conda env. if, in either the objdir or the install the rpath on the `core.so` isn't set so that the local is before the conda env, then even though cmake got it right, the runtime psi4 will get it wrong. of course, my imagination isn't strong enough to guess _all_ the ways this could go wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463848418:66,install,install,66,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463848418,5,"['install', 'upgrade']","['install', 'installation', 'upgrade']"
Deployability,"> I think this is again in a good shape and also writes now the correct orbital coeff/energies in the FCHK sense, meaning SCF ones.; > Please check the updated main post. What do you mean? If you run OO-CC, does the checkpoint file contain the original HF orbitals, or the OO-CC orbitals?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-670512939:152,update,updated,152,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-670512939,1,['update'],['updated']
Deployability,"> I want @CDSherrill to confirm that these changes to the SAPT parameters are meant to come in now.; > ; > The fact that you can change this parameter _without breaking tests_ indicate that our SAPT(DFT) tests are not good enough. I think we have manually set `set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp` in the previous SAPT(DFT) tests, and that's why changing the default value of `SAPT_DFT_EXCH_DISP_SCALE_SCHEME` from `disp` to `fixed` won't break the tests. ; Should we update these tests with `SAPT_DFT_EXCH_DISP_SCALE_SCHEME` set to `fixed`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1165674151:473,update,update,473,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1165674151,1,['update'],['update']
Deployability,"> I would indeed like to, yes. 👍 . > The Psi4/GauXC interface supports using internally-built instances of GauXC. At first thought, we should be able to add it to Azure using the internal GauXC build process, right?. Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059:328,pipeline,pipelines,328,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2277999059,2,['pipeline'],"['pipelines', 'pipelines-linux']"
Deployability,"> I would keep the ""COSX"" for recognition. That's a good point; ""COSX"" is a fairly well-known algorithm. For consistency throughout the psi4's `libfock` library, I think it would be good to call it ""COSK"" over ""COSX""; all reference to the exchange matrix use the variable ""K"". > This PR implements 2 grids instead of 3? That Turbomole team showed it worked well, just asking. Yes, the SCF is first converged on a small grid (specified by `COSK_RADIAL_POINTS` and `COSK_SPHERICAL_POINTS`). Afterwards, a single iteration is performed on a larger grid (specified by `COSK_RADIAL_POINTS_FINAL` and `COSK_SPHERICAL_POINTS_FINAL`). A good future mini-optimization would be to add a third medium grid, which would be used to converge the SCF after the small grid but before the final grid evaluation. > I am in general for a simple way of setting quadrature grids, psi4-specific named grids. That is a bigger project though. Here it would be enough to have an efficient default and in the manual a suggestion how to make a tight/accurate one. After we gain experience with the psi4 COSX we can make a couple useful defaults. I agree, it would be nice to have named quadrature grids. For now, I'll update the manual with some recommended spherical/radial point values.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567#issuecomment-1116516160:1191,update,update,1191,https://psicode.org,https://github.com/psi4/psi4/pull/2567#issuecomment-1116516160,2,['update'],['update']
Deployability,"> I'd like some confidence that these changes really are essential preparation for work-in-progress in the CDS group that you expect to be submtited soon. Both of these changes are necessary for semi-numerical exchange, which I plan to submit in the next week or two. Because these changes touch important parts of the SCF/JK code but shouldn't change any existing behavior, I thought it would be best to submit them separately. > Can you give me an outline, or a draft PR, of how this responsibility transfer simplifies Incremeental Fock?. Sure, I'll do my best to explain. As you probably know, `JK` objects are used throughout the codebase via calls to `JK::compute()`. In SCF, many calls to `JK::compute()` are made interspersed with updates to the object's orbitals. `JK::compute()` does a [few things](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.cc#L550): performs sanity checks, creates densities from the orbitals, zeroes out the object's `J`/`K`/`wK` matrices, and finally calls the virtual function `compute_JK()`, which is where each child class implements some algorithm to fill `J`/`K`/`wK`. Now consider incremental Fock construction. Instead of recomputing `J`/`K`/`wK` each SCF iteration, the previous iteration's `J`/`K`/`wK` are added to a `J`/`K`/`wK` computed with the difference in densities between the current and previous iterations. As [implemented in the `DirectJK` class](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.h#L724-L734), this accomplished by storing the entire `J`/`K`/`wK` matrices of the previous iteration, computing the difference density update to `J`/`K`/`wK`, adding the two together, and storing in the `JK` objects `J`/`K`/`wK` matrices. This requires a lot of [convoluted bookkeeping](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/DirectJK.cc#L138-L217). Future JK classes that would want to do incremental Fock build would have to duplicate a lot of code, too. Instead, a much simpler approach",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2529#issuecomment-1089141879:738,update,updates,738,https://psicode.org,https://github.com/psi4/psi4/pull/2529#issuecomment-1089141879,2,['update'],['updates']
Deployability,"> I'm able to confirm the report and also simplify the example. (We appreciate the report. We also appreciate examples that are as simple as possible.); > ; > ```; > ### Setup; > ; > molecule dimer {; > He; > X 1 R ; > He 2 1.0 1 180 ; > }; > ; > set basis 6-31G(d); > ; > Rvals = [1.4, 1.5]; > ; > ### Compute; > ecp = {}; > for R in Rvals:; > dimer.R = R ; > ecp[R] = energy(""mp2""); > ; > ### Printout; > psi4.print_out(""\n""); > psi4.print_out("" R [Ang] E_int [kcal/mol] \n""); > psi4.print_out(""-----------------------------------------------------\n""); > ; > for R in Rvals:; > psi4.print_out("" %3.1f %10.6f\n"" % (R, ecp[R])); > ```; > ; > The position of atoms defined relative to a dummy atom in a Z-matrix aren't getting updated, it seems. @loriab. Thank you for the confirmation. We are undertaking a couple of force field optimization project which will require 30K or more energy surface scan using PSI4. We would highly appreciate if this issue could be solved soon. Thank you.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2880#issuecomment-1440673966:727,update,updated,727,https://psicode.org,https://github.com/psi4/psi4/issues/2880#issuecomment-1440673966,2,['update'],['updated']
Deployability,"> I'm building Libint2 via Psi4; I wouldn't have this error otherwise ;). The hartree-fock++ test case won't happen, but the eigen3 detection can still be a problem even with pre-built because the l2 c++ interface needs it to compile p4 against. > I'm waiting on Ed to release a stable updated version of Libint2, so that I can package it in Fedora. I've seen some clues that he's waiting on this. I need to get the mpfr and eigen3 detection fixed before I can start ready-to-merge negotiations. Also, I don't know if EFV is planning the sph-ordering-as-runtime-option for the 2.7 release so that psi can use the Fedora distribution.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203:269,release,release,269,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737442203,3,"['release', 'update']","['release', 'updated']"
Deployability,> I'm having second thoughts about this PR now. Should we deprecate the old constructors first? This PR will require changes in Forte as well. options as I see them. I do think we should try to get the changes into one psi4 release cycle. * (n/c) leave convenience fns as-is; * (deprecate) leave convenience fns operable but add deprecation message; * (upgradehelper) leave convenience fn header in place but have it print a message with necessary changes; * (remove) remove convenience fn header and body,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2693#issuecomment-1256461715:224,release,release,224,https://psicode.org,https://github.com/psi4/psi4/pull/2693#issuecomment-1256461715,2,"['release', 'upgrade']","['release', 'upgradehelper']"
Deployability,"> I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself. I fuzzily remember being able to successfully run the tests with a version from a couple years ago, so 2020-22 era MRCC was OK I think, but I remember having to install the patches, otherwise neither Psi4 or Molpro would work with MRCC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542:296,install,install,296,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070650542,4,"['install', 'patch']","['install', 'patches']"
Deployability,"> If we're updating basis sets, I'll need to re-check the PR, and this belongs in 1.5. They're not updated; the sets in the BSE are identical to the ones in Psi4. Only the formatting has been fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2254#issuecomment-883574735:99,update,updated,99,https://psicode.org,https://github.com/psi4/psi4/pull/2254#issuecomment-883574735,1,['update'],['updated']
Deployability,"> If you know of any conventions for handling plugins/libgcc dependencies within conda... The default anaconda channel includes a libgcc, so you can declare a depenency on it. I assume you've considered that and it's the wrong version or something? Generally, you don't need to have everything statically linked in conda, since you can either provide shared libraries in your package or depend on other packages that include shared libraries, and everything will be patched up with `RPATH`s.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172149716:466,patch,patched,466,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172149716,1,['patch'],['patched']
Deployability,"> In cases where reference values are not matched perfectly (but the test should pass) is it better to loosen the comparison or update the reference value. I assume updating the reference value is the way to go but I want to have some record of asking before I start slightly changing reference values. > Secondarily, should the reference values be updated in general at some point so that users don't stumble across an instance where the value is slightly off and wonder why?. General guidance to for ref values to be from a tightly converged/optimized calc, then loosen the comparison check to accommodate the default/existing conv crit (https://psicode.org/psi4manual/master/add_tests.html#test-contents). Tests checking opt status at a certain cycle exempt of course. That's the principle, but do feel free to change as you see fit --- the reference values (agreed, preferred thing to change if the ref is the culprit) or the comparison crit (if it's the optimizer behavior that's the instigator). > Explanation:; I've expanded the number of tests I'm running since I started cleaning up core.cc. In the opt specific tests the convergence is usually tight enough that the nuclear repulsion energies match the reference values just fine for both optimizers. There are some tests like cc1-3 that are failing due to being just above threshold. atol = 0.001 the difference is ~ 0.0017. These tests are using the default qchem convergence criteria ~ 3e-4 max_force. Both optimizers finish well below the criteria and geometries match to 1e-4 Angstroms and 0.001 degrees. Geometries are the same. There are around 5 or 6 tests failing like this. Thanks for the explanation. I'd view reference NRE values as less venerable. For one thing, only those that caused trouble were even updated when physical constants changed, iirc. > Would y'all like this PR to include updated output.ref files for the tests or would a separate test updating PR be better? I don't see anything in the"" adding tests documentat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262549464:128,update,update,128,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262549464,4,['update'],"['update', 'updated']"
Deployability,"> In what way is the copy from <builddir>/objdir/stage to CMAKE_INSTALL_PREFIX going awry?. It installs the files into the inner stage directory location, see above files that retained their directory ```/wrkdirs/usr/ports/science/psi4/work/.build/stage```.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1214425842:95,install,installs,95,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1214425842,1,['install'],['installs']
Deployability,"> Independent of the options issues -- should something be patched/changed such that if the user/a program/etc passes a nonsense `num_frozen_docc`, the program gives a sensible error rather than segfaulting?. Yes. Lori's comment was ""trick you can use to prevent accidentally stumbling into this again,"" not a fix. `scf::HF::compute_fcpi` probably needs a validation check...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1193180818:59,patch,patched,59,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1193180818,1,['patch'],['patched']
Deployability,"> Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated. I think it'd be most useful to continue scf5 as a regression test. That is, record new refs for the in-between-conv-and-df algorithms collected at tight convergences, then check them against usual 6 decimal places. Then we'll know in future if code changes affect the algorithms. How are you generating the `samples/` files? If it's any other way than autogenerated via the docs build, please don't go to the trouble. We can catch the changes en masse before release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1309119956:883,release,release,883,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1309119956,2,['release'],['release']
Deployability,"> Is there a reason this issue still needs to be open?. Hi, Jonathon. `conda install psi4 -c psi4` will install 1.7 version, not the 1.8. Is there any reson that the default `conda install psi4 -c psi4` not install the latest production version 1.8?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1608794583:77,install,install,77,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1608794583,4,['install'],['install']
Deployability,"> It would be good for me to write a test case for everything I check as part of DCT and Linear Dependencies #2231. Should this live in ctests or pytests? I'm not clear on test best practices at this point in Psi development, since we want to mover over to pytests eventually. Even then, right now is a bad time to write the test since Fix GEMM errors in presence of linear dependencies #2232 will change the reference output. In the beginning I may have had (and spoken) dreams of rewriting all the ctests in psiapi for pytest, but I've since been talked down, and the plan is to allow each ctest input.dat to stay where it is and be wrapped in a pytest test (like psi4numpy). There'll have to be extra install steps to position the ctest inputs into the python module directory. Upshot is it's fine to continue choosing psithon or psiapi style for writing new tests, mostly depending on testing style convenience and whether the test would serve as an easy model for users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663:704,install,install,704,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-873124663,2,['install'],['install']
Deployability,"> It'd be helpful to see the output from your configuration step. That is, the `cmake -S. -Bobjdir` result. Are you seeking to use other than MKL?. I am using MKL and eigen build from source code.; here is the cmd line for cmake . `cmake .. -DCMAKE_INSTALL_PREFIX=./install -DEigen3_DIR=/home/yuyeqing/software/eigen3`. and I also export MKL and eigen in bashrc by . ```; export MATH_ROOT=""/home/yuyeqing/intel/oneapi/mkl/latest""; export LD_LIBRARY_PATH=""/home/yuyeqing/intel/oneapi/mkl/latest/lib/intel64:$LD_LIBRARY_PATH""; export EIGEN3_ROOT=""/home/yuyeqing/software/eigen3/include""; ```. cmake output the result log like this:. ```; -- Building using CMake 3.26.4 Generator Unix Makefiles; -- Setting option BUILD_SHARED_LIBS: OFF; -- Setting option CMAKE_BUILD_TYPE: Release; -- Setting option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; -- Setting option ENABLE_OPENMP: ON; -- Setting option ENABLE_AUTO_BLAS: ON; -- Setting option ENABLE_AUTO_LAPACK: ON; -- Setting option ENABLE_PLUGIN_TESTING: OFF; -- Setting option ENABLE_CYTHONIZE: OFF; -- Setting option ENABLE_CODE_COVERAGE: OFF; -- Setting option ENABLE_BOUNDS_CHECK: OFF; -- Setting option ENABLE_ASAN: OFF; -- Setting option ENABLE_TSAN: OFF; -- Setting option ENABLE_UBSAN: OFF; -- Setting option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 5; -- Setting option FC_SYMBOL: 2; -- Setting option BUILD_FPIC: ON; -- Setting option CMAKE_INSTALL_LIBDIR: lib; -- Setting option PYMOD_INSTALL_LIBDIR: /; -- Setting option psi4_INSTALL_CMAKEDIR: share/cmake/psi4; -- Setting option TargetLAPACK_INSTALL_CMAKEDIR: share/cmake/TargetLAPACK; -- Setting option TargetHDF5_INSTALL_CMAKEDIR: share/cmake/TargetHDF5; -- Setting option ENABLE_GENERIC: OFF; -- Setting option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting option psi4_CXX_STANDARD: 17; -- Setting option psi4_CXX_STANDARD_Libint2: 17; -- Setting option SIMINT_VECTOR: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119:46,configurat,configuration,46,https://psicode.org,https://github.com/psi4/psi4/issues/2998#issuecomment-1620485119,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"> It's missing finding the `libiomp5.so`. In a oneapi installation, it's in a different directory than `libmkl_rt.so`, so you source the whole oneapi install or add more to ld_library_path. Alternately, all this can be got from conda. If you have the `mkl-devel` and `mkl` packages installed, the iomp5 lib should be available. Second alternately, you can specify the location of the dir containing iomp5 by `-D OpenMP_LIBRARY_DIRS=""/path/to/dir/containing/iomp5_lib`.; > ; > There's some additional notes in #2965 in case helpful. Very appreciate! It works!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998#issuecomment-1622809815:54,install,installation,54,https://psicode.org,https://github.com/psi4/psi4/issues/2998#issuecomment-1622809815,3,['install'],"['install', 'installation', 'installed']"
Deployability,"> Let me make sure I understand this:; > ; > The old behavior was that l2_shells_ was being populated at object construct time. This makes perfect sense if various fields used in constructing the libint2::shell were const, but they are not. Instead, we're migrating the libint2 construction to its own function so it can be called if these fields ever get changed, as #3036 does.; > ; > Is that all correct?. Yes. The point is that if you change data in BasisSet, the data in the Libint2 shells don't update, and one needs the ability to refresh that data as well based on the master data in BasisSet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3037#issuecomment-1695975377:501,update,update,501,https://psicode.org,https://github.com/psi4/psi4/pull/3037#issuecomment-1695975377,1,['update'],['update']
Deployability,> Let's postpone the tighter conv checking and merge this to get it into the upcoming 1.7 release. Fine by me.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767#issuecomment-1337772443:90,release,release,90,https://psicode.org,https://github.com/psi4/psi4/pull/2767#issuecomment-1337772443,1,['release'],['release']
Deployability,"> New LinK PR opened, comments on this are certainly welcome, but I still need to make my tests and update the docs. Ping me when it's done, and I'll review it then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-974342373:100,update,update,100,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-974342373,1,['update'],['update']
Deployability,"> Not really. The internal stage directory was a compromise so that developers could continue to never have to type make install and was a prerequisite to them approving the transition from GNUMake to CMake at all. This very difficult to relate to. Why can't they just use a simple script like this:; ```; $ cat ~/bin/make-and-install; #!/bin/sh. make ""$@"" && DESTDIR=`pwd`/stage make install; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325804931:121,install,install,121,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325804931,6,['install'],['install']
Deployability,"> OK! So this PR goes to `master`. After it is merged, I will cherry pick and make a PR to `1.3.x`. Sounds good. Slight complication is that when I wrote the versioner.py script that computes our version (and integrates w/cmake), I had the misguided notion that all commits on a release branch were version increments (that is, your PR would turn into v1.3.1 or .2), so I'll have to unwind that scheme before any proper tag of a v1.3.1 w/your PR. Just FYI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1560#issuecomment-468755492:209,integrat,integrates,209,https://psicode.org,https://github.com/psi4/psi4/pull/1560#issuecomment-468755492,2,"['integrat', 'release']","['integrates', 'release']"
Deployability,"> Only things that come to mind are comment out `import forte` as unneeded and fix the quotes around `scf` (may just be font). Posting code by triple backtick rather than screenshot makes it possible to copy. Thank you. I tried what you suggested, but the result is still the same. Also, I ran the example that came with the psi4/tests folder, and it turned out to be the same, so I thought it might be something wrong with my installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2900#issuecomment-1471582665:427,install,installation,427,https://psicode.org,https://github.com/psi4/psi4/issues/2900#issuecomment-1471582665,1,['install'],['installation']
Deployability,"> Perhaps a starting point can be porting a few packages in https://github.com/psi4/psi4meta/tree/master/conda-recipes? It'll need to happen for this to succeed, it doesn't require agreeing on a concrete strategy for the full path, and even if for some reason the larger effort fails, it's still a small value add. > I am happy to get the ball rolling, but I do need some direction on which package(s) would be good starting point(s) and maybe in which order. Thanks for the help, @mattwthompson. I think CheMPS2 might be a good one to start with.; * source is LTS; * it's been a psi4 add-on since pre-1.0, so expected to be around; * C++, so some challenge, but not Fortran; * requires LAPACK and probably needs different build config for MKL (all psi4 needs) and OpenBLAS; * does have a python interface, pychemps2, that psi4 packages for completeness but doesn't itself use. the psi4 recipe is set up to produce one C++ library package and n * Py python module packages pinned to the C++ pkg, but at least for gau2grid, I failed to get c-f's system to not produce n * Py C++ library packages, so the multiple-output form of the psi4 recipe may not be suitable for c-f. If after looking at the table, you see lower-hanging fruit that you'd like to try, feel free. I'll note that gcp/dftd3/dftd4 are all sort of the same case. Historically (and what you'll see in the psi4 recipes repo), I took the venerable Fortran tarballs, added CMake and built them with Intel. The Grimme group, notably @awvwgk has been rewriting some of the older code (with tests!) and setting up meson builds of the new packages on c-f. Lately, he's been adding CMake as an alternate buildsys, which is friendlier (in my view) to MKL and Mac/Win. I just tried a `conda create -n d3test python=3.9 simple-dftd3 dftd4-python gcp-correction blas=*=mkl -c conda-forge` on Mac and it solved correctly and didn't bring anything objectionable (openblas or gomp). If that's the case for Linux, too, (to which I don't have access toda",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-946049791:344,rolling,rolling,344,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-946049791,2,['rolling'],['rolling']
Deployability,"> Perhaps you've got strict channel priority active?. I would suspect this is the case, if the channel order is changed to ; ```; channels:; - psi4; - conda-forge; ```; , I was able to install on linux and the tests were also passing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621#issuecomment-1164977280:185,install,install,185,https://psicode.org,https://github.com/psi4/psi4/issues/2621#issuecomment-1164977280,1,['install'],['install']
Deployability,"> Please update the error message to say that the grid is unusable with COSX, rather than ""better fix"" incoming. > See above. > Maybe language like ""The definition of the current grid includes negative weights. As these are not suitable for the COSX implementation, please choose another grid through ..."". Done and done! Wording changed to match these suggestions. Also, for those not at the Psi4 dev meeting today, it was agreed upon that this PR would indeed be the final fix to the COSX grid issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906#issuecomment-1497977769:9,update,update,9,https://psicode.org,https://github.com/psi4/psi4/pull/2906#issuecomment-1497977769,1,['update'],['update']
Deployability,"> Psi4 does not have X2C analytic gradients. If a previous version of Psi4 let you calculate them, that was > probably a bug, and they would not have agreed with the numerical gradients. That is really a bad news, I have done some kind of x2c related calculations in Psi4 version 1.4, I will recheck!. > ...It's _probably_ possible to add X2C analytic gradients to Psi4, with updates in Libint. This is good news!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3151#issuecomment-2034324517:376,update,updates,376,https://psicode.org,https://github.com/psi4/psi4/issues/3151#issuecomment-2034324517,1,['update'],['updates']
Deployability,"> Reference values for PCM excitation energies can be found here. ~~I guess for the tests to work, the above stuff with `nonequilibrium` needs to be integrated first~~ 😅; Yes...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-693220292:149,integrat,integrated,149,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693220292,1,['integrat'],['integrated']
Deployability,"> Still having trouble getting the `density_tolerance_` variable in SuperFunctional updated when I set the cutoff value through the LibXCFunctional class. Is this necessary at all? I mean, do we want to set the density cutoff _also_ through the LibXCFunctional class? How much flexibility is wanted?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-611050691:84,update,updated,84,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-611050691,1,['update'],['updated']
Deployability,"> Tarballs downloaded from GitHub are not git repositories. We use them in FreeBSD ports.; Nothing important should be hard-wired to Git during build/tests. I agree broadly, though I'd sacrifice it to get fine-grain versioning for cross-project communication if needed :-). The way psi is set up now, if the buildsys detects that it's not a git repo, it substitutes some generic most-recent-tag info and proceeds, so that one gets a working build. When I try, it works as planned:. acquire tarball; ```; > curl -L https://github.com/psi4/psi4/tarball/master -o psi4_v17.tgz; ```; configure and build -- it detects ""no git""; ```; # configure (all req'd deps detected except optking to be build from src); > cmake --build . -j12; ...; [ 88%] Performing build step for 'psi4-core'; [ 1%] Generating version info; [ 1%] Building CXX object src/psi4/lib3index/CMakeFiles/3index.dir/dftensor.cc.o; ...; [ 2%] Building CXX object src/CMakeFiles/l2export.dir/export_mints.cc.o; Blindly (no git) accepting release version: 1.7+6ce35a5 (recorded); 1.7 {} 6ce35a5 1.7.0.0 release 1.7 <-- 1.7+6ce35a5; [ 2%] Built target update_version; [ 2%] Building CXX object src/psi4/libciomr/CMakeFiles/ciomr.dir/dsyev_ascending.cc.o; ...; ```; version computes and simple test, distributed driver tests, and dftd3 addon tests work ok; ```; > stage/bin/psi4 --psiapi # execute results; >>> stage/bin/psi4 --version; 1.7; >>> ctest -R tu1; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 426: tu1-h2o-energy; 1/1 Test #426: tu1-h2o-energy ................... Passed 1.65 sec. 100% tests passed, 0 tests failed out of 1; >>> ctest -R ddd; Test project /psi/gits/tarbuild/psi4-psi4-4d94910/objdir-py310; Start 479: ddd-deriv; 1/2 Test #479: ddd-deriv ........................ Passed 13.18 sec; Start 481: ddd-function-kwargs; 2/2 Test #481: ddd-function-kwargs .............. Passed 170.20 sec. 100% tests passed, 0 tests failed out of 2; >>> ctest -R dftd3; Test project /psi/gits/tarbuild/psi4-psi4-4d94",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:997,release,release,997,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,2,['release'],['release']
Deployability,"> Thanks for taking this on Andy! It will be very useful to have IBOs outside of the FSAPT code.; > ; > I imagine a lot of psi4 users will want to export and visualize local orbitals. For this reason, we definitely want the IBOLocalizer exposed py-side as well, same as the other two localizers. See `export_mints.cc`; > ; > Something else we should think about (other devs please chime in) is how the various derived `Localizer` classes can be modified to have as similar method signatures as possible. The `BoysLocalizer` and `PMLocalizer` have a `void`-type `localize()` function and accessors `L()` and `U()`. The `IBOLocalizer` class has no accessors and instead returns a map of info from the `localize` function. I'm not sure which of these designs I prefer, but I think the three derived classes should at least be consistent.; > ; > Lastly, I noticed that there aren't really any tests or docs on the various localizers (except for class autodocs). It would be super nice if we could get one or both of those. Hey Zach and all, I just updated the code to conform to the convention of the other localizers. I split the old multi-argument `localize` function in `IBOLocalizer` into the `localize` and `update_fock` methods inherited from the Localizer base class.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2385#issuecomment-1013779467:1044,update,updated,1044,https://psicode.org,https://github.com/psi4/psi4/pull/2385#issuecomment-1013779467,1,['update'],['updated']
Deployability,"> Thanks. The question of ""when do we _use_ an incremental build?"" needs to be settled (which it isn't yet - see Susi's comment) before I can approve this. Hi Jonathon, I just implemented Susi's suggestion about the `d_convergence`. I also updated the necessary tests (`density-screen-1` and `density-screen-2`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-943469458:240,update,updated,240,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-943469458,1,['update'],['updated']
Deployability,"> The addition of libint2 causes Psi4 to not build. Libint2 is trying to compile the hartree-fock++ test, which depends on Eigen3, which it is not finding for some reason even though I have it installed as a system package. Are you using the latest psi4-dev package (.dev22)? That adds the `mpfr` and `eigen` deps to the build environment. I definitely acknowledge that the `Libint2Config.cmake` is not handling `find_dependency` right for eigen and mpfr (really, gmp) yet. I do have cmake edits for those locally, but I have not yet bent cmake to my will. So having the conda packages in place patches the problem. Does your system package have a `Eigen3Config.cmake`? Maybe expand CMAKE_MODULE_PATH?. > Libint2 tests should be disabled in the Psi4 build, or the Eigen3 dependency added so that the build works even in the lack of a system package. All of Psi4 master is now running Libint2 -- any references to Libint1 or Libint1_t (a hack to allow both to coexist) are only waiting for removal. > (Note: libint2 is also suffering from the -march issue; the libint2 CMake files need to be updated.). Thanks for the reminder. I've just edited it locally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125:193,install,installed,193,https://psicode.org,https://github.com/psi4/psi4/issues/2046#issuecomment-737386125,3,"['install', 'patch', 'update']","['installed', 'patches', 'updated']"
Deployability,"> The libint package needed is in a dev label of conda-forge. You can install psi4 1.8 with; > ; > ```; > conda install psi4 -c conda-forge/label/libint_dev -c conda-forge ; > ```. Dear Philip,. Thanks so much for your information",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1606717136:70,install,install,70,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1606717136,2,['install'],['install']
Deployability,"> The only question I have is about the use of DIIS in e.g. coupled-cluster. There, one typically does bare updates combined with some DIIS iterations in-between. Is this completely unrelated to `DIIS_MIN_VECS`?. No. Correlation methods that use DIIS have their own `DIIS_MIN_VECS` keyword and use that to decide when to call the DIIS extrapolater. This is why I only deprecated the SCF version of the keyword.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010208672:108,update,updates,108,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010208672,1,['update'],['updates']
Deployability,"> The other files are split based on the components. I guess we could in theory split the complete XC functionals exposed by libxc into the other categories, but this way they are all kept together and can be updated easier. So I guess if you want a hybrid, you have to check two files (as opposed to several), which is not that terrible. Yes, and hybrid metas one might look for in three files. Without merging all into one file, I agree the present organization is reasonable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-764396454:209,update,updated,209,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-764396454,1,['update'],['updated']
Deployability,"> The other major issue is the docs. I'll need to update the section describing excite state psivars, but @loriab, how do you feel about grouping psivars together? See discussion https://github.com/psi4/psi4/pull/2462#discussion_r822344906. I'd still strongly favor something like the below. It lets the variables (n,m,h,i) be defined in the definition, and new methods can join existing psivar entries. Also just less visual clutter when all but the methods line up. What do you think?. ```; .. psivar:: ADC ROOT n TOTAL ENERGY; TDDFT ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY; CCSD ROOT n TOTAL ENERGY; ... def incl n. .. psivar:: TDDFT ROOT n (h) -> ROOT m (i) OSCILLATOR ENERGY; CCSD ROOT n (h) -> ROOT m (i) OSCILLATOR ENERGY. def incl n, m, h, i; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2569#issuecomment-1129510593:50,update,update,50,https://psicode.org,https://github.com/psi4/psi4/pull/2569#issuecomment-1129510593,1,['update'],['update']
Deployability,"> The pull has been corrupted with extraneous changes. You're welcome to heal the git history by whatever procedure seems best to you. But if you don't know what that might be, you could do a fresh clone from master locally, set up origin and upstream, update it to psi4/psi4:master (`git pull --rebase upstream master`), check out a new branch (`git checkout -b matsizecheck`), edit just your one function in `matrix.cc`, commit that, then *force push* to the branch associated with this PR. So assuming `git remote -v` has `origin` pointing to GH:aquaticseatard/psi4 and `upstream` pointing to GH:psi4/psi4, then you'd `git push origin matsizecheck:master --force`. That will return this PR to one commit of just your changes. (Note that if you did the previous command without the `--force`, git would complain about history and suggest you pull. Pulling here is fatal and the cause of the history contamination. You *want* to overwrite history. It's fine as it's only your own, not a shared, branch.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2729#issuecomment-1267125697:253,update,update,253,https://psicode.org,https://github.com/psi4/psi4/pull/2729#issuecomment-1267125697,1,['update'],['update']
Deployability,"> The some-subtype-values-not-applicable-to-some-scftype-values doesn't bother me too much -- after all, direct, cd, etc. can't take any subtype value besides auto. So long as the read_options docstring is clear and the code rejects non-meaningful subtype choices, I don't think users are led astray. That's all fair, to be honest, although I agree moreso with your second paragraph below, and what you said about indistinctness between algorithm choice and memory transition choice is applicable for sure.; ; > All the same, I'm not hearty on my suggestion because it seems a little indistinct between algorithm choice (usually scftype) and memory transition choice (usually subtype). Maybe, if designed from scratch, there'd be `YOSHIMINE_PK`, `REORDERED_PK`, and `PK` as `scftype`s and then PK `subtype`s `OUT_OF_CORE` and `INCORE` would fit the DF pattern nicely. That might well be considered too much reengineering at this point in the release cycle. This is true, and a point I hadn't considered, either. I wouldn't mind taking such a project on, but I would probably save it for after v1.8. > So minimum change, unless others chime in, is leave as-is and add the `PK_NO_INCORE` to the deprecation messages here https://github.com/psi4/psi4/blob/master/psi4/src/core.cc#L553. Will do!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2926#issuecomment-1520631012:942,release,release,942,https://psicode.org,https://github.com/psi4/psi4/pull/2926#issuecomment-1520631012,2,['release'],['release']
Deployability,"> The test that is currently failing is a test in `gcp/pbeh3c/`. This is due to an optking side issue where the `CustomHelper` class being used by optking is not accepting a `psi4.core.Molecule` the type checking was looking for `qcdb.Molecule`. As a backup optking defaulted to psi4's active molecule.; > ; > This is the call. `E = optimize('pbeh3c/def2-msvp', molecule=unopethene)`; > ; > optking takes the molecule here in the driver and uses a default fallback instead: ` opt_object = optking.opt_helper.CustomHelper(molecule, params=optimizer_params)`; > ; > The type check will get changed in optking to include `core.Molecule`. An alternative question this raises for me is whether the active_molecule should get updated at some point in the optimization. Updating the active molecule patches the issue but is that desired?. My vote would be ""no""; it's too much like changing the input. However, I do think that some users would expect the final active molecule to be updated for them. And workflows inside the python input may seem more intuitive that way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1260048655:720,update,updated,720,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1260048655,6,"['patch', 'update']","['patches', 'updated']"
Deployability,"> There is 1 algorithmic difference I'd be concerned about, from looking at the two outputs. New optking doesn't consider the most recent step in the hessian updating procedure - cpp-optking did. I've found three pieces of logic that explicitly or implicitly prevent updating with the most recent step in all or specific cases. I'd have to ask @psi-rking if this is a bug or was changed due to some stability concern. Interesting. This does not ring a bell for me. I take the question to be ""given a hessian and the current forces (beyond the first step) should you update the hessian with those forces before using them to calculate the step?"" Can you point to the code? IDK, probably best answer is whatever works better in practice and doesn't cause problems. Actually, it's possible I did this because I learned to avoid hessian updating when displacements are very small (or the geometries are very close). Perhaps I didn't want to update hessian until I knew the step size.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262708139:566,update,update,566,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262708139,4,['update'],['update']
Deployability,"> These release notes will be relative to 4.0beta5 from July 2013. I think it would also be beneficial to have a high-level list of additional methods since PSI3, not necessarily in the Release Notes though, but possible close to the table of methods in the documentation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367#issuecomment-232778689:8,release,release,8,https://psicode.org,https://github.com/psi4/psi4/issues/367#issuecomment-232778689,2,"['Release', 'release']","['Release', 'release']"
Deployability,"> This makes sense, but I would highly recommend an explicit test that rebuilds various quantities at this point.; > ; > Thanks for finding and fixing!. That's a good idea, I updated the test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2112#issuecomment-782913552:175,update,updated,175,https://psicode.org,https://github.com/psi4/psi4/pull/2112#issuecomment-782913552,1,['update'],['updated']
Deployability,"> Three hours and nine minutes, according to the timestamps I have for relevant events. I believe the build ran on a 32-thread (16-core) intel broadwell (with ample memory to avoid paging, for however much that helps), and the build was the only event happening on the machine at that time. (I am a little unsure, though, as it's a build-server, and I don't have any way of telling who else might've submitted a build job to the machine at that time. It was ~1AM on a Saturday, though, so probably just me). Also, the .so file generated was 925MB, if that's of any interest. Thanks for the info. It must be the Intel compiler and multiarch flags that lengthen my builds by an order of magnitude. > Should I worry at all that the tarball represents a WIP in terms of the actual integral files? Or does the trial status only regard the configuration?. I expect the integral files in that tarball to be perfectly good. I've checked my local diff again, and nothing else should be harmful. One caveat is that the integrals author generally dissuades building AM>7, so I had to defeat those checks, but I know people who have built higher than that tarball (albeit different versions of the code) without known ill effects. If you've got an `.so`, and psi4 passes a few tests, I think you're good to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2586#issuecomment-1133805493:834,configurat,configuration,834,https://psicode.org,https://github.com/psi4/psi4/issues/2586#issuecomment-1133805493,1,['configurat'],['configuration']
Deployability,"> Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - Changes ORBSYM (the symmetry of each orbital) from Psi4's internal; > convention of ordering irreps to the traditional FCIDUMP ordering; > - Adds ISYM (the symmetry of the overall wavefunction); > - Updates the fcidump test to match new ordering; >; > Questions; >; > - Does this change in convention break anything in Psi4? (Or anything; > that uses Psi4?); > - Since I altered the tests to match the output, how to verify; > correctness of this change?; >; > Checklist; >; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1453; > Commit Summary; >; > - added helper function, correct ORBSYM output; > - added isym to fcidump, updated tests; >; > File Changes; >; > - *M* psi4/driver/p4util/fcidump.py; > <https://github.com/psi4/psi4/pull/1453/files#diff-0> (29); > - *M* tests/fcidump/Ne.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-1> (3); > - *M* tests/fcidump/Ne.C1.6311G.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-2> (1); > - *M* tests/fcidump/Ne.C1.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-3> (1); > - *M* tests/fcidump/Ne.cc-pVDZ.UHF.INTDUMP.ref; > <https://github.com/psi4/psi4/pull/1453/files#diff-4> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1453.patch; > - https://github.com/psi4/psi4/pull/1453.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1453>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdjvy0hVobCbhOq3qA4biT25rt88rk",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754:1346,update,updated,1346,https://psicode.org,https://github.com/psi4/psi4/pull/1453#issuecomment-451294754,1,['update'],['updated']
Deployability,"> Unless your molecule has a couple hundred atoms, that does sound slow. The molecule is big, but not that big -- about 50 atoms (mostly C and H). . > You're setting PSI_SCRATCH to a local disk, not a network disk?. I started running on a remote machine, and even though I have `PSI_SCRATCH` set on my local machine, I don't have it set on the remote machine (probably didn't re-source `~/.bashrc` after installing `psi4`. However, it should be writing to local disks. I can see `psi...clean` files in the local directory, are those scratch files?. > Go ahead and run this to make sure you're getting threading. Based on the script you sent, it does appear that threading is working (see below), however, I have noticed that during my geometry optimization and single point energy that most of the time `psi4` is running with a single thread according to `top`. I ran `psi4` using `psi4 input -o output -n 12`, is that correct?. ```; Threads set to 1 by Python driver.; Time for threads 1, size 200: Psi4: 0.000708 NumPy: 0.000670; Time for threads 1, size 500: Psi4: 0.009402 NumPy: 0.009941; Time for threads 1, size 2000: Psi4: 1.583517 NumPy: 0.586573; Time for threads 1, size 4000: Psi4: 4.562361 NumPy: 4.587518; Threads set to 6 by Python driver.; Time for threads 6, size 200: Psi4: 0.000143 NumPy: 0.000212; Time for threads 6, size 500: Psi4: 0.001804 NumPy: 0.002355; Time for threads 6, size 2000: Psi4: 0.105539 NumPy: 0.108854; Time for threads 6, size 4000: Psi4: 0.839776 NumPy: 0.858277; NumPy@n6 : Psi4@n6 ratio (want ~1): 1.02; Psi4@n1 : Psi4@n6 ratio (want ~6): 5.43; 7fc910341000-7fc91244e000 r-xp 00000000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91244e000-7fc91264e000 ---p 0210d000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91264e000-7fc912653000 r--p 0210d000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc912653000-7fc91265b000 rw-p 02112000 08:01 13910611 /data/davids4/anaconda3/lib/libmkl_avx.so; 7fc91265b000-7fc9126",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-347904720:404,install,installing,404,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-347904720,1,['install'],['installing']
Deployability,"> Update your PR description. Behavior changes are not ""minor cleanup"", even if that behavior is as simple as raising an error where there wasn't one before. Done",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2488#issuecomment-1074139322:2,Update,Update,2,https://psicode.org,https://github.com/psi4/psi4/pull/2488#issuecomment-1074139322,1,['Update'],['Update']
Deployability,"> Warning that orbital energies then become ambiguous as well. Do you want the ""orbital energies"" at the correlated level of theory or the reference?; > ; > If there's no standard either way, then it may be best to let the user toggle which one they want in this corner case. I don't know what behavior is expected; energy expectation value might be one option but there might be different definitions for the Fock operator. Most of all, you can't reorder the orbitals...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-670696518:228,toggle,toggle,228,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-670696518,1,['toggle'],['toggle']
Deployability,"> Well, as we already have 4.0b5 installed on our systems, we stuck to this version scheme (we ; > suffixed with a date for git builds). So, suddenly going to 1.0 will not work with our version ordering ; > schemes. Well, there are already the 0.1, 0.2 and 0.3 releases - I complained about the number downgrade, got schooled and bit the bullet by introducing an epoch in the version for the packages I maintain. But if the developers decide to switch back to 4.0 as stable version, I won't complain, it's not a big deal to skip version numbers. . In that case I guess there should be a note that psi5 really starts at 0.1 from the beginning (if people still use version numbers by then).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-183429072:33,install,installed,33,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-183429072,2,"['install', 'release']","['installed', 'releases']"
Deployability,"> What happens if a user runs a computation, toggles whether X2C is on, and then calls the wavefunction's compute_gradient method?. Apparently even the non-rel returns a `psi4.core.RHF`, and since that hasn't had it's `compute_gradient` implemented, the parent `Wavefunction`'s `Analytic gradients are not available for this wavefunction.` is thrown. Not what I was expecting (or probably what someone using a C++ API was expecting), but it does shut down a way to get the wrong answer by evading the Py APi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-869752875:45,toggle,toggles,45,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869752875,1,['toggle'],['toggles']
Deployability,> What happens if you use a tighter integration grid?. Thanks for your quick reply. I set it to a pretty large number (I have no experience in it) and got better results:. ```; set dft_spherical_points 1202; set dft_radial_points 150; ```. ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 6 x 3 . 1 2 3. 1 0.01761265286365 -0.03021731225771 -0.01636085243187; 2 -0.00198025542796 0.00069379354137 -0.01217743689404; 3 -0.00684467846030 0.00863180515130 0.01631841052017; 4 -0.00782888971966 0.00500566642863 0.00531395359842; 5 -0.00015059931846 0.01071543959728 0.00493669924504; 6 -0.00080880896432 0.00517347208476 0.00197251031653; ```. This seems to resolve the problem. XC:. ```; -XC Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.023415204354 -0.034617520267 0.016571065968; 2 0.004264668622 -0.082393045737 0.110542261946; 3 0.057056513665 -0.084998504340 -0.155592261007; 4 -0.165444201018 0.054818800402 -0.007755576608; 5 0.081555904871 0.141482887041 0.033036030615; 6 -0.000848669520 0.005710247436 0.003201763433; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978:36,integrat,integration,36,https://psicode.org,https://github.com/psi4/psi4/issues/3161#issuecomment-2075940978,1,['integrat'],['integration']
Deployability,"> What is left for this PR and what level of integration are you shooting for in this first pass?. Running the aforementioned methods from Psi4 and being able to ""see"" the results in the output file and get the most important lot of them (dipole moments, oscillator strength, energies) from the `Wavefunction` object. Support for restricted and unrestricted references. Smooth selection between builtin ADC (only for ADC(2) on RHF and singlet excitations) and adcc (for all the rest). That's not fully there (see my TODO). If you are ok with using more options than in other `select_` cases for the `select_adc2` method, than I'll go ahead and implement that. On that note: I noticed that already for small and simple systems such as cc-pvdz water the adcc ADC(2) and the builtin ADC(2) differ. Since we compare and test our code very thoroughly to reference data from Q-Chem/adcman including test cases of such complexity and derived properties, I would be quite surprised if the error was on our end. I'm not sure what to do with that. At best this is confusing for a user and one should definitely make a statement about in the manual, but still ... obviously one implementation is wrong. I have not worked on the ADC documentation inside Psi4 so far. I am not sure what kind of detail you want in the manual, I'd be very brief, explaining only the Psi4-option for ADC and refer to [adc-connect.org](https://adc-connect.org) for the details on ADC itself. If I understand correctly the main file I have to work on is `doc/sphinxman/source/adc.rst`. Our PR 20 is now basically merged. We'll proceed with the tagging of a release soon.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-552363755:45,integrat,integration,45,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-552363755,4,"['integrat', 'release']","['integration', 'release']"
Deployability,"> Wording this another way: what JK features is CompositeJK replacing, and what is it leaving be? Are there J-K combinations that we're leaving be because integrating them with CompositeJK would make things worse?. Ahhhhhhhh, thanks for the clarification! I was worried I may have misinterpreted your original question. What CompositeJK will be replacing specifically that is already in Psi4 is the DFJCOSK class and the implementation of LinK in DirectJK. Other expansions that will be made to CompositeJK, such as CFMM, are not yet in Psi4 proper. CompositeJK will not touch other JK algorithms present in Psi4, such as DirectJK or the conventional DFJK algorithms. The original plan for CompositeJK, from many months ago, was to completely redo the JK hierarchy so that any J algorithm in Psi4 could be combined with any K algorithm. However, I was quickly convinced that this was a bad idea, because certain combinations of J and K from the entire Psi4 option list would not perform well. For example, we can see this even now, where the current LinK implementation is always run with DirectJK's formuation of J and thus displays poor performance. The current idea for CompositeJK, then, is that it will he a hub for the implementation of separate J and K build algorithms designed specifically for the construction of those matrices; e.g., Direct DF-J, LinK, COSX, CFMM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762#issuecomment-1302518908:155,integrat,integrating,155,https://psicode.org,https://github.com/psi4/psi4/pull/2762#issuecomment-1302518908,1,['integrat'],['integrating']
Deployability,"> Would testing COSX results against the implementation in Orca 5 make sense? Of course the grid dependence makes such things tricky. Practically speaking, this should be doable, but one would need to ensure that as many factors between the two implementations as possible are standardized and made the same. Some of these factors (e.g., screening tolerances) shouldn't be that hard, but others (like grids, as you mentioned) would be quite a bit harder and could be quite a thorn in our side for comparing the two implementations. . This question opens up the discussion to another approach I was thinking for this PR - using separate reference energies for COSX and LINK in the scf5 test, rather than comparing against canonical or DF energies. I am rather neutral on that matter, and am definitely open to doing so; but there are some concerns that should be considered with the separate reference energies approach. These are concerns that might not matter as much now; but the scf5 test will undoubtedly be expanded as CompositeJK and new separate J and K algorithms are added to Psi4, and these concerns might pop up then:. 1. Using separate reference energies for each CompositeJK JK build combination, for each O2 multiplicity and SCF reference, could quickly make scf5 quite unwieldy and messy. ; 2. Against what do we compare reference energies? In some cases, it won't be too big of a problem (as with here, where we can compare against ORCA), but I'm willing to bet that there are certain combinations of J and K algorithms that CompositeJK will eventually be able to do, that might not actually be present in other codes to compare against. . Of course, these concerns are more specific to CompositeJK testing, so maybe they're an issue that can punted down the road for when scf5 gets updated again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1306134603:1799,update,updated,1799,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1306134603,2,['update'],['updated']
Deployability,"> Would y'all like this PR to include updated output.ref files for the tests or would a separate test updating PR be better? I don't see anything in the"" adding tests documentation"" about reference log files. I can include those as well if desired. It will just greatly increase the number of lines changed in this PR. Please update `.ref` files. Probably not worth adding `.log` files, but that's a @loriab question. > There are some tests like cc1-3 that are failing due to being just above threshold. `atol = 0.001` the difference is `~ 0.0017`. These tests are using the default `qchem` convergence criteria ~ `3e-4` max_force. Both optimizers finish well below the criteria and geometries match to 1e-4 Angstroms and 0.001 degrees. . Could you elaborate on why tests are failing at all, and what numbers are differing? Are these Cartesian coordinates?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262531318:38,update,updated,38,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262531318,2,['update'],"['update', 'updated']"
Deployability,"> Yes, it turns out that the hotfix branch was still a work-in-progress by the time I was forced to go on holidays. I hope to get the remaining issues in the Python frontend fixed today. Thanks for the update! Psi isn't using the Python frontend, but maybe there's more quirks involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754748537:29,hotfix,hotfix,29,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754748537,2,"['hotfix', 'update']","['hotfix', 'update']"
Deployability,"> Yes, that's going to be the case for the foreseeable future until https://github.com/evaleev/libint/pull/259 gets reviewed and merged and released, as I can't in good conscience replace a released version with a PR version outside the psi4 channel. Ok no problem and I understand your point. Would that prevent you from merging psi4 in staged-recipes before that?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483940083:140,release,released,140,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483940083,2,['release'],['released']
Deployability,"> Yes, this is all due to the switch to L2. L2 can't be bundled with Psi4 since it doesn't come bundled with Psi4 in the first place. All libraries are dynamic in Fedora, and everything has to be compiled from pristine sources. Caveat: my current L2 knowledge is the equivalent of on-a-tape-drive-in-a-basement-archive, so don't hold me to anything. I think Psi4 could be built against pristine source, latest release L2 with a little cmake patching psi4-side. But producing and hosting two variants (gss/sss) isn't something you/Fedora want to get into, I expect.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1203246662:410,release,release,410,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1203246662,2,"['patch', 'release']","['patching', 'release']"
Deployability,"> You also have `find_package(Libint ...)` that can't work because libint2 doesn't provide cmake files, and you don't provide them either. libint2 does (or at least can) provide cmake files, even with the 2.6.x releases, but it's somewhat tricky. I don't think anything besides psi4 uses them, and for psi4 they are broken/much bigger issues (see above). As I mentioned in https://github.com/evaleev/libint/issues/190#issuecomment-1003936604 libint2 (experimental Debian 2.7.1 package) gets detected fine, but there are build errors later on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2398#issuecomment-1008119932:211,release,releases,211,https://psicode.org,https://github.com/psi4/psi4/issues/2398#issuecomment-1008119932,1,['release'],['releases']
Deployability,"> Your internal stage directory isn't copied properly into the real stage directory for some reason. That's strange -- it's a pretty straightforward copy, https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L315-L318 from internal <builddir>/stage/ to final $PREFIX. Though Windows requires a little more https://github.com/psi4/psi4/blob/master/conda/win/meta.yaml#L32https://github.com/psi4/psi4/blob/master/conda/win/meta.yaml#L32. > Are you able to make the internal stage directory optional based on a cmake option?. Afraid not. In the CMake superbuild, that's where all the component installs accumulate. And devs like it because they never need install. The internal stage is defined here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L204 , and you could try manipulating that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1214291922:594,install,installs,594,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1214291922,2,['install'],"['install', 'installs']"
Deployability,"> [psi4-test.txt](https://github.com/psi4/psi4/files/8883628/psi4-test.txt) contains the results of `psi4 --test` kindly let me know if this mean that psi4 is in functional state. Here is the `conda list` output in case it is needed. [psi4-env_conda-list.txt](https://github.com/psi4/psi4/files/8883643/psi4-env_conda-list.txt). Yes, the base Psi4 is functional. All the messages about skipped tests indicate that there are addons that Psi4 _has_ but that your Psi4 installation isn't detecting as installed. Based on your conda list, these are probably not installed, so this behavior is expected. Let us know if there are addons that you need but don't know how to get. (Examples: `dftd4` for DFT dispersion corrections, `cct3` for some exotic coupled cluster variants, `cppe` for polarizable embedding.). > Now I have some compatibility issues against python3.8 but that's with other packages I am trying to use.; > ; > Just to make sure, psi4 is no longer supported on python3.7, right?. The latest Psi4 is no longer supported on Python 3.7, correct. If you need 3.7 support, dropping down to Psi4 1.5 is technically an option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2598#issuecomment-1152920803:466,install,installation,466,https://psicode.org,https://github.com/psi4/psi4/issues/2598#issuecomment-1152920803,3,['install'],"['installation', 'installed']"
Deployability,"> `${DESTDIR}` is also implicitly prepended to ${CMAKE_INSTALL_PREFIX} by makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:444,install,installation,444,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,3,"['Install', 'install']","['Installing', 'install', 'installation']"
Deployability,"> ah! thanks for that. it looks like it's called in `get_core_size();`, this issue is probably resolved if 229 assigns in both outcomes. Um, @schiebermc, you mean you are fine with the patch in #1667 as-is..?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503734011:185,patch,patch,185,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503734011,1,['patch'],['patch']
Deployability,"> hello, I'll try to work on the replies and changes to have it completed by the end of the week, might I ask what's the timeframe we're working here before 1.4 stable release?. We're probably looking at rc3 asap and stable 1.4 next week. So end-of-the-week is fine. As I see it, the items are:; * remove no_com, etc. if not really needed; * clarify in docstrings whether 1.9 is R_eq or AA; * allow uncp in `ACTV` rather than hardcoding both it and `ACTV_CP` to cp, unless there's a good reason not to; * the suggestion about deduplicating the two files might be possible, but I don't think it's worth it for a db; * I don't recall why CI/Azure was failing on your last commit, but there were certainly points where it was psi4 master's fault, so you may need to rebase.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-870728272:168,release,release,168,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-870728272,1,['release'],['release']
Deployability,> is this a 1.4 target?. Not sure. Maybe better for a 1.4.x release since it's not a bug fix but a quality of life change.; edit: Well it does fix a bug with providing `npy` files for restarts.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190#issuecomment-871427517:60,release,release,60,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-871427517,1,['release'],['release']
Deployability,"> long int? Why not just size_t which is quite literally the size type. No reason, I guess. Some modules used `long int` before we went on a `size_t` fest a few years ago. I can switch them (and update the printouts from M*B to G*B) if folks concur. It would be shorter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2669#issuecomment-1212073307:195,update,update,195,https://psicode.org,https://github.com/psi4/psi4/pull/2669#issuecomment-1212073307,1,['update'],['update']
Deployability,"> oh no, not again. Yes, one had to download patched files for the previous version from their homepage. See [the issue about the 2020 release](https://github.com/psi4/psi4/issues/1866) for additional information on ""the previous version"" and Psi.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497#issuecomment-1077599645:45,patch,patched,45,https://psicode.org,https://github.com/psi4/psi4/issues/2497#issuecomment-1077599645,2,"['patch', 'release']","['patched', 'release']"
Deployability,"> sigh We have test fail because adcc broke. I'm holding this PR innocent. Something is probably wrong with adcc itself. weird, it didn't install for that lane. adcc conda package hasn't changed in over a month. i'll try restarting that lane in case of fluke. otherwise, i'm guessing some non-qc dependency issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2251#issuecomment-883511648:138,install,install,138,https://psicode.org,https://github.com/psi4/psi4/pull/2251#issuecomment-883511648,1,['install'],['install']
Deployability,"> that's a common problem when adding new functionals. The list of available functionals is updated by the make system by running get_funcs.pl. The easiest way to force the list to be regenerated is to remove the build directory and rebuild. aha, thanks. you can also just add a blank line to top-level CMakeLists.txt to retrigger cmake config. LRC-BOP now working. >> I want to work on converting the c-f recipe to cmake and building out for Windows, so I may have some build MRs over at libxc. > What do you mean?. I mean I'm trying to build out the conda-forge arch matrix for libxc (https://github.com/conda-forge/libxc-feedstock/pull/8) so that psi4 windows can pull a pre-built libxc instead of doing an internal build. So I may have merge requests in your intervening week before v5.1 tagging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755827197:92,update,updated,92,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755827197,1,['update'],['updated']
Deployability,"> the read_options blurb needs an update https://github.com/psi4/psi4/blob/master/psi4/src/read_options.cc#L1418-L1424 . If you want to save for a later PR, ok with me.; > ; > otherwise, lgtm. Ah, nice catch. Updating that now. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2924#issuecomment-1520037369:34,update,update,34,https://psicode.org,https://github.com/psi4/psi4/pull/2924#issuecomment-1520037369,1,['update'],['update']
Deployability,> this needs a new pcmsolver release and a merge of [DEShawResearch/sns-mp2#7](https://github.com/DEShawResearch/sns-mp2/pull/7). The PCMSolver release will most likely happen this evening.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037#issuecomment-735641889:29,release,release,29,https://psicode.org,https://github.com/psi4/psi4/pull/2037#issuecomment-735641889,2,['release'],['release']
Deployability,"> uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day.; > ; > thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge.; > ; > I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions. Yeah, I feel like I ran into this issue previously with Einsums. It's part of why I was so concerned about this PR in the first place, and whether `FORCE_PEDANTIC` should be on by default. I can definitely toy around and see if I can get the pedantic flag to only apply to Psi-side code, like you suggested. Worst-case scenario, we just turn `FORCE_PEDANTIC` off by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145:41,integrat,integratorxx,41,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2017950145,2,['integrat'],['integratorxx']
Deployability,"> what about `guided`?. All that matters is that we avoid `static`, which can lead to an uneven distribution of work across threads. `guided` is about as good as `dynamic` here. `dynamic` has optimal load balancing at the cost of slightly more overhead than `guided`. The work/iteration is large for these loops, making this additional overhead is negligible. . Here's a comparison of the different schedules (wall time in seconds, large alkane on an 18 core CPU):. | Code | `static` | `guided` | `dynamic` |; |------|-----------|--------|---------|; | Numerical Integration (Loop 1) | 36.9 | 36.9 | 36.7 |; | DF Integrals (Loop 2) | 299.0 | 278.7 | 279.7 |; | PNO Transform (Loop 3) | 80.9 | 80.4 | 78.4 |; | PNO Overlap (Loop 4) | 29.8 | 29.3 | 24.4 |; | Total DLPNO-MP2 | 528.2 | 506.6 | 498.2 |. You can see that `dynamic` is possibly a hair better than `guided`, but both are better than `static`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2378#issuecomment-989020297:563,Integrat,Integration,563,https://psicode.org,https://github.com/psi4/psi4/pull/2378#issuecomment-989020297,1,['Integrat'],['Integration']
Deployability,">= 1.12 is very reasonable as it's a few years old, and I think pins like >= 1.16 are likely to happen elsewhere. Following your suggestion, conda chokes with more errors than fit on my terminal's history, but mamba complains about . ```; Problem: package ambertools-20.0-py37h18738c5_0 requires netcdf-fortran >=4.5.2,<4.6.0a0, but none of the providers can be installed; ```. yet here's a 4.5.3 online: https://anaconda.org/conda-forge/netcdf-fortran/files / https://anaconda.org/conda-forge/netcdf-fortran/files/modal/info/5f8e0b60a58f0d0a54b46bb2. hdf5 1.10.6 seems to be in the recent psi4 builds, so that shouldn't be the issue. Maybe it's the fortran stuff, it's confusing how and why `libgfortran`/`libgfortran4`/`libgfortran5` all coexist at once.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024#issuecomment-718357532:362,install,installed,362,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718357532,1,['install'],['installed']
Deployability,">> An alternative question this raises for me is whether the active_molecule should get updated at some point in the optimization. Updating the active molecule patches the issue but is that desired?. > My vote would be ""no""; it's too much like changing the input. However, I do think that some users would expect the final active molecule to be updated for them. And workflows inside the python input may seem more intuitive that way. I may not be following this right. I'd say the state of the psi4 active mol _during_ an optimization is arbitrary -- whatever works for you. In cpp-optking, I think the communication was through legacymolecule anyways. The molecule optking is acting on _should_ be updated by the time control returns to the user at the end of the opt. I thought this was already happening through https://github.com/psi4/psi4/pull/2727/files#diff-acf663ccea13592c4c656cf89c7b62e6f5bd3b2e8b4f12ba354129bd39d096f8R1296-R1297 . That's consistent with cpp-optking, and I think that must be happening b/c many of the tests check NRE before and after opt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1260073808:88,update,updated,88,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1260073808,8,"['patch', 'update']","['patches', 'updated']"
Deployability,">> Are there any Python bindings that hit the deprecated fns?. > I don't think so? They are not used in py::class_<Dimension> in export_mints.cc, if there are other places to look for Python bindings let me know and I will check. Looks like export_mints.cc only, so you've got that covered, thanks. >> This would be a good time to get the deprecation warnings in, so the fns can be removed by 1.10. > Perhaps, but I delayed it because; > 1. I was not sure that this would get thorough reviews before 1.9 is released. This is something that could disrupt people's codes/plugins that rely on it. I do not know how widely they are used, thus I want to give people time to stumble into the deprecation warning and yell before it is too late.; > 2. These functions are not exactly unused, even in Psi4 itself. It will not be a trivial task to rip them out, and I doubt that I will have enough free time to complete it before May 2024. Sounds fair. Two cycles may be good for the deprecation warning, as plugin devs like clear warnings.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953#issuecomment-1810603600:507,release,released,507,https://psicode.org,https://github.com/psi4/psi4/pull/2953#issuecomment-1810603600,2,['release'],['released']
Deployability,">> I do think we should try to get the changes into one psi4 release cycle. > Regarding the deprecation message/schedule: do you mean that they should be deprecated now and then removed before 1.7 RC1?. I think deprecation warnings (with code still functional) need to be in at least one release. So the code can be broken as soon as ~Dec (after 1.7.0 release). But what I was meaning to say with ""get the changes into one psi4 release cycle"" was let's aim to get all the immediate-breaks and/or notifications in before 1.7.0 so that downstream users have the info to do a single overhaul after 1.7.0. Keep pinging me if this doesn't make sense :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2693#issuecomment-1259615160:61,release,release,61,https://psicode.org,https://github.com/psi4/psi4/pull/2693#issuecomment-1259615160,4,['release'],['release']
Deployability,">> Let's postpone the tighter conv checking and merge this to get it into the upcoming 1.7 release. > Fine by me. Me, too. Only TODO is the options semi-reversion. Sorry for the extra work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767#issuecomment-1337785055:91,release,release,91,https://psicode.org,https://github.com/psi4/psi4/pull/2767#issuecomment-1337785055,1,['release'],['release']
Deployability,">> Yes, that's going to be the case for the foreseeable future until https://github.com/evaleev/libint/pull/259 gets reviewed and merged and released, as I can't in good conscience replace a released version with a PR version outside the psi4 channel. > Ok no problem and I understand your point. Would that prevent you from merging psi4 in staged-recipes before that?. I don't think it should be a problem; there's no software barrier to merging, and I think I have good arguments if there's reviewer concerns. Possibly I'll try to arrange to merge psi4 from staged-recipes into a `conda-forge/label/psi4_dev` channel so there isn't a funny psi4 `v1.8a1.dev80` around.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483943111:141,release,released,141,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483943111,2,['release'],['released']
Deployability,">>> I apologize for being overly slow on the promised PCMSolver CMake overhaul. No problem. By the time I got Lapack, CheMPS2, libefp, and Psi4 back on speaking terms, it seemed easiest to just do a decent pass at the psi4 interface with ambit and PCMSolver, then let you and Jet concentrate on the parts you know better than me. >>> What do you mean by ""I'd rather have pcmsolver as a proper module containing init, pcmsolver, getkw, etc., but that would mess with other codes use of pcmsolver, I suspect""?. I meant that it'd be nice to have an installation dir structure like the below where there's an outer pcmsolver module/namespace.; ```; here/pcmsolver/; here/pcmsolver/__init__.py; here/pcmsolver/pcmsolver.py; here/pcmsolver/getkw.py; ...; ```; Then `sys.path('here')` is the operation, and psi4 does `import pcmsolver; pcmsolver.pcmsolver.parse_pcm_input('pcmsolver.inp')` or whatever and all the getkw and codata are within the pcmsolver namespace. At present, one does `sys.path('here/pcmsolver')` and everything's in the outer namespace. The anticipated problem with other codes is that what I want would probably involve some `from . import getkw` and other codes might be depending on the `import getkw` structure. >>> I can fix the linking problems (see comment on psi4/src/psi4/libscf_solver/CMakeLists.txt) Should I fork you fork? Should I make the changes from the web-interface on the pcm branch of your fork?. As mentioned above, direct commit, web interface, whatever's most convenient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/594#issuecomment-276211311:546,install,installation,546,https://psicode.org,https://github.com/psi4/psi4/pull/594#issuecomment-276211311,1,['install'],['installation']
Deployability,@BradenDKelly Any updates?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-956201019:18,update,updates,18,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-956201019,1,['update'],['updates']
Deployability,"@CDSherrill . Oh, and if an error's raised but not caught, it just shows the traceback and triggers coffee:. ```; PsiException: Could not converge SCF iterations in 4 iterations. Failed to converge. Traceback (most recent call last):; File ""stage/usr/local/psi4/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:384,patch,patch,384,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,4,['patch'],['patch']
Deployability,"@CDSherrill ; 1) It should always be in the SO basis. Apologies this was answered elsewhere. 2) If we are set on this on I can patch up the CI code and add patch notes. The ""CI DIPOLE X"" is the followed root or the dipole from the state averaged density depending on user specifications. We also need to think about the `psi4/driver/driver.py:molden` function and #504. `properties` is now guaranteed to return an updated SO basis density; however, the current molden function requires a MO density. We could have a simple switch on that function that indices if the incoming density is in the AO or MO basis and transform accordingly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260128691:127,patch,patch,127,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260128691,6,"['patch', 'update']","['patch', 'updated']"
Deployability,"@CDSherrill Here's a numpy-free input, should you want to test. Problem is NUM_ROOTS, not loop or zmat. ```; memory 20 Gb. molecule H2 {; 0 1; He; He 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; ## NUM_ROOTS 5; basis cc-pvdz; num_roots 2 # toggle this on/off for badness; }. rlist = [1.00, 10.1, 0.5]. for r in rlist:; H2.R = r; energy('fci') # or cisd; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83#issuecomment-96099675:262,toggle,toggle,262,https://psicode.org,https://github.com/psi4/psi4/issues/83#issuecomment-96099675,1,['toggle'],['toggle']
Deployability,"@ChayaSt As explained [here](https://github.com/psi4/psi4public/wiki/1_Obtaining#clonepsi4public) you should be cloning using the `--recursive` flag. If you cloned without that flag, you should run `git submodule update --init --recursive` **prior** to running the `setup` script.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169077006:213,update,update,213,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169077006,1,['update'],['update']
Deployability,"@Diazonium, you are right. Is there any way can solve this problem without upgrade?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788#issuecomment-578132699:75,upgrade,upgrade,75,https://psicode.org,https://github.com/psi4/psi4/issues/1788#issuecomment-578132699,1,['upgrade'],['upgrade']
Deployability,"@Harvey the immediate answer is you need to update your compiler; however; the repeated occurrence of this problem suggests it may be necessary to; revisit the decision to use C++11. @developers what versions of compilers are we willing to support? The; decision to start using C++11 limits us to Intel15 for full compliance (or; Intel13 for about 90% compliance). For the GCC 4.4 gives us about 90%; compliance and 4.8 full compliance. Clang 2.9 is 90% and they claim 3.3; for full support, but I'm confused by their caveat of them not having to; provide support for two features. This suggests to me that they still are; not at full compliance and never will be. I fully support the usage of C++11 as it allows coding options previously not possible or provides a nicer syntax for them. One possibility of backwards support is to wrap C++11 code with macros; however this only works if that code could have been written with C++98 originally. This also leads to code duplication which I think is a cardinal sin of programming. In my experience so far the only C++11 feature that I have been unable to reproduce using C++98 is variadic templates. The best you can do is write a recursive normal template, with default dummy parameters and many template specializations. This solution is very verbose (often orders of magnitude more lines of code than the variadic version) and is limited to about 10-20 parameters (depending on the compiler). In fact the lack of variadic templates is why the boost tuple is limited to 10 parameters. Although 10 is often more than enough, there are reasons to need more, particularly for loop unrolling and extensive logic trees. For example I was able to replace 118 lines of logic (assigning atomic names/masses/ etc.) with about 4 thanks to variadic templates. I think the latter is far easier to read and maintain. I know I get a lot of hate about my love of variadic templates so perhaps this analogy will help: anytime you have used a Python tuple, the only tr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85#issuecomment-97772824:44,update,update,44,https://psicode.org,https://github.com/psi4/psi4/issues/85#issuecomment-97772824,2,['update'],['update']
Deployability,"@Hassenky , I now have considerable confidence that a `conda update/install psi4 pychemps2 hdf5=1.8.16` will work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-229992074:61,update,update,61,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-229992074,2,"['install', 'update']","['install', 'update']"
Deployability,"@Ioriab https://github.com/xianyi/OpenBLAS/pull/1536 will work accurately only if your compiler support C11, other wise it will fall back to former behavier.; Ubuntu 14.04 doesn't support C11, but Ubuntu 16.04 support this.; What's your compiler's version? If it is too low, please upgrade it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-392238207:282,upgrade,upgrade,282,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-392238207,1,['upgrade'],['upgrade']
Deployability,@JonathonMisiewicz I just updated the docstring. Thanks for the poke!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2744#issuecomment-1282959715:26,update,updated,26,https://psicode.org,https://github.com/psi4/psi4/pull/2744#issuecomment-1282959715,1,['update'],['updated']
Deployability,"@JonathonMisiewicz I'm not using conda at all, as described above, i started from a clean directory, cloned the source, ran cmake and make. The libint is the one that is automatically downloaded if no libint was found:; ```; -- Suitable Libint2 could not be located, Building Libint2 5-4-3-6-5-4 instead.; ```; in the cmake step and; ```; [ 10%] Performing download step (download, verify and extract) for 'libint2_external'; [ 12%] Performing download step (download, verify and extract) for 'pybind11_external'; -- Downloading...; dst='/scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/Libint2-export-5-4-3-6-5-4_mm4f12ob2.tgz'; timeout='none'; inactivity timeout='none'; -- Using src='https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-5-4-3-6-5-4_mm4f12ob2.tgz'; -- Downloading...; ``` ; in the make step. @loriab Thanks for the quick reply, i will try and report back.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572#issuecomment-1121208944:771,release,releases,771,https://psicode.org,https://github.com/psi4/psi4/issues/2572#issuecomment-1121208944,1,['release'],['releases']
Deployability,"@JonathonMisiewicz This PR is ready for review. I added linK tests for RHF, UHF, and ROHF, updated the documentation on LinK in scf.rst, as well as sources in bibliography.rst, and ran all C-Tests. Doc Compilation and Pytests pending.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-975942945:91,update,updated,91,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-975942945,1,['update'],['updated']
Deployability,"@JonathonMisiewicz looks like most things worked except one of the linux builds failed for an issue that I don't think is related to my patch:. ```CMake Error at /usr/local/share/cmake-3.24/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS Interpreter; NumPy) (found suitable version ""3.8.10"", minimum required is ""3.8""); ```. Not sure how to proceed here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2667#issuecomment-1212370317:136,patch,patch,136,https://psicode.org,https://github.com/psi4/psi4/pull/2667#issuecomment-1212370317,1,['patch'],['patch']
Deployability,"@JonathonMisiewicz you're correct. All coordinates below 1 were brought to zero. A quick update should fix it, or you may be able to wrangle the output of `mol.print_out()` to suit your needs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1954#issuecomment-658158803:89,update,update,89,https://psicode.org,https://github.com/psi4/psi4/issues/1954#issuecomment-658158803,1,['update'],['update']
Deployability,"@JonathonMisiewicz; Based upon a build of the documentation target (local equivalent is `make sphinxman` with Sphinx installed at CMake configuration time):. * an automated commit 238aecf08 has been issued to your PR branch; * the commit updates 96 files in `samples/` based on `tests/`; * if changes are ok, synchronize your local branch to your GH fork through (approximately) `git pull --rebase origin jonathonmisiewicz-patch-1`; * if changes are objectionable, synchronize your GH fork to your local branch through (approximately) `git push origin jonathonmisiewicz-patch-1 --force`. However, you can't avoid the update forever; * ask for help in the PR if you have git questions. * an automated pull request https://github.com/psi4/psi4docs/pull/5 has been issued to the docs website repo; * the pull request previews docs changes from `<objdir>/doc/sphinxman/html`; * look over your docs changes there at the netlify/psi4manual/deploy-preview check. Edit your PR branch here as needed; no further action on auto PR required; * alternately, look over your docs changes locally by downloading `sphinxman-html` zip file from Archive list in Action run",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2468#issuecomment-1064377911:117,install,installed,117,https://psicode.org,https://github.com/psi4/psi4/pull/2468#issuecomment-1064377911,7,"['configurat', 'deploy', 'install', 'patch', 'update']","['configuration', 'deploy-preview', 'installed', 'patch-', 'update', 'updates']"
Deployability,"@MartinBeseda, there's a chance you don't have the same problem as the OP but just have the same error message. If you've got an existing gau2grid installation (which can only be built through cmake or setup.py (that runs cmake behind the scenes) and thus always installs `gau2gridConfig.cmake`), but psi4 or another downstream with `find_package(gau2grid CONFIG)` isn't detecting it and is printing the error in the issue, you can pass `-Dgau2grid_DIR=/path/to/dir/of/gau2gridConfig.cmake` to the downstream build to guide it. https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L62. If you're looking to compile but not package, also note that you can get all the deps pre-build from conda https://admiring-tesla-08529a.netlify.com/installs/v13/ (select ""source"").",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1588#issuecomment-482921785:147,install,installation,147,https://psicode.org,https://github.com/psi4/psi4/issues/1588#issuecomment-482921785,6,['install'],"['installation', 'installs']"
Deployability,"@PeterKraus thanks for this helpful update. This will eliminate some redundant computations, which is helpful (especially for people who just want a dimer IE). Thanks also for testing the gradients. I have one quibble with the user interface. What happens if a user tries to run an optimization but only uses bsse_type=['cp']? The monomer energies in the monomer basis sets need to be calculated so that we have total energies... trying to optimize the interaction energy only, without some special constraints in the optimizer to keep the monomers frozen (a capability we do not have automated right now), will give garbage. 99% of users will not be clever enough to realize that if they want the counterpoise-corrected geometry of a dimer, they need to include ""nocp"" in their bsse_type list. Can you solve this by forcibly adding monomers (and perhaps option ""nocp"" internally, if you want) when an optimization is requested? I would like to head off a lot of posts on the user forum about CP-corrected optimizations that went wrong :). Minor question about printing. I agree that things that are not total energies should not be printed in the total energy column. However, what are you doing if bsse_type='cp'? Leaving it blank? That might cause a problem for anyone trying to scrape the output file. Should there be something there, like ""n/a"" or something?. Also, when you do print the total energy, it's the same total energy as before your PR, right? The total energy of a dimer should be E_AB(AB) minus the Boys-Bernardi estimate of the BSSE, which is [E_A(AB) - E_A(A) + E_B(AB) - E_B(B)]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1691#issuecomment-869885254:36,update,update,36,https://psicode.org,https://github.com/psi4/psi4/issues/1691#issuecomment-869885254,1,['update'],['update']
Deployability,"@PhillCli thank you very much for your detailed answer. The material you pointed me to is exactly what I needed and it's leading to good results. I will provide an update with the details of my implementation for anyone who might find it useful later, but I will close the issue for now. Thanks again from a new grad student!. Best, . hypefolder",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3124#issuecomment-1912263189:164,update,update,164,https://psicode.org,https://github.com/psi4/psi4/issues/3124#issuecomment-1912263189,1,['update'],['update']
Deployability,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404166121:223,deploy,deployment,223,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121,2,['deploy'],['deployment']
Deployability,"@TiborGY is right. Even though you've set ""uhf"", that switches to ""uks"" behind the scenes (so you're not having to set DFT in two places). When I release the error you hit, the further error shows: . ```. Printing out the relevant lines from the Psithon --> Python processed input file:; psi4.set_options({'reference': 'uks', 'stability_analysis': 'follow'}); mol = psi4.geometry(""""""; 0 1; O; """""");; --> psi4.energy('wB97M-D3BJ/def2-TZVPPD', molecule=mol). !-----------------------------------------------------------!; ! !; ! Stability analysis not yet supported for XC functionals. !; ! !; !-----------------------------------------------------------!; ```. Agree that the existing error looks contradictory. I've adjusted it to show:. ```; Printing out the relevant lines from the Psithon --> Python processed input file:; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'follow'}); mol = psi4.geometry(""""""; 0 1; O; """""");; --> psi4.energy('wB97M-D3BJ/def2-TZVPPD', molecule=mol). !----------------------------------------------------------------------------------!; ! !; ! Stability analysis root following is only available for unrestricted Hartree-- !; ! Fock, not present UKS !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2577#issuecomment-1125639718:146,release,release,146,https://psicode.org,https://github.com/psi4/psi4/issues/2577#issuecomment-1125639718,1,['release'],['release']
Deployability,"@amjames Could you modify `ccdensity` so that it writes the AO density to `ref_wfn`'s Da/Db?. @tovrstra Creation of the OPDM is not standardized across the different modules at the moment. Typically, setting `set opdm true` will build the OPDM; however, it is not always clear if `Da` is updated. If @amjames can update the Da/Db attributes for the `cc` modules we may be able guarantee that all Wavefunctions coming from a `property` call have a Da/Db that is associated with the called method. This should be guaranteed for all valid `property` modules besides `cc` at the moment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/504#issuecomment-258843529:288,update,updated,288,https://psicode.org,https://github.com/psi4/psi4/issues/504#issuecomment-258843529,4,['update'],"['update', 'updated']"
Deployability,"@andysim Ah, didn't realize 3.8 hasn't been officially released yet. I'll take that off the list. How's this:; - clang: 3.5 release, 3.6 release, 3.7 release; - gcc: 4.8 release, 4.9 release, 5.2 release/debug. This should cover the last version or two of the major distros. . @jgonthier I'll build and test on my box shortly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182886143:55,release,released,55,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182886143,7,['release'],"['release', 'released']"
Deployability,"@andysim Good point, bumped down AM requirements. The ""Distelli CI"" link should be dead as its an incorrect hook configuration, shouldn't show up in the future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235422113:113,configurat,configuration,113,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235422113,1,['configurat'],['configuration']
Deployability,"@andysim I agree that `size_t` is probably a better solution, but I will have to take a closer look to say for sure. . @lazaroid I agree that there are probably more int overflows to be tracked down in DPD, any that you find you are welcome to patch I will go hunting as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/685#issuecomment-297214526:244,patch,patch,244,https://psicode.org,https://github.com/psi4/psi4/pull/685#issuecomment-297214526,1,['patch'],['patch']
Deployability,"@andysim I believe this is correct, do you concur?. @SebWouters You seem to have a pretty good handle on exactly where this error occurs, would you mind making a PR to patch this up?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1431#issuecomment-449605158:168,patch,patch,168,https://psicode.org,https://github.com/psi4/psi4/issues/1431#issuecomment-449605158,1,['patch'],['patch']
Deployability,"@andysim Thanks, I added the path to this library but it doesn't fix the issue:; ```; export DYLD_LIBRARY_PATH=/opt/intel/lib:/usr/local/lib/gcc/8/; source ~/.bash_profile; ```. I'm now trying the installation suggested by @hokru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614787323:197,install,installation,197,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614787323,1,['install'],['installation']
Deployability,"@andysim Updated your algorithm, please review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-231352079:9,Update,Updated,9,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-231352079,1,['Update'],['Updated']
Deployability,"@andysim We may have run out of people able to review this. Going to pull it in as this is this is a versioned WIP. We should be minting the ""version 1"" Schema soon so can update this in a week or so under the guise of a bug fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/979#issuecomment-387221219:172,update,update,172,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-387221219,1,['update'],['update']
Deployability,"@andysim Yes. The 'installed' simint library should have a file `include/simint/vectorization/vector_config.h`. There is also one under the (simint) build directory under `stage`. This should define which vectorization you are using. @loriab Maybe you didn't completely clear out the build directory before switching the vectorization type? I still think that would work, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356793933:19,install,installed,19,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356793933,2,['install'],['installed']
Deployability,"@andysim the potential provided by @MartinBeseda (see figure) has a slight dip at around 4.50 angstrom, and the mean of the provided radii puts it around 3.5 there. That's my take on this.; ![issue-1600](https://user-images.githubusercontent.com/5336995/56111506-82ef6a80-5f58-11e9-8435-3803035cb374.png). As for the plotting issue - I wouldn't know, as I didn't install matplotlib into that environment. I can have a look later, but it is confusing that it wouldn't work, when it calculates all spectroscopic constants properly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483124279:363,install,install,363,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483124279,1,['install'],['install']
Deployability,@ashutoshvt If you are delayed with other things it might be wise for us to just patch up first derivates and get that in. We can work on the rest in other PR's.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/757#issuecomment-347011768:81,patch,patch,81,https://psicode.org,https://github.com/psi4/psi4/pull/757#issuecomment-347011768,1,['patch'],['patch']
Deployability,"@bennybp , I ran it 40 times today, and it passed consistently. But @dgasmith is right that I've seen it before. Now that it's not just me, I've made a ticket #322. But that was with 2015 compilers, so it is an unrelated issue. @jturney, usually I only alter `xHost` for the generic linux binary, but yes, I can see it being necessary for deploying to a heterogenous cluster when not compiling on the oldest machine. I admit it's suspicious that no matter how I back down optimization on the Haswell box, nothing helps the situation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198786718:339,deploy,deploying,339,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198786718,1,['deploy'],['deploying']
Deployability,"@bennybp, so constraints of Windows (mainly `DESTDIR=/path/to/somewhere make install` not available for on-the-fly relocation of install step) mean that our tidy scheme for cmake superbuild _staged_ install to `objdir/stage/$CMAKE_INSTALL_PREFIX/[bin|lib|share]` followed by cmake superbuild _final_ install to `$CMAKE_INSTALL_PREFIX/[bin|lib|share]` is about to crumble. The people making this change haven't seen ill effects, so I've been trying to remember why using the entire build prefix is important. I suspect it all has to do with `rpath`s (which were irrelevant to libint, as it has no managed dependencies). Psi4 _does_ manage rpaths carefully (bottom of next linked file), culminating in [`BUILD_WITH_INSTALL_RPATH`](https://github.com/psi4/psi4/blob/master/psi4/src/CMakeLists.txt#L126). IIRC, the full path scheme (`stage/$CMAKE_INSTALL_PREFIX`) allows both absolutely located and relatively located dependencies to be set for the staged installation, then those are still valid for the final superbuild installation. Note that conda rewrites `rpath`s, so the problem this scheme is solving wouldn't show up for conda-build. Nor would it show up for internal builds of dependencies (covered by relative paths). A conda-centric (psi4-path-advisor) build may also bypass the problem, since dependencies collocated. A spack-type build or one that uses local installations of dependencies found throughout the filesystem is more likely to hit the problem and need this treatment. As you designed the superbuild scheme, pinging you to see if my concerns are shared or overblown. Also @robertodr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411795980:77,install,install,77,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411795980,7,['install'],"['install', 'installation', 'installations']"
Deployability,"@bozkaya Yes, we updated this file and `molden_write true` works for all OO and DCFT methods.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/185#issuecomment-190775724:17,update,updated,17,https://psicode.org,https://github.com/psi4/psi4/issues/185#issuecomment-190775724,1,['update'],['updated']
Deployability,"@bozkaya, regarding `READ_SCF_3INDEX` for CD calcs, I'll just believe you. For this (https://github.com/psi4/psi4/issues/245#issuecomment-186302823) comment, though, for DF calcs, I'm not seeing that that keyword can make a difference. Toggling its presence and value in the below makes no difference to the energies. So fyi, I'm not implementing the advice in your comment for now. ```. mp2totg = psi4.Matrix(2, 3); mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028301835],; [ 0.0000000000, 0.0000000000, -0.0028301835]]; mp2tot_vals = [[ 0.0000000000, 0.0000000000, 0.0028193375],; [ 0.0000000000, 0.0000000000, -0.0028193375]]; mp2totg.set(mp2tot_vals). molecule hf {; H; F 1 0.917; }. set basis cc-pvdz; set scf_type pk; set mp2_type df; set points 5; set freeze_core false; set reference rhf; set READ_SCF_3INDEX true #FALSE # TOGGLE. set qc_module dfmp2 #occ # TOGGLE; energy('mp2'). compare_values(-100.0194112690226973, get_variable('scf total energy'), 6, 'scf'); compare_values(-0.203779972647527, get_variable('mp2 correlation energy'), 6, 'mp2corl'); compare_values(-100.2231912416702215, get_variable('mp2 total energy'), 6, 'mp2tot'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-193199034:834,TOGGLE,TOGGLE,834,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-193199034,2,['TOGGLE'],['TOGGLE']
Deployability,@cdsgroup Can you double check that the above patch would be correct? If so we can go ahead and make this change.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/621#issuecomment-280013153:46,patch,patch,46,https://psicode.org,https://github.com/psi4/psi4/issues/621#issuecomment-280013153,1,['patch'],['patch']
Deployability,"@cdsgroup; Based upon a build of the documentation target (`make sphinxman` locally with Sphinx installed at CMake configuration time):; * an automated commit has been issued to your PR branch; * this updates `samples/` based on `tests/`; * if objectionable, make changes and force push your local branch, but you can't avoid the update forever; * usually, `git pull --rebase origin <prbranch>` to synchronize your local branch with GH; * an automated pull request has been issued to the docs website repo previewing `<objdir>/doc/sphinxman/html`; * preview docs changes at https://github.com/psi4/psi4docs/pull/2; * further action on auto pull request not required",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009:96,install,installed,96,https://psicode.org,https://github.com/psi4/psi4/pull/2148#issuecomment-814590009,4,"['configurat', 'install', 'update']","['configuration', 'installed', 'update', 'updates']"
Deployability,"@chrinide, @patrashantigopal, @sjayellis, I've built a new dftd3 that fixed segfaults on a Linux system (whereas many linux systems were fine with the existing `3.2.1_<stuff>_0` dftd3 pkg). Would you `conda update dftd3 -c psi4/label/dev` to get the new executable (it'll be a `_0` to `_1`) update, try it, and report back success or still failing, please?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1587#issuecomment-481897683:207,update,update,207,https://psicode.org,https://github.com/psi4/psi4/issues/1587#issuecomment-481897683,2,['update'],['update']
Deployability,"@devinamatthews Thanks for sharing the patch. Speaking of science, I am not sure if your example was a test or production job but I would be careful with third-order correlation energies in cc-pVDZ basis. See [https://www.ncbi.nlm.nih.gov/pubmed/17186479](url) for details.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561976491:39,patch,patch,39,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561976491,1,['patch'],['patch']
Deployability,@devinamatthews This sounds great until @bozkaya can respond here. Would you mind patching this into Psi4 master?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-562578029:82,patch,patching,82,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-562578029,1,['patch'],['patching']
Deployability,"@dgasmith . Yes, because:; - OpemMP 2.0 need signed integers for the loops, but `size_t` is `unsigned long int`, so it does not compile.; - OpenMP 2.0 doesn't have `update` clauses for `omp atomic`, but it is implicit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419084243:165,update,update,165,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419084243,1,['update'],['update']
Deployability,"@dgasmith @robertodr . A simple example:. Without PCM, the working directory does not change:; ```python; import os. geometry('H -.5 0 0\nH .5 0 0\nsymmetry c1'). #pcm = { ; # Medium { Solvent = Water }; # Cavity { Type = GePol }; #}. energy('HF/3-21G'). print(os.getcwd()); ```; ```bash; $ psi4 test.py ; /home/raimis/debug/psi4_PCM; ```. With PCM, the working directory changes:; ```python; import os. geometry('H -.5 0 0\nH .5 0 0\nsymmetry c1'). pcm = { ; Medium { Solvent = Water }; Cavity { Type = GePol }; }. energy('HF/3-21G'). print(os.getcwd()); ```; ```bash; $ psi4 test.py ; /tmp/psi.12147.pcmsolver.604855c3; ```. A small detail, but it messes up our pipeline.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-351739145:664,pipeline,pipeline,664,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-351739145,2,['pipeline'],['pipeline']
Deployability,"@dgasmith I do not know. But probably not. If that is the case, patches are welcome, the project tends to be very receptive to PRs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-390205517:64,patch,patches,64,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-390205517,1,['patch'],['patches']
Deployability,"@dgasmith I never did. I was playing with fixes, but those got stymied by direction dependent subgroups. Still, this is item number three on my hit list of bugs, and by far easier to fix than items one and two. I have a paper to prioritize, but I can hopefully include this as a bug fix between the feature freeze and 1.3 release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1052#issuecomment-445554488:322,release,release,322,https://psicode.org,https://github.com/psi4/psi4/issues/1052#issuecomment-445554488,1,['release'],['release']
Deployability,@dgasmith I updated to support MDI 1.0 in commit 736ac2c. The build failed due to reasons that I believe are independent of this PR. I'll rebase and see if that fixes things.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-593419816:12,update,updated,12,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-593419816,1,['update'],['updated']
Deployability,"@dgasmith MSVC is not a must for building stuff on Windows. So far I have only had negative experiences with it, and I tend to use GCC on Windows as well. (MinGW-w64, in the form of TDM-GCC, sadly TDM-GCC seems abandoned, but as long as GCC 5.1.0 is OK, it is probably one of the easiest solutions). . At the moment I do not have time to look into this, but in general it should be doable, make and CMake does work on Windows, so as far as the C++/Fortran side is concerned I expect no issues that would be impossible to overcome. (I/O may or may not need some ifdefs and Windows specific code). I have no idea though how the python integration would work, maybe it would work relatively painlessly, maybe it would turn out to be a nightmare. The world of python dependencies and especially numpy/BLAS/LAPACK interactions can be a royal pain in the arse to work out, even on Linux, in my experience.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-381751281:633,integrat,integration,633,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381751281,1,['integrat'],['integration']
Deployability,"@dgasmith OK, that works. Just trying to get things sorted for an upcoming workshop (mid-July) and come up with an ""authoritative"" set of commands for the students to install everything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-492357454:167,install,install,167,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492357454,1,['install'],['install']
Deployability,@dgasmith The example output in PR description is the corresponding print out for updated `v.cc` in 8 threads.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/743#issuecomment-313728409:82,update,updated,82,https://psicode.org,https://github.com/psi4/psi4/pull/743#issuecomment-313728409,1,['update'],['updated']
Deployability,"@dgasmith To bring OEProp out to python should probably wait for another update. This one was to address problems related to #504 and I think that is satisfied. The OEProp code is being called for (possibly) multiple states, and in order to move the OEProp stuff out to python would mean storing the OPDM for each state. I would rather move the OEProp stuff out to python at a point where the loop over states can be dealt with in python as well. . So yes, I am going to wait for another update to move the OEProp Python side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-259133221:73,update,update,73,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-259133221,2,['update'],['update']
Deployability,@dgasmith do you not have density thresholding in the dft code? It appears to be a common trick to make dft integration faster to avoid calculating zeros... I think NaNs should be sieved out in the output.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863#issuecomment-345818205:108,integrat,integration,108,https://psicode.org,https://github.com/psi4/psi4/issues/863#issuecomment-345818205,1,['integrat'],['integration']
Deployability,@dgasmith no idea; the problem is that since Psi4 has been picking up new dependencies left and right I haven't had the opportunity to update the Fedora package...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1255#issuecomment-533645822:135,update,update,135,https://psicode.org,https://github.com/psi4/psi4/issues/1255#issuecomment-533645822,1,['update'],['update']
Deployability,"@dgasmith, I really prefer to upgrade to pb11 2.2. pylibefp is using a nice 2.2 feature (though I do know how to downgrade). But we do have to agree and solve symbols visibility or face breaking plugins (slide from wwdc attached). Since gau2grid doesn't need the python interface in psi (or do you have plans for it?), I think keep the 2.2 features. <img width=""1298"" alt=""screen shot 2017-11-26 at 10 20 24 am"" src=""https://user-images.githubusercontent.com/2314730/33241456-82bf7044-d293-11e7-8e8d-8f968bdcb16a.png"">",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/814#issuecomment-347016004:30,upgrade,upgrade,30,https://psicode.org,https://github.com/psi4/psi4/pull/814#issuecomment-347016004,1,['upgrade'],['upgrade']
Deployability,"@dgasmith, do you need me to update the branch to the current master ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222881740:29,update,update,29,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222881740,1,['update'],['update']
Deployability,"@dgasmith, rolling back to 1.1 is fairly involved. Can commenting out the three `pragma omp`s in superfunctional.cc test the same effect?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-395093963:11,rolling,rolling,11,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-395093963,1,['rolling'],['rolling']
Deployability,"@dgasmith, so this gets passed the mm_malloc header the other PRs were having. Unfortunately, by building off g2g master rather than Dec release, it hits all the ordering changes you made. The current state compiles and runs but gives nonsensical results for DFT. You perhaps had other plans for psi's transition on this matter. Basically, is it better to patch the ifdef rerouting onto 1.3.1 and keep gg_collocation stable, or is now as good a time as any to update the psi interface to g2g?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1718#issuecomment-531546088:137,release,release,137,https://psicode.org,https://github.com/psi4/psi4/pull/1718#issuecomment-531546088,3,"['patch', 'release', 'update']","['patch', 'release', 'update']"
Deployability,"@dgasmith, what do you think of going ahead and merging this in now, with a follow-up in a couple days addressing 150, the binary, and keyword tweaks? This PR itself works nicely in its own right, and it'd be easier to test the outlying binary w/o having to apply this PR as a patch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223824090:277,patch,patch,277,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223824090,1,['patch'],['patch']
Deployability,"@drhaney I made a few comments to your work, a few notes:; - Your comments only have the new basis sets, was the new G3 module intended as well?; - Most of the comments are aimed at removing global options. Globals are now semi-deprecated within Psi4 and will be completely removed in an update. ; - This is one of the first modules that will take extensive use of our option passing update, you will probably collide with a few errors. Let us know and we will get them fixed up.; - Thanks for writing this up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335#issuecomment-205789593:288,update,update,288,https://psicode.org,https://github.com/psi4/psi4/pull/335#issuecomment-205789593,2,['update'],['update']
Deployability,"@edeustua Good to know. I think #442 should fix this, but we can certainly test it out after that patch drops.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232528562:98,patch,patch,98,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232528562,1,['patch'],['patch']
Deployability,@fevangelista A-ha! You did not run `git submodule update --init --recursive` your submodule is still pointing to the previous revision of the PCM module. ; I wrote some notes on the workflow when submodules are involved [here](https://github.com/psi4/psi4public/wiki/External-subprojects-using-Git-and-CMake),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/207#issuecomment-171442967:51,update,update,51,https://psicode.org,https://github.com/psi4/psi4/issues/207#issuecomment-171442967,1,['update'],['update']
Deployability,"@fevangelista yes that would be easy, but it would still be numerically unstable. Wait for a few hours for the next arXiv update to see the correct solution ;)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1759#issuecomment-558278222:122,update,update,122,https://psicode.org,https://github.com/psi4/psi4/pull/1759#issuecomment-558278222,1,['update'],['update']
Deployability,"@hmacdope happy to. I am currently working on a similar PR for r2scan-3c and others: https://github.com/psi4/psi4/pull/2842 you can have a look to get an idea what would be needed. Until the new ORCA is released we don't have good reference values for tests, but I was planning to write to the Grimme group.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2850#issuecomment-1380346948:203,release,released,203,https://psicode.org,https://github.com/psi4/psi4/issues/2850#issuecomment-1380346948,1,['release'],['released']
Deployability,"@hokru I made a few changes beyond what you had in your patch and it seems to work correctly now, for this molecule at least. MP2 and MP3 correlation energies are non-zero and in line with what I expect from smaller systems.; [patch.txt](https://github.com/psi4/psi4/files/3924255/patch.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561872174:56,patch,patch,56,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561872174,3,['patch'],['patch']
Deployability,"@hokru is quite right. You can get a tarball of any commit, tag, or release of any repository through GitHub. I'd strongly recommend doing a clone, rather than a tarball, so that you can update easily and do partial rebuilds. Even more strongly, I'd recommend you do something in the 1.1 release series, like 1.1a1 (if you really want a tag) https://github.com/psi4/psi4/tags because Psi4 has had its build system rewritten, has dumped boost, has switch from an executable to a library, and has had its git history rewritten after the 1.0 release (for all that, running it is exactly the same). Because of the history rewrite, I'm not even sure a 1.0 can be extracted from this repo (we've a plan to put up a separate 1.0 repo; Yes, there probably should be a big warning sign against trying to build 1.0 from existing repo). So, please clone and build HEAD, or clone and build 1.1a1 (if you prefer tags), or tarball and build 1.1a1 (if you must). The wiki for building is out of date. New instructions have been moved into the main documentation. That should get posted today, it was only committed yesterday. Even if you did just have a random git tag like e0a3ab, that gets translated into a sortable version (you can see yourself after cloning by running `python psi4/versioner.py`). So you'd still have a version like `1.1a1.dev100` to label the installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-273803591:68,release,release,68,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-273803591,5,"['install', 'release', 'update']","['installation', 'release', 'update']"
Deployability,"@hokru, can we get a status update on this? I'd like to start hacking up ADIIS/EDIIS, so I'd appreciate being able to rebase onto this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190#issuecomment-876678713:28,update,update,28,https://psicode.org,https://github.com/psi4/psi4/pull/2190#issuecomment-876678713,1,['update'],['update']
Deployability,"@hokru, correct me if I'm wrong, but isn't it fairly formulaic at this point to ask people to check how much memory they gave Psi and then check their scratch directory in the face of a PSIO read error? If it is, I have half a mind to update the error message with this advice. I'd need to check, but I think this is doable, and it would save us a lot of questions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959#issuecomment-661778670:235,update,update,235,https://psicode.org,https://github.com/psi4/psi4/issues/1959#issuecomment-661778670,1,['update'],['update']
Deployability,"@hokru, psi won't be able to update to 3.0.1 in general because the cmake buildsys wasn't backported. But so long as you can get a v3 `libxc.a` or `.so` out of libtools and stuff things in the right place, the ""hand update"" you describe should be perfectly legit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863#issuecomment-345783270:29,update,update,29,https://psicode.org,https://github.com/psi4/psi4/issues/863#issuecomment-345783270,2,['update'],['update']
Deployability,"@hokru, respective the memory estimate: I did some experiments and came up with a very rough estimate for the lower bound of a computation. I'll add a check and a warning in the next adcc release if the estimate is a substantial fraction of the main memory. Thanks for your suggestion in the first place. The respective change in adcc will be transparent to the interface needed for this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-555977921:188,release,release,188,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-555977921,1,['release'],['release']
Deployability,@j3mdamas Any update on this?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/812#issuecomment-347015850:14,update,update,14,https://psicode.org,https://github.com/psi4/psi4/issues/812#issuecomment-347015850,1,['update'],['update']
Deployability,"@j3mdamas, just an update, don't close this issue. The saga of input parsing for a 2-language program that works with several QC programs ranging from monolithic to flexible (users can actually access the stage between the language handover in psi) that pcmsolver contends with continues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-356771661:19,update,update,19,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-356771661,1,['update'],['update']
Deployability,"@jgonthier The driver has been in an out of Python 3 compatibility, considering the recent changes im not surprised that quite a few fail. . Probably a good TODO item after the inversion goes through is to update the driver to Python 3 standards and add a Travis case to ensure it stays there. From SciPy this year it appears that there is quite a bit of momentum to actually get everyone on board with Python 3, so its probably a good time to officially support it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252875803:206,update,update,206,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252875803,1,['update'],['update']
Deployability,"@jturney , @edeprince3 , @ryanmrichard, @dgasmith should look over a0a8c2b and see if it's ok. Basically, we were installing headers `src/lib/libmodule/*.h` to `includes/psi4/libmodule/*.h`, which is fine. But then we were installing headers `src/bin/module/*.h` to `includes/psi4/libmodule/*.h`, which meant that a header couldn't be referred to through the same path from both a source and installed file tree. Cue problems for compiling plugins against both. . This commit installs bin headers to `includes/psi4/module/*.h`. Then since the intermediate lib or bin dir is gone, can't do `#include <../bin/fnocc/blas.h>` anymore, so added the bin dirs to the CMake includes path. Then also installed `FCMangle.h` since Fortran plugins needed it. . The above gets Eugene's v2rdm built for me. Have I introduced any bad practices?. @dgasmith , contrary to what I wrote you, please hold off on merging this PR until this issue gets resolved",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/376#issuecomment-218387805:114,install,installing,114,https://psicode.org,https://github.com/psi4/psi4/pull/376#issuecomment-218387805,5,['install'],"['installed', 'installing', 'installs']"
Deployability,"@jturney @andysim @fevangelista @zachglick ; FYI, both libint1 and libint2 can now be built internally from this PR. * libint1 pulls a branch where the `Libint_t` has already become `Libint1_t`. Because the compiler looks everywhere in includes directories for headers, easiest to still build this branch in a conda env _without_ `libint` in `conda list`. (If you have `psi4-dev` installed, `conda remove libint --force` is what you need.); * libint2 pulls a tarball, then configures with spherical `gaussian` (looks like the quotes were the problem last week).; * if using `psi4-dev`, may want to dial down `-DMAX_AM_ERI` to 6 or so. If you've already built the specialized libint1 and/or libint2 externally, the below are what you want to tell psi4 to find them (it's the location of the Config.cmake file).; ```; -DLibint2_DIR=/programming/libint-2.6.0/installdir/lib/cmake/libint2 ; -DLibint_DIR=/programming/libint1/installdir/share/cmake/Libint; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-534313474:380,install,installed,380,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-534313474,3,['install'],"['installdir', 'installed']"
Deployability,@jturney Switched the names and updated the branch. Is there anything else needed here?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/532#issuecomment-265630868:32,update,updated,32,https://psicode.org,https://github.com/psi4/psi4/pull/532#issuecomment-265630868,1,['update'],['updated']
Deployability,"@jturney What are the plans for the integration of Einsums into Psi4? Given that the base of this PR is Einsums, it would be good to know where it is heading, especially since other groups may be using Psi4/Einsums for their plug-ins. Also @loriab the speed of this PR is hindered by the integrals, until we can figure out how Psi4 is going to accommodate Einsums, it seems a bit much to write a whole separate JK builder just for the F12 right now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110#issuecomment-2387454938:36,integrat,integration,36,https://psicode.org,https://github.com/psi4/psi4/pull/3110#issuecomment-2387454938,1,['integrat'],['integration']
Deployability,"@kannon92 I patched up the changes I suggested and fixed the frozen orbital issue. . Instead of building densities I switched back to the standard Cl/Cr mechanics as this will save you from computing the densities as `D = D I` and instead compute them as `D = Cl * Cr.T`. This will lower the density building step from `nact^2N^3` to `nact^2N^2` as `Cl/Cr` isnt really a Matrix, but a simple column vector. Please review the changes and make sure they look ok.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-264982081:12,patch,patched,12,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-264982081,2,['patch'],['patched']
Deployability,@keipertk Did you experience anything like this after the libERD patch the other day?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/173#issuecomment-135746478:65,patch,patch,65,https://psicode.org,https://github.com/psi4/psi4/issues/173#issuecomment-135746478,1,['patch'],['patch']
Deployability,@kis-gergely-dzsi this patch to sphinx fixes that https://github.com/loriab/sphinx/commit/fa5fa5ce56aaa7f5d45c5923c6da34382ee4bce2 . I haven't fully investigated to see if it's been fixed in pybind11 or if I need to submit that to sphinx itself.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1893#issuecomment-654310111:23,patch,patch,23,https://psicode.org,https://github.com/psi4/psi4/pull/1893#issuecomment-654310111,1,['patch'],['patch']
Deployability,"@konpat looking at first stable release that had USAPT solvers (v1.1), there is no ```wfn.semicanonicalize()``` in driver's ```run_sapt``` function, so it might be the case that the code was always like this. I'll try to set up a SAPT2020 package locally, with Piotr's SAPT(ROKS/ROHF) (http://dx.doi.org/10.1063/1.2968556) to compare how much impact this has on existing test cases.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1975#issuecomment-674363193:32,release,release,32,https://psicode.org,https://github.com/psi4/psi4/issues/1975#issuecomment-674363193,1,['release'],['release']
Deployability,"@konpat you may need to `-D ENABLE_Einsums=ON`. You can toggle the value in objdir/CMakeCache.txt, then rebuild.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110#issuecomment-1865219125:56,toggle,toggle,56,https://psicode.org,https://github.com/psi4/psi4/pull/3110#issuecomment-1865219125,1,['toggle'],['toggle']
Deployability,"@liye0005, you may want to proceed more gradually toward a Windows, OpenMP, AMD build, especially as the Windows build is newer. I've never needed to change `FC_SYMBOL` from default. Be sure to turn off any Fortran addons (gdma, dkh, erd) so that at most you're dealing with blas/lapack. I notice you're using openblas, which as the build docs note, has some problems. MKL is preferred, and you can use the azure-pipelines script to setup a useable build env. Then make modifications from there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504624701:413,pipeline,pipelines,413,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504624701,1,['pipeline'],['pipelines']
Deployability,"@loriab - many, but I think I might be nearing the end of these updates. I apparently hadn't used this plugin since the days of boost ... it probably would have been easier to rewrite the stupid thing from scratch than to repair it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1049#issuecomment-399415373:64,update,updates,64,https://psicode.org,https://github.com/psi4/psi4/pull/1049#issuecomment-399415373,1,['update'],['updates']
Deployability,@loriab . It looks like cmake doesn't support inner stage directories.; When it installs files for the ExternalProject psi4-core it uses DESTDIR (real stage directory) to install files into your stage directory. DESTDIR should be unset for all operations related to ExternalProject. Why do you need to use the ExternalProject with an internal stage directory that is really not supported by cmake?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325590525:80,install,installs,80,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325590525,2,['install'],"['install', 'installs']"
Deployability,"@loriab . Sorry for slow response. Yes, the settings of the pipeline variables are well hidden... :D. 1. Go to the *Psi4* pipeline page and click ""Edit"" (top right); ![screenshot from 2019-02-15 16-45-48](https://user-images.githubusercontent.com/2469715/52868257-15cf7c80-3143-11e9-86b9-b9e8237a51f3.png); 2. Click ""..."" (top right) and click ""Pipeline settings""; ![screenshot from 2019-02-15 16-45-57](https://user-images.githubusercontent.com/2469715/52868262-1831d680-3143-11e9-8b9b-3df7d6045b69.png); 3. Click ""Variables"" tab (top left); ![screenshot from 2019-02-15 16-46-09](https://user-images.githubusercontent.com/2469715/52868269-19fb9a00-3143-11e9-9113-93a3b56a0562.png); 4. For the moment just add `ctest.type` and `pytest.type` with `quick` defaults and ""Settable at queue time"" on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1527#issuecomment-464104214:60,pipeline,pipeline,60,https://psicode.org,https://github.com/psi4/psi4/pull/1527#issuecomment-464104214,3,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"@loriab @andysim Can you guys check into the EFP failure when you get a moment, not completely sure what to do about that one. If we *only* have EFP frags:; ```; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 83, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/home/travis/build/psi4/psi4/Install/lib/psi4/driver/driver.py"", line 427, in energy; molecule.update_geometry(); RuntimeError: ; Fatal Error: Molecule::geometry(): molecule does not contain any atoms. Try calling `molecule.update_geometry(); to ensure the molecule is properly constructed.; Error occurred in file: /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/molecule.cc on line: 541; The most recent 5 function calls were:; psi::PsiException::PsiException(std::string, char const*, int); psi::Molecule::geometry() const; psi::Molecule::set_full_point_group(double); psi::Molecule::update_geometry(); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/760#issuecomment-317918961:273,Install,Install,273,https://psicode.org,https://github.com/psi4/psi4/pull/760#issuecomment-317918961,2,['Install'],['Install']
Deployability,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-371075180:127,patch,patch,127,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180,1,['patch'],['patch']
Deployability,"@loriab @jeffschriber Hi is there any update on this issue as it is breaking a workflow I have where I calculate MBIS charges using wavefunctions stored in QCArchive the attached script shows how this works and results in the following error when using psi4-1.4.1.; ```; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; Computing free-atom volumes; Traceback (most recent call last):; File ""charges_from_wavefunction.py"", line 72, in <module>; psi4.oeprop(hf_wfn, ""MBIS_CHARGES""); File ""/Users/joshua/mambaforge/envs/test_psi4/lib/python3.7/site-packages/psi4/driver/p4util/util.py"", line 72, in oeprop; free_atom_volumes(wfn); ; File ""/Users/joshua/mambaforge/envs/test_psi4/lib/python3.7/site-packages/psi4/driver/p4util/prop_util.py"", line 54, in free_atom_volumes; current_en = wfn.scalar_variable('CURRENT ENERGY'); RuntimeError: ; Fatal Error: Wavefunction::scalar_variable: Requested variable CURRENT ENERGY was not set!. Error occurred in file: /Users/github/builds/conda-builds/psi4-multiout_1633712094436/work/psi4/src/psi4/libmints/wavefunction.cc on line: 1335; The most recent 5 function calls were:; ```. [charges_from_wavefunction.txt](https://github.com/psi4/psi4/files/7624873/charges_from_wavefunction.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299#issuecomment-982487534:38,update,update,38,https://psicode.org,https://github.com/psi4/psi4/issues/2299#issuecomment-982487534,1,['update'],['update']
Deployability,"@loriab For example, libxc project. The version here http://www.tddft.org/programs/octopus/download/libxc/ doesn't even contain .cmake files. Why doesn't it and how can external libxc be found without .cmake? Your version here https://github.com/loriab/libxc has .cmake files in the tree, and its README claims that it installs them, but it really doesn't install them. So, again, how can the external libxc be found?. Why aren't .cmake files installed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-343716686:319,install,installs,319,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-343716686,3,['install'],"['install', 'installed', 'installs']"
Deployability,"@loriab I can confirm that I have your version working with a5Z on Bridges. I suspect your branch is in a state of flux, but I'll point out that I had to do a few tweaks to get it to work. For example I had to make `psi4_main.a` a shared library so that I could access the Python bindings (and change it's name to `psi4.so`, otherwise Python claims it doesn't have an `__init__` function because Boost defines it for a module called psi4). There were a few places where the old libint and libderiv targets were still being used, which led to link errors like `no -lderiv` and `no -lint`. Also the `psi4config` file needs updated to reflect these changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-241027531:621,update,updated,621,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-241027531,1,['update'],['updated']
Deployability,"@loriab I did. I guess you don't encounter the error because you are not using `$PSIPATH`, see http://www.psicode.org/psi4manual/master/external.html#envvar-PSIPATH. (I'm using this to reproduce the situation of a user who wants to use a custom basis set file on a system-wide PSI4 installation to which he/she does not have write access.) It seems that basis set files in `$PSIPATH` are somehow handled differently. These are my corresponding files:. ```; head $PSIPATH/ano-rcc.gbs; cartesian. !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.7.0; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: ANO-RCC; ! Description: Full ANO-RCC basis; ! Role: orbital; ```. ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.4a1.dev101 . Git: Rev {master} 302cd1d dirty. R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,; A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). Additional Contributions by; P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,; A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz. -----------------------------------------------------------------------. Psi4 started on: Monday, 29 April 2019 07:36PM. Process ID: 6146; Host: molmod00.ugent.be; PSIDATADIR: /home/toon/miniconda3/envs/p4dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; H;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:282,install,installation,282,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['install'],['installation']
Deployability,"@loriab I have integrated `psi4 --fulltest` on Azure, but the tests does not work in parallel:; ```; 2018-12-06T18:15:06.8235423Z =================================== ERRORS ====================================; 2018-12-06T18:15:06.8236398Z _______________ ERROR at teardown of test_deprecated_wfn_arrays _______________; 2018-12-06T18:15:06.8236914Z [gw0] win32 -- Python 3.6.6 C:\tools\miniconda3\python.exe; 2018-12-06T18:15:06.8237116Z ; 2018-12-06T18:15:06.8238150Z tp = <class 'PermissionError'>, value = None, tb = None; 2018-12-06T18:15:06.8238413Z ; 2018-12-06T18:15:06.8238651Z def reraise(tp, value, tb=None):; 2018-12-06T18:15:06.8238835Z try:; 2018-12-06T18:15:06.8239065Z if value is None:; 2018-12-06T18:15:06.8239312Z value = tp(); 2018-12-06T18:15:06.8239526Z if value.__traceback__ is not tb:; 2018-12-06T18:15:06.8239861Z raise value.with_traceback(tb); 2018-12-06T18:15:06.8240255Z > raise value; 2018-12-06T18:15:06.8240643Z ; 2018-12-06T18:15:06.8240921Z C:\tools\miniconda3\lib\site-packages\six.py:693: ; 2018-12-06T18:15:06.8241733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; 2018-12-06T18:15:06.8242195Z C:\tools\miniconda3\lib\site-packages\six.py:693: in reraise; 2018-12-06T18:15:06.8242519Z raise value; 2018-12-06T18:15:06.8243257Z C:\tools\miniconda3\lib\site-packages\six.py:693: in reraise; 2018-12-06T18:15:06.8243569Z raise value; 2018-12-06T18:15:06.8244186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; 2018-12-06T18:15:06.8244400Z ; 2018-12-06T18:15:06.8244638Z def tear_down():; 2018-12-06T18:15:06.8245076Z import os; 2018-12-06T18:15:06.8245339Z import glob; 2018-12-06T18:15:06.8245555Z import psi4; 2018-12-06T18:15:06.8245794Z psi4.core.close_outfile(); 2018-12-06T18:15:06.8246104Z patterns = ['cavity.*', 'grid*', 'pytest_output.*h5',; 2018-12-06T18:15:06.8246380Z 'pytest_output.dat',; 2018-12-06T18:15:06.8246851Z '*pcmsolver.inp', 'PEDRA.OUT*', 'timer.dat']; 2018-12-06T18:15:06",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1399#issuecomment-445000007:15,integrat,integrated,15,https://psicode.org,https://github.com/psi4/psi4/pull/1399#issuecomment-445000007,1,['integrat'],['integrated']
Deployability,"@loriab I now have the same problem than @amjames regarding libstdc++.so. Quick context:; I installed my own GCC 5.2 using my own conda, then gave cmake the necessary info (through `-DCMAKE_CXX_FLAGS`) and modified `LD_LIBRARY_PATH`. I also installed Python 3.5 in conda and gave the paths to CMake using the `PYTHON_LIBRARY` and `PYTHON_INCLUDE_DIR` variables. With that, I could build and link (after a few tries) but a bunch of tests failed, seemingly Python-related. I thus tried to re-build, but giving the system Python (2.7) and Python libraries. For that, I modified my PATH environment variable so that Python 2.7 would be default and not the conda Python 3.5. I also passed all three `PYTHON_XXX` variables to CMake. I could build and link successfully, but now for some reason psi4 is associated with the wrong gcc headers.; My CMakeCache.txt contains the appropriate `gcc-name` options described in the FAQ, the first line of `echo $LD_LIBRARY_PATH` reads; `/theoryfs2/ds/gonthier/software/miniconda3/envs/gcc52/lib:/theoryfs2/ds/gonthier/software/miniconda3/lib:/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/compiler/lib/intel64`; and `ldd psi4` gives:; `libstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x00007fe059a33000)`. I haven't tried using `CMAKE_PREFIX_PATH` yet. I'm going to do that now and report the results.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252797491:92,install,installed,92,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252797491,2,['install'],['installed']
Deployability,@loriab I pushed a 1.2.0 release candidate with the desired license change. Please let me know if you see any additional issues. I will then tag it to release-1-2-0.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/693#issuecomment-298445553:25,release,release,25,https://psicode.org,https://github.com/psi4/psi4/issues/693#issuecomment-298445553,2,['release'],"['release', 'release-']"
Deployability,"@loriab I was able to port the patches to the newest snapshot, good to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301918665:31,patch,patches,31,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301918665,1,['patch'],['patches']
Deployability,"@loriab I'm not sure this does what we want as the packages in the main label are not yet updated. I can do that now, however, if you want.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848#issuecomment-598790998:90,update,updated,90,https://psicode.org,https://github.com/psi4/psi4/pull/1848#issuecomment-598790998,1,['update'],['updated']
Deployability,"@loriab I've added the internal build like you suggested (drawing from the previous add-on installation files). It seems to compile without issues on my machine, but let me know if anything looks awry!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1855#issuecomment-644526678:91,install,installation,91,https://psicode.org,https://github.com/psi4/psi4/pull/1855#issuecomment-644526678,1,['install'],['installation']
Deployability,"@loriab I've merged your PR into DEShawResearch/sns-mp2, and updates the testing code to work better outside of desres internal infrastructure (no `import garden)`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/865#issuecomment-347565056:61,update,updates,61,https://psicode.org,https://github.com/psi4/psi4/pull/865#issuecomment-347565056,1,['update'],['updates']
Deployability,@loriab Is there any reason we shouldn't just update the conda install instructions to have `pydantic >= 1.10` and then close issue?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3062#issuecomment-1768540106:46,update,update,46,https://psicode.org,https://github.com/psi4/psi4/issues/3062#issuecomment-1768540106,2,"['install', 'update']","['install', 'update']"
Deployability,"@loriab It might be just because I recently updated my workstation and I don't have a recent version of psi4 compiled. Psi4 1.1 runs energy('cisd') through fnocc.; ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.1 release. Git: Rev {} zzzzzzz . R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,; A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. in press (2017).; (doi: 10.1021/acs.jctc.7b00174). -----------------------------------------------------------------------. Psi4 started on: Wednesday, 25 October 2017 09:00PM. Process ID: 25797; PSIDATADIR: /usr/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; -1 1; Sc -1.7965316343 1.5540711104 0.6577410753; Li -3.8411511549 1.3293390591 3.1887862983; Li 0.7306020220 3.4504713202 1.4667051175; Li -0.7149951920 -1.4193774032 -0.1334886497; Li -3.3605940408 2.8558659134 -1.8910238414; }. set basis aug-pcseg-0; set reference rhf; set ci_maxiter 100; set scf_type pk; set nat_orbs true. scf_e, scf_wfn = energy('scf', return_wfn = True); ci_e, ci_wfn = energy('cisd', ref_wfn = scf_wfn, return_wfn = True); --------------------------------------------------------------------------. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:37 2017. => Loading Basis Set <=. Name: AUG-PCSEG-0; Role: ORBITAL; Keyword: BASIS; atoms 1 entry SC line 478 file /usr/share/psi4/basis/aug-pcseg-0.gbs ; atoms 2-5 entry LI line 30 file /usr/share/psi4/basis/aug-pcseg-0.gbs . ------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:44,update,updated,44,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,2,"['release', 'update']","['release', 'updated']"
Deployability,"@loriab No problems, I just pushed the change. I'd rather have it done right now than forgetting to patch it later :D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253992072:100,patch,patch,100,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253992072,1,['patch'],['patch']
Deployability,"@loriab No success, unfortunately. The option is recognized (initial cmake); ```; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building using CMake 3.19.4 Generator Unix Makefiles; -- Setting option BUILD_SHARED_LIBS: ON <=================; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; ```; but somehow does not get passed to the libint2 build step (make):; ```; [ 73%] No update step for 'libint2_external'; [ 75%] No patch step for 'libint2_external'; [ 77%] Performing configure step for 'libint2_external'; loading initial cache file /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/tmp/libint2_external-cache-Release.cmake; -- Version: Full 2.7.1 Numeric 2.7.1; -- SO Version: Full 2:3:0 Major 2; -- The CXX compiler identification is GNU 11.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/g++-11 - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Setting option CMAKE_BUILD_TYPE: Release; -- Setting option REQUIRE_CXX_API: ON; -- Setting option REQUIRE_CXX_API_COMPILED: OFF; -- Setting option ENABLE_FORTRAN: OFF; -- Setting (unspecified) option ENABLE_MPFR: OFF; -- Setting option BUILD_SHARED_LIBS: OFF <==================; -- Setting (unspecified) option LIBINT2_BUILD_SHARED_AND_STATIC_LIBS: OFF; -- Setting (unspecified) option LIBINT_LOCAL_Eigen3_INSTALL: OFF; ```. The error message is exactly the same.; I wiped the build directory completely in between, so there were no leftovers that might have influenced the build process.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572#issuecomment-1121326370:524,update,update,524,https://psicode.org,https://github.com/psi4/psi4/issues/2572#issuecomment-1121326370,4,"['Release', 'patch', 'update']","['Release', 'patch', 'update']"
Deployability,"@loriab Ok, after some problems getting everything to work together, and setting `which python` to the correct Python, here is what I see (still Ubuntu 16.04.1 LTS, gcc 5.4.0, Python 3.5.2):; - with ATLAS (v. 3.10.2), the following tests fail:; 77 - cdomp2-2 (Failed); 125 - dfmp2-grad2 (Failed); 127 - dfmp2-grad4 (Failed); 129 - dfomp2-2 (Failed); 131 - dfomp2-4 (Failed); 188 - mints9 (Failed); - with Intel MKL (v. 2017.0.098), I have two Failed and one Timeout:; 188:mints9 (Failed); 243:opt13 (Timeout); 329:libefp-qmefp-moldomains (Failed); - with openBLAS (v. 0.2.18), I have one Failed and one Timeout:; 188:mints9 (Failed); 243:opt13 (Timeout). All were compiled with optimization (release version). Note that ATLAS does not time out on opt13, which seems to indicate it's a bit faster than the other two, but then it fails for the cdomp2/dfomp2 tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-278449042:692,release,release,692,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-278449042,1,['release'],['release']
Deployability,"@loriab Regarding the chemps2 version: I just tried on my desktop where everything is fine and it installed 1.8.3. On my cluster with gcc < 4.9, it installs chemps2 1.8.2, if I do the install with the gcc 5 env activated it installs chemps2 1.8.3. So it seems the version installed depends on the availability of gcc >= 4.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288529918:98,install,installed,98,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288529918,5,['install'],"['install', 'installed', 'installs']"
Deployability,"@loriab Roger that. Everything updated and gau2grid re-pinned. Ill probably do another release or two before Psi4 1.2(?) ships, but I can update those versions pins then. @psi4/maintainers This is ready to go. Id like to get this out soon so that we can start hammering on the library. There should be no bugs, but it's a low-level change so best to really check it out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/869#issuecomment-351577847:31,update,updated,31,https://psicode.org,https://github.com/psi4/psi4/pull/869#issuecomment-351577847,3,"['release', 'update']","['release', 'update', 'updated']"
Deployability,"@loriab Sure, can we turn off nightly builds until the ChemPS2 module is updated as well?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223824404:73,update,updated,73,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223824404,1,['update'],['updated']
Deployability,"@loriab Thank you! We are still using 3.7 for this release, I'm planning to upgrade python in the next one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2593#issuecomment-1152600316:51,release,release,51,https://psicode.org,https://github.com/psi4/psi4/issues/2593#issuecomment-1152600316,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"@loriab Thanks for these comments!. I now have some simple documentation [for running Psi4 with MDI](https://molssi.github.io/MDI_Library/html/mdi_ecosystem.html#ecosystem_psi4) as part of the MDI_Library documentation pages. Its still very basic, but thankfully there isn't much more to the process than what is described in the [general MDI launch documentation](https://molssi.github.io/MDI_Library/html/library_page.html#library_launching_sec). I've tried to work on adding some how-to-use documentation to Psi4 proper, but I can't seem to get my Sphinx environment set up correctly:. ```; Building html documentation ...; Running Sphinx v2.2.0; making output directory... done; /Users/tbarnes/anaconda3/envs/psi4/lib/python3.7/site-packages/sphinx/events.py:103: RemovedInSphinx30Warning: autodoc_default_flags is now deprecated. Please use autodoc_default_options instead.; results.append(callback(self.app, *args)). Theme error:; no theme named 'cloud' found, inherited by 'sphinx_psi_theme'; make[3]: *** [sphinxman] Error 2; make[2]: *** [doc/sphinxman/CMakeFiles/sphinxman.dir/all] Error 2; make[1]: *** [doc/sphinxman/CMakeFiles/sphinxman.dir/rule] Error 2; make: *** [sphinxman] Error 2; ```. This is despite having a conda installation of `cloud_sptheme`. Regarding the `mdi('hf/cc-pvdz')` command, I would be fine with something more like your suggestion of `energy('hf/cc-pvdz', mdi=True)`. One alternative possibility would be to say that if the `--mdi` runtime option is provided, the mdi code is just automatically called after everything in the input file has executed; this approach would still require some mechanism of setting the method used, of course, and I have no idea whether this would fit into the broader Psi4 design philosophy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-533313015:1236,install,installation,1236,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-533313015,2,['install'],['installation']
Deployability,"@loriab This looks ok to me, thanks for getting it working. Regarding CI_FILE_START, the current handling for this is for historical reasons. It should be updated to switch from an option to a PSIF number like everything else, and the default could certainly change to a non-conflicting value. I do not mind trying to make those changes if you want.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1926#issuecomment-642240983:155,update,updated,155,https://psicode.org,https://github.com/psi4/psi4/pull/1926#issuecomment-642240983,1,['update'],['updated']
Deployability,@loriab What's the problem with PCMSolver? The nonstandard install paths?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249113857:59,install,install,59,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249113857,1,['install'],['install']
Deployability,"@loriab [This line](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1382) for hess-by-energies and [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1529) for hess-by-grad. The mechanism is the same in both cases. The reinterpretation-forbidden-molecule eventually goes to the density-fitted energy/gradient step. To force the computation to be done in c1, the scf helper gets called in the [energy case](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1591) and in the [gradient case](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1669). Now the two mechanisms unify. The atom_/full_atom_ mirroring gets broken at the [clone step](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1436), which would be re-synced during [update geometry](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1440) if not for that forbidding of reinterpretation. We might be able to forgive reorienting in the case of hess-from-energies, but I don't see a way for difference of gradients. We need all our gradient vectors to be in the same coordinate system.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108#issuecomment-408954158:842,update,update,842,https://psicode.org,https://github.com/psi4/psi4/pull/1108#issuecomment-408954158,1,['update'],['update']
