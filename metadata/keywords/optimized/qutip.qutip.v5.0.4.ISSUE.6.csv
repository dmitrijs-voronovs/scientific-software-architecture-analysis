quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"Hey,. It seems the sigmam() operator incorrectly returns True when tested with isherm. I think this is only an issue in the developer version 3.2.0.dev- (it does not happen with the stable release). The following code reproduces the issue:. ``` python; import qutip as qu. print(""My version:""); print(qu.version.version). mysigmam = qu.basis(2,1) * qu.basis(2,0).dag(); print(""My sigmam:""); print(mysigmam); print(""is hermitian?:""); print(mysigmam.isherm). print(""Qutip sigmam:""); print(qu.operators.sigmam()); print(""is hermitian?:""); print(qu.operators.sigmam().isherm); ```. Which returns, on my machine:. ```; My version:; 3.2.0.dev-; My sigmam:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = False; Qobj data =; [[ 0. 0.]; [ 1. 0.]]; is hermitian?:; False; Qutip sigmam:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0. 0.]; [ 1. 0.]]; is hermitian?:; True; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/482:67,test,tested,67,https://qutip.org,https://github.com/qutip/qutip/issues/482,1,['test'],['tested']
Testability,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956,2,['test'],['test']
Testability,"Hi @ALasek . You are right, there is a bug in the error handling.; ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""); ```; This check is wrong. It assumes that the state is a qubits state. Our test didn't cover the `run` method with multi-level systems. Here are the ways around:; - If you know how to hack the package, you can simply find the file and delete this error handling (lines 2113 and 2114).; - If you don't know how to do that, you can also use; ```; gate_sequence_product(qc.propagators()); ```; to compute the unitary representation of the circuit first and then apply it to the input state. I'll make a bug fix soon. But the next release may still take a while. Using `QubitCirucuit` for qutrits and qudits should be fine, it is rarely used though. So there might be bugs that are uncovered by our test. If you encounter any further questions, feel free to ask!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650:302,test,test,302,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650,2,['test'],['test']
Testability,"Hi @Ericgig , ; Could you please take a look at this? Me and @nathanshammah were wondering if this should be merged as-is, but a new issue should be opened to reflect that the Python no Cython tests fail? Or maybe we could fix them, and could you help with what's going wrong?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-561931270:193,test,tests,193,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-561931270,1,['test'],['tests']
Testability,"Hi @Ericgig ,; I just re-installed things with pip, and now the tests are passing (and my original examples work as expected)!. For what it's worth, I found that using pip to install scipy and qutip worked and resolved the issues.; The original problem seems to be related to conda installing a version of openblas which is buggy (in particular 0.3.20), see the scipy issue linked above for more info on that. Version 0.3.18 seems to work fine. Thanks for the help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205764071:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205764071,1,['test'],['tests']
Testability,"Hi @Ericgig . I've ran the tests from the FreeBSD port's directory, and the errors above are what was printed. Yuri",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822:27,test,tests,27,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822,1,['test'],['tests']
Testability,"Hi @MartinSandeCosta, I have merged the PR of @mlaguna10. You can see now there is a few conflicts. Could you make a fresh PR including your changes based on the current master branch? . It could include:; - The controlled version of the gates; - Changes in QubitCircuit.propagator(); - Tests; and another enhancement you have related to #1208 . We shouldn't include the change of the attribution name `N` and `U_list` in this PR, as @jakelishman and @ajgpitch explained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-607489616:287,Test,Tests,287,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-607489616,1,['Test'],['Tests']
Testability,"Hi @VolodyaCO, thanks for reporting this!; I think the reason for `tlist` being overridden is because the result will be independent of `tlist` when the input is a steady-state. This can be seen in the following equations:; ![image](https://user-images.githubusercontent.com/57414022/121327018-5d313680-c913-11eb-9760-ca6004daca18.png); where rho is the initial state (`state0`) and H is the Hamiltonian of the system. I use the fact that rho is a steady-state to remove its temporal dependence. This derivation is simplified assuming unitary evolution (no collapse operators) but the same applies in the most general case where we include the collapse operators. This is my guess on why `tlist=[0]` is employed when using `state0=None`: the result does not depend on `tlist`. Hence, this is probably not a bug as the result should be mathematically correct. That being said, I would also expect the same output shape for the cases shown above unless explicitly mentioned in the docstring of the function. Thus, I think the way to go here is to document this behaviour in the docstring (as well as removing the t appearing in correlation_..._1t docstring) as any change in the output shape will break backwards compatibility. However, it may be worth considering whether this is the intended behaviour for QuTiP 5. I would suggest removing `state0=None` as possible input for simplicity in the maintenance and testing or at least I would make the example shown by @VolodyaCO to be consistent and have the same output. Let us see what the QuTiP admin team thinks :smile:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355:1410,test,testing,1410,https://qutip.org,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355,1,['test'],['testing']
Testability,"Hi @dweigand, this looks interesting. It would you be nice to push this forward, adding some tests for this and integrating @Ericgig suggested changes. I am wondering whether there is a more intuitive (explicit) option than `qfunc_amat `. Something like a Boolean `precompute`?. Writing some documentation for this, in https://github.com/qutip/qutip-doc, would allow users to discover this option more easily at http://qutip.org/docs/latest/guide/guide-visualization.html#husimi-q-function, it's very nice you have some performance checks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-536368295:93,test,tests,93,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-536368295,1,['test'],['tests']
Testability,"Hi @egdeist, thanks for finding it, again. Somehow my change was reverted by #990. And no one realised it since QuTiP isn't automatically tested on windows. . Do you still have after changing it to `np.random.randint(0, np.iinfo(np.uint32).max, ntraj, dtype=np.uint32)`?; https://github.com/qutip/qutip/blob/8dbbe77f1c22ded7dc9c445d0dd82a3120fea94f/qutip/stochastic.py#L380-L390; https://github.com/qutip/qutip/blob/8dbbe77f1c22ded7dc9c445d0dd82a3120fea94f/qutip/stochastic.py#L410-L420",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-608290242:138,test,tested,138,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-608290242,1,['test'],['tested']
Testability,"Hi @hodgestar , sounds good! I submitted the first PR for the tests.; For the `process_fidelity` and `average_gate_fidelity` PRs, I can definitely send them on the weekend, I can't promise before that unfortunately.; I'm happy to target either version with the other PRs, please let me know what makes more sense!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703#issuecomment-958255641:62,test,tests,62,https://qutip.org,https://github.com/qutip/qutip/issues/1703#issuecomment-958255641,1,['test'],['tests']
Testability,"Hi @hodgestar thank you for yout input I will add the tests.; On further inspection it would be interesting if someone that wrote or uses this piece of code could comment if the new default settings for dnorm are correct. This specially affects the calls to Qobj.dnorm() since it does not have extra arguments, we could add a **kwargs there but I do not know if the hiding of the extra arguments was an intended feature in the original,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1463#issuecomment-801903723:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/pull/1463#issuecomment-801903723,1,['test'],['tests']
Testability,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:212,test,tests,212,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487,8,"['Test', 'log', 'test']","['Test', 'logic', 'test', 'tested', 'tests']"
Testability,"Hi @jakelishman you were right about the contraction, I changed the indexes as in http://qutip.org/docs/latest/guide/guide-tensor.html so that it represents a trace-like channel. On the other hand I find that mixed dimensions operator `[[m,n], [m,n ]]` appear in some of the tests that were already in place, I will try to write my thoughts on their meaning later. I am still going to refactor this a little bit more, and tell you when it is ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-831049708:275,test,tests,275,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-831049708,1,['test'],['tests']
Testability,"Hi @loganbvh. Thanks for the interest!. The package you developed looks very nice. It does have some overlap with `qutip.qip`, but more following the perspective of experimentalists as you said. The start point of `qutip.qip` is a framework of simulating quantum circuit with more realistic noise. We are considering building an ecosystem around `qutip`, as described in a [roadmap discussion](https://github.com/qutip/qutip-doc/pull/125/files). If you are interested, we could propagate it as a ""QuTiP affilliated packages"" (packages that developed upon qutip but not maintained by the QuTiP team). We are also very interested in building APIs for importation and exportation pulses defined in other libraries. A possible GSoC project is listed [here](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2021#4-pulse-level-description-of-quantum-circuits). Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1439#issuecomment-778615974:4,log,loganbvh,4,https://qutip.org,https://github.com/qutip/qutip/issues/1439#issuecomment-778615974,1,['log'],['loganbvh']
Testability,"Hi @nathanshammah,. Could this issue perhaps be broken into sub-tasks in some way, perhaps, in order to enable work starting on it a bit more feasible?. Also, I can see it's been labelled as a ""good first issue"" but it seems to me the definition of done (i.e., what would a PR - or a set of PRs - that would successfully address the problem entail?), with respect to the entire issue, could be clarified a bit further, and the breakdown into sub-tasks (which itself might result organically from some further discussion) might help a bit in that direction. Regarding possible approaches for handling randomness - I have to admit I've started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:786,test,tests,786,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,2,['test'],"['test', 'tests']"
Testability,"Hi @nonhermitian,. I don't see any 4.2 release nor v4.2 tag, which commit should I test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317467358:83,test,test,83,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317467358,1,['test'],['test']
Testability,"Hi @nwlambert,. Sure! This is the code I used to test the changes:. ```; import numpy as np; from qutip import *. Gamma_r = 0.5; Gamma_l = 0.1. n_ket = (1)/(Gamma_l + Gamma_r)*Qobj([[Gamma_r],[Gamma_l]], ); n_bra = Qobj([[1, 1]]). Id = Qobj([[1, 0], [0, 1]]). L = Qobj([[-Gamma_l, Gamma_r], [Gamma_l, -Gamma_r]],). I_ops = Qobj([[0, Gamma_r], [0, 0]]). L_s = sprepost(L, Id). I_s = sprepost(I_ops, Id). current, noise, skw = third_cumulant(L_s, rhoss=n_ket*n_bra, J_ops=[I_s], I_ops=[I_s], sparse=True, method=""pinv""). print(current, noise, skw); ```; It is based in a simple analytical example I found in a paper, which contains the expressions to check the results. This is the paper (page 7, the section ""Toy model""): [here is the paper](https://orbit.dtu.dk/en/publications/current-and-current-fluctuations-in-quantum-shuttles). As you can see it is really simple, although I had to make some changes to be able to applied in QuTip (I hope this doesn't lead to major fails). The effect of the frequency for the case when it is not defined in the function can be observed using the same example, just don't modify that part and you will see it, then you can try the solution I propose ( I don't know if I explained myself correctly).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2435#issuecomment-2126527531:49,test,test,49,https://qutip.org,https://github.com/qutip/qutip/pull/2435#issuecomment-2126527531,1,['test'],['test']
Testability,"Hi @pschindler,. Indeed, the behavior you show is a bug in qutip 4.7.0. Thanks for reporting this! However, it is actually a bug in the `sparse=True` case. The scipy case gives a different result compared to qutip sparse because of the method used. `eigh` assumes the input is hermitian but `op` is not. You can see the correct eigenvalues using:; ```; In [7]: scipy.linalg.eigvals(op.full()); Out[7]:; array([-1. -2.22044605e-16j, -0.5+8.66025404e-01j, -0.5-8.66025404e-01j,; 0.5+8.66025404e-01j, 0.5-8.66025404e-01j, 1. +0.00000000e+00j]); ```. I am genuinely surprised that the `sparse=False` is bugged in the latest version of qutip. Fortunately, I tested this in the master branch of qutip (this contains the qutip 5.0.0 alpha version) and the bug seems to be solved there. This operator is indeed subjected to the same bug Eric shows (it is non-hermitian). However, due to the real part of the eigenvalues, it actually shows the correct answer (similar to the example I showed in my previous comment). I will try to find the source of the error but it seems very likely that we incorrectly label the operator as hermitian and hence uses the wrong method to find eigenvalues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348:653,test,tested,653,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348,1,['test'],['tested']
Testability,"Hi @sahmed95, thanks a lot for your many suggestions on improving this module! I'll respond to each of your individual suggestions, but here is a summary of the ones worth discussing. > Changing QObj to :class: qutip.Qobj; line spacings; ""[[t1]_wg1]"" changes. I will make these changes. See the `temporal_basis_vector` comment for discussion on changing nested list to dictionary. > Things not covered by tests. I'll add tests for these or remove the functionalities (for example, `count_filled()` is never used and is just a debugging function I made while developing this module). > Lots of minor suggestions to comply with PEP8. I will make most of these changes. Some of the errors, such as the 80>79 errors and spaces around kwarg equals, were not shown as problematic using PyCharm's PEP8 linter with default inspection profile - can you provide steps to reproduce? However, I think that some bits that PEP8 classifies as problematic shouldn't be changed for notational consistency, such as H = hamiltonian, and my usage of T and W in the code and the notebook to denote number of time bins and waveguides. > Moving `__all__` to after import statements. I declared `__all__` in its current location because almost universally, all (heh) top-level qutip modules declare it before imports. (I actually checked about a dozen of these and can't find any instance of it being after imports.) I think this might be worth changing to comply with PEP8, but I think it should be done after the module is added in a separate commit where all occurrences of this are changed across QuTiP. > Shortening argument / function names. I'll respond to each proposed change individually, but in general I disagree with most of these proposed changes since I think they reduce conceptual clarity. (For example, `temporal_basis_vector` returns a specific vector in the temporal basis; I would expect a function named `temporal_basis` to return an enumeration of all basis vectors.) However, I will try to think of sh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:405,test,tests,405,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,2,['test'],['tests']
Testability,"Hi @sarsid, there are still some tests failing. When you think the PR is really, just make it a ready-for-review PR and request a review. Besides, it would be great to address some of the style issues in code climate like ""Continuation line under-indented for visual indent"". Not all of them must be fixed though, it's more like a guide. The `pycodestyle` package can help you detect them locally if you would like to use it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-646002967:33,test,tests,33,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-646002967,1,['test'],['tests']
Testability,"Hi @victor-onofre @Ericgig . As far as I understand it, the only change needed is a single line in correlation_me_2t, as shown above. A test to show what the function should do, and how it currently does not work correctly, is shown in the code above. I've not attempted to 'solve' this issue further myself for the following 2 reasons:. 1) I'm not a theorist. I've discussed this with colleagues (as also mentioned above) but I'd like to have someone check this proposed change makes sense, preferably someone who knows why the code currently is what it is, maybe there is a reason for it?. 2) I'm unfamiliar with how github works, I've only used it for version control on private projects, so I actually don't know what to do to 'merge' the proposed changes into the code. On the other hand, I have been using qutip with the change suggested above, and as far as I can tell, for my use case, it works well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808#issuecomment-1147586148:136,test,test,136,https://qutip.org,https://github.com/qutip/qutip/issues/1808#issuecomment-1147586148,1,['test'],['test']
Testability,"Hi @victor-onofre, I don't think that this issue has a bounty for the unitary hack, but we would be grateful if you want to tackle it.; Yes, if you can add a test that would have failed but is now passing, it would be great. Also, I believe the same bug can be found in `_correlation_me_2t`, which should also be fixed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808#issuecomment-1147521055:158,test,test,158,https://qutip.org,https://github.com/qutip/qutip/issues/1808#issuecomment-1147521055,1,['test'],['test']
Testability,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-61043885:186,test,test,186,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885,1,['test'],['test']
Testability,"Hi Anto, ; Could you please leave the issue for a GSoC candidate. There are no error raised but looking are the equations, something looks wrong. For example:; For positive `m`: `SPlm[1]`, but the equivalent term for negative values: `SPlm[abs(m)]`. So when adding the tests, I expect that some fixes will be needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653:269,test,tests,269,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653,1,['test'],['tests']
Testability,"Hi Arne. Thanks for the bug report. Yes, you're right, it is the change in default value of the average_states (used to be called mc_avg) that is the course of the failing tests. And it could break backwards compatibility so perhaps it should be reverted. However, if average_states defaults to True it breaks backwards compatibility with the stochastic master equation solvers (which did not use this flag before, and had a different default behavior). However, since the stochastic ME and SE solvers has not yet been an official part of the qutip API in a release, perhaps priority should be to keep the mcsolve backward compatible (although I think it makes more sense not to take an average over the trajectories by default).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/37#issuecomment-22224680:172,test,tests,172,https://qutip.org,https://github.com/qutip/qutip/issues/37#issuecomment-22224680,1,['test'],['tests']
Testability,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18592742:426,test,test,426,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742,3,['test'],"['test', 'tests']"
Testability,"Hi Ben. Thanks for getting back to his and finding the problem! However I think this PR has become a bit messy. I'm a bit concerned with f4e6dccb726d7d35415fd2208c4a4b84faab685d which seems to have introduced some merge conflicts and many changes. I think it is better to you create a new branch, apply the changes you want and create a new PR. I think this would create a much cleaner merge and perhaps fix the problems with the failing travis tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/83#issuecomment-36420130:445,test,tests,445,https://qutip.org,https://github.com/qutip/qutip/pull/83#issuecomment-36420130,1,['test'],['tests']
Testability,"Hi Bilal,. The conda-forge qutip package should install without VS-15. Most of qutip; functions should still work. This was certainly the intention when we; worked on it. I can't remember now though how well we tested without VS-15,; as the main focus was getting it to work with VS-15. The string type time-dependence needs a C++ compiler, so those functions; won't work. This means a lot of tests will fail. So, give it a go and let us know how you get on. Alex. On 26 February 2018 at 04:07, Bilal Riaz <notifications@github.com> wrote:. > Thanks for suggesting Linux subsystem, but it is not good enough to run; > simulations, it is slower for even day to day file manipulations, so from; > your comment and documentation you shared I come to conclusion that there; > is no alternative of VS to run Qutip in windows 10.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368384720>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7ZQXPfD6q0cVTq1mY17St18hseO5ks5tYi4agaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368824556:211,test,tested,211,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368824556,2,['test'],"['tested', 'tests']"
Testability,"Hi Denis. Nice work, thanks! It would be great if you could create test notebooks that compares 'euler-maruyama' and 'euler-maruyama_fast', and 'milstein' and 'milstein_fast', and submit a pull request to our new repository for development notebooks at https://github.com/qutip/qutip-notebooks. I'll merge this PR now and do more tests later on. I might also make some small changes in your modifications, especially with the API for A_ops is still quite experimental (for example, not all operators that are precomputed and added to A_ops are used, so some could be dropped).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/51#issuecomment-25335125:67,test,test,67,https://qutip.org,https://github.com/qutip/qutip/pull/51#issuecomment-25335125,2,['test'],"['test', 'tests']"
Testability,"Hi Emi,; There are a few options:; `krylovsolver` could exist independently of Qutip and be used as:; ```; import qutip; from krylovsolver import krylovsolve; ...; result = krylovsolve(H, psi, tlist, ...); ```. If you want it to be part of qutip itself, since it solve the same problem as `sesolve`, it could be inserted as an options to `sesolve` or be it's own function. It would be better to not have too many function doing the same thing, but since we don't have many alternative method in `sesolve` it could be overlooked. Seeing the state of `krylovsolve`, both would be quite easy to do. Do you have benchmarks to compare it to `sesolve`? From what I understand, `krylovsolve` is a faster `sesolve` limited to constant Hamiltonian. So it would be interesting to see how fast it is. If we add `krylovsolve` to qutip, would you be able to maintain it? A new major version of qutip is in development and it will need to be updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-925327795:608,benchmark,benchmarks,608,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-925327795,1,['benchmark'],['benchmarks']
Testability,"Hi Ericgig, i tested it with a Rabi Hamiltonian. It returns the steadystate immediately! [This is the plot](https://ibb.co/PthSzRd) of the master equation time evolution with the direct steadystate expectation value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1659#issuecomment-917369967:14,test,tested,14,https://qutip.org,https://github.com/qutip/qutip/issues/1659#issuecomment-917369967,1,['test'],['tested']
Testability,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:117,test,testing,117,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876,3,['test'],"['test', 'testing']"
Testability,"Hi Jake okey will re align and pull then and focus the other modules. Let's see if I am getting this right, is it correct style to add parameter to fixtures when they are used all along the test module, but in very specific special cases just leave the variable assignment before the test definition, like here https://github.com/jakelishman/qutip/blob/862d0de844d9d5b39f0301d0ea4c47c37d995499/qutip/tests/test_metrics.py#L126 ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815030359:190,test,test,190,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815030359,3,['test'],"['test', 'tests']"
Testability,"Hi Jake,. Thanks for this, yeah I started looking into it but realised it would take too long for me to track it down. And definitely I have found some speed-ups in `dev.major` for some matrix operations compared to v4.5. Actually, I have been working a bit with Eric and Nathan to make a PR soon on something related to this, where I have been doing fairly rigorous speed testing. If you like, I can loop you in on this thread (I read your blog a bit and have been using the new `Dense` data layer -- this opens up some new possibilities).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245:373,test,testing,373,https://qutip.org,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245,1,['test'],['testing']
Testability,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-63427565:453,log,logic,453,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565,1,['log'],['logic']
Testability,Hi Markus. I think it is a good idea to pep8ify the code. I have had that in mind for some time so it's great that you took the initiative to do get started on this. I'm travelling now so it might take a while but I'll look through your PR and run the unit tests on it just to make sure nothing breaks (even though shouldn't of course..).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/6#issuecomment-10948380:257,test,tests,257,https://qutip.org,https://github.com/qutip/qutip/pull/6#issuecomment-10948380,1,['test'],['tests']
Testability,"Hi Nithin,; I think I found the bug: `_j_z`.; Could you correct it and add make the complex to real conversion explicit to remove the warning. I would suggest to merge in the present qutip/master since we changed the tests script. The test you have now don't work with the recent version of scipy and cython. If all but mac test passed we can merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-468425102:217,test,tests,217,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-468425102,3,['test'],"['test', 'tests']"
Testability,"Hi Vutshi. Thanks a lot for this contribution! It's looking very interesting indeed. I'll be looking into the details of your code, notebook and your paper in the coming days, but from a first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the v",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1049,test,tested,1049,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953,1,['test'],['tested']
Testability,"Hi albertomercurio, ; Thank you for the contribution. We will need at least one automated test: a function in `qutip/tests/test_correlation.py` that call `steadystate_floquet` and would fail if something is wrong. For example, in the next major version of qutip, `Qobj.data.tocsc()` will fail. We want it to be caught when running the tests in `qutip/tests` instead of having to remember to update it. It could be simply to running your manual test and instead of plotting the result, checking it with `numpy.testing.assert_allclose`. Ideally it should be done twice, once for `sparse=True` and once for `sparse=False`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917454056:90,test,test,90,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917454056,6,['test'],"['test', 'testing', 'tests']"
Testability,"Hi albertomercurio, it's not needed to open an issue first but always nice to know it's coming.; The feature seems interesting, thank you for contributing. I took a quick look at your `steadystate-floquet` branch, the function look good. ; Have you added new tests for it?; Please open the PR when you have time, it does not have to be final.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1659#issuecomment-917295134:259,test,tests,259,https://qutip.org,https://github.com/qutip/qutip/issues/1659#issuecomment-917295134,1,['test'],['tests']
Testability,"Hi all, updated everything, added more tests and updated the notebooks too in the [notebook repository](https://github.com/qutip/qutip-notebooks/pull/52/commits/9fe1a6cafd5a4c8c2ac8b357db98c9483af818bd)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-370400958:39,test,tests,39,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-370400958,1,['test'],['tests']
Testability,"Hi all,. I'm not sure how to do pull request in this case so let it be a new Issue. I have implemented Milstein method for solving SME for homodyne detection scheme. For my problems it works much better than the simple Euler-Maruyama method. In case of a single Wiener increment all what is required is the new rhs function (see notebook attached). For multiple Wiener increments the provided infrastructure of QuTiP is not enough. One needs to provide all of the A_ops to the rhs. The modified stochastic.py file is also attached (from qutip.stochastic import smesolve_mil). The attached Notebook contains an example of SME with an analytical solution. Which allows to test smesolver for a single quantum trajectory. The notebook and the modified stochastic.py is here:; http://db.tt/dJNjGo3g. P.S. Due to nonlinearity in the stochastic term of quantum SME the simple Euler-Maruyama scheme doesn't work properly sometimes. Even Milstein struggles. From my experience semi implicit methods help. But in order to implement it in a convenient way one needs to modify QuTiP approach to the problem. Maybe instead of rhs function it would be better to have a function which returns \rho_{n+1} instead of d\rho. It could be more flexible.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35:670,test,test,670,https://qutip.org,https://github.com/qutip/qutip/issues/35,1,['test'],['test']
Testability,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44495147:432,test,test,432,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147,1,['test'],['test']
Testability,"Hi both, `dev.major` is currently quite a few commits behind `master`, particularly with regard to dev ops tooling - as you guys are spotting here - though I did bring some of the testing and setup tools up-to-speed last week. The reason we haven't added `-Werror` to the pytest runs on `dev.major` yet is because we haven't fixed all the warnings that are emitted in various parts of the code. We had hoped to do this before starting new projects on it, but I guess that didn't work out in the end. We still want to get it done in the next couple of weeks; the plan is to get #1481 merged, then merge `master` into `dev.major`. We don't want your projects to be blocked, so we can merge this PR in, though we intend to remove this entire file (and all the logistics that go with it) before the 5.0 release. Our original plan for managing the 4.x and development 5.x branches simultaneously started to fray at the edges once we started getting a much larger uptick in contributions; when it was mostly just me and Eric working on the code, it was easy to manage, but now there's lots of us, it's a bit harder (though a good problem to have!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864939384:180,test,testing,180,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864939384,2,"['log', 'test']","['logistics', 'testing']"
Testability,"Hi everyone and thank you all for the helpful advices.; I started testing OpenMP on v4. Some news from my side:; - I installed Qutip with OpenMP on Marconi100 and Galileo100 ; - I chose the spin-chain.ipynb example in https://github.com/qutip/qutip-notebooks/ for testing; - I passed options to `mesolve` in this way (varying n1, n2 and also the number of spins N): ; ```; opts=Options(num_cpus=n1 openmp_threads=n2, use_openmp=True); result = mesolve(H, psi0, tlist, c_op_list, sz_list, options=opts); ```; Unfortunately I didn't get any improvement. Do you have any ideas about it? Am I using OpenMP wrong or is the example chosen not adequate? Can you point me a snippet of code that you are sure works with OpenMP? ; Thank you so much!!!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671#issuecomment-946521985:66,test,testing,66,https://qutip.org,https://github.com/qutip/qutip/issues/1671#issuecomment-946521985,2,['test'],['testing']
Testability,"Hi guys, thanks for looking at this! I actually made a fork to implement this: https://github.com/lfry512/qutip. In my fork I added some extra type checks and some extra functions in _LiouvillianFromFunc that support a c_ops callback. The way this was done just requires the user to use qt.lindblad_dissipator where appropriate. The use case that isn't implemented is H in list format and c_ops as a callback. @Ericgig thanks for the neat suggestion! This is very pertinent as I then moved on to try the same functionality with mcsolve, which doesn't support a callback for H and c_ops in the master branch. Yesterday I got callback functionality working for H in mcsolve but haven't committed it yet. However it's about 20 times slower than using the equivalent list format in my tests. @jakelishman it sounds like you worked on mcsolve. If you are interested I would love to discuss with you how to make the H callback method for mcsolve more efficient. I'm also trying to figure out if it is possible to make a cython callback builder class that can be used for building the Lindblad operators from instantaneous eigenstates of the Hamiltonian more efficiently. I am not sure how my changes fit in to the overhaul of the solver system, but in mcsolve I did somewhat make use of the SolverSystem instance that is built in place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-629164724:781,test,tests,781,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-629164724,1,['test'],['tests']
Testability,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:560,test,test,560,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033,4,"['log', 'test']","['logical', 'test', 'tests']"
Testability,"Hi hodgestar,; Thank you for the PR.; The broken tests (smesolve) is not caused by your addition, you do not have to worry about it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-537232313:49,test,tests,49,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-537232313,1,['test'],['tests']
Testability,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:207,test,tests,207,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555,5,['test'],"['test', 'tests']"
Testability,"Hi taw181, thank you for the PR. ; There are already test for `clebsch` in `test_utilities`. Could you move your new test there?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1177#issuecomment-583539450:53,test,test,53,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583539450,2,['test'],['test']
Testability,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:811,test,testing,811,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602,1,['test'],['testing']
Testability,Hi! I tried running `conda install nomkl qutip` and then ran the test. I can confirm it solved the issue. I doubt it is a good permanent solution though. Would you recommend reverting back to MKL and upgrading numpy to 1.22?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005729943:65,test,test,65,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005729943,1,['test'],['test']
Testability,"Hi!. #### Imports; Honestly it wasn't really a particularly conscious decision, and there's no problem with `from qutip import (x, y, z)` lines though I don't think `from qutip import *` is a very good idea, especially with quite how many names `qutip` exports. The `from qutip.very.deep.nested.module import name` is certainly good, and I think I've generally left those. I think I started converting in a few places because there were things like `from qutip import Cubic_Spline` and `from scipy.interpolate import CubicSpline`, and then the test was unreadable as to which was which. Having `qutip.Cubic_Spline` and `scipy.interpolate.CubicSpline` is unambiguous. The smaller cases like `from qutip import Qobj` are highly unlikely to have any conflicts, but in general I just went for consistency. That all said, there's certainly arguments both ways, e.g. explicit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:544,test,test,544,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,1,['test'],['test']
Testability,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:637,test,test,637,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241,2,['test'],"['test', 'tests']"
Testability,"Hi!. I'd like to report an installation issue on CentOS/RHEL platforms. I've tested various Python versions (2.7, 3.4) on both RHEL 6.x and 7.x, and the error is consistent, and happens during compilation of some Cython files. The error is: `ambiguous overloaded method` referring to the `abs()` function, and happens in two different places. Full installation output:; ```; $ pip install qutip; Collecting qutip; Using cached qutip-4.1.0.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:77,test,tested,77,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['test'],['tested']
Testability,"Hi, . I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):. TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc. ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png). Here is the about() information:. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.4.0.dev0; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.11; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip. I would appreciate it if you can give me some advice to help me pass the testing codes!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039:59,test,testing,59,https://qutip.org,https://github.com/qutip/qutip/issues/1039,2,['test'],['testing']
Testability,"Hi, @nwlambert 1 test is failing , can you please suggest me how can i fix it ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2371#issuecomment-2049086230:17,test,test,17,https://qutip.org,https://github.com/qutip/qutip/pull/2371#issuecomment-2049086230,1,['test'],['test']
Testability,"Hi, I am getting this error on the current master. I guess this will be solved once this PR is merged ?. ```; air:tests shahnawaz$ nosetests test_sparse.py; E; ======================================================================; ERROR: Failure: ImportError (No module named 'qutip.cy.spconvert'); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-270078397:114,test,tests,114,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-270078397,1,['test'],['tests']
Testability,"Hi, I fixed the bug and improved the handling of the default cases. If the user wants to compute a very large Q func (e.g. 512*512 points, State size >256), a ResourceWarning will be given and the function falls back to the old method as that would use >1GB memory. I did only a manual test of this behavior, as a test function would be very slow. There is an automated test to ensure that precompute() raises a MemoryError for very large Q, if it is not manually set to use >1GB Memory. At least on my end, all the tests are now running fine. I might add some documentation in the future, but I am currently in the middle of writing my PhD Thesis, so no guarantees.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-561244172:286,test,test,286,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-561244172,4,['test'],"['test', 'tests']"
Testability,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:40,test,test,40,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315,2,['test'],"['test', 'tests']"
Testability,"Hi, I have an implementation of the ICM model now and as a bonus, I got an introduction to topological quantum computing as well as a nice topological quantum computing circuit viewer. I have it all in this repo - https://github.com/sahmed95/icm. It needs major refactoring, testing and there is a lot of brute code in there so please ignore it for now. I had to finish this in the span of a few days to start work on something related to the same and hence the code isn't pretty. I will work on this after finishing up my winter internship and push the commits here. An example can be found in https://github.com/sahmed95/icm/blob/master/tqc_icm/icm_example.ipynb. If this code has to go into qip, I guess I need someone with experience in this for review. How about https://github.com/alexandrupaler. The ICM paper is by him and he has implemented it in C++ in https://github.com/alexandrupaler/tqec.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-273579746:275,test,testing,275,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-273579746,1,['test'],['testing']
Testability,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-109847098:91,test,test,91,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098,3,['test'],['test']
Testability,"Hi, I just added the support for QCircuit 2.6 in my fork and tested it with [quantum-gates.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb). Do you have any other notebook suggestion, which I could use for testing? . I didn't look into Quantikz yet.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096#issuecomment-592936636:61,test,tested,61,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-592936636,2,['test'],"['tested', 'testing']"
Testability,"Hi, This is not ready for review so I added a new tag `WIP`. The tests etc are not proper and I just wanted to get a basic version out. The latest commits are @nwlambert's code to construct the Liouvillian for the Heom. I will start refactoring things now and update the tag to `review in progress` when this is ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/962#issuecomment-472547191:65,test,tests,65,https://qutip.org,https://github.com/qutip/qutip/pull/962#issuecomment-472547191,1,['test'],['tests']
Testability,"Hi, are you sure you are not in the QuTiP folder when you start your Python; interpreter? Please provide some information as to how you installed QuTiP.; Which Python version are you using?. You can just type the command. >> which python. To find out the Python you are using. I would suggest the best way to run; QuTiP is using the conda installation. On Sun, 29 Nov 2020 at 20:42, ZahraQI <notifications@github.com> wrote:. > After installing qutip, in order to test qutip installation, I type; > ""python"" in terminal and then type ""import qutip.testing as qt"", getteing; > to the following error.; >; > import qutip.testing as qt; > Traceback (most recent call last):; > File """", line 1, in; > ModuleNotFoundError: No module named 'qutip'; >; > qt.run(); > Traceback (most recent call last):; > File """", line 1, in; > NameError: name 'qt' is not defined; >; > If anyone can help to solve the problem?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABVFIBB6E4CM7HU3CY2NT6LSSKP3PANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201:464,test,test,464,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201,3,['test'],"['test', 'testing']"
Testability,"Hi, something unrelated fails. Do we need to restart the build and test? All other cases pass except for NOMKL=1. FAIL: Random: Stochastic - left; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.3.0.dev0+b9fee234-py3.6-linux-x86_64.egg/qutip/tests/test_rand.py"", line 111, in testRandStochasticLeft; assert_(np.abs(np.sum(A.getcol(j).todense().real)-1.0) < 1e-15); File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/testing/nose_tools/utils.py"", line 93, in assert_; raise AssertionError(smsg); AssertionError",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-370777345:67,test,test,67,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-370777345,10,"['Assert', 'test']","['AssertionError', 'test', 'test-environment', 'testRandStochasticLeft', 'testing', 'tests']"
Testability,"Hi, thank you for opening an issue. Unfortunately, I have not being able to reproduce it. Here is my `qutip.about()` output:; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+5c73300; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/kaladin/Documents/git/qutip/qutip4/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. Regarding to the tests being slow, I usually run only the test file related to the changes I do. For example, to run tests for qobj it suffices to use `pytest qutip/tests/test_qobj.py` from the command line. I then leave the CI do its job and run all the tests once I submit a pull request. I guess it is desirable to improve the speed of some tests, I do not think is a priority though. Also, it only took me 6 minutes in my local computer (i7-6700 and 16GB RAM)to run all the tests using your script. I wonder if there is something else going wrong. Hope this helps!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1711#issuecomment-973002325:1330,test,tests,1330,https://qutip.org,https://github.com/qutip/qutip/issues/1711#issuecomment-973002325,7,['test'],"['test', 'tests']"
Testability,"Hi, thanks for the PR. Let me see if there is a test written to check this. You may add your own test to ensure this works fine. ; @ajgpitch",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/693#issuecomment-299716714:48,test,test,48,https://qutip.org,https://github.com/qutip/qutip/pull/693#issuecomment-299716714,2,['test'],['test']
Testability,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922665:204,test,test,204,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665,3,['test'],"['test', 'tests']"
Testability,"Hi, the first part for this is ready for review. A typical use case would be to generate the matrix M.; @nathanshammah I made some small changes in the names of functions.; @ajgpitch Please suggest any changes if necessary for pep8, function naming, testing or the API in general. We have the examples and ipynb notebooks that @nathanshammah wrote. Where do they go ? . Once, this is merged, there are additional helper functions to calculate operator expectations, thermal states etc which can be added. However, this forms the core of the module.; ```; from qutip.pim.dicke import *; import numpy as np; from scipy.integrate import odeint. # system parameters. N = 10; gS, gL, gD, gP, gCP = .1, .1, .1, .1, .1. # define the model; model = Pim(N, emission=gS, loss=gL, dephasing=gD, pumping=gP, collective_pumping=gCP). M = model.generate_M(). # Evolve the system according to dp/dt = M.p. rho0 = initial_dicke_state(N, (5, 5)); t = np.linspace(0, 10, 100). def generate_rhs(rho, M):; return M.dot(rho). p = odeint(generate_rhs, rho0, t, args=(M,)); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-332110217:250,test,testing,250,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-332110217,1,['test'],['testing']
Testability,"Hi, there were some import statement errors which are fixed now and the tests pass, hopefully. The code is the same as in Nathan's repository where we have the notebooks as examples.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361302051:72,test,tests,72,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361302051,1,['test'],['tests']
Testability,"Hi, this is great. @agpitch, do you have any idea about the test? Looks like something related to optimal control and you could provide some insight. We can investigate the issue separately and fix this. Good job on the PR. Moving to PyTest will be great for us in the long run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/972#issuecomment-482522758:60,test,test,60,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-482522758,1,['test'],['test']
Testability,"Hi, this is just a refactoring of @nwlambert 's code for a generic HEOM solver which takes in a set of exponents and coefficients for a spectral density function and can be used to work with arbitrary spectral density functions. In comparison, the current `heom` solver in QuTiP is specialized. . Specific quantum systems in the `qutip/models` sub-module could have the following signature:; ```; model = System(hamiltonian, **params); result = model.solve(initial_state, tlist, options); ```; System specific functions could be in the model class. For instance,; ```; model._rhs(); ```; gives the RHS (a matrix equivalent to an effective Liouvillian) of the density matrix evolution equation. If any system can be written down as the evolution of an initial density matrix as dp/dt = (RHS)p, and there is an optimised way to solve, it can be written down as a qutip.model. The other necessary function would be a basis change map or a lookup dictionary for translating a state tuple to the index in the larger density matrix which is used for the evolution using the effective Liouvillian. This is the `_heom_state_dictionaries` in this case and `jmm1_dictionary` in case of the WIP #753 . The code in the current form is good enough to be used but it needs to be optimized further. The next steps are:; - [x] Tests for RHS generation and the solve function; - [ ] Optimize the generation of the effective Liouvillian (RHS) similar to the `heom` solver; - [ ] Refactoring and deciding on the API (how to pass in the coefficients etc)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/793:1311,Test,Tests,1311,https://qutip.org,https://github.com/qutip/qutip/pull/793,1,['Test'],['Tests']
Testability,"Hi, this is ready for review. It probably needs a lot of refactoring but I have documented all functions and provided unit tests. I made a simple script for my lab where you can specify a circuit in a text file and the outputs will be generated. You can check it out here: https://github.com/sahmed95/icm. I have an example describing the use of this module. Where do the examples go ? @ajgpitch @nonhermitian . As I mentioned, @alexandrupaler should be the right person for review. Dr. Devitt also mentioned Damian from ProjectQ (?) who could help perhaps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-275668058:123,test,tests,123,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-275668058,1,['test'],['tests']
Testability,"Hi, you are absolutely correct that this is not a good place ""intro to pytest"". Comments on what is tested would be most helpful. I see your point. If some files need to be updated all the time then you are probably right. I'm also no maintainer of QuTiP so merging is beyond my ability :) But I'm sure there is no hurry in this. I'm also using my spare time browsing around here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380:100,test,tested,100,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380,1,['test'],['tested']
Testability,"Hi,. I have been trying to use `qutip.floquet.floquet_master_equation_steadystate` method to get the steadystate of my system, but the docstring is not super useful. From the docstring, I guess I should call it as `qutip.floquet.floquet_master_equation_steadystate(H, A)` where. * `H` is my (time-dependent) hamiltonian, similar as the one used in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html#floquet-formalism-in-qutip.; * `A` is the [`A` matrix output](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L587-L588) from `floquet_master_equation_rates` call. I think I missed something as I am getting an error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; from https://github.com/qutip/qutip/blob/master/qutip/steadystate.py#L224. Additionnally, I think there is a much easier way to find the steadystate of such a system, using something like (not really well written nor optimised):. ```python; def floquet_master_equation_steadystate2(A):; """"""; TODO. Parameters; ----------. A : TODO; A matrix used to build the master equation.; """"""; B = np.zeros_like(A); N = A.shape[0]; for a in range(N):; for b in range(N):; # Convergence of off-diagonal terms in density matrix to 0; assert(-0.5 * np.sum(A[:, a] + A[:, b]) < 0); # Diagonal terms of density matrix; if a != b:; B[a, b] = A[a, b]; else:; B[a, b] = -1.0 * np.sum([; A[nu, a] for nu in range(N) if nu != a]; ); eigval, eigvec = Qobj(B).eigenstates(); assert(np.isclose(eigval[-1], 0, atol=1e-15)); return eigvec[-1] * eigvec[-1].dag(); ```. which basically looks for the eigenvector associated with 0 eigenvalue of a matrix derived from `A`, which is basically coming directly from equation 251 of [Gri98](http://qutip.org/docs/latest/biblio.html#gri98).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/768:1250,assert,assert,1250,https://qutip.org,https://github.com/qutip/qutip/issues/768,2,['assert'],['assert']
Testability,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22116628:1028,test,tests,1028,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628,1,['test'],['tests']
Testability,"Hi,; I just recently installed qutip on Canopy using a Windows Binary. When I try to run one of the tests, e.g. test_wigner.py, I get this error:. ---. AttributeError Traceback (most recent call last); C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in <module>(); 37 from numpy.testing import assert_, run_module_suite, assert_equal; 38 ; ---> 39 from qutip.states import coherent, fock; 40 from qutip.wigner import wigner; 41 from qutip.random_objects import rand_dm, rand_ket. C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings' . The AttributeError also appears when I simply try to import qutip from the command line. I'm not too familiar with Python scripting so any assistance on the matter would be greatly appreciated. Thank you!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469:100,test,tests,100,https://qutip.org,https://github.com/qutip/qutip/issues/469,3,['test'],"['testing', 'tests']"
Testability,"Hi,; I'm running qutip on the latest Ubuntu LTS version in 64 bit. All required packages (gfortran etc.) are installed from the repository. No matter if I use the qutip package from the repository or compile it from source, the testing results into 3 errors:. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Consistency between transformations of kets and denstity matrices ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.84e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > correlation: compare spectrum obtained for eseries and fft methods ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:228,test,testing,228,https://qutip.org,https://github.com/qutip/qutip/issues/126,2,['test'],['testing']
Testability,"Hi,; In `continuous_variables.logarithmic_negativity`, the natural log base is used, whereas every paper I've seen has `log2`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/777:67,log,log,67,https://qutip.org,https://github.com/qutip/qutip/issues/777,1,['log'],['log']
Testability,"Hi,; In the source code of `mesolve`, the derivative are defined via `L * rho` where L is Liouvillian. But when the size is too large, `L` is of huge dimension. I have two questions:; 1. What tricks have you made so that the derivative is still defined via `L` instead of collapse operators, which is relatively smaller in dimension? Sparse in scipy was used. But if `L` is not sparse at all, how can we avoid memory problem?; 2. What is the general advantage of using Liouvillian `L` to define derivative instead of `C` the collapse operators? It seems that using `L` requires only 1 multiplication, but when I tested and try to define in `C`, it seems that it is still faster for relatively small hilbert space dimension. Is speed the main reason?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/531:612,test,tested,612,https://qutip.org,https://github.com/qutip/qutip/issues/531,1,['test'],['tested']
Testability,"Hi,; Thanks very much for your input. It looks like you are using github correctly to me, although I am no expert.; Well spotted on the typo, and thanks for sorting that out.; It looks like the tau factor on the propagator gradient is required - revisiting the paper by S Machnes (cited in the code). ; I am looking into your alternative method for the PSU normalisation now.; I am testing your branch locally as well.; I will report back when I have completed these tasks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/325#issuecomment-78077523:382,test,testing,382,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78077523,1,['test'],['testing']
Testability,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:1472,log,logger,1472,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834,1,['log'],['logger']
Testability,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:79,test,tests,79,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052,3,['test'],"['test', 'testing', 'tests']"
Testability,"Hi. I've been looking in to this and plan to add it at some point, but we would need to rework some of our unit tests before adding travisci (because some of our tests take too long to run).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/77#issuecomment-35958903:112,test,tests,112,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35958903,2,['test'],['tests']
Testability,"Hi. I've been trying to use the Platen solver for ssesolve but it doesn't seem to work. Running the code below produces an error. Here's the code:; ```; from qutip import *; import numpy as np. N = 15; w0 = 1.0 * 2 * np.pi; A = 0.1 * 2 * np.pi; times = np.linspace(0, 1.5, 150); gamma = 0.25. ntraj = 1; nsubsteps = 1. a = destroy(N); x = a + a.dag(); y = -1.0j*(a - a.dag()). H = w0 * a.dag() * a + A * (a + a.dag()). rho0 = coherent(N, np.sqrt(5.0), method='analytic'); c_ops = [np.sqrt(gamma) * a]; e_ops = [a.dag() * a, x, y]. result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); ```. Here's the error:; ```; Traceback (most recent call last):; File ""test.py"", line 23, in <module>; result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 377, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 758, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/parallel.py"", line 183, in serial_map; result = task(value, *task_args, **task_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 859, in _ssesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 1843, in _rhs_psi_platen; d1(A, psi_t) * dt +; TypeError: d1_psi_homodyne() takes exactly 4 arguments (2 given). ```; I've rewritten the _rhs_psi_platen function to fix this issue. Would you like me to make a pull request?; ~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/857:759,test,test,759,https://qutip.org,https://github.com/qutip/qutip/issues/857,1,['test'],['test']
Testability,Hi. Thanks for reporting this problem. I'm not sure what the reason for this behavior might be. Do you see the same thing when you install with and without the f90 solver? Are you running the tests in the python interpreter or from IPython?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46#issuecomment-23545094:192,test,tests,192,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-23545094,1,['test'],['tests']
Testability,"Hi. Thanks for the information, that is good to know. In qutip we actually don't use the expm function from scipy yet, but we have plans to add an option to use scipys expm instead of qutips own. I hoped that scipys might be faster and have done some benchmarks, but I hardly saw any difference so I have not been sufficiently motivated make the add this option yet, but perhaps I need to revisit those benchmark tests now. Thanks again for the info!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/182#issuecomment-48682172:251,benchmark,benchmarks,251,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48682172,3,"['benchmark', 'test']","['benchmark', 'benchmarks', 'tests']"
Testability,Hm I'll have a look at those failing tests next week. But probably just too few times in `tlist`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2437#issuecomment-2139114804:37,test,tests,37,https://qutip.org,https://github.com/qutip/qutip/pull/2437#issuecomment-2139114804,1,['test'],['tests']
Testability,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083480:186,test,tests,186,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480,1,['test'],['tests']
Testability,"Hmmm. Now the documentation build works, and the macos test run works as well (except for unrelated test failures). The python 3.9 test runs fails to build mpi4py. Here, the problem solution would be [this](https://stackoverflow.com/a/73399242) (I've had the same problem before installing mpi4py on the RIKEN HPC). Should I add that?. All other test runs fail, seemingly because the first call to `mpi_pmap` hangs indefinitely. That's... hard to debug. Why would it work only on macos?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136:55,test,test,55,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136,4,['test'],['test']
Testability,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:325,test,tests,325,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088,8,['test'],"['test', 'testing', 'tests']"
Testability,"Hmmm... 4000/150\~25 second. That's not very short actually. The total time for a whole round of qutip CI test costs 15min\~20min on Travis. . Just ideas. Tests here seem to be two-folded:. - Test classical controlled gates in a circuit; - Test the measurement functions. So maybe we can split it. The teleportation circuit test can be done without measurement. Just check the final state tracing out the ancillary qubits. The test for measurement can probably be done for single or two `Qobj` along without circuit. But `run_circuit_statistics`... Probably we then only need to check if the number of elements in the result is correct after some 50 runs?. On a different matter, I'm wondering if running the statistics takes so long, for such a small teleportation circuit, is it still advantageous in any case? Since we are doing simulation and have the full quantum state, one can actually calculate all 4 possible final states, classically mix them into a density matrix with the corresponding measurement probability and calculate the exact statistics distribution. I doubt that will be slower than 25s, although coding will be harder I suppose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640102122:106,test,test,106,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640102122,6,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,Hopefully this will fix #862 ; Unfortunately 'legacy' did not behave as scipy 0.x. Some tests still failed. I had to add facility to set much higher tol on the gmres method.; The missing kwarg is handled. So should work for scipy < 1.1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870:88,test,tests,88,https://qutip.org,https://github.com/qutip/qutip/pull/870,1,['test'],['tests']
Testability,"How about instead of checking if it is Hermitian, we could put a seed parameter and check if the output is exactly equal (or [close](https://docs.scipy.org/doc/numpy/reference/generated/numpy.isclose.html)) to given hardcoded matrix?. https://github.com/qutip/qutip/blob/d91a4c93f35d97b8bfc633420ffa6ddebadc06a1/qutip/tests/test_rand.py#L57",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427237727:318,test,tests,318,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427237727,1,['test'],['tests']
Testability,"How does unit() function works in qutip. Generally in matrices, when we have to find the normalized matrices, we find the square root of sum of squares of all the elements and divide each element with the result. Is it the same thing happens when we use unit() function? Or I just want to understand the logic behind unit() function. Regards,; Ganesh M",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1572:304,log,logic,304,https://qutip.org,https://github.com/qutip/qutip/issues/1572,1,['log'],['logic']
Testability,"However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1259,log,logic,1259,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['log'],['logic']
Testability,"I actually did end up going back and just copying the master branch to my; local and copying in my changes, so hopefully that won't be an issue going; forward. I'll likely do it a second time before submitting another request; just to be sure there wasn't anything I changed that I've forgotten about. I've also been working on adding in a few tests. I'm mostly working on; mirroring the floquet_test test file as best I can, although it looks like; there are some slight changes I need to make that I've been working on. Beyond that, I've been working on adding a third system to this paper I'm; working on that describes FLiME. This third system should be able to show; changes based on the time_sense argument that aren't shown with the other; two systems, as those systems are so dominated by their primary frequency; that relaxing the secular approximation doesn't seem to change much in; terms of the results. The happy side effect is that I've had to fix some; issues with dimensionality that Eric mentioned, such that it ended up being; good bug testing for FLiMESolve as well. I'm hoping to have another pull request ready for review by the end of this; week or early next week, but I'm trying to really put everything under a; magnifying glass to the best of my ability, such that I don't leave Eric; wading through a bunch of formatting and code issues again. On Wed, Jul 5, 2023 at 3:33 PM Simon Cross ***@***.***> wrote:. > @magnamancer <https://github.com/magnamancer> I think part of the issue; > was that you merged qutip-5.0.X into master but that shouldn't have been; > done because master now contains the latest 5.X qutip code.; >; > Sorry to be a pain, but could you open a new new PR with just your; > changes? No need to be fancy -- just create a new branch from master, copy; > across the files you want to change, create PR.; >; > The VERSION file should not be changed.; >; > How hard would it be to add tests? I remember you have tests in a notebook; > somewhere. If you ca",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1622617036:1138,test,testing,1138,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1622617036,1,['test'],['testing']
Testability,"I added a section to the test suite that will skip the tests if pyopencl is not installed in the last commit. To get them working, installing pyopencl via pip will not be sufficient. There are nice guides for setting up OpenCL in [Gentoo](https://wiki.gentoo.org/wiki/OpenCL) and [Arch](https://wiki.archlinux.org/index.php/GPGPU#OpenCL). But most OpenCL implementations are proprietary. I found an example of installing AMDAPP in a travis vm [here](https://github.com/JuliaGPU/OpenCL.jl/blob/master/.travis.yml). This is the OpenCL implementation I would recommend in absence of a GPU. But this script circumvents the license agreement and I am not sure whether this is legal. If you still intent to set this up, you can push changes to this branch as well. As for documentation I feel there is not much to document. There are already notebooks showing how to use `mcsolve` [here](http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/example-photon_birth_death.ipynb) and [here](http://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-6-Quantum-Monte-Carlo-Trajectories.ipynb). If everything is set up just exchanging `mcsolve` with `mcsolve_cl` should do the trick. The nuances are documented in the docstring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-258609202:25,test,test,25,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-258609202,2,['test'],"['test', 'tests']"
Testability,"I added a test that compares `correlation_2op_1t` to its analytical solution. I was trying to match the `c_ops` of this new test to the ones appearing in `test_correlation_solver_equivalence`, which are:; ` c_ops = [np.sqrt(G1 * (n_th+1)) * a,; np.sqrt(G1 * n_th) * a.dag()]; `; However, the analytical solution I obtained for this case did not work unless I used a very small value for `n_th = 0.1`. I was wondering whether the analytical solution I got was wrong or whether this actually makes sense. I was thinking that the difference probably comes from the cut we use for the number of states (`N = 20`). The new test for `correlation_2op_1t` should be very robust as it tests for a lot of different scenarios, including the one presented in #1460. I was wondering whether these were too many cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081:10,test,test,10,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081,4,['test'],"['test', 'tests']"
Testability,"I added all the suggested changes. However, now the tets for trace norm with csr matrices started failing (in particular `TestTraceNorm.test_mathematically_correct[CSR[square,sparse]->Number]`). Decreasing the tolerance to `1e-8` solves the problem but given that this was not a problem before (at least I do not remember this happening), I wonder if it is actually signaling that there is something wrong.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362:122,Test,TestTraceNorm,122,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362,1,['Test'],['TestTraceNorm']
Testability,I added ipython to the testing workflow. Let me know if it should have been included somewhere else.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1918#issuecomment-1146047389:23,test,testing,23,https://qutip.org,https://github.com/qutip/qutip/pull/1918#issuecomment-1146047389,1,['test'],['testing']
Testability,I added the feature explanation in the docstring. I don't think we have special documentation for `testing.run`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1151#issuecomment-577266894:99,test,testing,99,https://qutip.org,https://github.com/qutip/qutip/pull/1151#issuecomment-577266894,1,['test'],['testing']
Testability,I added the test in `qutip/tests/test_correlation.py` and pytest returns no errors. Why not put it inside the `qutip/tests/test_steadystate.py` file instead?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103,3,['test'],"['test', 'tests']"
Testability,"I adjusted the test to be sensitive to the original issues. new test is just a driven two-level system. not sure why the old test of a driven boson was insensitive to that test. i could make it sensitive by making the drive act on the frequency, like the example in #2386 but this is simpler. . also adjusted the test to compare a period of the dynamics from mesolve to the result from the steadystate solver.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2393#issuecomment-2053629426:15,test,test,15,https://qutip.org,https://github.com/qutip/qutip/pull/2393#issuecomment-2053629426,5,['test'],['test']
Testability,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:94,test,tests,94,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649,1,['test'],['tests']
Testability,I agree with @jakelishman's general principle (and maybe we should even move the tests out of the `qutip` package for v5 still) but it's also really important to have an easy way for data layer implementations to run a comprehensive test suite *that is defined by the data layer*. I suspect that if anyone is running tests against master (i.e. what is currently dev.major) they will *want* tests to break if we add new methods. I have a slightly different proposal:. What if we create `qutip.core.data.testing` which is an explicitly exported suite of pytest classes that we intentionally expose for data layers to use? Initially the file can just import test classes from `qutip.tests.core.data`. I would also not use `__all__` in the individual test packages but instead import the test classes explicitly in `qutip.core.data.testing` so that it's 100% clear by reading just that file what the exported interface is (and adding new tests requires explicitly adding them into the exposed package).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979884874:81,test,tests,81,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979884874,11,['test'],"['test', 'testing', 'tests']"
Testability,"I agree with @nwlambert that we should go without shifted object and simply add the shift in the times.; This shift method predate me, but I believe at some time solve would not work properly if not started at `0`...; But this should have been fixed a while ago. @victor-onofre, would you also remove the shifted operator, this should be right.; Also the `tlist` type is not tested and it could be a list instead of an array.; Ideally the same fixes should be made to `_correlation_mc_2t`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929#issuecomment-1153946989:375,test,tested,375,https://qutip.org,https://github.com/qutip/qutip/pull/1929#issuecomment-1153946989,1,['test'],['tested']
Testability,"I agree with having a test pre 1.5.; These changes should be released quickly, but probably just to 4.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649631995:22,test,test,22,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649631995,1,['test'],['test']
Testability,"I agree, I have also not had any problems with mingw.; The only issue seems to be that it won't work with python 3.5. Perhaps they; will fix that and solve our problem that way. On 31 May 2016 at 21:10, Paul Nation notifications@github.com wrote:. > Well, we have been using mingw for qutip, while the Win Python has always; > been compiled with VS. while I agree with your statement, using VS seems; > not to be an option for us. I haven't had any problems in mu minimal; > testing.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222805219, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7eTvGa_WbL8VzcQgAqIkgCEEI8heks5qHJXGgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222963411:475,test,testing,475,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222963411,1,['test'],['testing']
Testability,"I agree, I have some plans to create some unit tests. The check_grad function that fhenneke has pointed out will be part of them. I have tested the Frechet gradient methods (which are used by Lindbladian and symplectic dynamics) using the check_grad function and they seem to be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/325#issuecomment-78238553:47,test,tests,47,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78238553,2,['test'],"['tested', 'tests']"
Testability,"I agree, if Travis say that they are interested, then we should tell them. I would be happy for you to raise this with them, if you ok with that. It would seem to make sense if you have done the tests. I'll do it if you think that is more appropriate.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130291761:195,test,tests,195,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130291761,1,['test'],['tests']
Testability,I also added a development notebook to test this,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/338#issuecomment-95648513:39,test,test,39,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-95648513,1,['test'],['test']
Testability,"I also note that Coveralls isn't running on any of these commits, and hasn't been run on `master` since December last year. While so far I've just been converting tests, rather than writing new ones (for the most part), it seems wrong that it isn't being run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-593334189:163,test,tests,163,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593334189,1,['test'],['tests']
Testability,"I am getting a variety of errors when running the test scripts under OSX:; - For `test_mcsolve_cl_time_dep_h` I get ""atol could not be reached for 1 trajectories"". I am also seeing:. ""CompilerWarning: Non-empty compiler output encountered. Set the environment variable PYOPENCL_COMPILER_OUTPUT=1 to see more.; ""to see more."", CompilerWarning)"". ""AttributeError: 'NoneType' object has no attribute 'clobj__delete'; Exception ignored in: <object repr() failed>""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-259602577:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-259602577,1,['test'],['test']
Testability,"I am going to give it a final test on Windows, then build into 4.0.2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-270050370:30,test,test,30,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-270050370,1,['test'],['test']
Testability,I am going to merge this now as I am sure it passes the tests,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264018068:56,test,tests,56,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264018068,1,['test'],['tests']
Testability,I am guessing that the test has too low a tolerance. Also not sure about the two tests. Didnt see it a day or two ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/721#issuecomment-316063869:23,test,test,23,https://qutip.org,https://github.com/qutip/qutip/pull/721#issuecomment-316063869,2,['test'],"['test', 'tests']"
Testability,I am guessing that there is some issue removing td files in config. The test that you do should not be looking for a RHS file as the test is time-independent. Why this only happens on Win is an interesting question. I put up a fork that may work here:. https://github.com/nonhermitian/qutip/tree/config_reset_test. Let me know how it goes. It seemed to work on my Win7 VM. It basically removes the old td files from config every time it is not needed anymore. I am not sure why we did not do this before. It still needs to be checked that the rhs_reuse setting in the Options class still works.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728#issuecomment-317316149:72,test,test,72,https://qutip.org,https://github.com/qutip/qutip/issues/728#issuecomment-317316149,2,['test'],['test']
Testability,"I am happy to merge into master, I only want to double check with @ajgpitch @quantshah about #964. ; All issues seem to be resolved and work fine. We (mainly @fminga) thoroughly tested the solver and now I am more than confident into merging it into master. If I understand correctly we can then move on to assess #990.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-498735002:178,test,tested,178,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498735002,1,['test'],['tested']
Testability,I am happy to merge it as it is but note that _the tests do not serve to catch the bug!_ I am not sure how to test it properly though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1805#issuecomment-1042865561:51,test,tests,51,https://qutip.org,https://github.com/qutip/qutip/pull/1805#issuecomment-1042865561,2,['test'],"['test', 'tests']"
Testability,I am happy to review this. ; Tests seem to be failing with:; ```; ERROR: Failure: ModuleNotFoundError (No module named 'piqs'); ```; Perhaps this could be fixed first,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361266618:29,Test,Tests,29,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361266618,1,['Test'],['Tests']
Testability,I am happy with what @jakelishman has done with the tests. I think this is sufficient for now. I agree with @nathanshammah suggestion that we can raise the failing cases with cvxopt maintainers and see what options they suggest (or a fix maybe). So I think this issue can be closed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-635956702:52,test,tests,52,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-635956702,1,['test'],['tests']
Testability,"I am hoping to save more time with ""not slow"", about a 3~4x faster. Maybe I will remove 3.6 to save more time. Other test that need mark will wait for #1181 for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604026374:117,test,test,117,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604026374,1,['test'],['test']
Testability,I am not completely familiar with black yet and how much it adheres to pep8 so I will keep that for a big PR some other time. Right now we can slowly start blacking our code for the new modules. . This PR passes all the tests so I will be happy to merge.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1046#issuecomment-529505406:220,test,tests,220,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529505406,1,['test'],['tests']
Testability,"I am not using mpiexec when running the tests. I have done some more experimenting on my local machine. 1. If I install `mpi4py` with pip, I get the same problem on my machine (the test hangs, I can't even CTRL+C). The steps I have taken in detail are:; ```bash; conda create -n qutip-test-tmp python numpy scipy pytest; conda activate qutip-test-tmp; sudo apt install mpich libmpich-dev; pip install 'qutip[full] @ git+https://github.com/qutip/qutip.git@refs/pull/2296/head'; cd ~/miniconda3/envs/qutip-test-tmp/lib/python3.12/site-packages/qutip/tests/; pytest --verbose --pyargs qutip.tests.solver.test_parallel; ```; (The `apt install` call is taken from the `mpi4py/setup-mpi` and without it, the installation fails. I `apt remove`d the packages again afterwards.). 2. Then I tried installing with conda as follows.; ```bash; conda create -n qutip-test2-tmp python numpy scipy pytest mpi4py; conda activate qutip-test2-tmp; pip install 'qutip[full] @ git+https://github.com/qutip/qutip.git@refs/pull/2296/head'; cd ~/miniconda3/envs/qutip-test2-tmp/lib/python3.12/site-packages/qutip/tests/; pytest --verbose --pyargs qutip.tests.solver.test_parallel; ```; Now things get even weirder. Here, `test_map` and `test_map_accumulator` pass, but `test_map_pass_error` hangs (I can get out with CTRL+C). 3. In my regular development environment, all tests pass without problem. I have no idea what the difference is between my regular environment and the one created in number 2. I will continue trying things out when I have time. In the end, I imagine the solution might be not to include `mpi4py` in the `extras` section, and only add it with conda in one or two test runs?. I recently had a good experience asking for help on the mpi4py discussion board, might do that again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1907636803:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1907636803,11,['test'],"['test', 'test-tmp', 'tests']"
Testability,I am packaging qutip for [nixpkgs](https://github.com/NixOS/nixpkgs) https://github.com/NixOS/nixpkgs/pull/76661 from version 2.2.0 -> 4.4.1. Right now the only issue with the build is that qutip takes way too long to run the test suite in proportion to its usage in nixpkgs. Do you have a recommended set of tests that we should run? For nixpkgs I will likely just delete some of these files https://github.com/qutip/qutip/tree/master/qutip/tests. Currently the test suite takes around 2 hours and would like to get it to around 10 minutes or less.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147:226,test,test,226,https://qutip.org,https://github.com/qutip/qutip/issues/1147,4,['test'],"['test', 'tests']"
Testability,I am rerunning the tests that failed. Should pass unless we get unlucky twice.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419#issuecomment-178980710:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178980710,1,['test'],['tests']
Testability,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-497358567:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567,4,"['log', 'test']","['logical', 'test']"
Testability,"I am trying to add some `.qasm` files to the folder `qutip/qutip/tests/qasm_files/` to use during test time. I thought it would be enough to add them to the `PACKAGE_DATA` variable in `setup.py` but that does not seem to work. Any ideas on how to make sure this folder is available during testing time? Beside this part, the PR is ready for review. @nathanshammah @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373:65,test,tests,65,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373,3,['test'],"['test', 'testing', 'tests']"
Testability,"I am trying to install qutip 3.1.0 on my MS Windows following the official steps:; 1. Install the Python(X,Y) distribution (tested with version 2.7.3.1). Other Python distributions, such as Enthought Python Distribution or Anaconda CE have also been reported to work.; 2. When installing Python(x,y), explicitly select to include the Cython package in the installation. This package is not selected by default.; 3. Add the following content to the file C:/Python27/Lib/distutils/distutils.cfg (or create the file if it does not already exists):; [build]; compiler = mingw32; [build_ext]; compiler = mingw32; The directory where the distutils.cfg file should be placed might be different if you have installed the Python environment in a different location than in the example above.; 4. Obtain the QuTiP source code and installed it following the instructions given above. However, there are some errors after i run the installation verifying process. Is there anyone came across such errors? How can I repair these errors? The errors are presented as follow:; ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 60, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:124,test,tested,124,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['tested']
Testability,"I am trying to learn to use qutip and I made a local environment. As per the instruction guide, I ran the qutip testing environment and got the following: . ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.4.1; Numpy Version: 1.17.3; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/nathanholman/opt/anaconda3/envs/qutip/lib/python3.7/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:112,test,testing,112,https://qutip.org,https://github.com/qutip/qutip/issues/1124,1,['test'],['testing']
Testability,"I am trying to run this code to test mcsolve():; ```; import numpy as np; from qutip import *. def hamiltonian_t(t, args):; #; # evaluate the hamiltonian at time t. ; #; H0 = args['H0']; H1 = args['H1']; w = args['w']. return H0 + H1 * np.sin(w*t). N = 2 # set where to truncate Fock state for cavity; a = destroy(N); psi0 = basis(N, 0) # define initial state. w_c = 1.0 * 2 * np.pi # cavity frequency; w = w_c; kappa = 0.001 * 2 * np.pi. H0 = w_c * a.dag()*a # time-independent term; H1 = kappa*(a.dag() + a) # time-dependent term. c_ops = [] # Build collapse operators; c_ops.append(np.sqrt(kappa) * a). args = {'H0': H0, 'H1': H1, 'w': w}. times = np.linspace(0, 10, 100) # define time vector. output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); ```. I am getting this error:; ```; Traceback (most recent call last):; File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 365, in run_test; rhs, ode_args = self.ss.makefunc(ss); NameError: name 'ss' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""mc_solve_example2.py"", line 33, in <module>; output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 223, in mcsolve; mc.run_test(); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 368, in run_test; raise Exception(""Error calculating H""); Exception: Error calculating H; ```. Here is the output of qutip.about(); ```; QuTiP Version: 4.5.1; Numpy Version: 1.18.4; Scipy Version: 1.4.1; Cython Version: 0.29.19; Matplotlib Version: 3.2.1; Python Version: 3.6.8; Number of CPUs: 112; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. Any advice how to fix that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:32,test,test,32,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['test'],['test']
Testability,"I am unable to find the list of states returned by the essolve function. For example:. ```python; import qutip as qt; test = qt.essolve(qt.qeye(2), qt.ket2dm(qt.basis(2, 0)), [1,2,3], c_op_list=[], e_ops=[]); ```; Returns the message; ```; Result object with essolve data.; --------------------------------; states = True, expect = True; num_expect = 0, num_collapse = 0; ```; but if I try to access the states; ```; test.states; >>> []; ```; Should this contain a list of states like mesolve()? It seems a similar issue has been raised before: https://groups.google.com/forum/#!topic/qutip/st3i6STPrQY. Here's my environment details:. ```; QuTiP: Quantum Toolbox in Python; ================================; QuTiP Version: 4.5.0; Numpy Version: 1.16.4; Scipy Version: 1.1.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\chris\Anaconda3\lib\site-packages\qutip; ============================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262:118,test,test,118,https://qutip.org,https://github.com/qutip/qutip/issues/1262,2,['test'],['test']
Testability,I am using Debian and when I build QuTiP with GCC 5 it passes all modules in qutip.tests. But with GCC 6 it gives a lot of errors in the tests. I am not sure if this is related to your problem @bastikr but hope it gives you some insight.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292649790:83,test,tests,83,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292649790,2,['test'],['tests']
Testability,"I am using GRAPE to identify optimal pulse sequences to produce a desired unitary, and am running into an error when I use optimize_pulse_unitary for sparse matrices of size 1296x1296 and larger. . For example, the following code works for N=2 but fails for N=>3:. ```python; import numpy as np; from qutip import *; from scipy.sparse import csr_matrix; import qutip.logging_utils as logging; logger = logging.get_logger(); #Set this to None or logging.WARN for 'quiet' execution; log_level = logging.INFO; #QuTiP control modules; import qutip.control.pulseoptim as cpo; import math. # Set parameters; chi = 2.2 * 2 * np.pi # coupling strength; N = 3 # number of cavity states; n_ts = 21 # number of discrete time steps; evo_time = 4. # Length of time; fid_err_targ = 1e-10 # Target fidelity error; max_iter = 0 # # Maximum iterations for the optimization algorithm; max_wall_time = 0 # Maximum (elapsed) time; min_grad = 1e-20 # Minimum gradient; p_type = 'SINE' # pulse type (RND|ZERO|LIN|SINE|SQUARE|SAW|TRIANGLE); f_ext = ""pulsedata.txt"" # output file. # Set operators and Hamiltonians. # operators; a = tensor(destroy(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); b = tensor(qeye(N), destroy(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); c = tensor(qeye(N), qeye(N), destroy(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); d = tensor(qeye(N), qeye(N), qeye(N), destroy(N), qeye(2), qeye(2), qeye(2), qeye(2)); sm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), destroy(2), qeye(2), qeye(2), qeye(2)); zm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), destroy(2), qeye(2), qeye(2)); tm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), destroy(2), qeye(2)); qm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), destroy(2)); P_se = tensor(qeye(N), qeye(N), qeye(N), qeye(N), basis(2, 1) * basis(2, 1).dag(), qeye(2), qeye(2), qeye(2)); P_ze = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), basis(2, 1) * basis(2, 1).d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617:384,log,logging,384,https://qutip.org,https://github.com/qutip/qutip/issues/1617,5,['log'],"['logger', 'logging']"
Testability,"I am using `mesolve` in the test now. I am not sure if that is considered a good style, since the test also depends on this function. I could also just hardcode the expected output. What do you think is better, @AGaliciaMartinez ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1843#issuecomment-1086200210:28,test,test,28,https://qutip.org,https://github.com/qutip/qutip/pull/1843#issuecomment-1086200210,2,['test'],['test']
Testability,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:151,test,tested,151,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['test'],['tested']
Testability,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/375#issuecomment-152945134:486,test,test,486,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134,2,['test'],"['test', 'tests']"
Testability,I asked @nwlambert to have a look at the memorycascade and tell us whether he thinks it is useful to keep and to help us come up with a test if it is.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2152#issuecomment-1506604844:136,test,test,136,https://qutip.org,https://github.com/qutip/qutip/pull/2152#issuecomment-1506604844,1,['test'],['test']
Testability,"I attempted to make `qobj` return an scalar for this case, as QuTiP 5 does, but that seems to be a no-go. Tens of tests start failing because QuTiP 4 doing things like:; ```python; (bra*ket).tr(); ```; or ; ```python; (bra*ket).data[0,0]; ```; Even thought fixing this is quite straightforward, I decided not to change it and open a PR to allow scalar-like qobj `**`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1691#issuecomment-947512829:114,test,tests,114,https://qutip.org,https://github.com/qutip/qutip/issues/1691#issuecomment-947512829,1,['test'],['tests']
Testability,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:376,Test,Test,376,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523,4,"['Test', 'test']","['Test', 'test', 'testing', 'tests']"
Testability,"I believe that this is actually intentional, as random sampling of CPTP channels is implemented by the `rand_super_bcsz` and `to_kraus` functions. `rand_kraus_map` is useful for writing unit tests, but is not yet a part of the public API.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/473#issuecomment-222041567:191,test,tests,191,https://qutip.org,https://github.com/qutip/qutip/issues/473#issuecomment-222041567,1,['test'],['tests']
Testability,I can confirm that the failure in the CI occurs only on the `coverage` test environment and it disappears if we update scipy to 1.6,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736:71,test,test,71,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736,1,['test'],['test']
Testability,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:57,test,testing,57,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447,2,['test'],"['testing', 'tests']"
Testability,"I can not imagine that that error would have much to do with a compiler change. Sometimes the tests fail for odd reasons and are fine if they get rerun. I will look into it tomorrow. . Paul . > On Feb 21, 2015, at 09:52, Dominic Meiser notifications@github.com wrote:; > ; > Ok makes sense. I will make that change over the weekend. Btw for whatever reason one of the builds failed in the most recent build:; > ; > https://travis-ci.org/qutip/qutip/jobs/51588003; > ; > Any idea what the problem is? Is this something I should be worried about?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75411847:94,test,tests,94,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75411847,1,['test'],['tests']
Testability,"I can probably do it with [`unittest.mock.assert_called_once_with`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called_once_with), although I'm not sure what the etiquette is on using multiple different unittesting frameworks is, as I see this repo is `pytest`ed mostly. I guess `unittest` is part of the standard library so it should be okay?. I will add a commit with the unittest updated when I get the chance, though feel free to merge this 1-line fix as it might as well be in master now that it's been noticed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1322#issuecomment-659111222:37,mock,mock,37,https://qutip.org,https://github.com/qutip/qutip/pull/1322#issuecomment-659111222,4,"['Mock', 'mock']","['Mock', 'mock']"
Testability,"I can't quite figure out if this is simply due to the DeprecationWarnings or something else but all tests are failing due to `atol` not being set for the gmres solver. I will try to set `atol` and check if the tests pass. Error log: https://api.travis-ci.org/v3/job/379109482/log.txt.; ```; scipy/sparse/linalg/isolve/iterative.py:2: DeprecationWarning: scipy.sparse.linalg.bicgstab called without specifying `atol`. The default value will be changed in a future release. For compatibility, specify a value for `atol` explicitly, e.g., ``bicgstab(..., atol=0)``, or to retain the old behavior ``bicgstab(..., atol='legacy')``. ```. ```; ..................................................; ======================================================================; ERROR: Steady state: Thermal qubit - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/Users/shahnawaz/dev/qutip/qutip/tests/test_steadystate.py"", line 145, in test_qubit_power_gmres; rho_ss = steadystate(H, c_op_list, method='power-gmres'); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 298, in steadystate; return _steadystate_power(A, ss_args); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 863, in _steadystate_power; v = v / la.norm(v, np.inf); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/scipy/linalg/misc.py"", line 137, in norm; a = np.asarray_chkfinite(a); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/numpy/lib/function_base.py"", line 1233, in asarray_chkfinite; ""array must not contain infs or NaNs""); ValueError: array must not contain infs or NaNs. ----------------------------------------------------------------------; Ran 561 tests in 576.175s. FAILED (SKIP=19, errors=1); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:100,test,tests,100,https://qutip.org,https://github.com/qutip/qutip/issues/862,7,"['log', 'test']","['log', 'test', 'tests']"
Testability,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:207,test,test,207,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711,9,['test'],"['test', 'tests']"
Testability,"I changed the build matrix to; - gcc, python 2.7; - gcc, python 3.4; - clang, python 3.4. The compiler versions are gcc 4.6 and clang 3.4 (default on travis build machines).; For the latest commit all tests pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75440408:201,test,tests,201,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75440408,1,['test'],['tests']
Testability,"I changed the merge target from `qutip-5.0.X` to `master`. The `qutip-...` branches are for released version.; Could you merge the current master branch, we added fixes for the new numpy, scipy version and it should help tests to passes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610223257:221,test,tests,221,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610223257,1,['test'],['tests']
Testability,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-179027129:46,test,tests,46,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129,2,"['log', 'test']","['logs', 'tests']"
Testability,"I completely agree with you that random tests really aren't the right way to go in general, but right now our problem is that basically QuTiP's entire testing suite is based on randomised tests, and that's an awful lot of technical debt to overcome any time soon :(. . The `dnorm` tests have historically been a huge problem, even though basically nobody's worked on `dnorm` for a long long time now (for context, see in particular #880 and #874). We don't actually even know if the failures in `dnorm` are deterministic and reproducible, although it turns out that I had a brief look into this when I joined as a GSoC student about a year ago... I don't remember doing it at all!. I know this is super inelegant and not the perfect method, but it's kind of a nasty trade-off - I don't have time to really dig into `dnorm` (a topic I know almost nothing about) to work out an appropriate solution to temperamental errors, we do want `dnorm` to be tested since we're shipping it, and the slight flakiness keeps causing us test suite failures about 1 in 10 times. I'm somewhat opposed to fixing the random seed because having the variance over several test runs does actually help us cover more ground (eventually) - fixing it to a ""known good"" seed actually seems to me to be more of a mask of potential problems than this. Of note: the pytest plugin I'm using reports the number of reruns it performed in the analysis at the bottom - they show up in a yellow alongside the ""skips"" and ""xfails"" - so it's not completely hidden. I'd love to have a property-based testing suite like hypothesis up and running - that definitely seems like the proper solution to this in the end. In the meantime, I'm open to swapping to a fixed random seed if you think that's much better - testing is one place where I'm really aware of my lack of formal experience in software engineering, so I'm basically just learning as I go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227,9,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"I couldn't reproduce this with an install into a fresh `conda` environment, _but_ I did once see that same error when I tried to make an OpenMP and a non-OpenMP `qutip` coexist in the same environment. When that previously happened, the package actually worked, it just reported that error. My guess is that this happens if `pyximport.install()` has already been activated when `qutip` is imported, and consequently the test in `__init__.py` as to whether `qutip.cy.openmp.parfuncs` is importable causes this error. It should not be able to even attempt to import it _unless_ `pyximport` has been turned on, and if it's been turned on by something other than QuTiP, then it should fail with a `numpy` header file error instead (this is something we should probably fix too, but I've not noticed it before). Is there any chance you're importing or reimporting `qutip` in a Python session in which some other version of `qutip` is already imported (like in an IPython profile file)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770:420,test,test,420,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770,1,['test'],['test']
Testability,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:11,test,tests,11,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492,2,['test'],['tests']
Testability,"I did this previously a handful of commits ago in b7df1b5, but the; tolerances chosen there weren't ideal. This is only especially relevant for cases where we have to use generic; eigenvalue solvers in place of Hermitian ones (e.g. when the Hermitian; ones have temperamental segfaults). I ran test_diag_liou_mult for all; dimensions from 2 to 99 inclusive 2000 times, and measured the maximum; absolute and relative tolerance for each case. I found that 3 times out; of 2000 the absolute tolerance exceeded 1e-10, and 12 times out of 2000; the relative tolerance exceeded 1e-7. The max values seen were 4.24e-10; and 3.12e-7 respectively. This updates the tolerances to 1e-9 (absolute) and 1e-6 (relative),; which still seem like reasonable tolerances, and should ensure that; we're testing correctly. See also #1474.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:784,test,testing,784,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['test'],['testing']
Testability,"I discovered that we were missing a small bit of towncrier configuration, so I added this test that does a trial run of generating the changelog. In addition to checking that the changelog can be generated, it also outputs the draft so that reviewers can look at it if they like.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1946#issuecomment-1170110480:90,test,test,90,https://qutip.org,https://github.com/qutip/qutip/pull/1946#issuecomment-1170110480,1,['test'],['test']
Testability,"I don't have xvfb (pytest-xvfb) installed specifically for qutip, but it is used by other packages (The general use of pytest-xvfb is to facilitate testing of GUI, graphical or windowing functionality without having an normal Xserver active. That is, it can be useful for automated CI testing of gui packages, for instance in chroots or cloud CI infrastructure). Since qutip doesn't use xvfb directly this bug won't be a problem for general CI testing, where only qutip is loaded on a cloud instance (for instance Debian testing done at https://ci.debian.net/packages/q/qutip/). But before I upload a package to the Debian infrastructure, I like to run the tests on my own system to be confident they're likely to pass. So this is where the problem happens, running tests on my own system, where I have pytest-xvfb installed for testing other packages. (pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py). So the use case is running the qutip tests on my own system, where pytest-xvfb simply happens to be installed for other purposes not related to qutip. There are ways of working around the problem, for instance the `--no-xvfb` option could be explicitly added to the `pytest` command line. But it can be useful if the test code itself can be made robust with respect to the problem (e.g. in this case just replacing `plt.clf()` with `plt.close('all')`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791:148,test,testing,148,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791,10,['test'],"['test', 'testing', 'tests']"
Testability,"I don't know if the test failure is related or not -- it *looks* unrelated but it is a data layer test, so we should probably check a bit carefully.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255,2,['test'],['test']
Testability,"I don't know if this is helpful, but I can get a different error if I first `import numpy`:. ```; >>> import numpy; >>> import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113235398:133,test,testing,133,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113235398,1,['test'],['testing']
Testability,"I don't know, since jax is developed by google I expect it to work well with gpus it provide through collab... We don't use schur decomposition for mesolve directly. I think it's the integrator from diffrax that does, if not it could be the norm (it's using trace norm which call sqrtm instead of trace, fixed in #2408). Maybe trying other ODE solver or not normalizing would work. Neill seems to have run most of his test using dopri:. ```; from diffrax import Dopri5, PIDController. options = {; ""method"": ""diffrax"",; ""normalize_output"": False,; ""stepsize_controller"" : PIDController(rtol=1e-8, atol=1e-6), # This is now the default.; ""solver"": Dopri5(),; }; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078:418,test,test,418,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078,1,['test'],['test']
Testability,"I don't think that this is ready quite yet, but it's getting significantly closer. I want to add some more dnorm() tests for known cases, since the current known cases are all fairly trivial. I'd also like to add the difference of two unitaries trick for fast dnorm() calculations, since that will be an especially common case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-197591071:115,test,tests,115,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197591071,1,['test'],['tests']
Testability,"I don't think that type checking should be done in the mcsolver. Instead we should just unit test the operators themselves. The reason that this happened is because we bypassed the checks done by the Qobj class by operating on the underlying data itself. For most users, this will never be an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/209#issuecomment-51128352:93,test,test,93,https://qutip.org,https://github.com/qutip/qutip/issues/209#issuecomment-51128352,1,['test'],['test']
Testability,"I don't think there is something wrong.; We can expect the matmul output and eigen values to have errors of about 1e-16, (double's precision), then it sums the square-roots, resulting in error up to ~1e-8 when the eigen values should be zeros. So with a tol at 1e-8, the test can fail from numerical error with nothing wrong in the test. If you look are the sparse eigen solver, for a 100x100 matrix with only 10 non-zero values, all along the diagonal, it does not find any` 0` eigen values: there are about 89x `~e-36`, 1x `~e-17` and the 10 non-zeros values. So the `sqrt(~e-17)` is pure numerical error and appear in the test at around 3e-9. ; I ran the test a few thousand times and it fails about 23% of the time, at `tol=3e-8`, it fails about 0.2% of the time and the max is 3.7e-8. So I expect everything is fine and you just need to loosen the tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921:271,test,test,271,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921,4,['test'],['test']
Testability,"I don't think this is the right way to solve your problem, but we probably should be consistent. `Qobj` is not a container for arbitrary data, and a 1x1 `Qobj` basically should never exist. If I remember correctly, the auto-promotion to `Qobj` is to avoid breaking backwards compatibility, because 4.x doesn't use the `@` syntax at all. We almost certainly should be moving to remove that ""feature"", not add to it - it should never work with compound Hilbert spaces (we should be safe-by-default), and trying to detect special behaviour on 1x1 inputs just leads to weird edge cases and breakages all over the place. You probably want some sort of different mechanism for deciding what types a `Qobj.data` instance can accept in `mul`. At the moment, the test is `isinstance(other, numbers.Number)`, but you want to accept `tensorflow.Variable` if the backing data is TF-like. I think the right solution would be based on having some way for downstream classes to expose what types they can accept, perhaps by a well-defined try/except pattern?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515:754,test,test,754,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515,1,['test'],['test']
Testability,"I don't think we need a fix for master, I haven't seen the test fail yet. ; In master, we create the file in the active directory and use pyx import. So the absolute path should never be used.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1975#issuecomment-1218012520:59,test,test,59,https://qutip.org,https://github.com/qutip/qutip/pull/1975#issuecomment-1218012520,1,['test'],['test']
Testability,"I don't want to approve or block it.; I can't understand the template so I don't know if the generated changelog will be useful for release.; And the tests don't pass... Personally the issue number as the tag looks good to me. Yes we have many PRs without issues, but it may be a good idea to open them just to tell other what we are working on and it's easier for first time contributor who take a `good first issue`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1159098604:150,test,tests,150,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1159098604,1,['test'],['tests']
Testability,"I finally got a chance to test the intel MKL on my workstation with 12 cores. For larger systems I ma getting about a 6x speed-up. On the previous system it was 4 cores, but showed only a ~2x speed up. So for many core systems, I do see noticeable improvement when the Hilbert space becomes large.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186747186:26,test,test,26,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186747186,1,['test'],['test']
Testability,"I fixed steadystate tests:; - `_permute` use numpy array, @AGaliciaMartinez is looking to fix the data layer function.; - Lowered the precision required for `test_exact_solution_for_simple_methods`. The test looked for `1e-16 +/- 1e-16` and most calls returned `0`. Most methods cannot match this precision and can fail from numerical error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212,2,['test'],"['test', 'tests']"
Testability,"I fixed the BoFiN test, but I'm a little bit worried that it might be common for people to accidentally write `dims=[2, 2]` instead of `dims=[[2], [2]]`, for example, and that with the call to `np.hstack(dims[0])` this will now raise a TypeError, because `np.hstack` must be called with a list. I.e. we are also forcing `dims[0]` and `dims[1]` to be lists, which is not something we checked before.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783#issuecomment-1028022762:18,test,test,18,https://qutip.org,https://github.com/qutip/qutip/pull/1783#issuecomment-1028022762,1,['test'],['test']
Testability,"I fixed this and added the feature for the 2op 2t function that uses the me solver. It should be fine, but I'm going to need to think for a bit to come up with a good test/check, but it appears to behave like I would expect (from 2D plots). I'll add the notebook at some point next week/update the docs?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-52936076:167,test,test,167,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52936076,1,['test'],['test']
Testability,"I followed instruction on http://qutip.org/docs/4.1/installation.html and used pip to install qutip in my python3.5.2 virtualenv directory. All required packages listed under ""General Requirements"" were also installed. pip commands completed fine. I then cd into a directory peer to ""python3.5.2 virtualenv directory"" and launched jupyter notebook. Ran two import commands. Both failed. Any suggestions on how to debug these failures? I restarted firefox and jupyter notebook several times. 1. ""import qutip.testing as qt"" to verify installation; lib/python3.5/site-packages/qutip/__init__.py; 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. lib/python3.5/site-packages/qutip/qobj.py; 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. lib/python3.5/site-packages/qutip/fastsparse.py; 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. 2. ""from qutip import *""; lib/python3.5/site-packages/qutip/__init__.py in <module>; 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *. lib/python3.5/site-packages/qutip/__init__.py in <module>; 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 . AttributeError: module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018:508,test,testing,508,https://qutip.org,https://github.com/qutip/qutip/issues/1018,1,['test'],['testing']
Testability,"I get the not the docstring but the function name. `verbosity=2` also give the test file full path, but not the docstring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-574221111:79,test,test,79,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-574221111,1,['test'],['test']
Testability,"I get the same issue on a [Travis CI build](https://travis-ci.org/github/qutech/filter_functions/jobs/757061484) with; ```; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.6 LTS; Release:	16.04; Codename:	xenial; ```; running on `amd64` with `qutip-4.5.2` installed via `pip`. The same test config runs fine on Python 3.6 and 3.7, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777523352:288,test,test,288,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777523352,1,['test'],['test']
Testability,I got a hard crash (segfault?) on macOS 10.14 but not on macOS 10.13: xcode10 vs xcode11.2; We should wait a bit more for tests python 3.8,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1125#issuecomment-552629094:122,test,tests,122,https://qutip.org,https://github.com/qutip/qutip/pull/1125#issuecomment-552629094,1,['test'],['tests']
Testability,I guess I need to edit the tests to match the new function behavior.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528#issuecomment-243330602:27,test,tests,27,https://qutip.org,https://github.com/qutip/qutip/pull/528#issuecomment-243330602,1,['test'],['tests']
Testability,I guess this was the ZVODE error in the mcsolve_f90 tests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49157591:52,test,tests,52,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49157591,1,['test'],['tests']
Testability,"I guess you need to fix the merge conflict before the tests can run. I won't have time to look through this today, so there's plenty of time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444#issuecomment-810110009:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/pull/1444#issuecomment-810110009,1,['test'],['tests']
Testability,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:78,test,testing,78,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378,5,"['Test', 'test']","['Test', 'test', 'testing', 'tests']"
Testability,"I had a quick look at this since i was benchmarking expm() anyway. Essentially I think the issue is your A operator is diagonal, and in 4.7 there is a check that notices it is diagonal, and quickly returns the result. In v5, there is a similar check for sparse matrices, but the default behavior is to convert to dense, so the check is not done. if you use expm(dtype=""CSR"") the v5 example should be quick (with the caveat that the result is nan in both 5 and 4.7). I guess we need to add a check for diagonality for dense cases too. edit:; @hodgestar pointed out that A.to(""dense"") helps too, so I guess it is just; https://github.com/qutip/qutip/blob/fccec5d60e396c964627664bff85a22901adb85a/qutip/core/data/expm.py#L40; which needs a diagonality check?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2115#issuecomment-1463773076:39,benchmark,benchmarking,39,https://qutip.org,https://github.com/qutip/qutip/issues/2115#issuecomment-1463773076,1,['benchmark'],['benchmarking']
Testability,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150990762:188,test,test,188,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762,1,['test'],['test']
Testability,I had seen the tests folder and I have given some thought to what we can add to test the control modules. As you suggest I will add something based on the notebooks. I guess I should do this as a separate pull request.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/281#issuecomment-66294867:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66294867,2,['test'],"['test', 'tests']"
Testability,"I had some issues with python3 on my OS X (it dislikes my python2 and vice versa), so I didn't test it for python3. Otherwise, it should be fine and merge-ready. Great thanks for your help! . (I have a few more ideas, but for other plots, so let they come as separate issues.). With respect to the IPython Notebook demonstrating visualizations - definitely I should prepare (or rather: polish) one of two.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-43785864:95,test,test,95,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43785864,1,['test'],['test']
Testability,"I had to move faster and complete the full implementation in a rather quick and unstructured manner for my lab. I will finish it and then systematically build this PR so that it becomes easy for review. I have a working implementation of the ICM model now and a partial implementation of [Pauli tracking](https://www.date-conference.com/files/proceedings/2014/pdffiles/05.6_7_ip2-19.pdf) which pushes all the corrections and measurement to the end of the circuit.; ### Circuit with a rotation gate (V gate). ![v](https://cloud.githubusercontent.com/assets/6968324/21744357/3fe6c324-d557-11e6-8829-7202ff6d3760.png). ### Pauli tracked ICM representation of circuit. ![v_p](https://cloud.githubusercontent.com/assets/6968324/21744360/48959432-d557-11e6-8a5e-02b47b33698f.png). Thus, we get a quantum circuit with qubit initializations in the begining, a mesh of CNOT gates in the middle and measurements in the end. This seems to be very useful as the starting point of topological quantum circuit optimization. Future work: . 1. Represent qubit initializations in some way. Right now I consider everything as a gate. (Perhaps make new objects for qubit intializations, measurement, correction etc.). 2. Better visualization such that all initializations, measurements and corrections can be stacked in one line. 3. Representing the information regarding P_dagger, T_dagger, V_dagger gate teleportation in some way. The difference is just based on the interpretation of the measurement. 4. Complete the Pauli tracking algorithm to get the gate sequence for correction based on measurement. Tests, tests and more tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-271102783:1588,Test,Tests,1588,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-271102783,3,"['Test', 'test']","['Tests', 'tests']"
Testability,I have a branch with int64 matrice that pass all tests except the mkl ones which are skipped. ; https://github.com/Ericgig/qutip/tree/long,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-420798144:49,test,tests,49,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-420798144,1,['test'],['tests']
Testability,"I have a couplle of questions to understande better the difference between using `assert_all_close`, `assert` and `assert_equal`. ; In this case you changed `assert_all_close` to `assert` because of the time difference right? ; Why are the other tests in the same file using `assert_equal` instead of `assert` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822708414:102,assert,assert,102,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822708414,4,"['assert', 'test']","['assert', 'tests']"
Testability,I have added 4 IPython notebooks for testing too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-63363264:37,test,testing,37,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63363264,1,['test'],['testing']
Testability,I have added a development notebook to test this pull-request.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/338#issuecomment-95258458:39,test,test,39,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-95258458,1,['test'],['test']
Testability,"I have added the unit tests and moved the old ptrace to a new 'legacy' folder. . The permute method for Qobj's has a similar routine to those for selecting indices in ptrace. I have switched that code to the new ptrace functions as well, but there is some additional cleanup that needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/634#issuecomment-272784039:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/634#issuecomment-272784039,1,['test'],['tests']
Testability,I have been trying out pytest for the last couple of days and we can start by using it for the testing as it is now. We need to replace installation [lines](https://github.com/qutip/qutip/blob/master/.travis.yml#L23) like this in the .travis.yml file to install pytest:; ```; conda install mkl blas=*=mkl numpy scipy pytest cython coveralls pytest-cov; ```. and then change the runner script to use pytest instead of `nose` by changing:; ```; nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```; to; ```; pytest --verbosity=1 --cov=qutip qutip; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-480825870:95,test,testing,95,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-480825870,1,['test'],['testing']
Testability,I have built this branch and tested on my linux machine here. All tests pass.; I am assuming that you need to make another commit before it's ready for me to test on Windows?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280327735:29,test,tested,29,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280327735,3,['test'],"['test', 'tested', 'tests']"
Testability,"I have corrected the code for compound systems and added tests for two and three qubits. I am not sure about which is the best place for this function, I made it to solve the Issue #2340. If you consider it fits better in a different place I will be happy to modify it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2545#issuecomment-2417329528:57,test,tests,57,https://qutip.org,https://github.com/qutip/qutip/pull/2545#issuecomment-2417329528,1,['test'],['tests']
Testability,"I have finally gotten around to look at this. Compared to usual ODE evolution, the expm_multiply (as of SciPy 0.18) is over an order of magnitude slower when testing against simple harmonic oscillator evolution. Profiling showed that the inf and one norms were the main issue as they cannot call BLAS functions for complex numbers. I wrote Cython versions that were ~5x faster. The next profile suggested replacing the dot calls with our own spmv. All together, I could get a factor of 3x improvement over the base SciPy code, but the spmv is still the dominate time consumer, so there is nothing further I could do to speed things up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/84#issuecomment-242475532:158,test,testing,158,https://qutip.org,https://github.com/qutip/qutip/issues/84#issuecomment-242475532,1,['test'],['testing']
Testability,"I have just finished testing with Vs 2015 as well (win10, Python 3.5). All passed.; I feel this is a momentous occasion. Great work!; I think this is worthy of a 4.1 release. Very keen to get working conda package for Windows out there",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281725155:21,test,testing,21,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281725155,1,['test'],['testing']
Testability,"I have just installed qutip using the master branch. When running the tests script test_steadystate.py, I receive a similar violation as above. . ```python; packages\qutip\qutip\steadystate.py:275: in steadystate; return _steadystate_direct_sparse(A, ss_args); packages\qutip\qutip\steadystate.py:442: in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm=in_perm, verbose=ss_args['verbose'],; packages\qutip\qutip\_mkl\spsolve.py:393: in mkl_spsolve; x = lu.solve(b, verbose=verbose); OSError: exception: access violation reading 0x00000000000000C4; packages\qutip\qutip\_mkl\spsolve.py:167: OSError; ```; Is this a known bug with windows, or is there a fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199:70,test,tests,70,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199,1,['test'],['tests']
Testability,I have just successfully installed qutip using pip into a fresh conda env (python=3.6) on Linux Mint. I believe this Mint is pretty much identical to Ubuntu.; All dependencies were installed automatically. qutip tests run fine.; So I don't think that there is anything wrong with our setup configuration.; Note we do not recommend installing qutip into a system python env - especially on Linux.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-323319515:212,test,tests,212,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-323319515,1,['test'],['tests']
Testability,"I have managed to get everything moved over to c++. Should address #647. There are still a few issues to address, but the tests pass on unix based systems. - CFLAGS need to be set for visual studio builds.; - zspmv src files need to be platform dependent (i.e. win/unix versions). This is mainly due to a few minor variations in how compiler hinting is done. No big deal. Also, when moving to openmp, visual studio uses v2.0, which is a bit dated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648:122,test,tests,122,https://qutip.org,https://github.com/qutip/qutip/pull/648,1,['test'],['tests']
Testability,"I have managed to reproduce.; It would that conda is currently installing an openblas version of numpy even when `mkl` version is set. I guess this is a mistake by Anaconda that they will fix soon. Probably because they rushed the fix for #871 ; This means that the 'metrics' tests with ""known issues"" are not skipped.; What does not make sense is why the 'NOMKL' tests are failing. Some questions:; - why do we install a specific version cvxopt in our test build?; - These ""known issues"" must be quite old, so perhaps may have been fixed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394194142:276,test,tests,276,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394194142,3,['test'],"['test', 'tests']"
Testability,"I have not put any tests in for this, because it seems like a lot of effort for something that is used as a kind of testing tool anyway. When I make my PR for the hsolve enhancements, including tests, this file will get pretty reasonable coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/454#issuecomment-193176693:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193176693,3,['test'],"['testing', 'tests']"
Testability,I have raised the issue with anaconda; https://github.com/ContinuumIO/anaconda-issues/issues/9500. I think we should suspend the NOMKL tests until there is a fix (from them),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871#issuecomment-393925753:135,test,tests,135,https://qutip.org,https://github.com/qutip/qutip/issues/871#issuecomment-393925753,1,['test'],['tests']
Testability,"I have rebased to pick up all the recent bug fixes. Hopefully this will mean this will pass all the tests now.; I have been using the new features quite a lot, so I will squash and merge if this passes the tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/478#issuecomment-223043013:100,test,tests,100,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-223043013,2,['test'],['tests']
Testability,"I have replicated this. The hardcode num_waves seems a bit spurious. I think it is best to delete it altogether. It does mean that it breaks backward compatibility, but I can't why anyone would rely on this (or why I coded it that way in the first place). I am working on unit tests for this now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/412#issuecomment-170951539:277,test,tests,277,https://qutip.org,https://github.com/qutip/qutip/issues/412#issuecomment-170951539,1,['test'],['tests']
Testability,"I have seen this quite a bit in the tests. Calling the code outside of the test always works. So it could be the test suite, which is based on the out of date nose, needs to be updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458154837:36,test,tests,36,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458154837,3,['test'],"['test', 'tests']"
Testability,"I have some slight reservations about the copying around of the tidyup logic in the CSR methods, but it's not in too many places so far, so I'm happy with the duplication for now. If we get more copies, I would recommend we define an inline method that does the `if real < tol: ... if imag < tol: ...` dance for us.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1615#issuecomment-894223373:71,log,logic,71,https://qutip.org,https://github.com/qutip/qutip/pull/1615#issuecomment-894223373,1,['log'],['logic']
Testability,I have tested an OPENMP version of the zcsr_kron function and there is not much to gain overall when compared to the serial version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/530#issuecomment-243980181:7,test,tested,7,https://qutip.org,https://github.com/qutip/qutip/pull/530#issuecomment-243980181,1,['test'],['tested']
Testability,"I have tried on Win7x64 using anaconda. ; under Python2.7:; I found qutip would install, and most things would work. However there were many warnings when running tests and occurrences of python.exe crashing; under Python 3.5; I found qutip would install. However nothing much would run, e.g. issues importing spmatfuncs when creating a Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148701161:163,test,tests,163,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148701161,1,['test'],['tests']
Testability,"I have tried to modify the grape_unitary() function in [grape.py](https://github.com/qutip/qutip/blob/master/qutip/control/grape.py) also to accommodate open quantum systems. One can use it to generate time varying fields for synthesising unitaries for them.; I have tried to run it for the same system as in this [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb).; > I have run into a problem as to some sets of collapse operators give spurious overlap values. The code seems to work well for the closed system, though it is slower than the original [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb). ; [The code](https://www.dropbox.com/sh/cag7q460a4macw6/AABxPWkpwQBfDv6pt4R2vNg5a?dl=0); I know that qutip has another implementation of GRAPE (along with CRAB) in this [file](https://github.com/qutip/qutip/blob/master/qutip/control/pulseoptim.py) and some others in [control](https://github.com/qutip/qutip/blob/master/qutip/control) folder. But it seemed too dense with logic for me to modify it. Hence I modified [grape.py](https://github.com/qutip/qutip/blob/master/qutip/control/grape.py).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1031:1072,log,logic,1072,https://qutip.org,https://github.com/qutip/qutip/issues/1031,1,['log'],['logic']
Testability,"I haven't personally tested this, but it looks fine to me. Thanks for the help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/783#issuecomment-351775139:21,test,tested,21,https://qutip.org,https://github.com/qutip/qutip/pull/783#issuecomment-351775139,1,['test'],['tested']
Testability,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148703467:113,log,log,113,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467,2,"['log', 'test']","['log', 'tests']"
Testability,I just added a dummy commit to trigger the tests,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/915#issuecomment-434057248:43,test,tests,43,https://qutip.org,https://github.com/qutip/qutip/pull/915#issuecomment-434057248,1,['test'],['tests']
Testability,"I just cleaned up a tool I used when making the jax data layer, but I don't want to add something that will ask for our time to maintain, thus no test or coverage. In this meaning, it doesn't seems belong here. I am closing this and making a new one with just the missing specializations + will check if they were also skipped in test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2132#issuecomment-1481288399:146,test,test,146,https://qutip.org,https://github.com/qutip/qutip/pull/2132#issuecomment-1481288399,2,['test'],['test']
Testability,"I just did a fresh instlal of qutip today and ran the tests. mcsolve (and mcsolve_f90) tests involving collapse operators fail. Probably this is due to a recent change in the code where averaging of states is turned off by default for the solver:. > commit fb40b4675bb454089a08087c64a07f83be44cd99; > Author: Robert Johansson jrjohansson@gmail.com; > Date: Mon Aug 5 11:24:26 2013 +0900; > ; > do not average states by default. I think this change in general involves a risk of not being backwards compatible with a lot of old code. What do you think?. Cheers, Arne",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/37:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/issues/37,2,['test'],['tests']
Testability,"I just realize that test in qutip-qip won't work because this has to be merged and released first. The code looks fine to me. Will test it locally later. @hodgestar Just to get a second opinion, what do you think about this? As it could also be used by further family packages like control.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870#issuecomment-1104475998:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/1870#issuecomment-1104475998,2,['test'],['test']
Testability,"I just tidied up the branch with a rebase.; Tests are all passing except in the NOMKL build - this is not related, see #871 . I think this should be merged. @nonhermitian @sahmed95 please could someone check and merge if you agree",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-393877287:44,Test,Tests,44,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-393877287,1,['Test'],['Tests']
Testability,"I know this is a very simple change, but could we add a test that it works? E.g. maybe a test in which we subclass `Data` and then create an instance of it and access shape?. And perhaps a test that shows that shape is immutable?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1584#issuecomment-865241663:56,test,test,56,https://qutip.org,https://github.com/qutip/qutip/pull/1584#issuecomment-865241663,3,['test'],['test']
Testability,"I know you've marked this as draft, but let me point out that you've not really aligned your `master` with ours after the merge (one of the reasons it's not a good idea to develop using `master`). You've merged in the changes from our branch, but really you needed to overwrite your local copy with ours; I squashed the previous PR down into just one commit to keep the commit log cleaner and easier to interpret. In this sort of triangular workflow where you're proposing PRs that might not be merged as-is, you need to treat our repository as the single source of truth - you should never change your `master` branch except by doing `git pull` to our repository, so you can't get out of sync. Since you've now developed on the top of an incorrect tip, it'll be a bit difficult for you to untangle if you're not very familiar with `git`. You _can_ do it with rebasing or cherry-picking techniques to keep what you've done, but in this particular case (and there's no way you could have known this), I was actually just about to publish PR #1490 that makes all these same changes in `test_metrics.py`, but also goes a lot further in rewriting the tests in a more pytest-y style. It might be better for you if you reset your repository to match ours exactly, and then start again using the proper branching structure for the superoperator and tensor tests you wanted to look at. Perhaps you could have a look at #1490 as well to see how I go about parametrising tests and organising everything to keep it tidy (not saying that my code is perfect by a long shot, and the concept of ""random"" tests is questionable overall, but it's what we've got at the moment). Remember as well that readibility is a big concern. Using an automated tool to enforce pep8 compliance often won't get you the best results - our real style requirement is that it's easy to read, so linebreaks should be in sensible places (that still abide by pep8).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778:377,log,log,377,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778,5,"['log', 'test']","['log', 'tests']"
Testability,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147493646:92,log,logging,92,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646,3,['log'],['logging']
Testability,"I made some benchmarks timing different way to call matmul and contouring the dispatcher is worth it. ; For 10x10, CRS x Dense, it's 4x slowdown for matmul and 2x for expect.; For 1000 x 1000, it's 10% and 5%, reasonable but still felt. The easiest would be having `matmul(self, Dense in, Dense out)` method for Data layer. There is no need for all pairs of layer types to be supported by this, states in scipy's solver are always Dense. But it's a little late for that. Not having that, since 99% of users will use our data type and we only really need it for `matmul` and `expect`, we can so a manual disptach for just those. The way I did it was quite ugly, I wanted to limit the calls to `isinstance` which are not proper cython so did it once moving the type. I did not think of `type`...; `type(op) is CSR` is 15x faster than `isinstance(op, CSR)` and about as fast as comparing for enums, making have `layer_type` useless. Renamed it to `matmul_data_dense_dense` in matmul.pyx.; Still short of a c dispatcher for function pointers, but I am not attacking this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1407#issuecomment-747703407:12,benchmark,benchmarks,12,https://qutip.org,https://github.com/qutip/qutip/pull/1407#issuecomment-747703407,1,['benchmark'],['benchmarks']
Testability,I made some pep8 fixes since we are revisiting this code after a long time. Is it okay to merge this even when the MKL build fails? Or should this test be disabled on MKL and then we merge this PR?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394056250:147,test,test,147,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394056250,1,['test'],['test']
Testability,"I made some tests with this PR and ran into one problem: the iscptp is very computationally demanding for large system, so it cannot be used in the `__str__` and `_latex_repr_`, because it prevents large systems from being displayed. Also, whether a super operator is CPTP is not always relevant so it does not need to be shown in every printed Qobj. Also, superrep should probably only be displayed if it is not 'super' (to avoid both type and superrep duplicating the same information),",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/90#issuecomment-37786513:12,test,tests,12,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37786513,1,['test'],['tests']
Testability,"I managed to get all the tests working on Win7 x64 using Anaconda and mingw in the manner that Chris suggested. However, one caveat is that the user name for the installation can not have any spaces in it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150083795:25,test,tests,25,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150083795,1,['test'],['tests']
Testability,"I managed to successfully install QuTiP in conda, however, installation verification resulted in a FAILED test: test_steadystate.py::test_driven_cavity_power_gmres - Exception: power-gmres failed to find solution in 1000 iterations. Instead of getting a test report I also got an infinite loop returning what you can see on the image below. I installed qutip using:; ```; conda config --append channels conda-forge; conda install qutip. import qutip.testing; qutip.testing.run(). ```; Any ideas why this would happen?; Any tips will be highly appreciated:); ![imagen](https://user-images.githubusercontent.com/85493516/148128436-33f94558-327e-4bed-a921-7bff732bc5d5.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:106,test,test,106,https://qutip.org,https://github.com/qutip/qutip/issues/1750,4,['test'],"['test', 'testing']"
Testability,I marked a few spot where the seed was applied more than once.; The failed test is a known issue.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-468400582:75,test,test,75,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-468400582,1,['test'],['test']
Testability,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194686130:76,test,test,76,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130,1,['test'],['test']
Testability,I never saw the test failure in `test_zheevr`. That's odd - I thought we'd merged a change that fixed that. I certainly haven't seen one for a very long time personally - it's all `test_diag_liou_mult`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167:16,test,test,16,https://qutip.org,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167,1,['test'],['test']
Testability,"I notice that all tests, including MacOS, past on this!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/957#issuecomment-469722557:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/pull/957#issuecomment-469722557,1,['test'],['tests']
Testability,"I notice that our mkl tests are not running with the mkl version of numpy.; This has been reported by others; https://github.com/ContinuumIO/anaconda-issues/issues/9519. Solution copied here for convenience:; ""please install blas=*=mkl to remedy this. Sorry for the confusion. We're working on better ways to select package variants, and we're having some growing pains.""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875#issuecomment-394669389:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/875#issuecomment-394669389,1,['test'],['tests']
Testability,"I noticed this recently while addressing an issue for which the test of `average_gate_fidelity` was failing when the random supermatrix included an odd dimensional object. I had your same impression but was unsure of the proper function. I am pinging @BoxiLi and @quantshah to keep an eye on this, if they are knowledgeable, in the future months. Thank you @lucainnocenti, and if you think that your fix is fine, please open directly a pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869#issuecomment-497300028:64,test,test,64,https://qutip.org,https://github.com/qutip/qutip/issues/869#issuecomment-497300028,1,['test'],['test']
Testability,"I now noticed that the tests failed because of the added warnings. Unsure how to handle this, could add `@pytest.mark.filterwarnings('ignore::UserWarning')` to the tests?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1740361085:23,test,tests,23,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1740361085,2,['test'],['tests']
Testability,"I only have doubt about the 'other' form. Does that mean that issues cannot be open without using a template? Having the changelog in the PR is the best I believe. The file in qutip-doc can be undated at each release. A file in qutip could create a lot of conflict since each PR would have to add something at the end of 1 file and a lot of PR would be waiting on it. The same way we have good PR that are only waiting for a test to be added before merging. In the pull request template, I would mention the need for tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987:425,test,test,425,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987,2,['test'],"['test', 'tests']"
Testability,"I opened an issue https://github.com/scipy/scipy/issues/3424 for this, but it will probably not happen unless a PR mysteriously appears at the doorstep. Also consider that combinations of {linux, pc, mac} x {32 bit OS, 64 bit} x {small matrices (< 2^31 rows, cols, nnz), big matrices} will probably have to be tested somehow. Getting sparse matrix algorithms to work on all these combinations seems to have been a sticking point in the recent scipy release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36465061:310,test,tested,310,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36465061,1,['test'],['tested']
Testability,"I prefer smaller PRs, this is big enough.; Continue in another one please.; I will put the test to a to check list and review it when working on `brmesolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680228966:91,test,test,91,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680228966,1,['test'],['test']
Testability,"I ran the full tests on Windows 10. All passed except 1. Trace as follows:; ```; ======================================================================; FAIL: Monte-carlo: Collapse terms constant (str format); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\qutip-4.3.0.dev0+6915aee-py3.6-win-amd64.egg\qutip\tests\test_mcsolve.py"", line 326, in test_MCSimpleConstStr; assert_equal(avg_diff < mc_error, True); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\numpy\testing\utils.py"", line 416, in assert_equal; raise AssertionError(msg); AssertionError:; Items are not equal:; ACTUAL: False; DESIRED: True; -------------------- >> begin captured stdout << ---------------------; 10.0%. Run time: 8.27s. Est. time left: 00:00:01:14; 20.0%. Run time: 10.17s. Est. time left: 00:00:00:40; 30.0%. Run time: 12.19s. Est. time left: 00:00:00:28; 40.0%. Run time: 14.11s. Est. time left: 00:00:00:21; 50.0%. Run time: 16.05s. Est. time left: 00:00:00:16; 60.0%. Run time: 18.03s. Est. time left: 00:00:00:12; 70.0%. Run time: 19.99s. Est. time left: 00:00:00:08; 80.0%. Run time: 21.94s. Est. time left: 00:00:00:05; 90.0%. Run time: 23.94s. Est. time left: 00:00:00:02; 100.0%. Run time: 25.87s. Est. time left: 00:00:00:00; Total run time: 25.99s. --------------------- >> end captured stdout << ----------------------. ----------------------------------------------------------------------; Ran 488 tests in 2700.806s. FAILED (SKIP=9, failures=1); >>>; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317797935:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317797935,7,"['Assert', 'test']","['AssertionError', 'test', 'testing', 'tests']"
Testability,"I re-launched the Travis tests on all platforms. They pass for all besides Mac OS (similar error as for other PR). With `python setup.py install`, with `install` instead of `develop`, things seem to work. What it is unclear to me is why it reads that the QuTiP Version is `4.4.0.dev0+1a639d7a`, when I could not find this hash in here (or maybe I am confused). Now, after some tries with install and develop, I am on that version of qutip-dev. . To begin with, I am running the contents of the [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). Some comments below are relevant to the PR of the notebooks, https://github.com/qutip/qutip-notebooks/pull/71. * `development-qobjevo.ipynb`: Runs fine. ; * `development-qobjevo-adv.ipynb`: Runs fine. ; * `development-qobjevo-timing.ipynb`: Runs fine. * The notebook [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb) could be re-adapted to be among other tutorials, with some title like ""Time-dependent `Qobj` with `QobjEvo`"". There could be much more commentary of the basics of `QobjEvo`. Some could be copy-pasted from the introductory comment in `qobjevo.py`. You are the best person to explain, with basic examples, of increasing complexity, what QobjEvo can do. Possibly taking a known physics problem, e.g., the damped harmonic oscillator with `mesolve`, could help the user. . * In [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb), block 22 has the first check set to False, but this is both in the notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:25,test,tests,25,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['test'],['tests']
Testability,"I reactivated MKL, updated numpy to 1.22.0 and when running `import qutip.testing` I get the following error:. `Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'`. Then as I wanted to provide my config I typed `import qutip` but it yielded the exact same error so I reverted it back to 1.20.3. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Miniconda3\lib\site-packages\qutip. Why is it on OPENBLAS now?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725:74,test,testing,74,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725,1,['test'],['testing']
Testability,"I realised I never replied to this. I suggested `2*rtol` in this case because the error propagation in this case would guarantee that this is always sufficient. For other tests, we can always design the test so that it's calculable what the error term should be. I'd say it's generally a good idea to have the tests be as tight as we can possibly make them without risking false-negatives on the results, because otherwise we're not properly testing that the parameters do what they say. Regardless, that test failure isn't due to any of my PRs - it's a pre-existing problem that we happened to get unlucky on this time round. It'll get fixed when I modify `test_mesolve.py`. Can we review this PR to get the ball rolling on getting all of the test refactoring considered?. Possible reviewers: @Ericgig, @BoxiLi, @nathanshammah",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133:171,test,tests,171,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133,6,['test'],"['test', 'testing', 'tests']"
Testability,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147449765:133,test,tests,133,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765,1,['test'],['tests']
Testability,"I removed the malloc and rewrote the examples in a way to discourage the mixing of str and func format. I have some unit tests for the td_Qobj, but I still have to add new ones for mcsolve.; It seems I do not have the same version of the pickle module than the tests server. Will check that next week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/774#issuecomment-345361852:121,test,tests,121,https://qutip.org,https://github.com/qutip/qutip/pull/774#issuecomment-345361852,2,['test'],['tests']
Testability,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,7,"['Test', 'test']","['Tests', 'test', 'testing', 'tests']"
Testability,"I reset the `test_random`, `test_operator` and `test_states` and only added test relating to `dtype`. The others change I made will go in other PR. . I also changed `add_creator` to take only one new creator at a time and add it to the list. I re-sort each time as the list. Creators are added in `core.data.__init__`, including the fallback to numpy. I had some circular import when import data in `convert.pyx` and it fell more at it's place after `add_conversions` is called. Could you take another look and if it's good I will clean the commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1420#issuecomment-849867989:76,test,test,76,https://qutip.org,https://github.com/qutip/qutip/pull/1420#issuecomment-849867989,1,['test'],['test']
Testability,I resolved the issue with setting the alpha for multiple sets of vectors and added tests for that (and for setting the alpha of points). I'm not going to add tests for Bloch3d now since that uses mayavi which looks like it might be a whole other testing rabbit hole. I will simply run some checks in a notebook manually tomorrow. I still need to update the docstring and look at what the docstring format changes are about. @xspronken @AGaliciaMartinez Reviews of my most recent commits welcomed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1837#issuecomment-1093447511:83,test,tests,83,https://qutip.org,https://github.com/qutip/qutip/pull/1837#issuecomment-1093447511,3,['test'],"['testing', 'tests']"
Testability,"I see it as `v4` being wrong instead of `dev.major`. It should not truncate small values with an hidden tolerance.; Here it's the sparse matrix operations which drop small values to stay sparse that cause the change. In v5, these operations are done using dense matrices. However this should have been the case for a long time... The test `p != 0` is always risky with floating number, we should use `p >= tol` with a documented tolerance instead. The `atol` from core options would work here, but we could also have the tolerance as an optional input to measurement functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866:334,test,test,334,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866,1,['test'],['test']
Testability,I see that there were PRs with ignoring the deprecation warnings.; Do i need to make another push to make the tests restart in this PR?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2284#issuecomment-1883606705:110,test,tests,110,https://qutip.org,https://github.com/qutip/qutip/pull/2284#issuecomment-1883606705,1,['test'],['tests']
Testability,I see the tests for the last commit as both passing and failing...; Could you merge dev.major to rerun the tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1633#issuecomment-920950599:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/1633#issuecomment-920950599,2,['test'],['tests']
Testability,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:46,test,test,46,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373,2,['test'],['test']
Testability,"I see, the docs look very nice indeed!; @sahmed95 Go ahead and merge this when the tests pass. Better if you do it, as you can tidy the commit message during the squash.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396895055:83,test,tests,83,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396895055,1,['test'],['tests']
Testability,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/502#issuecomment-230108497:72,test,test,72,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497,2,['test'],"['test', 'testing']"
Testability,I suggest we merge it after the tests and the codeclimate issues are (partially) fixed. We can make an update PR for doc if necessary.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-651781870:32,test,tests,32,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-651781870,1,['test'],['tests']
Testability,"I suppose the answer is ""yes"", but there's still that huge to do list at the top that needs to be handled (including some really really important bits like the tests). I'm just rebasing it now. By the way, I'm getting a lot of `build` directories dropped in whatever my current working directory is whenever I run anything which uses the new coefficients (and there's the import warning still).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680168936:160,test,tests,160,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680168936,1,['test'],['tests']
Testability,"I suspect it may already be getting fixed upstream as a recent merge on my fork completed testing in just about 10 minutes, quite on par with where it was. If it becomes important, we can use the new container infrastructure to start caching things like the Anaconda installer, but looking at the detailed breakdown, it didn't seem important enough to justify adding the extra complication. Anyway, I'm glad to be of service!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130549152:90,test,testing,90,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130549152,1,['test'],['testing']
Testability,"I take that back... there seems to be a bug with the argument combination ""sparse=True, eigvals=5, sort='low'"". Edit: With a1fe271e6c885c881beb09b8c0ee9370336ba4cb sorting of both sparse/dense and hermitian/nonhermitian eigenvalues seems to be consistent, according to my test cases anyways.. . Let us know if you still see some strange behavior..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16369344:272,test,test,272,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16369344,1,['test'],['test']
Testability,I tested that this snippet now runs on qutip 4.4.1.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067#issuecomment-532275966:2,test,tested,2,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-532275966,1,['test'],['tested']
Testability,"I tested the PR #1747 patch against 4.6.2. It's working fine. Building against numpy 1.21.5, and building and passing tests with python3.10.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-1006101738:2,test,tested,2,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-1006101738,2,['test'],"['tested', 'tests']"
Testability,I tested the `CNOT` snippet and the results were the same of 4.3.1. Feel free to re-open if this is not fixed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1063#issuecomment-532277455:2,test,tested,2,https://qutip.org,https://github.com/qutip/qutip/issues/1063#issuecomment-532277455,1,['test'],['tested']
Testability,"I tested the code locally on my machine (OSX 10.13) on; - python from Terminal; - jupyter notebook; - Spyder; It turns out that `Bloch.render()` followed by `show()` had the same functionality of showing multiple times the Bloch sphere in a Jupyter Notebook but this is now more immediate, as `render` alone would work multiple times in jupyter notebook, but still having `show` not showing anything, whereas in the Terminal `render` would only ""reactivate"" the plot for `show` to subsequently plot it. I personally like it better as it is after this PR, also given that `render` is not as well documented as `show` in the Users Guide or tutorials.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/996#issuecomment-493925445:2,test,tested,2,https://qutip.org,https://github.com/qutip/qutip/pull/996#issuecomment-493925445,1,['test'],['tested']
Testability,I think Appveyor is what we need to set up in order to have our tests run on Windows. I don't think this is free. Needs more investigation. It would definitely be a *very* good thing to have tests run on Windows,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-470208612:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-470208612,2,['test'],['tests']
Testability,I think I am pretty happy now with all my functions and variable names (for now). I would say we should leave the variable name changing and moving gates and measurement to separate files for a different PR (it can just be a restructuring one !). I was wondering how to check if it passes current tests (I am not sure what changes were there on Travis).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-637291687:297,test,tests,297,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-637291687,1,['test'],['tests']
Testability,"I think I found what you want: `git diff master | pycodestyle --diff`. It run the linter on the diff between the branches. So it should see the same issues as `codeclimat`.; Everything looks good with your last commit, I am just waiting for test to finish to review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655#issuecomment-926659144:241,test,test,241,https://qutip.org,https://github.com/qutip/qutip/pull/1655#issuecomment-926659144,1,['test'],['test']
Testability,I think I pinned down the issue for local tests on Mac 10.13.6 (High Sierra) with Python 3.7 with the current qutip 4.4 dev version to the line; ```; assert_(0 <= average_gate_fidelity(rand_super()) <= 1); ```; in test_metrics.py.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496365615:42,test,tests,42,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496365615,1,['test'],['tests']
Testability,I think I still needed to change the test workflow. Lets see if this works but let me know if you prefer another approach to include ipython in testing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1918#issuecomment-1152346609:37,test,test,37,https://qutip.org,https://github.com/qutip/qutip/pull/1918#issuecomment-1152346609,2,['test'],"['test', 'testing']"
Testability,"I think `hypothesis` is the best method here in the long term, but it will most likely have to be a long-term goal. I think the main pro in favour of it is that it actually is making an attempt to remove randomness; it's attempting to comprehensively test a spanning set of input parameters, rather than just Monte-Carlo'ing our way through and hoping. There's a couple of points which make it difficult to implement:. 1. QuTiP can be quite fragile with respect to unexpected input formats, particularly in older parts of the code.; 2. Various components are only accurate up to some tolerance, and the error propagation to work out how that corresponds to useful measurable quantities can be rather tricky. Those are certainly both solvable problems, and point 1 in particular is just general improvement of usability. The second point is about designing the tests well, which again is certainly doable, but will take a while (it takes long enough just to refactor them, let alone a total rewrite of large chunks of them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663:251,test,test,251,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663,2,['test'],"['test', 'tests']"
Testability,"I think `xdist` is about self-managing a distributed cluster for testing? The little line at the bottom about ""it effectively `rsync`s the code to the remote locations"" certainly sounds like it, and those descriptions seem to match too. I think the current `pytest.mark.skipif(...)` is fine - skipping based on the platform in use is actually one of the main examples in the documentation for that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267#issuecomment-629274156:65,test,testing,65,https://qutip.org,https://github.com/qutip/qutip/issues/1267#issuecomment-629274156,1,['test'],['testing']
Testability,"I think a fix for this was proposed in this PR https://github.com/qutip/qutip/pull/1275 but that fix seems to still take the max over absolute values, so maybe is still inconsistent with documentation?. I also don't know if there is a reason to choose one over the other, I am not super familiar with the iterative solvers. Could just be a typo or some unfixed testing, particularly since it makes taking the mean completely pointless. David's logic for the iterative solvers sounds like a good reason to revert it to the documented case. If there is still some uncertainty we could ask paul (if he remembers!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1512#issuecomment-829882889:361,test,testing,361,https://qutip.org,https://github.com/qutip/qutip/issues/1512#issuecomment-829882889,2,"['log', 'test']","['logic', 'testing']"
Testability,"I think it should be possible to do this within the pytest framework without touching the package `setup.py` or `MANIFEST`. [`pytest.fixture`](https://docs.pytest.org/en/stable/fixture.html#sharing-test-data) seems a natural choice for loading data. For file accessibility, [this](https://stackoverflow.com/questions/46019170/how-do-you-properly-integrate-unit-tests-for-file-parsing-with-pytest) might help. Porbably @jakelishman knows more about the natural way of doing this with pytest?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508:198,test,test-data,198,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508,2,['test'],"['test-data', 'tests-for-file-parsing-with-pytest']"
Testability,"I think it will be so helpful to introduce composite Hamiltonian to qutip ; It used frequently as in jaynes cumming model; I inspired it from qit toolbox; http://qit.sourceforge.net/docs/html/; My function ; Not need nested list of ascending ordered Hamiltonians. Function found under ; Utils.Op_list ; That will so helpful in future to introduce Hamiltonian models. ```python; import numpy as np; def _cmpst(op,dim):; dL=dim[:op[1]]; if len(dL)==0:; opL=1; else:; dL=np.prod(dL); opL=np.eye(dL); dR=dim[op[1]+1:]; if len(dR)==0:; opR=1; else:; dR=np.prod(dR); opR=np.eye(dR); fop=np.kron(np.kron(opL,op[0]),opR); return(fop). def composit_ham(opl,dim):; assert max([opl[i][1] for i in range(len(opl))])<len(dim),""some operator excit outsite range od lattice""; dm=np.prod(dim); opf=np.zeros([dm,dm],dtype='complex128'); for op in opl:; opf+=_cmpst(op,dim); return opf . """"""; >>> ham1=np.array([[1,2],[3,4]]); >>> ham2=np.array([[5,6],[7,8]]). >>> composit_ham([(ham1,0),(ham2,1)],[2,2]); array([[ 6.+0.j, 6.+0.j, 2.+0.j, 0.+0.j],; [ 7.+0.j, 9.+0.j, 0.+0.j, 2.+0.j],; [ 3.+0.j, 0.+0.j, 9.+0.j, 6.+0.j],; [ 0.+0.j, 3.+0.j, 7.+0.j, 12.+0.j]]); if put 1 in dim list it just like above ; >>> composit_ham([(ham1,0),(ham2,2)],[2,1,2]); array([[ 6.+0.j, 6.+0.j, 2.+0.j, 0.+0.j],; [ 7.+0.j, 9.+0.j, 0.+0.j, 2.+0.j],; [ 3.+0.j, 0.+0.j, 9.+0.j, 6.+0.j],; [ 0.+0.j, 3.+0.j, 7.+0.j, 12.+0.j]]); two Hamiltonian separtated by identity operator; ham1 at position 1(0); identiy operator of dimension 2*2 at position 2(1); ham2 at position 3(2); >>> composit_ham([(ham1,0),(ham2,2)],[2,2,2]); array([[ 6.+0.j, 6.+0.j, 0.+0.j, 0.+0.j, 2.+0.j, 0.+0.j, 0.+0.j,; 0.+0.j],; [ 7.+0.j, 9.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 2.+0.j, 0.+0.j,; 0.+0.j],; [ 0.+0.j, 0.+0.j, 6.+0.j, 6.+0.j, 0.+0.j, 0.+0.j, 2.+0.j,; 0.+0.j],; [ 0.+0.j, 0.+0.j, 7.+0.j, 9.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,; 2.+0.j],; [ 3.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 9.+0.j, 6.+0.j, 0.+0.j,; 0.+0.j],; [ 0.+0.j, 3.+0.j, 0.+0.j, 0.+0.j, 7.+0.j, 12.+0.j, 0.+0.j,; 0.+0.j],; [ ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1412:655,assert,assert,655,https://qutip.org,https://github.com/qutip/qutip/issues/1412,1,['assert'],['assert']
Testability,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/261#issuecomment-64150553:111,log,logging,111,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553,8,['log'],"['logger', 'logging']"
Testability,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:20,test,testing,20,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319,4,['test'],"['test', 'testing', 'tests']"
Testability,"I think that adding support for partial isometries in that way would be quite helpful, but I think it's also worthwhile to get the basic dispatch functionality described here working first. I'll take a stab at that soon and amend this PR with it, make some basic unit tests to ensure that it dispatches correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-57076106:268,test,tests,268,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57076106,1,['test'],['tests']
Testability,"I think that more slower, but more reliable, Travis CI tests, would be a definite benefit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130258998:55,test,tests,55,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130258998,1,['test'],['tests']
Testability,I think that this needs a unit test similar to the mesolve one:. https://github.com/qutip/qutip/blob/d250100307fc6e914f2851f155d03624699a73ad/qutip/tests/test_rhs_reuse.py#L40,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/719#issuecomment-335062355:31,test,test,31,https://qutip.org,https://github.com/qutip/qutip/pull/719#issuecomment-335062355,2,['test'],"['test', 'tests']"
Testability,I think that's a good thing that we've tested that - we need to work out why performance is so bad on mac with Python 3.8.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680004224:39,test,tested,39,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680004224,1,['test'],['tested']
Testability,"I think the answer to why this happens is that there are some commits in the origin/master that conflict with the upstream/master, even though the final state of the origin/master has no conflicts with the upstream/master. ; A solution therefore is to (on the origin/master branch); ```; git rebase upstream/master; ```; skipping any conflicting commits, then; ```; git push --force; ```; Will confirm when I have tested a bit more",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/672#issuecomment-322536438:414,test,tested,414,https://qutip.org,https://github.com/qutip/qutip/issues/672#issuecomment-322536438,1,['test'],['tested']
Testability,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/261#issuecomment-63601461:51,log,logging,51,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461,4,['log'],"['log', 'logger', 'logging']"
Testability,"I think the module should really be `qutip.testing` (or `qutip.test` if the name's already taken), not `qutip.core.data.testing`, if you're going to add one. It's very likely to be the case in the future (if it isn't already) that you'll need additional dependencies to define the tests, and you don't want to force _all_ runtime users to have them to install QuTiP. If you put the package in a separate top-level module, it's _far_ easier to separate out all the code, and have `qutip/__init__.py` not import `qutip.testing`, so things won't break. Also, tests generally need to work with a fully imported version of the module. If we start putting testing infrastructure in the core, we're going to encode a whole lot of cyclical dependencies right away, or end up with `testing` modules scattered all across the codebase, for no real gain. For discovery: that would only happen during test generation, which comes after importing the modules and defining the classes, so you'd still be able to define tolerances and influence how the tests ran. The problem with _not_ having discovery is that it becomes very easy to forget to test a function, and with so much of the machinery automated, it's also easy to forget it when reviewing a PR. That's particularly true once you have external contributors writing these sorts of things - we have it in Qiskit, where people add things to our ""standard equivalence library"", and new contributors and new reviewers don't know where all the different tests are, so our discovery tests have helped catch bugs. That happens even with super experienced team members. I'd argue that code coverage metrics are possibly a better way of detecting missing tests - that fails safe if you add broken code and forget to test it, whereas having to specify the tests explicitly means you can accidentally add broken code to a dispatcher and not know, if you forgot to add the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735:43,test,testing,43,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735,17,['test'],"['test', 'testing', 'tests']"
Testability,"I think the only thing left to do is to modify the coveralls tests so that they run for only one of the Py3.4 tests. Currently, the tests run if the Travis python version is 3.4.. As such, they are currently being run twice.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75476559:61,test,tests,61,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75476559,3,['test'],['tests']
Testability,"I think the test ist faulty. The spin matrices in test_operators.py, to which the output of jmat is compared, are missing the same sign. Should I fix this and prepare a new pull request?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264087183:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264087183,1,['test'],['test']
Testability,"I think there's been some form of merge conflict in `qutip.testing` - for one, it looks like the tests are intended to run twice (once under `pytest` and once under `nose`), and secondly it refers to the name `qset`, which isn't defined.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158:59,test,testing,59,https://qutip.org,https://github.com/qutip/qutip/issues/1158,2,['test'],"['testing', 'tests']"
Testability,"I think this a good idea. I would add: . ``` python; if not isinstance(Q, Qobj):; return False; ```. at the beginning of each test. If you would like to do a pull requests on this go ahead, otherwise I'll do this change soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2#issuecomment-10319087:126,test,test,126,https://qutip.org,https://github.com/qutip/qutip/issues/2#issuecomment-10319087,1,['test'],['test']
Testability,"I think this all looks good. As for the failing test, please see #420. I think that should do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419#issuecomment-178997983:48,test,test,48,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178997983,1,['test'],['test']
Testability,"I think this is a great idea. It makes results of an experiment easily reproducible and there is no need to log literally all data, all we need to keep is the initial seed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/856#issuecomment-426192168:108,log,log,108,https://qutip.org,https://github.com/qutip/qutip/issues/856#issuecomment-426192168,1,['log'],['log']
Testability,I think this is a valuable piece of qutip and we should try to keep it in if possible. Comparing with other non-Markov solvers seems like an interesting idea. But I agree with @Ericgig that if we don't have tests and a note book then it should be moved to legacy.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2152#issuecomment-1591408995:207,test,tests,207,https://qutip.org,https://github.com/qutip/qutip/pull/2152#issuecomment-1591408995,1,['test'],['tests']
Testability,"I think this should fix the merge conflicts, as all of the new tests now pass. Sorry for the hassle!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/332#issuecomment-125953879:63,test,tests,63,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-125953879,1,['test'],['tests']
Testability,I think we do not have very large numbers as output and the log degeneracy formula should work for us. Thanks for the neat suggestion and the benchmark. Let me see how much improvement we get in the construction with this faster degeneracy computation. I am going to merge this and discuss the change in a new PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1550#issuecomment-838309169:60,log,log,60,https://qutip.org,https://github.com/qutip/qutip/pull/1550#issuecomment-838309169,2,"['benchmark', 'log']","['benchmark', 'log']"
Testability,I think we just need to resolve the conflicts in `qutip/tests/test_states.py` and then perhaps we can merge.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-990391024:56,test,tests,56,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-990391024,1,['test'],['tests']
Testability,I think we need some unit tests here verify that the gradient computation is doing what it is supposed to.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/325#issuecomment-78215946:26,test,tests,26,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78215946,1,['test'],['tests']
Testability,"I think we should move the qutip/benchmark from qutip repo to its on repository, say qutip-benchmarks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/159:33,benchmark,benchmark,33,https://qutip.org,https://github.com/qutip/qutip/issues/159,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"I think you are right. According to [this version](https://github.com/qutip/qutip/commit/0d23a5b72e3eb2c9567d8a3918388cf96370438a#diff-b979016620c6998841cf7cefe791ebfe) and [this one](https://github.com/qutip/qutip/commit/97a65a3fee0983ae2d823a4fdf886aa02965ee5b#diff-b979016620c6998841cf7cefe791ebfe), before some of the latest and recent commits, the changes should be ; - `import qutip.settings as qset` ; - set the settings properties before running the tests; - delete the `nose` tests.; ; Would you like to fix it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-575858423:458,test,tests,458,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575858423,2,['test'],['tests']
Testability,I think you can get one running for your fork by simply logging in.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607482278:56,log,logging,56,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607482278,1,['log'],['logging']
Testability,"I tried a fresh conda environment `conda install gcc cython numpy scipy` etc. Still, the tests pass on Travis CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527433833:89,test,tests,89,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433833,1,['test'],['tests']
Testability,"I tried running the same test with pytest and it fails.; ```; ============================= test session starts ==============================; platform darwin -- Python 3.7.1, pytest-4.0.2, py-1.7.0, pluggy-0.8.0; rootdir: /Users/shahnawaz/Dropbox/dev/qutip, inifile:; plugins: remotedata-0.3.1, openfiles-0.3.1, doctestplus-0.2.0, arraydiff-0.3; collected 13 items. test_superop_reps.py ..Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458572211:25,test,test,25,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458572211,2,['test'],['test']
Testability,"I tried running the tests on the local cluster. (Linux, openmpi/4, python 3.10); It hanged on `test_map_pass_error` with `mpi4py.MPI.Exception: MPI_ERR_SPAWN: could not spawn processes`. But running the tests with `mpiexec -n 1 pytest ...` worked fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1912750964:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1912750964,2,['test'],['tests']
Testability,"I tried to use the notebooks of @nathanshammah to test the PR. They have the same import issue as was fixed in this PR yesterday; ```; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); <ipython-input-1-15853f58c5b8> in <module>(); 4 ; 5 from qutip import *; ----> 6 from piqs import *; 7 ; 8 from piqs.cy.dicke import _j_min as j_min. ModuleNotFoundError: No module named 'piqs'; ```; Obviously I could fix this and continue testing. However, as the plan is to merge this, then we will need notebooks in the qutip-notebooks repo, so maybe it would be a good idea to make a PR on that now, with notebooks that will work with this qutip branch.; The first ref in the `piqs_intro` notebook; ```; [1] N. Shammah, S. Ahmed, N. Lambert, S. De Liberato, and F. Nori, to be submitted.; ```; could maybe have an arxiv link or something. Otherwise I am not sure how useful it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361656123:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361656123,2,['test'],"['test', 'testing']"
Testability,I updated the use of Iterable and now there is no warning for it in the tests mentioned in #1003.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1007:72,test,tests,72,https://qutip.org,https://github.com/qutip/qutip/pull/1007,1,['test'],['tests']
Testability,"I want to do a bit more testing and haven't implemented ""steady state"" for the mc correlator yet, but I think it should be in an acceptable form (?) for merging once I check for typos.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/218#issuecomment-54223878:24,test,testing,24,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-54223878,1,['test'],['testing']
Testability,"I want to use parallel.parfor to speed up the calculation, but the parfor function seems not working on windows. I have installed the qutip and other packages. And I have tested my code on linux based python, it works well. So I wonder if anyone can tell me why and how to fix this problem? Thanks.; The following is my test code.; ```python; from qutip import *; import numpy as np; import matplotlib.pyplot as plt; import matplotlib; import time. L = 5; gamma = np.linspace(0, 1, L); Population = np.zeros(L); def evolution(gamma,Omega=1, omega=1):; H = Omega*sigmaz() + omega*sigmax(); result = mesolve(H, basis(2,1), np.linspace(0, np.pi/2/omega, 200), [np.sqrt(gamma)*sigmam()], [sigmaz()]); return result.expect[0][-1]; result = parfor(evolution, gamma,Omega=1.0, omega=1.0)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/849:171,test,tested,171,https://qutip.org,https://github.com/qutip/qutip/issues/849,2,['test'],"['test', 'tested']"
Testability,"I wanted to use them to benchmark some of the results I got with other solvers. ; I think I was able to make it work locally by fiddling with the `Explicit_RungeKutta` class. Would you want me to open a PR for it, if you'd like?. <img width=""1274"" alt=""image"" src=""https://github.com/qutip/qutip/assets/23234279/625df0d7-5c5c-4acb-9946-894ab61919e6"">",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450#issuecomment-2162159107:24,benchmark,benchmark,24,https://qutip.org,https://github.com/qutip/qutip/issues/2450#issuecomment-2162159107,1,['benchmark'],['benchmark']
Testability,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:138,test,tests,138,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565,6,['test'],"['test', 'tests']"
Testability,"I was helping someone with an install on windows 7 yesterday.; We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary. @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423:71,test,testing,71,https://qutip.org,https://github.com/qutip/qutip/issues/423,1,['test'],['testing']
Testability,"I was trying to figure out why tests on #943 and #942 were failing for MacOS and could pin-point it down to the `qutip.superop_reps.to_kraus` function. The test `tests.test_superop_reps.test_ChoiKrausChoi` leads to the same malloc error with the message,; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; Investigating more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:31,test,tests,31,https://qutip.org,https://github.com/qutip/qutip/issues/944,3,['test'],"['test', 'tests']"
Testability,"I went on and applied the changes you suggested, including adding new tests to ensure that the conditions mentioned in the new docstrings are correct. To finish it up, made sure that `average_gate_fidelity` is covered by a new test as well. Please let me know if there's anything else I can add to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/90#issuecomment-37785827:70,test,tests,70,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37785827,2,['test'],"['test', 'tests']"
Testability,I will add a unit test to check for this later tonight.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/492#issuecomment-224659499:18,test,test,18,https://qutip.org,https://github.com/qutip/qutip/pull/492#issuecomment-224659499,1,['test'],['test']
Testability,I will add tests. I changed the status to draft to avoid merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1636#issuecomment-929639158:11,test,tests,11,https://qutip.org,https://github.com/qutip/qutip/pull/1636#issuecomment-929639158,1,['test'],['tests']
Testability,"I will reiterate @BoxiLi suggestion. If you find that tests pass locally, then switch from draft to review ready. You can also set the 'ready for review' label with your group membership permissions. I will take a look over the code now, but will not fully review it until you mark it as ready for such. Would be best if tests were in place before this. Take a look at the codeclimate issues. They don't have to fixed, they are just suggestions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-637475315:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-637475315,2,['test'],['tests']
Testability,I will try something to ensure mkl builds for testing,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875#issuecomment-394723379:46,test,testing,46,https://qutip.org,https://github.com/qutip/qutip/pull/875#issuecomment-394723379,1,['test'],['testing']
Testability,"I will update my contribution as soon as I come back from holidays. Best, Jérôme. -------- Message original --------; Objet : Re: [qutip/qutip] Update steadystate.py (#1275); De : Simon Cross ; À : qutip/qutip ; Cc : NS2 group at LPS ,Mention . @NS2LPS Apologies for the slow reviews. Would you be up for updating this PR and then we can review it properly? It would be good to somehow add tests to these cases, but I'm not sure how easy that is to do. -- ; You are receiving this because you were mentioned.; Reply to this email directly or view it on GitHub:; https://github.com/qutip/qutip/pull/1275#issuecomment-893440155",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-893447309:390,test,tests,390,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-893447309,1,['test'],['tests']
Testability,"I will update this pull request so that it is ready for review, although, I think maybe some changes in the code style will be needed. One thing I would like to mention is that the _noise_direct function seems to yield a more accurate result than the noise_pseudoinv function, this may be due to the selected method (for the case of noise_pseudoinv), the discussion we had at the beginning about not including the low value of the frenquency or some mistake I made testing? In any case I just wanted to point out that even though both functions work, noise_direct gives a more accurate result to the analytical one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2435#issuecomment-2183962093:465,test,testing,465,https://qutip.org,https://github.com/qutip/qutip/pull/2435#issuecomment-2183962093,1,['test'],['testing']
Testability,"I will vote for a deprecation warning being raised for a few versions of QuTiP with a `compile()` function that does nothing. The deprecation warning can briefly explain what changed and how to tackle it (in this case simply not use `.compile()`). It can also raise an error based on QuTiP's version such that our tests warn us about needing to remove it. Even if its a rarely used function and mostly employed internal, I still think that we should deprecate it appropriately as it will help making a smother transition to QuTiP 5.0.0. A HOW TO with some of the most significant porting changes is a also useful but I would prefer if it does not substitute deprecation warnings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115:314,test,tests,314,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115,1,['test'],['tests']
Testability,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:87,log,log,87,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722,6,['log'],"['log', 'logging']"
Testability,"I would be happy to submit a PR for the fix. I forked the repo, added a test for the bug fix, and fixed the bug to pass the test. I just submitted the request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/305#issuecomment-72500045:72,test,test,72,https://qutip.org,https://github.com/qutip/qutip/issues/305#issuecomment-72500045,2,['test'],['test']
Testability,"I would be more keen to keep the internal drift as either single operator (array / Qobj) or a list for when working with time-dependent drift dynamics. This would then mean that methods such as combine_dyn_gen would need to check if the drift is a list or single object.; Two reasons for this:; 1. In the vast majority of cases the drift will be fixed, and in may be confusing for new users as to why it is a list; 2. In cases where users set the drift directly using the dynamics object (like the test that you had to change) this change would not be backwards compatible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396#issuecomment-155855251:498,test,test,498,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855251,1,['test'],['test']
Testability,"I would just leave it the way it is. That way we stay more compatible with; systems where the user may not be able to install newer versions. -P. On Jan 5, 2017 7:02 PM, ""Alexander Pitchford"" <notifications@github.com>; wrote:. > Yes, 4.0.1 has this issue. Hence the main motivation for 4.0.2.; > 4.0.1 only really exists on PyPI right now. Website and conda-forge are; > now 4.0.2. I will be uploading 4.0.2 to PyPI today.; >; > I don't know if 4.0.2 will work with scipy 0.15. It only gets built and; > tested (import qutip) on conda-forge against numpy 1.10 / scipy 0.17 and; > numpy 1.11 / scipy 0.18 as far as I know. Our Travis (full) tests only test; > numpy 1.11 / scipy 0.18.; >; > @nonhermitian <https://github.com/nonhermitian> do you think we should; > bump the requirements up to numpy 1.10 / scipy 0.17?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/616#issuecomment-270812257>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqX4zClITXSfdSbdBOy4pPcz-oZHxks5rPaCsgaJpZM4Lb48Y>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616#issuecomment-270816809:505,test,tested,505,https://qutip.org,https://github.com/qutip/qutip/issues/616#issuecomment-270816809,3,['test'],"['test', 'tested', 'tests']"
Testability,"I would like to draw your attention to this problem once again. I did some testing with steady state for my high dimensional model. The direct method runs out of memory so I was trying all sorts of iterative methods. My conclusion was that the BicgSTAB method is the best for my particular problem. However, the iterative methods are very sensitive to basically everything this is why there are so many different kinds of them. Moreover, the Scipy realisation of these methods is not the most optimal. PyAMG realisation of bicgSTAB worked better for me than the one from scipy. So, please, keep both of the methods in qutip.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20661092:75,test,testing,75,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20661092,1,['test'],['testing']
Testability,"I would rather merge this PR here rather than bundling it with #246 because that is a big PR already and is likely going to take some more time before we merge it. Could you cherry pick the commits that @ajgpitch added to the logging/settings module into this PR? If you don't have time to work on this that's OK - no need to apologize! - I understand that work on open source projects is not anyones main job! If you want to continue this, then take the time you need to get it done. If you feel that you don't have time for it anytime soon then just let me know and I'll continue this PR with some cleanup and fixes and merge it soonish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-63153576:226,log,logging,226,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63153576,1,['log'],['logging']
Testability,"I would verify that the code in question does indeed work when run outside the test franework. If so, then it is likely that the tests need to be moved to pytest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458182998:79,test,test,79,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458182998,2,['test'],"['test', 'tests']"
Testability,"I''d missed some backwards compatibility checking, hence some the tests were failing, this should be fixed now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396#issuecomment-155730486:66,test,tests,66,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155730486,1,['test'],['tests']
Testability,"I'd be vastly surprised if there's a way of permitting a test which passes 99% of the time - on any particular test run how would it know?. I don't remember having seen anything about setting the initial seeds, but relying on a previous test to set a seed isn't a good idea - you'd always have to ensure that no tests were ever added or changed in-between that ever used random state or everything would get lost. We could fix the random seed for any test which uses random methods with a fixture to get around that. I actually think this is a true failure; the default solver `rtol = 1e-6`, but here we're using `rtol=1e-7` as the test, so the test is bugged (it's probably not the only one, and I may have missed some of these in `mcsolve` too). I should change this when I convert `test_mesolve.py`. Also, I clearly didn't read the log properly on that one - I thought it was one of the random errors from before!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303,8,"['log', 'test']","['log', 'test', 'tests']"
Testability,"I'll close this for now, unless anyone wants to discuss it further. I believe `xdist` is more if we were managing distributing testing runs manually on our own test runners. The `skipif` would still be important even with `xdist` to decide which tests should run on which system.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267#issuecomment-809395266:127,test,testing,127,https://qutip.org,https://github.com/qutip/qutip/issues/1267#issuecomment-809395266,3,['test'],"['test', 'testing', 'tests']"
Testability,"I'll have to trust you mostly on actual operation of the code, but it looks like you've covered everything I could see as particular problems. I don't use this part of QuTiP, so I'm really not the best placed person to talk about how natural the APIs seem or anything like that. I'm still a fan of fixing the issues CodeClimate is complaining about because I think the cognitive complexity tests are a semi-decent indicator of maintainability, but at the end of the day, you're the code owner and that's your call. The other seemingly major potential headache is the dependence on that internal `_EvoElement` API in `QobjEvo` - I know for sure that that's going to go to hell in 5.0 - but I get that this PR didn't really cause this, so that's maybe a problem for another time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444#issuecomment-815033004:390,test,tests,390,https://qutip.org,https://github.com/qutip/qutip/pull/1444#issuecomment-815033004,1,['test'],['tests']
Testability,"I'll take a look at the merge. It seems like it might have gone bad. I'll add in some tests once I fix the merge, as well. I'll look into the diag method and try to move everything over to separate; everything as you described. On Wed, Jun 28, 2023, 3:43 PM Eric Giguère ***@***.***> wrote:. > ***@***.**** requested changes on this pull request.; >; > Are you sure there was not a bad merge somewhere?; > Some code is duplicated, seemingly important variable are never used, a; > typo in the import of flimesolve.py stop it from being imported, etc...; >; > Please add tests covering most case and have them passing.; >; > Also the separation of task is not well used. We split the data container,; > ODE integration and the physics, but here they are mixed together...; >; > The quicksolve is the ""diag"" integrator, you don't have to re implement it; > here. You could just set it as the default method since the rhs is always; > constant (but it seems like this is not desired when time_sense != 0).; > ------------------------------; >; > In doc/guide/scripts/floquet_ex3.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245104940>:; >; > > @@ -35,7 +35,6 @@ def noise_spectrum(omega):; > # Alternatively; > psi_t = output.states[idx]; > p_ex[idx] = qutip.expect(qutip.num(2), psi_t); > -; >; > Why did you erase this line?; > ------------------------------; >; > In VERSION; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245585117>:; >; > > @@ -1 +1 @@; > -5.0.0.dev; > +5.0.0a1; >; > The version change when we do a release, not with each PR.; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245591365>:; >; > > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; >; > ⬇️ Suggested change; >; > - G1 = correlation_3op(; > - solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:86,test,tests,86,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['test'],['tests']
Testability,I'll update the notebook and test this more.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1155#issuecomment-578951420:29,test,test,29,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-578951420,1,['test'],['test']
Testability,"I'm (slowly) working on this, and right now I'm writing unit tests. Is there a unit test anywhere for the `_mesolve_func_td` function in the `mesolve` module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384#issuecomment-158777586:61,test,tests,61,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-158777586,2,['test'],"['test', 'tests']"
Testability,"I'm a fan of the CodeClimate complexity tests, but I wouldn't be averse to removing its complaints about ""TODO"" comments - I'm not sure what we really gain from that in this sort of open-source development. In a business where people are working full-time then I imagine it can be worth preventing a merge to finalise some details, but in our very decentralised development, really in some cases (especially in the next major release), we do need to merge in parts of code we know to be imperfect. That said, we probably should make an effort to clear out some of the TODOs and FIXMEs that are in the codebase already. Pushed fix-up changes since last review:; - wrapped the steadystate SciPy linalg functions so they're simplified at the point of call, and unknown keywords in old SciPy versions are just silently ""eaten"" (this is the same behaviour that the file used to have, just formalised a little more).; - added `TODO` in a comment in `qutip.cy.pyxbuilder`; - changed the static class attributes in `test_superoper.py` into a `setup_method` function. *edit*: oh yeah, forgot that there were still errors in some old SciPy bits in the control module as well. I'll push a fix to that before this needs reviewing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305,1,['test'],['tests']
Testability,I'm also glad to be back and contributing to the great project. I have accumulated some more stuff to add to stochastic module (later at some point).; Back to business. Maybe we should just change the default method to 'clenshaw' and then the current tests will test it instead of 'iterative'?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/461#issuecomment-206850888:251,test,tests,251,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206850888,2,['test'],"['test', 'tests']"
Testability,"I'm also using Anaconda on Macbook M1 and ran into 2 errors today when importing qutip. . 1. With the M1 chip, qutip had a problem with hardware detection and as @jakelishman said, commenting lines 48 and 49 on `qutip/hardware_info.py` fixed this error. 2. Then I got the same error message with ""IPYTHON not defined"" and ""'qutip' has no attribute 'settings'."" I thought my conda environment must have been missing the ipython package somehow(?) so I tried `conda install ipython` and importing qutip again and it worked! (I then ran qutip.testing.run() to test out all functions and everything worked perfectly).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240:540,test,testing,540,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240,2,['test'],"['test', 'testing']"
Testability,"I'm asserting that two operators are almost equal, and implementing a __round__ method for Qobj would be useful in this regard.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/982:4,assert,asserting,4,https://qutip.org,https://github.com/qutip/qutip/issues/982,1,['assert'],['asserting']
Testability,"I'm curious if this [expm-vector product](http://eprints.ma.man.ac.uk/1591/) I implemented in scipy would speed up the `qutip.states.coherent(..., method='operator')` function? Maybe this could be checked after the unit tests with TravisCI are sorted out.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/84:220,test,tests,220,https://qutip.org,https://github.com/qutip/qutip/issues/84,1,['test'],['tests']
Testability,"I'm disregarding the fails in tests on Travis CI as this is due to pre-existent conditions due to `smesolve`, not affected here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1095#issuecomment-539493808:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/pull/1095#issuecomment-539493808,1,['test'],['tests']
Testability,"I'm glad that it's useful! We wanted this work to be accessible, so I thought it made sense to contribute the definition. If the current design is acceptable, then I'll go on and finish the test cases and add a corresponding PR to qutip/qutip-notebooks demonstrating the new function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/357#issuecomment-125965058:190,test,test,190,https://qutip.org,https://github.com/qutip/qutip/pull/357#issuecomment-125965058,1,['test'],['test']
Testability,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198569367:137,test,test,137,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367,1,['test'],['test']
Testability,"I'm going to merge these changes into master, so that I can merge master into #2046 and let the tests run one final time there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2047#issuecomment-1346770727:96,test,tests,96,https://qutip.org,https://github.com/qutip/qutip/pull/2047#issuecomment-1346770727,1,['test'],['tests']
Testability,"I'm going to merge this so that tests pass repeatably on master again and so that I can proceed with the 4.7 release, but we should keep #1854 open and address it for QuTiP 5 (if tests don't just pass there already).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1855#issuecomment-1097982571:32,test,tests,32,https://qutip.org,https://github.com/qutip/qutip/pull/1855#issuecomment-1097982571,2,['test'],['tests']
Testability,"I'm happy to go either way on whether to merge this now or later. I'm happy to keep adding to it, but I'm also mindful that I don't want this to turn into another +15000/-15000 PR. I possibly need to look into that test failure a little more - it's temperamental, and I'm not sure if it's something where it's just a case of a too strict tolerance, or if there is an actually numerical precision problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994:215,test,test,215,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994,1,['test'],['test']
Testability,I'm merging this now. All tests are at least now running. The ones related to this are passing.; The errors #872 are not related to this,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394187586:26,test,tests,26,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394187586,1,['test'],['tests']
Testability,"I'm nervous because I haven't been able to work out why the segfaults in 9d67492 appeared, and I haven't been able to reproduce them at all. Running with AddressSanitizer on, I get absolutely no problems on Mac at all, and I set up a quick Linux VM and couldn't catch anything either. I had a real go at getting AddressSanitizer running on Travis on my own repo, but I wasn't successful, so couldn't get it that way either. It seems to have disappeared for now, so it _could_ just have been a one-off mess up in the environment, but that's not usually how computers work. Let's just keep an eye on it, and let me know if anyone can find a repro for it. Also note the coverage is back up to the _more_ reasonable (but still way too low) 73% now all the tests are enabled... Other than that, all the dispatchers are now in, but not yet used. This PR is ready for review, and I'll open a new one to make the switch over, because it'll involve changing a large number of files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-676520794:752,test,tests,752,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-676520794,1,['test'],['tests']
Testability,"I'm not at all a fan of making tests part of the public interface like this. It's something that we make absolutely no stability guarantees about, and coupling downstream packages to our own tests just sounds like a recipe for disaster - if we find a bug in main QuTiP and need to change tests or add methods (which we should be able to do completely freely), we're going to inject a ton of extra code into downstream packages, and may completely break them. To be honest, I'm not even wild about how we distribute our tests as part of the module code at all, but that's what we've got. It _could_ be ok if you import the test case base, and redefine your tests from there. We still don't make any stability guarantees about that, but it's conceivable that we could (though of course, the problem of ""what if we need to add methods"" persists). That would also solve your problems about saying you can't import individual tests. You can import individual tests anyway, you just need to rename them to things like `_TestAdd`, or use one of the pytest hooks in your local `conftest.py` to reject tests whose `__module__` isn't your local module, or do one of the other methods of filtering.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355:31,test,tests,31,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355,9,['test'],"['test', 'tests']"
Testability,I'm not entirely certain how to fix it inside setup.py. I use Debian packaging tools and can add commands to debian/rules to delete these files after running the setup.py commands (clean and test). But I'm not sure how to get setup.py to clean up after itself.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987#issuecomment-489409627:191,test,test,191,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-489409627,1,['test'],['test']
Testability,"I'm not sure about that, for two reasons. First, `super_tensor` doesn't implement a tensor product but a useful combination of reshuffling and the tensor product that, so calling it `tensor` alone may result in confusion when trying to match to the mathematics of papers and lecture notes which use the tensor product more literally. Second, it's a pretty significant break with previous behavior, such that if someone has implemented reshuffling themselves, that would then stop working if `tensor()` dispatches based on `is_super`. As an alternative, maybe some new function with a name like `composite()` that calls `tensor()` or `super_tensor()` respectively? That way, you're referring to the logical act of compositing two systems together, rather than to the mathematics behind it, and could leave code invariant when changing from unitaries to CPTP maps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-57070065:698,log,logical,698,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57070065,1,['log'],['logical']
Testability,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:858,test,test,858,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955,1,['test'],['test']
Testability,"I'm not sure the `Qobj permute` failing test is related, by the way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571303251:40,test,test,40,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571303251,1,['test'],['test']
Testability,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:52,test,tests,52,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885,15,"['log', 'test']","['log', 'test', 'testing', 'tests']"
Testability,"I'm sorry I don't have a huge amount of time at the moment, but just to add an extra point (that it looks like I didn't think about before): if we _do_ add this, then any method that requires an unconditional `import qutip` in downstream packages probably isn't a suitable solution - `import qutip` already takes far too long (though a lot of this is importing various parts of `scipy`, which another library might do on our behalf), and it means that they'd have to do their own import checking to handle optional dependencies. In that sense, (ab)using Python's duck-typing with a magic method might be the best way to break the dependency/import problem. I'm definitely still against implicit conversion to `Qobj` in pretty much any situation - I can imagine we could define a safe, fairly forward-compatible interface for letting people do `qutip.Qobj(x)`, but as it stands, that's the limit that I'd want the interface to be used for. I particularly am really against the idea of implicit conversion. I don't see an advantage to allowing QuTiP functions to act implicitly on other objects; it means our own functions are slower (because we have to explicitly test inputs on _everything_), and it restricts us more from improving `Qobj`'s internals, because we have to maintain compatibility with the interface. We'd never really be able to output anything _other_ than a `Qobj` without this, so there's no reason not to just have the user convert the inputs to `Qobj` explicitly themselves - that isolates the efficiency penalty so you only pay it if you need it, and it'll likely be clearer in the end anyway, because explicit is better for following the logic than implicit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301:1163,test,test,1163,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301,2,"['log', 'test']","['logic', 'test']"
Testability,"I'm trying to run qutip's test suite locally on my Macbook. From a clean checkout of the `master` branch, I'm doing the following:. ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y blas=*=openblas numpy scipy nose cython ipython pytest; mkdir qutip_testing; cd qutip_testing; rm -rf /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip*; rm -rf ../build ../dist/ ../qutip.egg-info/; (cd ../ && /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python setup.py install); /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m qutip.about; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ~~~. The resulting output is:; ~~~; ...; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+d377c997; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: None; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+; d377c997-py3.7-macosx-10.9-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated u",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:26,test,test,26,https://qutip.org,https://github.com/qutip/qutip/issues/1093,1,['test'],['test']
Testability,"I'm using. My configuration information is as follows:. Software	Version; QuTiP	4.5.2; Numpy	1.18.5; SciPy	1.5.0; matplotlib	3.2.2; Cython	0.29.21; Number of CPUs	6; BLAS Info	INTEL MKL; IPython	7.16.1; Python	3.8.3 (default, Jul 2 2020, 11:26:31) [Clang 10.0.0 ]; OS	posix [darwin]; Fri Sep 18 02:42:59 2020 MSK. For Mac OS: FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'.\. When I try to generate a circuit diagram as follows:. %matplotlib inline; from IPython.display import Image; from numpy import pi; import numpy as np; from qutip import *; from qutip.qip.operations import *; from qutip.qip.circuit import QubitCircuit, Gate. cphase(pi/2); q = QubitCircuit(2, reverse_states=False); q.add_gate(""CSIGN"", controls=[0], targets=[1]); q.png. Log Error:. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); <ipython-input-14-a760fe8d2360> in <module>; 1 q = QubitCircuit(2, reverse_states=False); 2 q.add_gate(""CSIGN"", controls=[0], targets=[1]); ----> 3 q.png. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in png(self); 1122 def png(self):; 1123 from IPython.display import Image; -> 1124 return Image(self._repr_png_(), embed=True); 1125 ; 1126 @property. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in _repr_png_(self); 1114 ; 1115 def _repr_png_(self):; -> 1116 return _latex_compile(self.latex_code(), format=""png""); 1117 ; 1118 def _repr_svg_(self):. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; 61 filename)); ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; 63 result = f.read(); 64 else:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. How do I fix this error on Mac?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-694558061:767,Log,Log,767,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-694558061,1,['Log'],['Log']
Testability,"I'm very surprised to see that there is a failing test on qutip.qip, which is pure python and is unlikely to be platform dependent. I have a guess that this one may have something to do with pytest parameterization. I had a problem with that on Mac OS (not M1) before, which I still don't fully understand and I left a comment back then:; https://github.com/qutip/qutip/blob/3ff3f42d2cd950c99af8936b12d9221ed79de5e3/qutip/tests/test_scheduler.py#L92-L94; If I split the test and run them (`test_scheduling_gates2` and `test_scheduling_gates3`) one by one, it is fine. But if I use pytest parameterization to initialize several of them, it fails. And now this time it happens at exactly the same place. If you would like to, you can copy that failing test and run it (without using pytest parameterization but giving the input explicitly) in a Python console. If it works well, then my guess should be right. But it doesn't apply to all other failing tests I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007367078:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007367078,5,['test'],"['test', 'tests']"
Testability,"I'm wondering whether setting `auto_tidyup` per data type is a good idea? One expects the mathematical operations performed by different data backends to give the same results but setting `auto_tidyup` to `[""CSR""]` by default will break that assumption quite badly. For example, matrices might become singular when sparse and not when dense. There is also a danger of making some benchmarks artificially fast. If we're going to compare backends, we should probably look at both backends with tidyup on or off. Is there a reason that tidyup cannot just be specialized for the new backends that need it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-881301573:380,benchmark,benchmarks,380,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-881301573,1,['benchmark'],['benchmarks']
Testability,"I've been playing around with larger systems recently; when I started out ptrace had a memory issue and couldn't handle what I was doing, so I had written a home-made version to do it. Recently I ended up doing the ptrace with the fixed built-in function and I found it to be much slower. I did some testing with my new function. At least on the machine I'm running on, with 9+ qubits it's about 10x faster for calculating a partial trace on a density matrix. If you're starting out with a ket, you can go even faster, an additional 5x improvement: (test code below); ```; Running time (ms/trace); 2 3 4 5 6 7 8 9 10 qubits; ptrace (dm) 0.4 0.3 0.3 0.3 0.6 1.9 6.6 33.4 137.9; new func (dm) 0.5 0.4 0.4 0.4 0.5 0.7 1.0 2.8 13.1 ; ptrace (ket) 0.6 0.5 0.5 0.5 0.9 2.7 8.5 37.2 167.7; new func (ket) 0.5 0.4 0.4 0.4 0.5 0.6 0.9 1.0 3.2 ; sum((rho-rho).norm()); dm 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; ket 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; ```. My new version is pretty simple, using numpy's built-in ndarray routines. I've looked at the code for ptrace and it's a bit opaque to me; at the moment I don't feel quite up to modifying it, so I'm just putting up the code I've used instead of doing a pull request. My new function is here:; ```; def ptracealt(rho,qkeep) :; rd = rho.dims[0]; nd = len(rd); qkeep = list(sort(qkeep)); dkeep = (np.array(rd)[qkeep]).tolist(); qtrace = list(set(np.arange(nd))-set(qkeep)); dtrace = (np.array(rd)[qtrace]).tolist(); if isket(rho) :; vmat = (rho.full(); .reshape(rd); .transpose(qkeep+qtrace); .reshape([prod(dkeep),prod(dtrace)])); rhomat = vmat.dot(vmat.conj().T); else :; rhomat = np.trace(rho.full(); .reshape(rd+rd); .transpose(qtrace+[nd+q for q in qtrace]+qkeep+[nd+q for q in qkeep]); .reshape([prod(dtrace),prod(dtrace),prod(dkeep),prod(dkeep)])); return Qobj(rhomat,dims=[dkeep, dkeep]); ```; and the test code here: ; ```; Nqmax=10; ntest = 100; trdiff = np.zeros([2,Nqmax-1]); ttr = np.zeros([4,Nqmax-1]); for nd in range(2,Nqmax+1) :; r0 = [ rand_d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1076:300,test,testing,300,https://qutip.org,https://github.com/qutip/qutip/issues/1076,2,['test'],"['test', 'testing']"
Testability,"I've been thinking about how this interacts with our build and test infrastructure, and I'm writing some of those thoughts here partly for myself:. - We currently build with oldest-supported-numpy, and we want to keep that because which is the earliest supported numpy varies by Python version and operating system and changes over time, so it's good if someone else worries about that for us. - We require for installation currently numpy >= 1.16.6 and that is probably what we want to update to match the NEP. There is a question here of whether we should specify our minimum supported numpy in ""install_requires"" in ""setup.cfg"" or not. - The majority of our test matrix should *build* qutip with oldest-supported-numpy to match what we distribute. - We should include at least one test run for the oldest numpy we require (i.e. oldest NEP) and one for the most recent (i.e. latest numpy). . - We should include at least one test run for the oldest Python we support and one for the newest. - We should include at least one test run for the oldest SciPy we support and one for the newest. - The NEP doesn't say anything about SciPy, but I propose we select the oldest SciPy that supports our oldest NEP numpy. And as Asier suggested, I think it would be good to write this all down. The test matrix requirements could just be a big comment in the GitHub action file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182:63,test,test,63,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182,6,['test'],['test']
Testability,I've created a PR (#229) for fixing these issues. This problem seems to affect many parts of the qutip code so through review and testing seems necessary.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/228#issuecomment-55131074:130,test,testing,130,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55131074,1,['test'],['testing']
Testability,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44613285:22,benchmark,benchmarks,22,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285,1,['benchmark'],['benchmarks']
Testability,"I've done some tests today. It looks very good but there are two Python3 issues that needs to be sorted out before merging (see inline comments). Otherwise, all good to go! Very nice work on this!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-64313675:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-64313675,1,['test'],['tests']
Testability,"I've found `pytest` to be extremely nice to work with. One advantage is that `pytest` will also pick up and run `nose` tests, so there is no need to rewrite all of the existing tests. At the same time, new tests will be easier to write, as `pytest` has much less boilerplate code than `nose`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-488824031:119,test,tests,119,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-488824031,3,['test'],['tests']
Testability,"I've had good luck using the mingw package for 64-bit Anaconda, which installs the 64-bit version of mingw. I've detailed this in qutip/qutip-doc#22, but I haven't had the opportunity to test those instructions on a wide range of Windows systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-146571326:187,test,test,187,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-146571326,1,['test'],['test']
Testability,"I've just made #1574 to move our testing to Travis. This will cause a merge conflict in `setup.py` for you when it's merged, but I think that will be the only conflict - you should be able to rebase on top cleanly. The reason for the conflict is because the ""new"" (`master`) `setup.py` discovers all the Cython modules to be compiled, and doesn't need to have them specified, so you shouldn't actually need to make any changes to it to have it work correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-861615917:33,test,testing,33,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-861615917,1,['test'],['testing']
Testability,"I've just merged a change to `master` that causes a couple of minor merge conflicts with this. There's no ""real"" conflict - it's just that the `todense` calls got replaced with `toarray`, so it'll hopefully be easy to fix up. No functionality that you're touching changed in any way. Any tests you're writing will now need to make sure they're not using `todense` though, or they'll fail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-827165494:288,test,tests,288,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-827165494,1,['test'],['tests']
Testability,"I've just pushed a couple of commits to fix up a little bit of the formatting (it was the squashed lines I meant, rather than the particular level of indent or location of the keyword `or`) and to slightly fix the tolerance of the eigenvalue test. The individual uncertainty in any eigenvalue is allowed to be ~1e-12, so when you sum them all up to compare them, you have to propagrate the uncertainty through. Don't worry about the random test failure you got in a pickle test one time - that wasn't your fault and we know about it and have fixed it for the next major release of QuTiP already. Also don't worry about the speed of the CI tests. You can't reliably benchmark by comparing CI runs because you never know what else was running on the physical hardware at the same time. Travis are ramping down the amount of processing power available to us while they're transition business model. I'll be moving our testing infrastructure elsewhere when I've got a bit more time to sort it out, and have decided what we actually want/need/can get. In the mean time, we just live with the occasional test failure if a Mac Xcode12 machine is overloaded when we get to it. We can rerun them if we need to; it's not worth compromising on our test coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883:242,test,test,242,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883,8,"['benchmark', 'test']","['benchmark', 'test', 'testing', 'tests']"
Testability,"I've just pushed a couple of commits to fix up some minor remaining issues (a typo in a referenced GitHub issue and resetting the dnorm sparsity default to match the previous behaviour). Other than that, I'm happy to accept and merge this after the tests have passed again. Thank you very much for tackling this - `dnorm` has often been a problem child, so it's really good that you've taken this on and found a seemingly solid solution to this particular issue!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1463#issuecomment-808812352:249,test,tests,249,https://qutip.org,https://github.com/qutip/qutip/pull/1463#issuecomment-808812352,1,['test'],['tests']
Testability,"I've just pushed a little change to correct some minor points of style in `random_objects.py` (that weren't your fault - they were there before), and to correct the docstring to say that only `N=None` triggers the deduction, not `N=0`. (I also just finished the conversion of the tests into a parametrised pytest style - I'm trying to keep get these gradually updated as we look at the files, but I didn't want to ask you to do a _whole_ bunch more work, when you've already done a lot to get this ready, thanks!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733:280,test,tests,280,https://qutip.org,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733,1,['test'],['tests']
Testability,"I've just pushed an extra commit purely to keep CodeClimate happy - I had to touch a line in a logic block that CodeClimate already didn't like, so it moaned that I hadn't fixed it. This just separates out the logic to make it a bit easier to read. As a side-effect, it allows iterable type to be used inside the time-dependent object list of `QobjEvo` (only - doesn't affect anywhere that doesn't use `QobjEvo`), so; ```python; qutip.QobjEvo([qutip.sigmax(), (qutip.sigmay(), '1')]); ```; is now a valid specifier (note the tuple in the list).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1561#issuecomment-849750278:95,log,logic,95,https://qutip.org,https://github.com/qutip/qutip/pull/1561#issuecomment-849750278,2,['log'],['logic']
Testability,"I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649:97,test,tests,97,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649,2,['test'],"['test', 'tests']"
Testability,I've made a very rough attempt at a minimal fix for this issue an another bug I found in #1588. I've leaving a bigger rework of propagators for the QuTiP version 5 branch. @KosukeMizuno @nwlambert @jakelishman -- a review of #1588 and suggestions for better test cases would be appreciated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-869862680:258,test,test,258,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-869862680,1,['test'],['test']
Testability,I've made the changes. Now other libraries won't have to change anything in `qutip.about`.; I'll add a test in `qutip_qip` too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870#issuecomment-1101613152:103,test,test,103,https://qutip.org,https://github.com/qutip/qutip/pull/1870#issuecomment-1101613152,1,['test'],['test']
Testability,I've marked this for inclusion in QuTiP 4.7.1. Should we test on cython 0.29.30 or leave our testing as is for now?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1895#issuecomment-1131688317:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/1895#issuecomment-1131688317,2,['test'],"['test', 'testing']"
Testability,"I've merged #1754 so hopefully the master branch works on the Apple M1 machines now. Please give it a try and let us know if anything else is broken. P.S. In particular, it would be good to know if the test suite passes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-1006748420:202,test,test,202,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-1006748420,1,['test'],['test']
Testability,"I've moved this to the 5.0 milestone. I'm considering migrating QuTiP 5 to https://scientific-python.org/specs/spec-0001/, but regardless of how we want to address imports, QuTiP 5 is the time to do it. The QuTiP 4 and 5 imports were made quite a bit faster by fixing how we set up loggers (or removing them).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-1427874952:282,log,loggers,282,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-1427874952,1,['log'],['loggers']
Testability,"I've now added more tests based on checking for agreement with the [QuantumUtils for MATLAB](https://github.com/CoryGroup/quantum-utils-matlab) library, since I'm familiar with that one, and as it has been tested for agreement with other implementations as well. I've written up the test cases in [this notebook](http://nbviewer.jupyter.org/gist/cgranade/40a770fba71fc58cb080).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-197731718:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197731718,3,['test'],"['test', 'tested', 'tests']"
Testability,I've opened #1855 to disable the mcsolve tests on Windows for now. I intend to leave this issue open until after 4.7 is released and to see what happens with the mcsolve in QuTiP 5.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1097936583:41,test,tests,41,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1097936583,1,['test'],['tests']
Testability,"I've opened up #1825 which has just the test updates from this PR (as @Ericgig suggsted). @MrRobot2211 I'm going to close this PR, but once @Ericgig has finished the new dims support PR, I think you could revisit adding this to dev.major -- i.e. QuTiP 5 -- if you are up for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-1061733545:40,test,test,40,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-1061733545,1,['test'],['test']
Testability,I've reimplemented this in #1802 rather than attempting to resolve conflicts in this PR and added tests there.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-1034827718:98,test,tests,98,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-1034827718,1,['test'],['tests']
Testability,"I've sent a PR #1161 that fixes this, but a bigger worry is why this wasn't caught on Travis on other commits? I'm not familiar with the CI system, but at a cursory glance it looks like it just tests that QuTiP builds, and not that the tests succeed. Is that intentional?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-575906709:194,test,tests,194,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575906709,2,['test'],['tests']
Testability,I've tested that PR and as far as I could see it didn't solve the problem. But maybe I did something wrong.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121#issuecomment-63223907:5,test,tested,5,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63223907,1,['test'],['tested']
Testability,ILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H FAILED [ 97%]; qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str FAILED [100%]. ======================================================================================================================================== FAILURES ========================================================================================================================================; ___________________________________________________________________,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:7407,test,tests,7407,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:924,log,logic,924,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473,1,['log'],['logic']
Testability,"If it's something we want to support, we'll need a bit of a rewrite of the data-layer testing infrastructure, but nothing too major. I'd be in favour of a bit of a larger restructure:; - rearrange the repo root to have `/src/qutip` and `/test/qutip` instead of `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:86,test,testing,86,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,8,['test'],"['test', 'testing', 'tests']"
Testability,"If the initial state was found to be of type 'oper', no further testing was done in initialisation of mesolve on the dimensions. For example, if a user incorrectly created a density matrix, such as by doing; ```python; tensor(basis(20, 0), qeye(20)/20); ```; (presumably intending `basis(20, 0).proj()` or similar), it would have a type of 'oper' inside Qobj, and mesolve would recognise it as a ""proper"" density matrix, even though the shape was actually incorrect. Such an object would get passed down into the C layer, which does no shape checking, without having its shape explicitly tested, and eventually could cause a segfault in the matrix multiplication routine. The correct check in this setup is to test the shapes when passed into `mesolve`, if this is possible. If the Hamiltonian/Liouvillian is generated by a Python callable, we have to test every time the time-dependence function is called. A user could make a pathalogical function that changes its dimensions on different times, and we cannot allow a segfault. Fix qutip/qutip#1456",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1459:64,test,testing,64,https://qutip.org,https://github.com/qutip/qutip/pull/1459,4,['test'],"['test', 'tested', 'testing']"
Testability,"If the tests pass with xcode12 we should activate it on `master`. But if it breaks them, we should find a solution for `dev.major` but let it go for v4. Having windows test would help a lot, but if mac change a lot between versions, maybe go with 2 linux, 2 mac, 1 windows. ; We can have python 3.6 on mac or remove it. No cython should be run on windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679988510:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679988510,2,['test'],"['test', 'tests']"
Testability,If there are no comments on this the I will merge when tests pass,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/886#issuecomment-402698283:55,test,tests,55,https://qutip.org,https://github.com/qutip/qutip/pull/886#issuecomment-402698283,1,['test'],['tests']
Testability,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207494345:272,test,test,272,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345,3,['test'],"['test', 'tests']"
Testability,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/233#issuecomment-56176673:863,test,testing,863,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673,2,['test'],"['testing', 'tests']"
Testability,"If we moved normalization into the solvers, then we wouldn't need the preprocessors. The copy logic for processors could be kept so that the state is only copied by the results if the processors require it, but we'd then need the solver to tell the result whether it had already copied the state. We'd also need to make sure that the normalization logic in the solver was re-usable and override-able. The _post_init() would still be useful for processing options (e.g. the HEOMResult already does that to process the ado_return option).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1142321531:94,log,logic,94,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1142321531,2,['log'],['logic']
Testability,"If you are happy to make the changes, then I will do a functional test using the notebooks. Could you link the PR for that here, just for completeness.; Then I think we will be ready.; Great work!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-458110228:66,test,test,66,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-458110228,1,['test'],['test']
Testability,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:826,log,logs,826,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875,2,"['log', 'test']","['logs', 'tests']"
Testability,If you fix the issue with globalphase that I pointed out above you can add back the test `testCNOTtoISWAP` and it passes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45196887:84,test,test,84,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45196887,2,['test'],"['test', 'testCNOTtoISWAP']"
Testability,"If you're about to publish, can you just wait and merge #1312 in too, assuming its tests pass?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1310#issuecomment-655016356:83,test,tests,83,https://qutip.org,https://github.com/qutip/qutip/pull/1310#issuecomment-655016356,1,['test'],['tests']
Testability,"If; ```python; qutip.testing.run(); ```; was called twice in the same Python session, then cases where a consumable iterator (such as `itertools.permutations` or `itertools.chain`) was used in the test parametrisation would fail on subsequent runs. This is because the iterator is consumed when the module is loaded, and cannot be re-run after. This was not caught in CI because naturally CI only runs the testing suite once in a session.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1430:21,test,testing,21,https://qutip.org,https://github.com/qutip/qutip/pull/1430,3,['test'],"['test', 'testing']"
Testability,Ignore deprecation warnings from pxyimport in tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2287:46,test,tests,46,https://qutip.org,https://github.com/qutip/qutip/pull/2287,1,['test'],['tests']
Testability,Ignore deprecationg warnings from SciPy 1.8.0 scipy.sparse.X imports in CI tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1797:75,test,tests,75,https://qutip.org,https://github.com/qutip/qutip/pull/1797,1,['test'],['tests']
Testability,Ignore dnorm tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/881:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/pull/881,1,['test'],['tests']
Testability,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:569,log,logic,569,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793,2,['log'],"['log', 'logic']"
Testability,Implement and test new version of process fidelity,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1708:14,test,test,14,https://qutip.org,https://github.com/qutip/qutip/pull/1708,1,['test'],['test']
Testability,Implement and test process fidelity,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1712:14,test,test,14,https://qutip.org,https://github.com/qutip/qutip/pull/1712,1,['test'],['test']
Testability,"Implements the changes mentioned in #1203. The `qutip.graph` functions are pure mathematical functions which are beyond the purview of the package. Most of them have already been merged into `scipy.sparse.csgraph`, so we now move to using those and mark the functions as deprecated. Only two functions are actually used, and they're not even currently tested. `weighted_bipartite_matching` is not present in `scipy`, but is still marked as deprecated because we can move it into being an internal-only function, or simply remove the code that depends on it since those paths are not tested. This will allow the removal of a good amount of Cython code, and simplify maintenance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1206:352,test,tested,352,https://qutip.org,https://github.com/qutip/qutip/pull/1206,2,['test'],['tested']
Testability,Improve coverage of states and operators tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1578:41,test,tests,41,https://qutip.org,https://github.com/qutip/qutip/pull/1578,1,['test'],['tests']
Testability,Improve mcsolve's `test_super_H` test tolerance.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2344:33,test,test,33,https://qutip.org,https://github.com/qutip/qutip/pull/2344,1,['test'],['test']
Testability,Improved error handling in stats and optimconfig and changes to test out files:,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/301:64,test,test,64,https://qutip.org,https://github.com/qutip/qutip/pull/301,1,['test'],['test']
Testability,"In #1332 there is a huge drop in reported test coverage by Coveralls. This is because large tracts of the most-tested Python files were either severely reduced in length, or converted to Cython files, and it seems that Coveralls does not correctly handle Cython; it reports the existence of a `x.py` file for every `x.pyx` file that exists, with the `.py` file having 7 lines, all of which are apparently untested. The new data-layer types _are_ tested albeit not as completely as they will be once they're finished, but Coveralls has reported a huge drop in coverage. I don't know if any coverage estimators exist for Cython (I would expect not due to their compiled nature), but it's perhaps something we should consider. Also, Coveralls counts the test files as part of its coverage indicator. By my rough count, there are 42,223 SLOC in `qutip` (i.e. excluding comments and whitespace but unfortunately including docstrings), of which 11,259 are in `qutip/tests`. Aside from a couple of skipped tests, 100% of the lines in `qutip/tests` will be run, so if we produce a modified coverage report, having 61% of the SLOC covered in _all_ of `qutip` is equivalent to; ```python; >>> (0.61*42_223 - 1.00*11_259) / (42_223 - 11_259); 0.4681898; ```; **46.8% true coverage**. We probably could really do with a concerted effort to add more tests of all the little nuances of the code.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1339:42,test,test,42,https://qutip.org,https://github.com/qutip/qutip/issues/1339,8,['test'],"['test', 'tested', 'tests']"
Testability,"In #1339 I pointed out that the test files were being incorrectly counted in the coverage statistics when running on Travis. This transpired to be because `coverage.py` wasn't able to find our `.coveragerc` file correctly when `pytest` was called in the manner it is on Travis. This PR then does a couple of things:; 1. correctly locates the `.coveragerc` file; 2. excludes the Cython bootstrapping code from being part of the coverage; 3. correctly locates the pytest configuration file `pytest.ini` (although now we have a `pyproject.toml`, we could move that configuration there); 4. completely reorganises `.travis.yml` to remove dead configs, properly share common setups, and generally make it a bit easier to read and see what's going on; 5. fixes file reporting in Coveralls (look at the ""tree"" tab in the Coveralls web report compared to the current `master`); you can now click on the files and get proper line-by-line detail on what was covered and what wasn't, e.g. [here's the report for `mcsolve.py`](https://coveralls.io/builds/32982136/source?filename=qutip/mcsolve.py). We _don't_ enable Cython line-tracing and coverage analysis. This is actually [quite easily possible](https://cython.readthedocs.io/en/latest/src/tutorial/profiling_tutorial.html#enabling-coverage-analysis), but enabling full tracing including on `nogil` functions absolutely tanks performance to the degree where the coverage Travis run would take well in excess of two hours to complete (I think Travis actually just kills things that run longer than 2 hours). I might return to the Cython elements to see how much of them when _can_ reasonably do coverage analysis on. My prediction about actual test coverage dropping once the test files are correctly omitted, which I mentioned in #1339, came true though not _quite_ as cataclysmically (`coverage.py` uses statements, not SLOC as its metric); coverage drops from ~71% to ~63%. Technically the true percentage is higher because the Cython code is generally ver",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347:32,test,test,32,https://qutip.org,https://github.com/qutip/qutip/pull/1347,1,['test'],['test']
Testability,"In `brtools`'s tests, we could check that the results `eigenvector` are mathematically right, without matching `scipy`'s result. Should be quite simple and we would more resilient to changes in scipy. . Did anybody check if it solves the segfault issues on Mac yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632,1,['test'],['tests']
Testability,"In `test_interpolate`, `qzero` was used as `mcsolve`'s collapse operator. Due to numerical error in the interpolation method, `mcsolve` can detect a collapse, but a collapse for a null operator cause a a division by zero. This sometime made our tests fails. By changing the collapse operator to `qeye`, the evolution, thus the test is unaffected, but it no longer randomly fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1645:245,test,tests,245,https://qutip.org,https://github.com/qutip/qutip/pull/1645,2,['test'],"['test', 'tests']"
Testability,In addition one could also use [Hypothesis](https://hypothesis.works/). It has tools to directly [test](https://hypothesis.readthedocs.io/en/latest/numpy.html) numpy arrays and find out edge cases which fail.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-502374404:98,test,test,98,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-502374404,1,['test'],['test']
Testability,"In any case, these tests still fail with HEAD on the qutip-4.7.X branch ([7a883d3](https://github.com/qutip/qutip/commit/7a883d3a4b0cbf10a5491c2b576f1b9ed85896fa))",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892805618:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892805618,1,['test'],['tests']
Testability,"In certain cases in matrices containing values smaller than the tolerance for Hermicity, a matrix can be considered Hermitian even if its transpose does not have the same sparsity pattern as itself. The previous version of this function would give false negatives in these circumstances, whereas now we fall back on the more computationally and memory intensive version of constructing the transpose completely, and comparing element-wise. We offset some of this slowdown by optimising the floating-point comparisons to avoid calls to `sqrt` (via `abs`), and by removing a redundant test of the sparsity pattern in the inner loop. Fixes #1350 for the `master` branch, but still to do for `dev.major`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1352:583,test,test,583,https://qutip.org,https://github.com/qutip/qutip/pull/1352,1,['test'],['test']
Testability,"In certain circumstances, `zcsr_isherm` can give a `False` negative. This is usually masked by the `auto_tidyup` option being turned on. Reproduce:; ```python; >>> import numpy as np; >>> import scipy.sparse; >>> import qutip; >>> x = scipy.sparse.csr_matrix(np.array([[1, 1e-15j], [0, 1]])); >>> bool(qutip.cy.spmath.zcsr_isherm(x, 1e-12)); False; ```; Up to the tolerance specified (`1e-12`), the given matrix _is_ Hermitian, so it should return `True`. This happens when a small non-zero value (lower than the tolerance) is compared to a zero. This is because the structure test in `zcsr_isherm` assumes that for Hermicity to hold, there _must_ always be an explicitly stored corresponding element for each entry, however clearly this isn't always the case. It hasn't appeared before because we always have `auto_tidyup` turned on with a sufficiently large tolerance that these values would be removed by almost all operations which could have introduced this disparity (mostly matrix multiplication). (I'll fix this on both the `master` branch and on `dev.major`, this is just for posterity)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1350:577,test,test,577,https://qutip.org,https://github.com/qutip/qutip/issues/1350,1,['test'],['test']
Testability,"In development version 4.4: . - For Python 3.6, when running `qutip.testing.run()`. ```; uTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.6.8; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```; I obtain an error at ; ```; Propagator: steady state ... Segmentation fault: 11; ```. - For Python 3.7 with ; ```; QuTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/py37/lib/python3.7/site-packages/qutip-4.4.0.dev0+0bf3e05e-py3.7-macosx-10.7-x86_64.egg/qutip; ```; the error occurs at . ```; Metrics: Check avg gate fidelities for random ... python(42424,0x7fffa34a8380) malloc: *** error for object 0x7fc74f258880: incorrect checksum for freed object - object was probably modified after being freed.; *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-482116179:68,test,testing,68,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-482116179,1,['test'],['testing']
Testability,"In general in pytest we use the bare keyword `assert` for almost everything. All the functions in `np.testing` are from the ""before times"", when test tooling wasn't as good as it is nowadays - they were a big improvement on available warning messages back before 2015. Nowadays, though, `pytest` does introspection on assertion failures, so it has even better message reporting than the `np.testing` functions, and it lets you write much clearer code. For example, `assert_equal(x, y)` is much better spelled in pytest as `assert x == y`, because it's much faster to read and pytest does better error reporting for it. Similarly, testing for exceptions is better with; ```python; with pytest.raises(ValueError):; call_that_raises(1, ""hello, world""); ```; as opposed to the numpy form `np.testing.assert_raises(ValueError, call_that_raises, 1, ""hello, world"")` - the pytest one is much easier to read, and the error message is better. The only numpy one we still use is `np.testing.assert_allclose` when we're comparing several numpy arrays. That's just because `pytest` doesn't have a good function that's aware of multidimensional arrays (at least not one that I know). This file still has a load of old numpy testing code in it (e.g. `np.testing.assert_equal`) because it was written quite a long time ago, when that was the recommended way of doing things. We're changing over slowly, so we can take advantage of all the nice features of pytest. In this case, I changed `np.testing.assert_allclose(x, y, atol=tol)` to `assert abs(x - y) < tol`. I removed `np.testing.assert_allclose`, because that gives the mistaken impression that we're comparing arrays (we're not, we're comparing two scalars). I could have changed it to `assert x == pytest.approx(y, tol=tol)`, except in this case the test file hasn't been converted to `pytest` style yet, and I wanted to keep the total change of this PR as small as possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671:46,assert,assert,46,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671,16,"['assert', 'test']","['assert', 'assertion', 'test', 'testing']"
Testability,"In general the biggest thing you should consider is readability, and to be fair, that's a little subjective. You're welcome to comment on my PR if you think I've done anything that's unreadable. You can scope fixtures at whatever level is appropriate. In this particular case, I scoped the `dimension` fixture at the module level, because there's loads of places that needed to test varying dimensions, and it's very convenient to define it just once. In the few cases where we needed to override that (e.g. in `dnorm`), I overrode it by providing a definition in a tighter scope - either at class level or per-function (via `pytest.mark.parametrize` directly). The correct scoping just depends a lot on the type of tests you're writing - if you're going to have to overwrite something constantly then module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:378,test,test,378,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,4,['test'],"['test', 'tests']"
Testability,"In general, if you think this is something that is worthwhile, we'd ask you to try it yourself, and then show us memory-usage and execution-time benchmark results showing that such a change is warranted. I've given you a few reasons why this sort of ""programming by script"" can be difficult and introduce errors, and why there may be more concerns than you might have thought about. If you can show that such a change has actual tangible benefits with proof, then we would be willing to consider a limited change, but you also need to have verified everything yourself. If it looks like you've done it indiscriminately by script, we would reject the PR, because it would require one of us to go through ourselves line-by-line and check everything, which is something the PR author is meant to do themselves first. We (mostly) do this for free, and we only have a finite amount of time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201:145,benchmark,benchmark,145,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201,1,['benchmark'],['benchmark']
Testability,"In my earlier PR, I had forgotten to add a check for trace preservation in the `iscptp` property. This has now been added, along with test cases for the new `istp` and `iscp` properties. I'm not entirely satisfied with importing within the property bodies, but I'm not sure how else to avoid circular dependencies.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/94:134,test,test,134,https://qutip.org,https://github.com/qutip/qutip/pull/94,1,['test'],['test']
Testability,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:224,test,tests,224,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918,1,['test'],['tests']
Testability,"In response to issue #1210 , added a quick fix for the add_1q_gates so that it now includes the ""end"" qubit (specified by the end argument). I also added a test in test_add_gates in test_qubitcircuit.py to cover this issue. The function now applies the 1 qubit gate to every qubit in [start, end] (0-indexed), start and end inclusive. This should resolve #1210",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1211:156,test,test,156,https://qutip.org,https://github.com/qutip/qutip/pull/1211,1,['test'],['test']
Testability,"In some rare case, the matrix obtain from random_objects.rand_stochastic would have an empty row or column. This would cause the automated test to fail (about 0.8% of the time.). Small fix that ensure the matrix always has a least 1 element on each rows and columns.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/942:139,test,test,139,https://qutip.org,https://github.com/qutip/qutip/pull/942,1,['test'],['test']
Testability,"In some spot testing, I found that making the proposed change (bounds -> self.bounds) sets the constraints correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/353#issuecomment-122968636:13,test,testing,13,https://qutip.org,https://github.com/qutip/qutip/issues/353#issuecomment-122968636,1,['test'],['testing']
Testability,"In testing.py, we made sure openmp was used even on 1 cpu for the tests. But this is no longer used with changes to travis.yml to use pytest. I believe `pytest.fixture` could be used to set `openmp_thresh` for openmp tests, but I don't see how to catch issues in `__init__.py` with that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1470#issuecomment-808297011:3,test,testing,3,https://qutip.org,https://github.com/qutip/qutip/issues/1470#issuecomment-808297011,3,['test'],"['testing', 'tests']"
Testability,"In the CI test, we convert warnings to errors. Have you tried `make latexpdf -W`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431:10,test,test,10,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431,1,['test'],['test']
Testability,"In the documentation, qutip is build with `pip install qutip[full]`, while in test it is installed with `pip install qutip[$QUTIP_TARGET]`, with the target changing depending on the test. We don't have any test using extra yet... The mpi4py team made a GitHub Actions workflow to run it in test: https://github.com/mpi4py/setup-mpi. You can add that workflow and the `extra` to have every test run with mpi:; ```; - uses: actions/checkout@v3; - uses: mpi4py/setup-mpi@v1; ```. `QUTIP_TARGET=""tests,graphics,semidefinite,ipython,extra"" `. By I am not sure it would work for windows. Also if installing mpi is slow, we may not want it in all test.; But conditional workflow are tricky so lets see want if it just works first. Yes, the test failures are related to last weekend scipy release, not this code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729:78,test,test,78,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729,8,['test'],"['test', 'tests']"
Testability,"In writing the documentation for #332, I noticed that the chi-matrix produced for several test channels was incorrect due to my placing the dagger in the wrong place. I apologize for that mistake--- this PR should fix it, and add unit tests that ensure that the chi matrix produced by to_chi agrees with that for some known Pauli channels and a unitary rotation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/337:90,test,test,90,https://qutip.org,https://github.com/qutip/qutip/pull/337,2,['test'],"['test', 'tests']"
Testability,"Incidently, a previously built qutip successfully [passes tests ](https://ci.debian.net/data/autopkgtest/testing/amd64/q/qutip/16842341/log.gz)using numpy 1.21. Should the numpy<1.20 cap just be dropped?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974827633:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974827633,3,"['log', 'test']","['log', 'testing', 'tests']"
Testability,Include the improvements made on #1208. These changes base from #1209 and #1212: ; - The controlled version of the gates; - Changes in QubitCircuit.propagator(); - Tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1225:164,Test,Tests,164,https://qutip.org,https://github.com/qutip/qutip/issues/1225,1,['Test'],['Tests']
Testability,"Including a dimension of 8 makes the tests very slow to run. There's no real need to expand the dimensions of the test to such massive sizes - testing the stability of `eigh` should be done using a minimal test in a more specific location, such as in our general eigensystem tests. In this case, you're constructing several 4096x4096 matrices using a sparse format, but they're all 100% dense so you spend ~30 seconds just handling sparse overhead that's nothing to do with the function call. You need to think about what a test is actually trying to test, and how long it _should_ take. When your changes are increasing the runtime by a factor of ~100, that's something you need to consider - are you actually increasing our test coverage, or just spinning the CI for longer? What is your change meant to catch? Could it be done faster in a different place? Take your time when you're changing the code, and really think about what you're trying to achieve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-820468804:37,test,tests,37,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-820468804,8,['test'],"['test', 'testing', 'tests']"
Testability,Increase subsys test tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:16,test,test,16,https://qutip.org,https://github.com/qutip/qutip/pull/435,1,['test'],['test']
Testability,Increase test reliability,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2337:9,test,test,9,https://qutip.org,https://github.com/qutip/qutip/pull/2337,1,['test'],['test']
Testability,"Indeed if I run the following. ```python; from qutip.tests.test_scheduler import *; from qutip.tests.test_scheduler import _circuit2. test_scheduling_gates2(deepcopy(_circuit2()), ""ALAP"", 5, False, False); ```. It seems to be working.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007372190:53,test,tests,53,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007372190,2,['test'],['tests']
Testability,"Interesting, so doctest will also test docs in the code? How can I try it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1344#issuecomment-676162356:34,test,test,34,https://qutip.org,https://github.com/qutip/qutip/pull/1344#issuecomment-676162356,1,['test'],['test']
Testability,"Interesting, sounds like some cached values of the previous test corrupted the next one. Since the other two tests also use parameterization, the reason might even be the same, except for `test_countstat.py::test_dqd_current`, which looks like numerical instability.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007395135:60,test,test,60,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007395135,2,['test'],"['test', 'tests']"
Testability,"Interesting.. I have not seen that behavior. If you could show an example next time you run into that I'd be interesting to see it, and probably the scipy people would be too if it really can be traced to a problem in scipy.linalg.eigvals or scipy.sparse.eigs. You could also try to compare with what numpy.linalg.eigvals gives... I have made one small change in the qutip sp_eigs function (50e5231b9c732ee3d6a9f6f35978d376fcfda287), and created a notebook with test cases, which seems to behave as expected (68579ffdff74502a9274c46a9ffc62910ee00867). You can see the notebook through nbviewer as well:. http://nbviewer.ipython.org/urls/raw.github.com/qutip/qutip/master/notebooks/test-eigenvalues.ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16369180:462,test,test,462,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16369180,2,['test'],"['test', 'test-eigenvalues']"
Testability,"Introduce a common ODE integrator interface for qutip's solver. Presently qutip's solver use `scipy.integratre.ode`'s zvode ODE solver, which support `adams` and `bdf` methods.; These are great method in most case, but not always optimal.; This PR introduce, a common interface to allow other ODE method to be used by solvers.; It also add 2 new scipy ODE solvers: `lsoda` and `dop853`.; `lsoda` detect if the system is stiff and switch between `adams` and `bdf`.; `dop853` is a 8th order Runge-Kutta method. The `Integrator` use `Data` as state and return the state as a pair `(t, state)`.; Often solver's run only compute the expectation values, so there is no need to create a `Qobj`.; Returning the time with the state is for `mcsolve` which have the integration advancing with one internal step and the run loop is cleaner in solver. . I did some benchmark and `adams` method is often the best scipy method.; Sparse system: loglog plot of time in function of system size.; ![image](https://user-images.githubusercontent.com/17770236/131005186-aa51aa86-8ecf-4c03-8ba4-eeddcd65af30.png). Dense time-dependent system.; ![image](https://user-images.githubusercontent.com/17770236/131005465-5c0a9e8e-9ec7-4409-8cda-70aab5129e1f.png). *`vern7`, `vern9`, and `diag` method will be introduced in another PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:852,benchmark,benchmark,852,https://qutip.org,https://github.com/qutip/qutip/pull/1643,2,"['benchmark', 'log']","['benchmark', 'loglog']"
Testability,Is it possible somehow to split the review? 21 test files seems a lot. I'll start from `qip` related tests and see how far I can go.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-605457825:47,test,test,47,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605457825,2,['test'],"['test', 'tests']"
Testability,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:32,test,tests,32,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739,5,['test'],"['test', 'tests']"
Testability,"Is there a way to set towncrier to not require the PR number?; Otherwise we need to open a PR without the changelog, which will fail the towncrier test, to modify it to add the change log...; It would a lot better if we could add it when developing or have a towncrier read it from the Changelog section of PR description.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1154143770:147,test,test,147,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1154143770,2,"['log', 'test']","['log', 'test']"
Testability,Is there already a function in qutip to test for commuting operators?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/41#issuecomment-22757904:40,test,test,40,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22757904,1,['test'],['test']
Testability,"Is there any performance reason why we should not compile the extensions using C++ ?. We are having issues with the conda forge packages:; conda-forge/qutip-feedstock#16; I am sure than this problem would not occur if we were compiling using MS compilers.; We are receiving lots of support requests on the Google group for help installing on Windows; We do not have a solution for python>=3.5 on Windows. I posted a question on the Cython help group asking about accessing complex functions on Windows. One suggestion was to try C++, importing functions from `complex` rather than `complex.h`. I made a small test project that imported `conj` and it compiled using MS compilers and worked on Windows 10 with both Python 2.7 and 3.5. We only have one small C source file. I guess it could be rewritten in C++ quite easily.; I can do further tests to check performance if we consider C++ compilation is an option for qutip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647:609,test,test,609,https://qutip.org,https://github.com/qutip/qutip/issues/647,2,['test'],"['test', 'tests']"
Testability,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:27,test,tests,27,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,4,['test'],"['test', 'tests']"
Testability,Issue #905 and #892; Numpy Requirements updated to 1.12 from 1.8 and Optional Dependency for Matplotlib added.; MacOS test is failing as mentioned in #963,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/967:118,test,test,118,https://qutip.org,https://github.com/qutip/qutip/pull/967,1,['test'],['test']
Testability,"It *should* also affect Windows, even with Python 3.7: Windows has always (I think) used ""spawn"" for multiprocessing. Thus, if there's a workaround in place that makes `mcsolve` work on Windows, it should also be applicable to macOS/Python 3.8. Alas, I don't have easy access to a Windows system, so I haven't tested this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-598855427:310,test,tested,310,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598855427,1,['test'],['tested']
Testability,"It appears that they have removed hw.cpufrequency on these things (About this mac doesn't show a freq. either). I don't know what is their policy in this regard but I did find these two related issues: https://github.com/giampaolo/psutil/issues/1892 and https://github.com/shirou/gopsutil/pull/999. My workaround was to comment out the code and hard-wire a random value in there :-) A quick grep didn't seem to show any use of cpu_freq elsewhere in the code but then I didn't look too much in depth. I don't personally use qutip, my partner does, she's the physicist, I'm just the geek helping hand :). It does look like this code could use some error handling and put some ""reasonable"" default values if the sysctl's fail indeed. Happy to test a patch and report. She's currently away so there will be some latency (I can occasionally ssh into her laptop but it takes preparation), so I can't really submit a PR myself at this point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664:740,test,test,740,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664,1,['test'],['test']
Testability,"It could be nice to try interactive graphics using [Bokeh](https://bokeh.pydata.org/en/latest/) and QuTiP. I am not familiar with the tool, [this](https://github.com/bokeh/bokeh-notebooks) could be a starting point. ; These notebooks could be added to the QuTiP website at [qutip.org/tutorials](http://qutip.org/tutorials).; Maybe a first step could be to start from existing notebooks, such as the beautiful [Wigner functions gallery](https://nbviewer.jupyter.org/urls/raw.github.com/jrjohansson/qutip-lectures/master/Lecture-16-Gallery-of-Wigner-functions.ipynb)) and its Schrödinger cat states that define also QuTiP logo. Also, in the future some of current and upcoming research material by @quantshah could provide a wow effect if interactive.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1529:620,log,logo,620,https://qutip.org,https://github.com/qutip/qutip/issues/1529,1,['log'],['logo']
Testability,"It is a really nice test. It clearly shows how bad is the 'iterative' method. For dim=20 the discrepancy between 'iterative' and 'clenshaw' is 1e-12 and for dim=50 it already becomes 1e-5, whereas 'laguerre' agrees with 'clenshaw' up to 1e-14 independent of dim.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/526#issuecomment-242816743:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/issues/526#issuecomment-242816743,1,['test'],['test']
Testability,"It is a simple fix. Just replace ""append"" with ""add_gate"" in ""temp.append(self.gates[self.N - i - 1])"". I tested myself and it works like a charm now.; You are welcome. I love QuTip and it is an honor to help the developers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292738008:106,test,tested,106,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292738008,1,['test'],['tested']
Testability,"It is from the mcf90 fortran code. Since we are testing using Anaconda, it is looking for the MKL library that does not exist. Therefore, it has nothing to do with the current PR. I will disable the mcf90 flag that is really worthless anyway since the fortran tests do not run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181499504:48,test,testing,48,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181499504,2,['test'],"['testing', 'tests']"
Testability,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:129,test,test-environment,129,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693,9,['test'],"['test', 'test-environment', 'testSuperJC', 'tests']"
Testability,It is possible to do any release. I just did master for testing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65757704:56,test,testing,56,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757704,1,['test'],['testing']
Testability,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192387820:758,test,tests,758,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820,1,['test'],['tests']
Testability,"It looks like something broke in the diamond norm test cases, but I'm not sure why. I'll take a look, see if I figure out what happened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/476#issuecomment-221224582:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221224582,1,['test'],['test']
Testability,"It looks like the Python 3.9 build managed to start running the tests, so hopefully we are good!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1975#issuecomment-1218041788:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/pull/1975#issuecomment-1218041788,1,['test'],['tests']
Testability,"It looks like the mcsolve tests hang if the interpolate tests are run. This is probably related to the use of multiprocessing / mcsolve inside both. Update: Actually, the mcsolve tests are hanging periodically even without the interpolate tests.; Further update: It seems to be the test `TestConstantCollapse::test_states_and_expect[string]` that hangs, so perhaps it is related to compiling Cython functions on the fly while running mcsolve?; Furtherer update: I'm trying removing the unused imports in mcsolve. This shouldn't really make a difference but with multiprocessing who knows, so it seems worth a try.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1097121753:26,test,tests,26,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1097121753,6,"['Test', 'test']","['TestConstantCollapse', 'test', 'tests']"
Testability,"It passed all tests at my end. So I would say, yes, ready to merge.; Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67785874:14,test,tests,14,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67785874,1,['test'],['tests']
Testability,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:753,test,test,753,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702,2,['test'],"['test', 'tests']"
Testability,"It seems good and could be accepted, but I would prefer it if you could make the tests faster.; Maybe have a better description so that users knows when to use `wigner_transformation` and when to use `wigner`. Both having only a 1 line description, it can be confusing. (Sorry for the delay.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-481010608:81,test,tests,81,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-481010608,1,['test'],['tests']
Testability,It seems that #729 fixed the strange recursively calling of the tests mentioned above. Hence I will close this as it has nothing to offer,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/726#issuecomment-318017899:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/pull/726#issuecomment-318017899,1,['test'],['tests']
Testability,It seems that failing tests are not related to this change,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2284#issuecomment-1878049498:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/2284#issuecomment-1878049498,1,['test'],['tests']
Testability,It seems that the library you are using turns off the logging stream. Maybe you can try `logging.disable(logging.DEBUG)`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156#issuecomment-578547513:54,log,logging,54,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578547513,3,['log'],['logging']
Testability,"It seems that they already know about this bug numpy/numpy#19473. . The tests runs smoothly now so it should be ready to merge. @hodgestar, is there any change missing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-932032620:72,test,tests,72,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-932032620,1,['test'],['tests']
Testability,"It seems that this is a warning that is generated only on Windows due to the multiprocessing not being behind a `__name__=='__main__'` statement. Oddly though, this should not be needed as our multiprocessing code is inside a class method. The unit tests still pass, so perhaps just disabling the warning for the mcsolver function and then reenabling at the end is a suitable workaround?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-65740568:249,test,tests,249,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-65740568,1,['test'],['tests']
Testability,"It seems that you are running qutip from the installation directory. You should change directories first. . > On Apr 28, 2016, at 08:47, lightning469 notifications@github.com wrote:; > ; > Hi,; > ; > AttributeError Traceback (most recent call last); > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in (); > 37 from numpy.testing import assert_, run_module_suite, assert_equal; > 38 ; > ---> 39 from qutip.states import coherent, fock; > 40 from qutip.wigner import wigner; > 41 from qutip.random_objects import rand_dm, rand_ket; > ; > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63 ; > 64 # -----------------------------------------------------------------------------; > ; > AttributeError: 'module' object has no attribute 'settings'; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469#issuecomment-215877900:298,test,tests,298,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215877900,2,['test'],"['testing', 'tests']"
Testability,It seems to be caused by a new version of cython which affect which files are used for tests by nose. I made a patch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-431498898:87,test,tests,87,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-431498898,1,['test'],['tests']
Testability,"It seems to work now (the failing test is unrelated). I will briefly summarize what I found out and changed. Setting up and using an MPI environment is surprisingly difficult, and I don't think it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:34,test,test,34,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,3,['test'],"['test', 'tests']"
Testability,"It should not affect the results of simulations. The diffrax package does not interact with complex number directly when used through qutip-jax. Gradient or other derivatives could be affected, this need more testing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090460880:209,test,testing,209,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090460880,1,['test'],['testing']
Testability,"It will be a lot of work to add a COO format, there are a few dozens of functions to implement (add, expect, mul, matmul, ptrace, eigen, kron, ...). We had students write new data formats over a summer for GSoC a few years ago and they were mostly working by the end, but not final... . Yes profiling cython is not easy, I managed once, but can't do it anymore.; Now I usually write multiple implementations of the same function, benchmark them and increment until I feel it's good enough.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2298#issuecomment-1906400206:430,benchmark,benchmark,430,https://qutip.org,https://github.com/qutip/qutip/issues/2298#issuecomment-1906400206,1,['benchmark'],['benchmark']
Testability,"It will cause a lot of tests failure not related to changes, We will get tests failure due to new version of jax or a deprecation in numpy /scipy will have to be fixed in multiple repos for the tests to work as we are seen with the present failure. It require commitment to keep everything working and up to date so I would like to hear from the maintainers of the other projects before merging. ; Also should other projects such as `qutip-cupy`, `qutip-qtrl` be included?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530:23,test,tests,23,https://qutip.org,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530,3,['test'],['tests']
Testability,"It would be good to understand why the qutip-qip test started failing now. Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not. The use of `p != 0` existed in version 4 and is, I think, correct in this particular case. If a POVM is supplied as a list of operators, and some of those operators have zero probability, then one cannot provide a normalized final density matrix, but one still needs to return a value to the user, since they specifically asked about that POVM. Perhaps qutip-qip could apply a tolerance itself on the returned probabilities?. We could also add an atol parameter to some measurement functions for v5, but I think that ship has sailed for 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119:49,test,test,49,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119,1,['test'],['test']
Testability,It would be nice since it makes the python 3.8 test not freeze on mac. But if you don't thinks it's a good PR we can wait. It is a PR that does 2 things. Changes which tests are run and fix a bug that made one of the new tests fails. I can split it into 2 PRs if you prefer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1214#issuecomment-613056053:47,test,test,47,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-613056053,3,['test'],"['test', 'tests']"
Testability,"It would be nice to merge this if everything is fine. Not sure of why tests are failing, it seems to pick `smesolve` that is unaffected by these changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-573575219:70,test,tests,70,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-573575219,1,['test'],['tests']
Testability,"It would maybe be good to keep everything in one PR that can be squashed into a single commit at the end - this is only a single ""logical"" change at the end of the day. Nice to get these things tidied up. You probably need to run all the tests locally before just pushing to check if everything works; QuTiP has quite a few code generation steps and indirect evaluation that can't be detected with static analysis, which is why you're seeing a lot of test failures (though that's _mostly_ `.pyx` files). Something seems wrong with the static analyser if it's not spotting that `Qobj` is used _everywhere_, though, and I notice in several commits it has a lot of false positives for removal. I can't imagine any situation where a static analyser should remove an in-library import from an `__init__.py` file, but it's done that in a couple of places. Similarly, in `cy/pyxbuilder.py` I can see that it's removed a line `import pyximport`, but I can see that that import _is_ used - it's so close it's even within the minimal diff!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116:130,log,logical,130,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116,3,"['log', 'test']","['logical', 'test', 'tests']"
Testability,"It's been a while... but I am finally able to continue. I've cleand a lot, theres probably minor typing fixes in the tests, but I got rid of the general check. Now tests are mostly separated and, although a bit extensive, most things should be covered.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1081244591:117,test,tests,117,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1081244591,2,['test'],['tests']
Testability,It's certainly easier if it was multiple smaller ones but we can do it like this. You can simply continue in another Pr for the remaining tests.; I will start evaluating file by file starting with parts of the code I am the most familiar with:; - [x] test_mcsolve.py; - [x] test_lattice.py ; - [x] test_interpolate.py ; - [x] test_fastsparse.py ; - [ ] test_expect.py ; - [ ] test_eigenstates.py ; - [ ] test_dimensions.py ; - [ ] test_cy_structs.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-609960145:138,test,tests,138,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-609960145,1,['test'],['tests']
Testability,"It's in development. ; If you use qutip v5.0.0a2 on pypi or master branch here with [qutip-jax](https://github.com/qutip/qutip-jax), some solver can work on gpu. (We tested `sesolve` and `mesolve`, mcsolve should work, stochastic, HOEM, brmesolve don't.); The readthedocs of qutip-jax shows how to use it. qutip-jax is not up to date with the latest versions.; If you are interested in trying it, I will make it works with the latest jax version and qutip master.; Any and all feedback appreciated. We expect an official release of these features in March.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1932348944:166,test,tested,166,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1932348944,1,['test'],['tested']
Testability,"It's interesting to see how my style of writing tests changes and matures. It's being particularly influenced at the moment, because on Qiskit we use a fairly thin wrapper around raw `unittest`, rather than `pytest`, so I'm being exposed to writing in other styles as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1614#issuecomment-882516763:48,test,tests,48,https://qutip.org,https://github.com/qutip/qutip/pull/1614#issuecomment-882516763,1,['test'],['tests']
Testability,It's looking good but there are a few gate decompositions in the test notebook (i've updated and checked it in) that fails. It would be good if we could sort that out before merging this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45212370:65,test,test,65,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45212370,1,['test'],['test']
Testability,It's not the conversation but the conflict in the `qobjevo.pyx` file that need to be resolved.; The PR cannot be merged while there is a conflict. Most of the tests can't be ran.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111#issuecomment-1472303983:159,test,tests,159,https://qutip.org,https://github.com/qutip/qutip/pull/2111#issuecomment-1472303983,1,['test'],['tests']
Testability,"It's very clean, I really like the `set & set` and reusing the classes. But in v4, while we used `f(t, args)` in most examples, we never said that it should be the exact signature up to variable name, so I don't think it an appropriate check for which version to use. Ideally, the check should be good enough we don't need to change any tests not directly related to the addition of this feature. Also what should; ```; def f(t, w, a=1):; return a. coeff = coefficient(f, args={'w':1}); coeff.replace_arguments(a=2)(0); ```; give? Since `a` is not given, it's not our job to update it, or should we add it to `_f_arg_names`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1633#issuecomment-894438481:337,test,tests,337,https://qutip.org,https://github.com/qutip/qutip/pull/1633#issuecomment-894438481,1,['test'],['tests']
Testability,"I’ve never enforced this, so I am no expert. Though, would enforcing the options in a dynamical solver work? Maybe you do not need the dynamical solver, but checking if that works could help understanding this issue too. I would test it by creating an Options object and passing it to a dynamical solver. http://qutip.org/docs/latest/guide/dynamics/dynamics-options.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175#issuecomment-582772817:229,test,test,229,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-582772817,1,['test'],['test']
Testability,Just a general comment: It is ok to have `'solution_time'` int `ss_args['info']` but in general I think that this kind of benchmarking should probably better be done using the profiler module cProfile.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/250#issuecomment-63583478:122,benchmark,benchmarking,122,https://qutip.org,https://github.com/qutip/qutip/pull/250#issuecomment-63583478,1,['benchmark'],['benchmarking']
Testability,"Just a minor update where the diags of the sparse matrix are grabbed directly rather than converting the matrix to dense form. For larger density matrices, this method outperforms the dense method due to the time it takes to convert the format and do the multiplication.; - Also added more Wigner unit tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/527:302,test,tests,302,https://qutip.org,https://github.com/qutip/qutip/pull/527,1,['test'],['tests']
Testability,"Just a question: If we can use la.sinm and la.cosm in the tests, why not use it in the qobj method? Is the expm based method likely to be more efficient?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/440#issuecomment-187062059:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187062059,1,['test'],['tests']
Testability,Just finished all tests on Centos with cython 0.26 - all passed,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/731#issuecomment-318102907:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/pull/731#issuecomment-318102907,1,['test'],['tests']
Testability,Just fixing the tests - the lattice module got deleted in a separate feature on `master` before the Numpy 1.20 changes. My mistake for not running them before making the PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782084299:16,test,tests,16,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782084299,1,['test'],['tests']
Testability,"Just that we also have '_noise_direct()' which does a bit of linear algebra to avoid using the pseudo-inverse. i think it can be a bit more numerically efficient than mucking around with the inverse itself. Maybe doing the pseudo-inverse tends to involve a big large dense matrix, and this avoids it?. iirc, the logic of noise_direct is, since we write the pseudo-inverse like $R=QL^{-1}Q$, the annoying term we have to evaluate in the noise expression is something like:. $$y = I QL^{-1} Q I \rho. $$. so we substitute, for the last few terms. $$x = L^{-1} QI\rho $$. we multiply from the left by L, to get. $$L x = Q I \rho$$. and we can find x using a scipy's solve or something equivalent, and then find y with. $$y = IQ x$$. In the skewness you have this new term,. $$y =I R R I P I \rho$$. which is a bit clunky to manipulate.; maybe we can write something like. $$x = L^{-1}QIPI \rho$$. and again, multiplying by L. $$Lx = QIPI \rho$$. to get x, then the original expression is now. $$y = IQL^{-1}QQx$$. defining a new variable. $$t = L^{-1}QQx$$. we can again, multiply by L. $$Lt = QQx$$,. solve for t, then we get . $$y= IQ t$$. ? i probably made a mistake, so take with a grain of salt!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2435#issuecomment-2138882230:312,log,logic,312,https://qutip.org,https://github.com/qutip/qutip/pull/2435#issuecomment-2138882230,1,['log'],['logic']
Testability,"Just to add, I tried to benchmark Eric's jax data layer a bit more with an Ising model, the example is at the end of this colab notebook we made for a tutorial talk, which shows some crossover in performance at certain system sizes: https://colab.research.google.com/drive/1RcgX7oEzGjzPAF8Ryus54Q5UmyMddmLA?usp=sharing. ![benchmark](https://github.com/qutip/qutip/assets/5094429/15d2dfaa-b269-44f7-8334-878b8e2c5910). Note colab does not have free GPUs, so you will have to download and use it locally. also in the actual ising example, replace ; `with jax.default_device(jax.devices(""cpu"")[0]):` ; with; `with jax.default_device(jax.devices(""gpu"")[0]):`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917:24,benchmark,benchmark,24,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917,2,['benchmark'],['benchmark']
Testability,"L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; __________________________________________ ERROR collecting qutip/tests/solver/test_mesolve.py ___________________________________________; qutip/tests/solver/test_mesolve.py:28: in <module>; class TestMESolveDecay:; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:4087,test,tests,4087,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['test'],['tests']
Testability,"LGTM. Eric already made the changes I'd suggesting. This will cause another merge conflict in #1181, but that's not a problem at all (that PR will make this same logical change anyway).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1214#issuecomment-619441566:162,log,logical,162,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-619441566,1,['log'],['logical']
Testability,"Last week we added numpy 2 support but did not update the requirements in `setup.cfg`. This update dependency to build using numpy 2 instead of oldest-supported-numpy.; I also increased the minimum requirements for matplotlib and scipy to version tested. I added more test using numpy 2, only one tests build and run using numpy 1.X.; I added more windows / mac tests. Using these os for testing numpy versions and no cython.; `cvxopt` (`dnorm`) does not run with numpy 2 yet, so it's only tested with older numpy version. Fix sqrtm needing copy. This mean that the test intended to run with numpy 2 previouly did not...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457:247,test,tested,247,https://qutip.org,https://github.com/qutip/qutip/pull/2457,7,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"Latest commit changes the code in qutip.testing to run pytest instead of nose. ; That is,; ```; import qutip.testing as qt; qt.run(); ```; will now use pytest and not nose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560292804:40,test,testing,40,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560292804,2,['test'],['testing']
Testability,Less strict codeclimat logic,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1201:23,log,logic,23,https://qutip.org,https://github.com/qutip/qutip/pull/1201,1,['log'],['logic']
Testability,Let me add one more test for the sorting of ntraj when inputting a list.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/275#issuecomment-65740758:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/275#issuecomment-65740758,1,['test'],['test']
Testability,"Let me do that until I get the hang of the pulling and pushing. . On Aug 29, 2014, at 2:58 PM, Robert Johansson notifications@github.com wrote:. > You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/221#issuecomment-53840133:399,test,tests,399,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840133,1,['test'],['tests']
Testability,Let's also try add a test in the region where FLiMESolve and the older FloquetSolver agree.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1695947385:21,test,test,21,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1695947385,1,['test'],['test']
Testability,"Look good,; Thank you sameshl.; We can ignore the test errors as they are not related to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077,1,['test'],['test']
Testability,"Looking at the docs `requirements.txt`, it looks like the docs build failing is an indication that your build process isn't correct. The docs requirements is a pinning file that's now quite old, so it still has Numpy 1.19. That fails, which indicates your build is using a too-new version of Numpy. You probably want to update the docs requirements pins, but equally you probably want to add a CI test case that deliberately uses Numpy <1.20 on Python 3.7 or 3.8 to ensure that your build is correct.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989840346:397,test,test,397,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989840346,1,['test'],['test']
Testability,"Looking at the test [history](https://github.com/qutip/qutip/actions/workflows/tests.yml), it started failing on Wednesday. ; Looking at the version it seems that numpy went from 1.20.3 to 1.21.2, but 1.21.2 work fine for me...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-944383603:15,test,test,15,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-944383603,2,['test'],"['test', 'tests']"
Testability,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18782823:67,test,tests,67,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823,3,['test'],"['test', 'tests']"
Testability,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:513,test,tests,513,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973,1,['test'],['tests']
Testability,"Looks fine to me. I suppose we should wait for tests to pass.; @sahmed95 go ahead and merge, if I don't get there first. Remember to bump up the master version too.; I assume you are following:; https://github.com/qutip/qutip-doc/blob/master/release_distribution.rst",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889#issuecomment-403427856:47,test,tests,47,https://qutip.org,https://github.com/qutip/qutip/pull/889#issuecomment-403427856,1,['test'],['tests']
Testability,"Looks good in general. Will have a closer test later today. There are some unnecessary style changes to other parts of the code. Especially `'` to `""` was quite unnecessary... It is not massive but it makes it a bit hard to identify which is the essential change. How hard is it to revert the changes of `'` to `""`? Other styling updates like removing unused importations are fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2145262488:42,test,test,42,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2145262488,1,['test'],['test']
Testability,"Looks good to me.; Should the test function have a docstring? I seem to remember these get reported during the testing, although maybe it's different when you use this yield method",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-179008095:30,test,test,30,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179008095,2,['test'],"['test', 'testing']"
Testability,"Looks good to me.; You'll see one test has passed and another not. I am not sure what the difference is between these, and why one would fail and the other not?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419#issuecomment-178978928:34,test,test,34,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178978928,1,['test'],['test']
Testability,"Looks good, thanks; I'll merge when tests have passed",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/809#issuecomment-361293038:36,test,tests,36,https://qutip.org,https://github.com/qutip/qutip/pull/809#issuecomment-361293038,1,['test'],['tests']
Testability,"Looks good, waiting for the tests to finish then will merge if there are no surprises.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-488306878:28,test,tests,28,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-488306878,1,['test'],['tests']
Testability,Looks good. The cyclical import problem indicates that the tests should have been in Qobj in the first place. I will run some tests to make it does not have any unexpected consequences.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/4#issuecomment-10321240:59,test,tests,59,https://qutip.org,https://github.com/qutip/qutip/pull/4#issuecomment-10321240,2,['test'],['tests']
Testability,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147367783:68,log,logging,68,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783,12,['log'],"['log', 'logger', 'logging']"
Testability,"Looks like we are right at the edge of the maximum permited time on the last macos check, and it fluctuates due to all the random matrix generators. Maybe we could limit the number of repetitions for every test to 5?; Or skip some tests on some environments?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822660895:206,test,test,206,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822660895,2,['test'],"['test', 'tests']"
Testability,"Made PR #956 for this.; Should work, but I don't have a windows on hand to test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/955#issuecomment-467087349:75,test,test,75,https://qutip.org,https://github.com/qutip/qutip/issues/955#issuecomment-467087349,1,['test'],['test']
Testability,Made a change to `test_mesolve.py ` because a test was failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1509#issuecomment-826262854:46,test,test,46,https://qutip.org,https://github.com/qutip/qutip/pull/1509#issuecomment-826262854,1,['test'],['test']
Testability,"Made a new fork, applied change to super_to_choi which ought to fix the efficient subsystem channel application tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/85:112,test,tests,112,https://qutip.org,https://github.com/qutip/qutip/pull/85,1,['test'],['tests']
Testability,"Made another quick change. We know from Prop. 3.44 of (Watrous, 2018) that the diamond norm of CPTP channel is 1. So I added a quick `if` statement that checks this. Also refactored `dnorm` so there's only one return statement to make code climate happy. Looks like it's unhappy with something else and maybe made the logic harder to follow. Please advise if you have a preference. Again, can't really run tests locally, so approving the CI pipeline would be fantastic.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2098903691:318,log,logic,318,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2098903691,2,"['log', 'test']","['logic', 'tests']"
Testability,Make testing more robust especially for random objects,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:5,test,testing,5,https://qutip.org,https://github.com/qutip/qutip/issues/1268,1,['test'],['testing']
Testability,"Makes sense, thank your for the explanation Eric! While trying to set a sensible value for `tol` I got the problem that 3% of the times the tests fail independently of the `tol` value. This is because the numpy function returns `nan` whereas `trace_csr` does not. To replicate the problem I used the following code:; ```python; import qutip; import scipy; import numpy as np; from qutip.tests.core.data import conftest. # Catch one of those matrices that return nan in the nuclear norm; for i in range(100):; matrix_csr = conftest.random_csr((100,100), 0.001, True); matrix = matrix_csr.to_array() ; result = np.linalg.norm(matrix, 'nuc'). # If it is nan store the matrix for analysis.; if np.isnan(result):; print('got one of those tricky matrices'); nan_matrix = matrix ; nan_matrix_csr = matrix_csr; ; # Scipy's and numpys methods return nan; sc_norm = scipy.linalg.norm(nan_matrix, 'nuc'); print(f'SciPy linalgn nuc norm: {sc_norm}'). np_norm = np.linalg.norm(nan_matrix, 'nuc'); print(f'NumPy linalgn nuc norm: {np_norm}'). # Using svd wich is similar to what numpy/scipy should be doing; u, s, vh = np.linalg.svd(nan_matrix); print(f'SVD method: {s.sum()}'). # Qutip sparse method; print(f'QuTiP trace_csr:{qutip.data.norm.trace_csr(nan_matrix_csr)}'). # This prints; # SciPy linalgn nuc norm: nan; # NumPy linalgn nuc norm: nan; # SVD method: 6.456744360029763; # QuTiP trace_csr:6.456744366739419; ```. As you can see in the above code, it fails to compute a value for NumPy/SciPy but not for a direct method (SVD) or the QuTiP method (which is different to the SVD method but still works). @Ericgig, do you get the same results? They look quite weird and I wonder if I am doing something wrong or whether this is a NumPy/SciPy bug. ```; np.__version__='1.21.2'; qutip.__version__='5.0.0.dev0+7a90dbd'; scipy.__version__='1.7.0'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-930224872:140,test,tests,140,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-930224872,2,['test'],['tests']
Testability,"Mark some of the slower test to be skipped when running. `qutip.testing.run()`: about 5 min.; `qutip.testing.run(full=True)`: about 30 min. Keep test for every function: stochastic only test the default solver... ; Also speed up some test by limiting the tests (shorter time for solver, less ""pixel"" for wigner). Build on top of #1131, must be merged after that PR.; Should solve #1147",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1151:24,test,test,24,https://qutip.org,https://github.com/qutip/qutip/pull/1151,7,['test'],"['test', 'testing', 'tests']"
Testability,Marked test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1151:7,test,test,7,https://qutip.org,https://github.com/qutip/qutip/pull/1151,1,['test'],['test']
Testability,"Matplolib 3.9 (released 20h ago) is not imported properly in python 3.9:; https://github.com/qutip/qutip/actions/runs/9118045396/job/25070276189; ```; $ conda list; ...; loky 3.4.1 pypi_0 pypi; matplotlib 3.9.0 pypi_0 pypi; matplotlib-inline 0.1.7 pypi_0 pypi; ...; $ python -c ""import qutip; qutip.about()""; /home/runner/work/qutip/qutip/qutip/__init__.py:24: UserWarning: matplotlib not found: Graphics will not work.; ```; In master we no longer support python 3.9, so for the micro release I just set an upper limit on the matplotlib version in python 3.9 tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2429#issuecomment-2116072715:560,test,tests,560,https://qutip.org,https://github.com/qutip/qutip/pull/2429#issuecomment-2116072715,1,['test'],['tests']
Testability,"May I propose another approach for testing normalization: use a non-hermitian Hamiltonian and `qeye` as the e_ops.; Then it is clear if the normalization step does it's work or not. Otherwise the `tol` should be very strict, the error between before and after the normalization is usually quite small. `sesolve` does not differentiate between an `unitary` and a `dm`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235:35,test,testing,35,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235,1,['test'],['testing']
Testability,May not be needed anymore with scipy 1.5? To test more before merging (#1299 ),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288#issuecomment-649533541:45,test,test,45,https://qutip.org,https://github.com/qutip/qutip/pull/1288#issuecomment-649533541,1,['test'],['test']
Testability,Maybe this:. ```; import qutip.testing as qt; qt.run(); ```. ?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/410:31,test,testing,31,https://qutip.org,https://github.com/qutip/qutip/issues/410,1,['test'],['testing']
Testability,"Maybe we should require that at least one of the test cases requires a version of scipy pre-1.5 so we don't cause any regressions for older versions of scipy as Travis builds start to reliably pull 1.5? Perhaps we can add a requirement for scipy=1.4.1 to the Linux py3.7, MKL/OMP one?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762:49,test,test,49,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762,1,['test'],['test']
Testability,Meant to add: I get this warning in build_ext and in all str format td tests; `cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280338906:71,test,tests,71,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280338906,1,['test'],['tests']
Testability,"Measurements would return a `None` state when the probability is 0.; Due to recent changes which affected operation order, a test for `CircuitSimulator` would result in a probability of `~1e-33`. Not being 0, this resulted in an unexpected possible result of the circuit simulation, breaking tests for `dev.major`. I changed the test from `p != 0` to `p >= tol` with `tol` being set in core's settings.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656:125,test,test,125,https://qutip.org,https://github.com/qutip/qutip/pull/1656,3,['test'],"['test', 'tests']"
Testability,Merge pull request #1696 from hodgestar/fix/test-numpy-versions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1701:44,test,test-numpy-versions,44,https://qutip.org,https://github.com/qutip/qutip/pull/1701,1,['test'],['test-numpy-versions']
Testability,Merged the PR about non-int clebsch wihtout waiting for a test. Add one here,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1218:58,test,test,58,https://qutip.org,https://github.com/qutip/qutip/pull/1218,1,['test'],['test']
Testability,"Merged. > I changed the merge target from `qutip-5.0.X` to `master`. The `qutip-...` branches are for released version. Could you merge the current master branch, we added fixes for the new numpy, scipy version and it should help tests to passes. Merged my qutip-5.0.X to master",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610357858:230,test,tests,230,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610357858,1,['test'],['tests']
Testability,Merging this as failing test seems unrelated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1994#issuecomment-1267575547:24,test,test,24,https://qutip.org,https://github.com/qutip/qutip/pull/1994#issuecomment-1267575547,1,['test'],['test']
Testability,"Merging this now, as I want to get some other PRs testing",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876#issuecomment-395341747:50,test,testing,50,https://qutip.org,https://github.com/qutip/qutip/pull/876#issuecomment-395341747,1,['test'],['testing']
Testability,"Metrics tests failing ""multiple values for argument 'name'""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/issues/872,1,['test'],['tests']
Testability,Milstein scheme for SME and a cool example for testing of a stochastic solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35:47,test,testing,47,https://qutip.org,https://github.com/qutip/qutip/issues/35,1,['test'],['testing']
Testability,"Minimal script to reproduce the error that only uses numpy:; ```; # On a CPU with AVX512 extensions and numpy 1.21.2:; # (only tested on Ubuntu); # It works again on numpy 1.21.4 (and maybe 1.21.3 -- I did not check because 1.21.3 was not conda installable). import numpy as np. L = np.diag([1+0j, 1, 1, 1]); b = np.array([1+0j, 0, 0, 0]). # commenting out the line below makes everything work, with it solve returns nans.; np.exp(0); # breakpoint(). v = np.linalg.solve(L, b); np.testing.assert_allclose(v, b); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449:127,test,tested,127,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449,2,['test'],"['tested', 'testing']"
Testability,"Minus the known dnorm tests, this is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/485#issuecomment-222051129:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/485#issuecomment-222051129,1,['test'],['tests']
Testability,Modified 4op 2t correlator for hamiltonians with time dependence; works with cython or function td format. Added relevant test functions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206:122,test,test,122,https://qutip.org,https://github.com/qutip/qutip/pull/206,1,['test'],['test']
Testability,Modified QubitCircuit class to use just a single gate list and fixed the unit tests accordingly,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/148:78,test,tests,78,https://qutip.org,https://github.com/qutip/qutip/pull/148,1,['test'],['tests']
Testability,More stable run_from_experiment test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2419:32,test,test,32,https://qutip.org,https://github.com/qutip/qutip/pull/2419,1,['test'],['test']
Testability,"Most of the time when I search on Google for `qutip [something]` first hits are on the old documentation:. http://qutip.googlecode.com/svn/doc/2.0.0/html/index.html#. This is misleading, since it is:; - not up to date,; - makes impression that it is an abandoned project (since there is ""Change Log; Version 2.0.0 [SVN-2354](June 01, 2012)""). How about adding a header ""Check the new site (Version 2.2.) - http://qutip.org/"" or something like that (too make newcomers less confused)?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516:295,Log,Log,295,https://qutip.org,https://github.com/qutip/qutip/issues/1516,1,['Log'],['Log']
Testability,"Mostly by replacing explicit loops with vectorized numpy expressions. For a simple test Hamiltonian with a single N-level bosonic operator, it is faster by a factor of ~40 for N=100 (Hamiltonian 100x100), i.e., it takes 12 seconds instead of 460 seconds. The speedup improves about linearly with N for this system. I checked for some test systems that the results are the same as before. The only difference in interface is that c_ops is [] by default, and c_ops=None is not accepted anymore. This seems to me more in line with the rest of qutip, but could be changed back trivially.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/336:83,test,test,83,https://qutip.org,https://github.com/qutip/qutip/pull/336,2,['test'],['test']
Testability,Move qutip/benchmark out of main qutip repository,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/159:11,benchmark,benchmark,11,https://qutip.org,https://github.com/qutip/qutip/issues/159,1,['benchmark'],['benchmark']
Testability,Move tests to GitHub Actions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['test'],['tests']
Testability,Move tests to pytest,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1164:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/1164,1,['test'],['tests']
Testability,"Moved the loops to cython, and reworked the indices selection. Now 2x - 100x+ faster, depending on size. This pull also switches the fast_csr_matrix multiplication to our own version. This eliminates the need to call A.prune() after the SciPy matmat call. We also handle the nnz=0 case better. Still need to do:; - ptrace unit tests; - move old ptrace to a 'legacy' folder for testing against.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/634:327,test,tests,327,https://qutip.org,https://github.com/qutip/qutip/pull/634,2,['test'],"['testing', 'tests']"
Testability,"Moved the openmp, mkl, no cython tests to python 3.8; Also added (temporaly?) a mac test on python 3.8.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1214:33,test,tests,33,https://qutip.org,https://github.com/qutip/qutip/pull/1214,2,['test'],"['test', 'tests']"
Testability,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:297,log,logic,297,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891,4,"['log', 'test']","['logic', 'logical', 'logically', 'testing']"
Testability,"Need to add unitarity checking and data dumping into some tests. ; Also, will squash commits before merging.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/478#issuecomment-221337624:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-221337624,1,['test'],['tests']
Testability,"New changelog. * removed dummy <code>if progress_bar:</code> instances.; * small bug fix on bad tlist, now it should work perfect.; * added new general test to check all instances of types of <code>e_ops</code> and <code>tlist</code>.; * general improvements in auxiliar functions such as the use of gate operators, ket, etc.; * some tests merged. There is still work that to be done with the tidyness of the tests, but generally speaking everything should be ready to be used. I can keep working on those during the weekend.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1045180425:152,test,test,152,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1045180425,3,['test'],"['test', 'tests']"
Testability,New methods for single stochastic jump operator are implemented:; - 1/2 order predictor-corrector euler-maruyama; - 1 order semi-implicit Milstein; - 3/2 order explicit and semi-implicit Taylor 1.5. Tests for all the new (and old) methods are added. There is a corresponding notebook which shows that the solvers achieve (or exceed) their order of convergence.; https://github.com/qutip/qutip-notebooks/pull/37; Here is the scaling of solver error as a function of stepsize:; ![error_scaling_y_an](https://cloud.githubusercontent.com/assets/4971779/18120795/128dcbe6-6f6a-11e6-8b36-8b16fb73f35a.png). Bug: fast-milstein modifies input noise - fixed. The explicit Taylor 1.5 method and most of the coding is done by **Manuel Grimm** under supervision of **Niels Lörch** at University of Basel.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529:199,Test,Tests,199,https://qutip.org,https://github.com/qutip/qutip/pull/529,1,['Test'],['Tests']
Testability,New notebook for testing Milstein is created,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/43:17,test,testing,17,https://qutip.org,https://github.com/qutip/qutip/pull/43,1,['test'],['testing']
Testability,"New schemes for the options. All options's default value can be set and seen in qutip.settings:; ```; >>> from qutip import settings; >>> settings.solver[""atol""] = 1e-10; >>> settings.core[""auto_tidyup""] = False; >>> settings.solver.mcsolve[""norm_tol""] = 1e-4; >>> settings.save(); >>> print(qutip.settings); qutip.settings.install:; debug : False; log_handler : 'default'; colorblind_safe : False; tmproot : '/home/eric/.qutip/coeffs'; mkl_lib : None; has_mkl : False; ipython : True; _logger : <Logger qutip.installsettings (WARNING)>; eigh_unsafe : False. qutip.settings.core:; auto_tidyup : False; auto_tidyup_dims : True; auto_herm : True; atol : 1e-12; auto_tidyup_atol : 1e-12; ...; ```. The main changes are; - `settings` is an object in `qutip/settings.py`.; - Actual options are accessed as dictionary values instead of attributes.; - `settings`'s values are read from qutiprc at import.; - Easy saving of settings; - `reset` function as described in documentation but not available yet.; - solver `Options` renamed and split, some options removed (`rhs_with_state`, ...). @jakelishman, I commented out most of the openmp stuff, I expect you to pass behind me and clean when you re-implement it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1337:497,Log,Logger,497,https://qutip.org,https://github.com/qutip/qutip/pull/1337,1,['Log'],['Logger']
Testability,New test added that includes both non-trivial fermionic and bosonic baths coupled to a spin. Thanks @nwlambert for figuring out how to model the bosonic mode as a bath.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2089#issuecomment-1431828061:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/2089#issuecomment-1431828061,1,['test'],['test']
Testability,New test for Milstein is resubmitted,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/44:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/44,1,['test'],['test']
Testability,"Nice work! Still a few units test that fails, both in travis and on my local machine when testing this branch. Mostly minor stuff. Will merge when that has been sorted out.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39624151:29,test,test,29,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39624151,2,['test'],"['test', 'testing']"
Testability,"Nice work!. > I have removed self.gates as well as self.gates_and_measurements. The replacement is the more ""general"" (and less of a mouthful) self.circuit_ops which contains both. I like this merge of to attributes. However, we shouldn't change the attribute name `gates`, at least not in this PR here. It's an open attribute API and as you see we used it a lot in tests. It's very likely that others are using it too. . Personally, I would keep the attribute `gates` since even for measurement operations, people still usually say ""measurement gates"". `circuit_ops` is certainly more accurate, but might be hard to remember and thus makes the learning curve steeper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647396416:366,test,tests,366,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647396416,1,['test'],['tests']
Testability,"Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20392672:342,benchmark,benchmarks,342,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20392672,1,['benchmark'],['benchmarks']
Testability,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/136#issuecomment-44073618:115,test,tests,115,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618,2,['test'],['tests']
Testability,Nice. Can you add a unit test that use this new c_ops argument?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-63397841:25,test,test,25,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63397841,1,['test'],['test']
Testability,"No `.compile()` in v5. ; I don't think we need a porting guide either, `compile` is called internally in evolution but users very rarely call it themselves. 99.9% of users don't know it exist. Where is it causing issues? I only remember using it in a developer notebook showing benchmarks. This notebook can be removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1176207837:278,benchmark,benchmarks,278,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1176207837,1,['benchmark'],['benchmarks']
Testability,No cython tests are failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1151#issuecomment-573570257:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/1151#issuecomment-573570257,1,['test'],['tests']
Testability,"No problem - test failures are a big deal, because they prevent everyone else from seeing what might be going wrong with their own code, and lots of people are actively working on QuTiP at the moment. > Merging once tests pass. ""if"", I think - I have a mac, so I still get the segfaults!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979:13,test,test,13,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979,2,['test'],"['test', 'tests']"
Testability,"No problem, but to create an example, I need extra time to unwrap the self-defined gate sequence and refactor my test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-608335014:113,test,test,113,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-608335014,1,['test'],['test']
Testability,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:482,test,tests,482,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885,1,['test'],['tests']
Testability,No unit tests for control.pulse_optim methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/368:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/issues/368,1,['test'],['tests']
Testability,"No worries! Re-merging pull requests with master is frequently necessary, no problem at all. Thanks for the updates! It looks all fine as far as I can tell without running tests. Is this merge ready from your point of view?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67725094:172,test,tests,172,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67725094,1,['test'],['tests']
Testability,"No, I don't know what exactly caused this. All operation are through `Qobj`. Maybe `tidyup` have some effect.; But testing for a pure `0` with floating number is never a good idea. Which test do you think we should update. `test_quantumcircuit` is testing what it should.; `test_measurement` tests case which have `0` probabilities with `np.testing.assert_almost_equal`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917054484:115,test,testing,115,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917054484,5,['test'],"['test', 'testing', 'tests']"
Testability,"No, `dtype` should always be respected, even for jax.; So the default need to be changed.; One options would be to set `dtype=None` for the default and then if it's `None` and sparse, then use dense. (+ update the docstring and tests.); Another options would be to remove the `dtype` parameter and replace it with `sparse` like `eigenenergies`. But I would like to keep support for both for a while has we should no introduce breaking change outside of major release which won't come anytime soon (detect if the user input a dtype and warn it in that case, but still give him his intended behaviour.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2484#issuecomment-2231753388:228,test,tests,228,https://qutip.org,https://github.com/qutip/qutip/pull/2484#issuecomment-2231753388,1,['test'],['tests']
Testability,"No, if `test` is used for the branch name, it will still deploy to testpypi. Both `deploy to ...` jobs were cut and pasted with only 2 lines changed so I merged them so we don't forget to update one without the other. I also added more feedback to the job that would show uploaded files even for a dry run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477#issuecomment-2199969342:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/2477#issuecomment-2199969342,2,['test'],"['test', 'testpypi']"
Testability,"No, this is not included in my project. The commit above seems to be lost so I can't see the original proposal. It is easy to add a new option to let some gates remain as they are (and I think this is what was proposed). To resolve other multiqubit gates into TOFFOLI basis needs, however, much more work :). If resolving gate becomes a high demand, it might be a good idea to refactor the current `resolve_gate` method as it is quite long and hard to maintain. An optimized gate resolving method needs more complex logic such as merging single-qubit gate.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/614#issuecomment-532940297:516,log,logic,516,https://qutip.org,https://github.com/qutip/qutip/issues/614#issuecomment-532940297,1,['log'],['logic']
Testability,"Nope, it is something else. I have a workaround similar to what you did. Everything seems to ve working as the tests run fine. Awesome stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280737812:111,test,tests,111,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280737812,1,['test'],['tests']
Testability,Norm tests for specialisations.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/1635,1,['test'],['tests']
Testability,"Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1328:985,test,tests,985,https://qutip.org,https://github.com/qutip/qutip/pull/1328,1,['test'],['tests']
Testability,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/41#issuecomment-22768490:13,test,testing,13,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490,3,['test'],"['test', 'testing']"
Testability,"Not extremely familiar with pytest parametrizations, but I've just been reading it and performing some changes. Will keep doing it with the new suggestions. I'll add a couple of tests for bad instances of inputs just in case. . I agree with the with the bound functions part. I'll try to perform as many improvements as possible today. And thanks a lot for all of these <code>sx_list[i] == x_gate(N, i)</code> code improvements.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1044755417:178,test,tests,178,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1044755417,1,['test'],['tests']
Testability,"Not having a mac, I can't really test this...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/922#issuecomment-428301071:33,test,test,33,https://qutip.org,https://github.com/qutip/qutip/pull/922#issuecomment-428301071,1,['test'],['test']
Testability,"Not really expecting anyone to fix this urgently, I am just recording some ideas, as I have spent a lot of time looking into this recently while try to build a conda package. Currently on Windows we compile under mingw. This is sub-optimal, according to various sources, including:; https://wiki.python.org/moin/WindowsCompilers; Python C extensions should be compiled using the same compiler that was used to compile the Python distro that is being used. Failing to do so can result in some strange behaviour. I have experienced issues with qutip tests hanging on Windows. Therefore it would clearly be beneficial if we could build qutip under MSVC. It is of particular interest now that we have a conda recipe that autobuilds for all the version, platform variations.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447:548,test,tests,548,https://qutip.org,https://github.com/qutip/qutip/issues/447,1,['test'],['tests']
Testability,"Not really much to add, except that if it were possible to try a fresh; install of anaconda, and maybe python 3.6, but that is just guessing.; Probably an install from source is better on linux any way.; The conda packages were mainly developed for users with issues compiling; (i.e. on Windows). Though things have moved on so much since we started; trying that as a solution. On 26 March 2017 at 02:01, Paul Nation <notifications@github.com> wrote:. > Oh sorry, I thought you were reporting the sys gcc, not the conda one.; >; > Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; > platform works, it should be that one.; >; > As I originally suspected, the problem comes from the Cython code.; > Specifically for the sparse matrix math. The fact that you can build it; > yourself suggests a binary incompatibility. However, again, we test; > against 14.04, so I am hard pressed to think about what the issue could be.; > gdb might be able to hunt down where the dump occurs.; >; > On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:; >; > Since it's the python from the conda package, I'm assuming that's because; > Continuum created the linux package on a Redhat system. GCC is identified; > like that on both of the workstations. But yeah, my guess would be that; > there is some shared library that's compiled in a way that's incompatible; > with the rest of the system. Is there any linux utility that would allow to; > determine which library is being accessed at the moment of the crash? Some; > invocation of ldd?; >; > —; > You are receiving this because you commented.; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or; > mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-; > hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; > .; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289852411:557,test,tested,557,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289852411,2,['test'],"['test', 'tested']"
Testability,Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157:23,test,test,23,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157,1,['test'],['test']
Testability,"Not sure if this is a conda issue now as I can run the test script in the windows powershell terminal with `python .\qutiptest.py` where qutiptest.py is; ```python; import qutip; b=qutip.Bloch(); b.show(); ```; and I get the same behaviour as when I run throught the VS code debugger, where the matplotlib window flashes briefly. I can also recreate the rest of the VS code behaviour like this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883541243:55,test,test,55,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883541243,1,['test'],['test']
Testability,"Not sure why `../tests/test_interpolate.py::test_usage_in_solvers[mcsolve-complex-spline,string] `; is failing in this case, seems completely unrelated ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647035492:17,test,tests,17,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647035492,1,['test'],['tests']
Testability,Not sure why the test failed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-898895580:17,test,test,17,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-898895580,1,['test'],['test']
Testability,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:105,test,tests,105,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557,4,"['assert', 'log', 'test']","['assert', 'assertion', 'logical', 'tests']"
Testability,"NotFoundError, ImportError) as e:. <string> in <module>. ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(self, fullname); 461 build_inplace=self.inplace,; --> 462 language_level=self.language_level); 463 return module. ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 230 if sys.version_info[0] >= 3:; --> 231 raise exc.with_traceback(tb); 232 else:. ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 214 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 215 inplace=build_inplace, language_level=language_level); 216 mod = imp.load_dynamic(name, so_path). ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 190 inplace=inplace,; --> 191 reload_support=pyxargs.reload_support); 192 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. ~\Anaconda3\lib\site-packages\pyximport\pyxbuild.py in pyx_to_dll(filename, ext, force_rebuild, build_in_temp, pyxbuild_dir, setup_args, reload_support, inplace); 101 obj_build_ext = dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. ~\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . ~\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:5468,assert,assert,5468,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['assert'],['assert']
Testability,"Note that all this is when giving `e_ops`. When the `e_ops` are not given, as tested with @fminga in #991, the speedup of the current qutip 4.4 is considerable: Instead of 127s, they are at 47s. The code is in the gist of #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503668387:78,test,tested,78,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503668387,1,['test'],['tested']
Testability,Note that int_argsort uses the c++ sort routine that does not guarantee that the array remains unchanged if sorting is not necessary. Thus the bucky test had to be removed as the returned perm array was compiler specific.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/654#issuecomment-285196142:149,test,test,149,https://qutip.org,https://github.com/qutip/qutip/pull/654#issuecomment-285196142,1,['test'],['test']
Testability,Note to reviewers:; - Codeclimate is not passing because too many return statements... It's an easy fix but is it worth it?; - Current tests already test for this new implementation (for two and three qubits),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094907328:135,test,tests,135,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094907328,2,['test'],"['test', 'tests']"
Testability,"Note: I tested the ; `del solver_options[""improved_sampling""]`; in this branch in my fork: https://github.com/pmenczel/qutip/tree/nmmcsolve-delete-sampling-option",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1750008231:8,test,tested,8,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1750008231,1,['test'],['tested']
Testability,"Note: This appears broken on my M1 MacBookPro running Big Sur... there is no sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.cachesize: 3616980992 65536 4194304 0 0 0 0 0 0 0; hw.cpu64bit_capable: 1; hw.cpufamily: 458787763; hw.cpusubfamily: 2; hw.cpusubtype: 2; hw.cputype: 16777228; hw.ephemeral_storage: 0; hw.l1dcachesize: 65536; hw.l1icachesize: 131072; hw.l2cachesize: 4194304; hw.logicalcpu: 8; hw.logicalcpu_max: 8; hw.osenvironment: ; hw.packages: 1; hw.pagesize: 16384; hw.pagesize32: 16384; hw.physicalcpu: 8; hw.physicalcpu_max: 8; hw.serialdebugmode: 0; hw.tbfrequency: 24000000; hw.use_kernelmanagerd: 1; hw.use_recovery_securityd: 0; hw.targettype: J293; ```; Big Sur 11.4 on MacBookPro M1. Actually I'll open a separate issue...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970:995,log,logicalcpu,995,https://qutip.org,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970,1,['log'],['logicalcpu']
Testability,"Note: in theory you can install QuTiP from the test PyPI server right now by doing; ```; pip install -i https://test.pypi.org/simple qutip-jakelishman; ```; (that's just the name - you still do `import qutip`) but since it's on the ""wrong"" server, you first have to manually install `numpy` and `scipy`. When it's released properly on PyPI it'll handle the dependencies correctly - this is only an artifact of being on the testing server. Running that command will install a binary version with no compilation, and should work on any (reasonable) Linux machine, Mac (possibly not M1 chips) and Windows. It's possible you may get an error about `ndarray size changed ... this may indicate binary incompatibility` - if so, either force `numpy` up to the new 1.20 or down to 1.19 (whichever one you don't have). This was a breaking change in numpy 1.20. Per my reading of the release notes, it won't be an issue provided in the future we always build against `numpy>=1.20` (even when using lower `numpy` at runtime) because the new version updates a certain C-API macro to take into account the possibility of runtime variability. I have pushed an additional change to the build requirements to ensure this always happens. This has another knock-on effect: numpy 1.20 only supports Python 3.7+ (released June 2017). Currently, officially QuTiP supports Python 3.6, but I think it's reasonable to follow numpy's footsteps and **drop support for python 3.6 from qutip 5.0**. It's offset by gaining support for 3.9. (Apologies for all the force-pushing - whenever I want to re-run a test release on my own branch I have to temporarily add an extra commit to swap to the testing server, then force-push a rewind of this PR's branch.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519:47,test,test,47,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519,5,['test'],"['test', 'testing']"
Testability,Now I don't understand what is the problem with the Travis test.; UPDATE: The problem is somehow self cured.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529#issuecomment-243373614:59,test,test,59,https://qutip.org,https://github.com/qutip/qutip/pull/529#issuecomment-243373614,1,['test'],['test']
Testability,Now all mcsolve tests are passed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/57#issuecomment-25391731:16,test,tests,16,https://qutip.org,https://github.com/qutip/qutip/pull/57#issuecomment-25391731,1,['test'],['tests']
Testability,Now all unit tests pass using numpy 1.9,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/229#issuecomment-55351005:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/pull/229#issuecomment-55351005,1,['test'],['tests']
Testability,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:161,test,testing,161,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['test'],['testing']
Testability,Now it is an actual progressbar. It uses the '\r' character; in order to erase the entire line before each update. It works in the IPython notebook as well. Tested in 3.4. It should work in 2.7. Not sure about 2.6 (because of // division operator?),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121:157,Test,Tested,157,https://qutip.org,https://github.com/qutip/qutip/pull/121,1,['Test'],['Tested']
Testability,"Now only tests which fail are on the ""Python 3.7 no Cython container"". Everything else passes. Looking into these right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560281185:9,test,tests,9,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560281185,1,['test'],['tests']
Testability,"Now that #99 is coming along, I went back to this one, and it seems to fix the unit tests for the new superrep. There's still some failures left over from #99, but they don't seem to be caused by the chi matrix support.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/97#issuecomment-39652247:84,test,tests,84,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39652247,1,['test'],['tests']
Testability,"Now that the tests are fairly stable, I'd like to get the difference-of-unitaries case working, improve coverage a bit, and it should be ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198154462:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198154462,1,['test'],['tests']
Testability,"Numpy 1.20 officially deprecated use of `np.int` and other things like `np.complex`. These were just thin aliases to Python types anyway, so that replacement is safe. Swap `float` and `complex` to `np.float64` and `np.complex128`; these still match Python precision (and standard double-precision floats), but more importantly we assume at all points in Cython code that we're dealing with double-precision arithmetic. Anything else would be a larger problem for us. In cases where `np.int` was used as a type check, we actually care more about checking for Integral typing, rather than specifically the int class; super weird constructs like; ```python; isinstance(np.int64(1), int) == False; ```; so taking indices out of an ndarry may lead to incorrect results when this sort of test is used. Better to use the abstract; ```python; isinstance(..., numbers.Integral); ```. See: https://numpy.org/doc/stable/release/1.20.0-notes.html#using-the-aliases-of-builtin-types-like-np-int-is-deprecated",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1432:782,test,test,782,https://qutip.org,https://github.com/qutip/qutip/pull/1432,1,['test'],['test']
Testability,OK that seemed to work. I'm curious how these changes might affect https://github.com/qutip/continuous-benchmark,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36084634:103,benchmark,benchmark,103,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36084634,1,['benchmark'],['benchmark']
Testability,"OK, I see. Oh well, I guess we should trying to restore multiprocessing windows.. Do you have a windows computer to test it on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-66576350:116,test,test,116,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66576350,1,['test'],['test']
Testability,"OK, I think I know why. It works fine if I try to use TextProgressBar directly in the notebook, but when I test it using mcsolve it doesn't work. It is probably because mcsolve uses multiprocessing and spawns new processes.. I'm not sure why mcsolve works with the old TextProgressBar and not this new one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121#issuecomment-41989690:107,test,test,107,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-41989690,1,['test'],['test']
Testability,"OK, my tests on python 3 has been working fine, so I'm merging this now. Thanks a lot for this nice contribution, and I'm looking forward to more PRs in the future :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-43838064:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43838064,1,['test'],['tests']
Testability,"OK, the tests are passing now, so it was not related to this PR, so I'm merging this now. Thanks for the fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/132#issuecomment-43710630:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/pull/132#issuecomment-43710630,1,['test'],['tests']
Testability,OR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - Attri,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51887,test,tests,51887,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - Attrib,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53035,test,tests,53035,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - Att,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53445,test,tests,53445,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - A,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53527,test,tests,53527,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54511,test,tests,54511,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - A,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54593,test,tests,54593,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,OR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54921,test,tests,54921,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"OR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================== 51 deselected, 52 warnings,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30935,test,tests,30935,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,Of course this is a better way to make sure it works for all operators. We can close the other PR and merge this. . The unit tests could be added though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/751#issuecomment-326161892:125,test,tests,125,https://qutip.org,https://github.com/qutip/qutip/pull/751#issuecomment-326161892,1,['test'],['tests']
Testability,"Oh sorry, I thought you were reporting the sys gcc, not the conda one. Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; platform works, it should be that one. As I originally suspected, the problem comes from the Cython code.; Specifically for the sparse matrix math. The fact that you can build it; yourself suggests a binary incompatibility. However, again, we test; against 14.04, so I am hard pressed to think about what the issue could be.; gdb might be able to hunt down where the dump occurs. On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:. Since it's the python from the conda package, I'm assuming that's because; Continuum created the linux package on a Redhat system. GCC is identified; like that on both of the workstations. But yeah, my guess would be that; there is some shared library that's compiled in a way that's incompatible; with the rest of the system. Is there any linux utility that would allow to; determine which library is being accessed at the moment of the crash? Some; invocation of ldd?. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289250540:97,test,tested,97,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289250540,2,['test'],"['test', 'tested']"
Testability,"Oh wait, I must have made a mistake. The `compile` method does not exist anymore in qutip 5, so I was not really testing the qutip5 version. Now I run it again but with the last line replaced by `mesolve`. It does seem to be solved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1190#issuecomment-1171725959:113,test,testing,113,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171725959,1,['test'],['testing']
Testability,"Oh, I completely agree with the argument nested loops/if/else. I was more talking about the logistic depth requirement (edit: wrong again, it is called Cognitive Complexity) of code climate. I just realized that is not the climate issue here. But, anyway, indeed `circuit.py` is quite messy. And the Gate class is more or less just a place holder. A refactoring to define each gate as a subclass should make things much easier. Also for this latex method. I like it very much what is going on in `dev.major`!. Tbh the millions of `_gate_resolved` functions are actually already after a short refactoring last year by a brave volunteer. It used to be 400-line functions. That was horrible. Just like the `adjacent_gates` method in `spinchain.py` (another F). I haven't dared to touch it... > For say qobj.py, the master version has maintainability F, while `dev.major` has maintainability A with the only issues being TODOs and like 5 pep8s. That's amazing! When I joined QuTiP, the overall maintainability was D, as I remember. Now it is B. I'm keen to see it becomes A after `dev.major` got merged :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1447#issuecomment-782599642:92,log,logistic,92,https://qutip.org,https://github.com/qutip/qutip/pull/1447#issuecomment-782599642,1,['log'],['logistic']
Testability,"Ok there are two issues here. 1. Scipy `atol` keyword argument has only been introduced in Scipy 1.1, the latest version. So we should bump it to 1.1 or should do nothing at all and ignore the warnings. 2. The tests are failing for the sparse eigenval function in [`qutip.tests.test_sp_eigs`](https://github.com/qutip/qutip/blob/master/qutip/tests/test_sp_eigs.py#L45). So there is something else which is breaking and this is some weird segmentation fault issue, see below. Note that the test itself was known to give trouble before. But for some reason, with Python 3+ and the latest scipy, everything works fine. . I am very much in favor of dropping support for Python 2.7 as even Numpy seems to be gearing up to drop Python 2.7. [Link](https://docs.scipy.org/doc/numpy/neps/dropping-python2.7-proposal.html). . With regards to the Scipy version, 1.1 seems okay as @nonhermitian mentioned, but it is the latest version though. . ```; @unittest.skipIf(_version2int(scipy.__version__) < _version2int('0.10'),; 'Known to fail on SciPy ' + scipy.__version__); def test_SparseHermValsVecs():; """"""; Sparse eigs Hermitian; """""" ; ```. Failure; ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6793 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/865#issuecomment-392028033:210,test,tests,210,https://qutip.org,https://github.com/qutip/qutip/pull/865#issuecomment-392028033,4,['test'],"['test', 'tests']"
Testability,"Ok, I added the tests. Took me a little moment, first time I'm doing this. Are these sufficient or should I add something else?; It's not rigorously testing everything but for sure the things that I adjusted. I also stumbled upon a deprecation warning, so I updated the syntax for the `colormaps`. With the tests for `HarmonicOscillatorWaveFunction` and `HarmonicOscillatorProbabilityFunction` I got the warning `ComplexWarning: Casting complex values to real discards the imaginary part` in two instances. Not sure how I should proceed, so I wanted to ask. Should I just ignore it and keep it like it was or search for where exactly this happens and adjust it so it explicitly calls np.real(), or maybe np.abs()? Thanks a lot for the help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2548#issuecomment-2420588426:16,test,tests,16,https://qutip.org,https://github.com/qutip/qutip/pull/2548#issuecomment-2420588426,3,['test'],"['testing', 'tests']"
Testability,"Ok, I just put it inside the `qutip/tests/test_steadystae.py` file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917699054:36,test,tests,36,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917699054,1,['test'],['tests']
Testability,"Ok, I opened an issue for the question of how to test for plotting functioniality, see #12",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/11#issuecomment-11232352:49,test,test,49,https://qutip.org,https://github.com/qutip/qutip/pull/11#issuecomment-11232352,1,['test'],['test']
Testability,"Ok, I think I get it now. Seems good to me.; I did a few tiny edits. If all tests are good and @sahmed95 happy with my edits, then I will merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-357940215:76,test,tests,76,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-357940215,1,['test'],['tests']
Testability,"Ok, I will go ahead then and fix the trivial PEP8 issues. I try to remember to run the unit tests before pushing to this pull request, so that nothing is obviously broken in it. As I went along the files there were a few issues I noticed, which I didn't want to or didn't know how to fix immediately. I will open separate issues for these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/6#issuecomment-10955326:92,test,tests,92,https://qutip.org,https://github.com/qutip/qutip/pull/6#issuecomment-10955326,1,['test'],['tests']
Testability,"Ok, I'll merge it for now, but I'll try and return to look at `dnorm` in more detail in the future, and particularly its tests; I'm also not a huge fan of having a secondary test dependence, but for the most part that's not really an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815673461:121,test,tests,121,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815673461,2,['test'],"['test', 'tests']"
Testability,"Ok, I've reverted to using the PR number for the news fragment file names, and updated the contributing/PR instructions. I also looked into why the `towncrier-check` test is failing. It looks like towncrier is not finding the `pyproject.toml` config file because it is not running in the root directory. I added a `working-directory: /` specification to the action step to address this, hopefully this should fix it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1159608537:166,test,test,166,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1159608537,1,['test'],['test']
Testability,"Ok, it looks like the tests are finally going to pass. As the number of commits suggests, this was a pain. Not because the code was wrong, but because:. 1) The default config used by Travis has GCC 4.6 which contains an error that happens to get raised in our case. Thus, had to move to the Trusty build stack. 2) Although it took forever to hunt down, it appears that when .pyx files are included as package data, Py27 may try to rebuild them upon calling **init**. This would throw a missing header error. Since these files are not needed after building, removing them clears up this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/551#issuecomment-254497807:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/551#issuecomment-254497807,1,['test'],['tests']
Testability,"Ok, it turns out I got the numpy release notes the wrong way round; we have to build our binaries with `1.16.6 <= numpy < 1.20` to maintain ABI compatibility no matter the numpy version. I have updated the compiler infrastructure to take this into account - this is in some ways a temporary restriction until two or three years in the future when we can drop support for all numpy versions less than 1.20. This is ready for final review. If you're fast, you can also try installing from the test PyPI server to see if the wheels work for you. While it's on the temporary server, you need to install `numpy` and `scipy` manually yourself (as they don't exist on test.pypi.org), but pip will do the dependencies correctly for you once it's publishing to the full repo.; ```bash; conda create -n pypi-test; conda install python pip numpy scipy; pip install -i https://test.pypi.org/simple qutip-jakelishman; python -c 'import qutip; qutip.about()'; ```. @hodgestar, @nathanshammah: perhaps you could just glance over this again and make sure everything looks right to you? Simon, I know you already looked over it once, so if you've not got time again, no problem - barely anything has changed since you last saw it. Nathan: in theory once we're in a position where deployments push to PyPI I think I can write an action for qutip/qutip.github.io to push a commit updating the website with the new information too. However, with the docs currently using a completely separate build process in a different repo, they can't really be triggered by a release here. I wrote this PR against `dev.major`, but I suppose in theory I could backport it to the 4.x branch if that's absolutely required. I think some parts of the setup changed for `dev.major`, which is why I didn't originally try to make it to the current version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158:491,test,test,491,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158,4,['test'],['test']
Testability,"Ok, it's rebased onto master as of 663523e, so it should currently merge without conflicts, and I've ensured that all the tests in `test_brmesolve_td.py` that Eric marked as slow have had that mark maintained in this new format.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1164#issuecomment-579729658:122,test,tests,122,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579729658,1,['test'],['tests']
Testability,"Ok, merging now. Looking froward to the unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/325#issuecomment-85259454:45,test,tests,45,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-85259454,1,['test'],['tests']
Testability,"Ok, my bad, I specified the wrong folder. It works for me on windows (except for some tests that are known to be failing), although it takes a bit longer to solve the dependency. It might be very useful for downstream packages since these issues kept popping up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411:86,test,tests,86,https://qutip.org,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411,1,['test'],['tests']
Testability,"Ok, seems like everything is super fragile at the mo. Can't see the extra test I added running.; NOMKL=1 OPENMP=1; Does anything else need to be done, other than editing the .travis.yml?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394281848:74,test,test,74,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394281848,1,['test'],['test']
Testability,"Ok, so I did some benchmarking at https://nbviewer.ipython.org/gist/goerz/34af142b78d7e344417d838bbea78aaf/06_example_3states_benchmark.ipynb ([gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf)), based on [one of the example notebooks from the Krotov package](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). I'll be referring to the numbered cells in that notebook in the discussion below. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:. > I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. That's certainly worth trying: when calling `mesolve` in a loop over the time grid, I did indeed see a significant speedup when summing the Lindbladian into a single constant `Qobj`, see `In [21]` vs `In [24]`. On the other hand, it doesn't always give a speedup: in the low-level [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) it actually makes the propagation slower, see `In [29]` vs `In [32]`. It's a bit surprising, but then, as you say:. > [...] This isn't guaranteed, because it involves copying rather more data _before_ the call. So that's ok. > Would something like this work for you? [...]; >; > By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately. To be clear, I personally never use collapse operators (and the Krotov documentation heavily discourages it). Inst",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:18,benchmark,benchmarking,18,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['benchmark'],['benchmarking']
Testability,"Ok, so I found that Coveralls can actually handle Cython, or more, Cython can make itself check-able with coverage tools including `pytest-cov`: see https://cython.readthedocs.io/en/latest/src/tutorial/profiling_tutorial.html#enabling-line-tracing. We'll need to enable that to get better coverage reports. Also, I found that actually the particularly large drop in reported test coverage is _not_ just because of the swap to Cython, but because when I created the `qutip.solve` logical package, I moved the tests into `tests/solve`, but didn't correctly add that to the package creation portion of `setup.py`, so the tests weren't being run. Whoops. On #1338 the coverage has jumped back up to ~70% like it was before. Tag: @Ericgig.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1339#issuecomment-675449833:375,test,test,375,https://qutip.org,https://github.com/qutip/qutip/issues/1339#issuecomment-675449833,5,"['log', 'test']","['logical', 'test', 'tests']"
Testability,"Ok, thanks for restarting the test, we'll see what happens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/721#issuecomment-316065153:30,test,test,30,https://qutip.org,https://github.com/qutip/qutip/pull/721#issuecomment-316065153,1,['test'],['test']
Testability,"Ok, thanks. I made the pep8 fix. I will merge when tests have passed again",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/821#issuecomment-366218431:51,test,tests,51,https://qutip.org,https://github.com/qutip/qutip/pull/821#issuecomment-366218431,1,['test'],['tests']
Testability,"Ok, that particular problem has been fixed. Now the build fails for 1 function: TestPulseOptim",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/972#issuecomment-482252838:80,Test,TestPulseOptim,80,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-482252838,1,['Test'],['TestPulseOptim']
Testability,"Ok, the issue seems to be rooted in Scipy's `block_diag` function which was fixed in 0.19.; https://github.com/scipy/scipy/issues/4908. I attempted to bump up the scipy and cython version and tested this locally. All tests pass now. I will try the same with conda. ```; QuTiP Version: 4.3.0.dev0+2ac36add; Numpy Version: 1.14.4; Scipy Version: 0.19.1; Cython Version: 0.28.3; Matplotlib Version: None; Python Version: 2.7.15; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/shahnawaz/dev/qutip/qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396122238:192,test,tested,192,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396122238,2,['test'],"['tested', 'tests']"
Testability,"Ok, the problem was a dumb change I made in the name of ""neatness"", and didn't test locally. For some reason I decided to change my original `cdef int _safe_multiply(int a, int b) except -1` into `except 0`, completely eschewing 50 proud years of C tradition _and_ forgetting that 0 is a normal, valid return value and can't be the error condition.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132:79,test,test,79,https://qutip.org,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132,1,['test'],['test']
Testability,"Ok, the tests have been fixed so I am going to merge. I will squash merge as suggested by Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/459#issuecomment-215860625:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-215860625,1,['test'],['tests']
Testability,"Ok, we should be set now. Tested working on GCC, CLANG, mingwpy, and VS 2015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281545441:26,Test,Tested,26,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281545441,1,['Test'],['Tested']
Testability,"Ok, yeah, I definitely see the use-case here. I'll leave it removed from `matmul` for the time being because I hadn't really organised that code to allow safe calling of the function with an `out` parameter, but I'll look to re-instate it, similarly with `add`. For `add`: I envisage a nice possibility for `QobjEvo` using `CSR` backing along the vein of `CQobjEvoTdMatched`: on instantiation we add together all the matrices, then we `memset` all zeroes along the `data` array and store it as `self._structure`. Then each time we `__call__` the object, we simply do `out = self._structure.copy()`, and use that as the output matrix, because we guarantee we'll always have enough space and the correct structure. There's a couple of minor kinks in the logic of `add_csr` that we might have to iron out in order to avoid an additional matrix addition, but the savings in memory allocation could be good. You're absolutely right about the `pxd` files - I haven't taken enough care to make sure they've got all the definitions in yet. Basically everything that isn't prefixed with an underscore in the `.pyx` files _should_ be in the `.pxd` files. I'll add them in tomorrow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648371869:752,log,logic,752,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648371869,1,['log'],['logic']
Testability,"Ok. I wrote a test for it. The error message can be seen below. I will open a PR to resolve this. Thank you very much for raising the issue.; ```; qc = QubitCircuit(3); qc.add_gate(""CNOT"", targets=[1], controls=[0]); test_gate = Gate(""RZ"", targets=[1], arg_value = 1.570796,; arg_label=""P""); qc.add_gate(test_gate); qc.reverse_circuit(); ```. ```; ERROR: Reverse a circuit; ----------------------------------------------------------------------; Traceback (most recent call last):; dev/qutip/qutip/qip/circuit.py"", line 371, in reverse_circuit; temp.append(self.gates[self.N - i - 1]); AttributeError: 'QubitCircuit' object has no attribute 'append'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698877:14,test,test,14,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698877,1,['test'],['test']
Testability,On a similar subject I was doing some matrix multiplication benchmarking recently. I found that:; ```; q1.full().dot(q2.full()); ```; was faster than; ```; q1.data*q2.data; ```; for nnz > 10% using randomly generated matrices (on my linux desktop). Full nnz=100% the full matrix multiplication was 20x faster. I was testing with 1024x1024 matrices.; Should we consider having some benchmarking like this pull for when we should convert to full() for matrix multiplication?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/652#issuecomment-283906459:60,benchmark,benchmarking,60,https://qutip.org,https://github.com/qutip/qutip/pull/652#issuecomment-283906459,3,"['benchmark', 'test']","['benchmarking', 'testing']"
Testability,"On a subsequent run, the build on Travis CI failed. . The two runs were prompted by the same branch, minutes apart, but differed for the version of Python that Travis CI picked up (3.72 working, 3.73 failing) and some minor decimal difference in release version of one dependency (Cython if I remember correctly). . Making a branch with a special .travis.yml file with additional osx_image instructions for the Mac OS build might help to sort this out. Two days ago Travis switched to Python 3 as default installation language and unexpectedly yesterday I noticed that some of the failing builds on previous branches were successful. We are always building with Python 3, as it says in the change log, I am just wondering if some dependency was doing something incorrectly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484739775:697,log,log,697,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484739775,1,['log'],['log']
Testability,"On mac, testing #1241, I get:; `qutip/tests/test_cavityqed.py::Testcqed::test_numerical_evo Segmentation fault: 11`; Does this address it somewhay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081:8,test,testing,8,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081,3,"['Test', 'test']","['Testcqed', 'testing', 'tests']"
Testability,"On my Mac (Mojave 10.14.5) the latest development version of qutip tests can fail at different points. . First, I run into an abort trap at ptrace. . Then, upon another run, I bumped into this other abort trap error ; ```; tests/test_superop_reps.py::TestSuperopReps::test_ChoiKrausChoi Fatal Python error: Aborted. Current thread 0x000000010b9155c0 (most recent call first):; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/superop_reps.py"", line 547 in to_kraus; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_superop_reps.py"", line 106 in test_ChoiKrausChoi; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 166 in pytest_pyfunc_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 1435 in runtest; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 131 in pytest_runtest_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 207 in <lambda>; File ""/min",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160:67,test,tests,67,https://qutip.org,https://github.com/qutip/qutip/issues/1160,4,"['Test', 'test']","['TestSuperopReps', 'tests']"
Testability,"On my system the following tests fails:. Sparse: Symmetric Reverse Permute ... ERROR; Sparse: Nonsymmetric Reverse Permute ... ERROR; Sparse: Bandwidth ... ERROR. More detailed info:; # ; ## ERROR: Sparse: Symmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:27,test,tests,27,https://qutip.org,https://github.com/qutip/qutip/issues/73,3,['test'],"['test', 'tests']"
Testability,"On the `test_dqd_current()` test: it appears that the problem is with the element 14 in the `eps_vec`. I did some more checking with different values for `eps_vec`, and there are other values which give problems, you can see the code below. . I defined a function that returns the values for a given value of `eps`:. ```python; def current_noise_eps(eps):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current, noise = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops). current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current - current2) < 1e-8. current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current - current2) < 1e-8. current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps**2*GammaL)**2); ). return current.flatten()[0], current_target, noise.flatten()[0], noise_target, rhoss; ```. Now I have the following:. ```; >>> res = current_noise_eps(1.04); >>> print(res[2:4]); (0.06374906663351243, 0.0011104778081249154); ```. So the `noise` is quite different from `noise_target`. But if I increment `eps` by `1e-15` then everything is fine. ```; >>> res1 = current_noise_eps(1.04+1e-15); >>> print(res1); (0.0011104778081249132, 0.0011104778081249143); ```. Comparing `rhoss` in the two cases gives differences that are of the order of the increment in `eps`:. ```; >>> print(res[-1].data.todense() - res1[-1].data.todense()); [[ 1.11022302e-16+0.00000000e+00j 0.00000000e+00+0.00000000e+00j; 0.00000000e+00+0.00000000e+00j]; [ 0.00000000e+00+0.00000000e+00j -5.55111512e-16+0.00000000e+00j; -1.11022302e-16+8.67361738e-19j]; [ 0.00000000e+00+0.00000000e+00j -1.11022302e-16-8.67361738e-19j; 2.22044605e-16+0.00000000e+00j]]; ```. So I think the problem is ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1008864494:28,test,test,28,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1008864494,3,"['assert', 'test']","['assert', 'test']"
Testability,On the other hand I'm not completely against just having this as a safety net for wonky tests anyway.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1787#issuecomment-1023383098:88,test,tests,88,https://qutip.org,https://github.com/qutip/qutip/pull/1787#issuecomment-1023383098,1,['test'],['tests']
Testability,"On x64, I had arch Linux in mind... I don't have a setup to test on aarch64, nor ever tried to emulate it. ; It may take some time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316#issuecomment-1928064297:60,test,test,60,https://qutip.org,https://github.com/qutip/qutip/issues/2316#issuecomment-1928064297,1,['test'],['test']
Testability,"Once installed, running; ```; import qutip.testing as qt; qt.run(); ```. fails:; ```; Python Version: 2.7.15; Traceback (most recent call last):; File ""t.py"", line 2, in <module>; qt.run(); File ""/usr/local/lib/python2.7/site-packages/qutip/testing.py"", line 40, in run; about(); File ""/usr/local/lib/python2.7/site-packages/qutip/about.py"", line 77, in about; print(""Number of CPUs: %s"" % hardware_info()['cpus']); KeyError: 'cpus'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403717297:43,test,testing,43,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403717297,2,['test'],['testing']
Testability,One fail in some rand test. Just outside tolerance; Merging anyway,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889#issuecomment-403459908:22,test,test,22,https://qutip.org,https://github.com/qutip/qutip/pull/889#issuecomment-403459908,1,['test'],['test']
Testability,One minor thing; I guess finite n_th was included in the test functions because it also removes the singular behavior in the sparse solvers.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528#issuecomment-243346854:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/528#issuecomment-243346854,1,['test'],['test']
Testability,Oooh. Tests pass. Perhaps we can merge the branch?. @Ericgig Would you mind reviewing?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-1103686513:6,Test,Tests,6,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-1103686513,1,['Test'],['Tests']
Testability,"OpenMP broken in current master, OpenMP tests worrying",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1470:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/issues/1470,1,['test'],['tests']
Testability,"Openmp test on travis tend to hang at the calibration step.; The calibration function compute the matrix vector product with increasing size until the parallel version is faster or it give up. But on Travis, there is only 1 cpu, so the speed up is never observed and the calibration does not give up searching quickly enough. (Over 10min). In this PR:; - Skip calibration if only 1 cpu.; - Faster calibration by skipping some of the later size and testing only up to 100000 elements. (threshold around 1000 on my cpus); - Settings used in tests are fixed to use omp if compiled with it, even if slower. (thresh hold at 100)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1154:7,test,test,7,https://qutip.org,https://github.com/qutip/qutip/pull/1154,3,['test'],"['test', 'testing', 'tests']"
Testability,"Originally reported in #944. Tests seem to be failing for MacOS. We get errors like; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; The build is pretty much always failing, but sometimes passes. I think we only get the errors when tests are run, the functions work fine otherwise. I think someone tried pytest and still got same errors. So kind of a nasty one to investigate, but there might be an easy fix if we can work out what to do. I believe @nathanshammah has done some quite thorough investigation and could probably add to this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963:29,Test,Tests,29,https://qutip.org,https://github.com/qutip/qutip/issues/963,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"Our diamond norm calculation in [QPtomographer](https://github.com/Tomographer/QPtomographer/) is written in C++ in the file [QPtomographer/cxx/diamond_norm_scs.h](https://github.com/Tomographer/QPtomographer/blob/master/cxx/diamond_norm_scs.h) (see [QPtomographer/test/test_diamond_norm.cxx](https://github.com/Tomographer/QPtomographer/blob/master/test/test_diamond_norm.cxx) for an example usage) and uses the C interface of [the SCS solver](https://github.com/cvxgrp/scs). The way it stands, it also depends on [Eigen C++ header library](http://eigen.tuxfamily.org/), but it should be easy to remove this dependency as it is only used to specify the input matrices. Other minor dependencies are easily removed. I'm not sure what underlying mechanism you use in QuTiP, but it should be relatively straightforward to reformat the whole class into a C implementation with only SCS as a dependency. Unfortunately the python `scs` package does not install C headers, so that dependency might turn out to be something to worry about. Perhaps SCS itself can be integrated in the QuTiP source?. I'd be happy if our code is useful for you, and let me know if you'd like any clarifications about our implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-494716341:265,test,test,265,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-494716341,2,['test'],['test']
Testability,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357,4,['test'],"['testing', 'tests']"
Testability,PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H FAILED [ 97%]; qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str FAILED [100%]. ======================================================================================================================================== FAILURES ========================================================================================================================================; __________________________________________________________________________________________________________________________ test_time_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:7471,test,tests,7471,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,PPoly and Bspline accept real coeff + tested,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2397:38,test,tested,38,https://qutip.org,https://github.com/qutip/qutip/pull/2397,1,['test'],['tested']
Testability,"PR #1692 passed the test suite after updating to the latest master, so I'm not sure what is happening. I will try re-run these tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-947778949:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-947778949,2,['test'],"['test', 'tests']"
Testability,"PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3740,test,test,3740,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['test'],['test']
Testability,"Parallel map function having different behaviour on different OS is not new, it's quite annoying.; I am quite surprised (and sad) that it Mac that is going fine for this one. Most cluster are using linux, so I would be fine to just run the test once on linux... I understand that you are developing with a mpi enable cluster, not just your local machine. Do you use `mpiexec` when running the tests? Maybe not using it with pytest could have side effects. Maybe mpi4py's [discussions board](https://github.com/mpi4py/mpi4py/discussions) could help? They also have a google group, but it seems full of spam... I have access to a cluster and I will try it later this week. I will come back to you if I find something interesting. But I have little experience with mpi in python.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1906562182:240,test,test,240,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1906562182,2,['test'],"['test', 'tests']"
Testability,"Passes fine for me, patched onto 4.6.2.; Running tests locally,; ```; ...; tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 79%]; ...; tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]. === 1910 passed, 20 skipped, 67 deselected, 53 warnings in 472.83s (0:07:52) ===; autopkgtest [16:47:24]: test test-qutip: -----------------------]; autopkgtest [16:47:24]: test test-qutip: - - - - - - - - - - results - - - - - - - - - -; test-qutip PASS; autopkgtest [16:47:24]: @@@@@@@@@@@@@@@@@@@@ summary; test-qutip PASS; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1648#issuecomment-909311635:49,test,tests,49,https://qutip.org,https://github.com/qutip/qutip/pull/1648#issuecomment-909311635,11,"['Test', 'test']","['TestCircuitProcessor', 'test', 'test-qutip', 'testPlot', 'tests']"
Testability,Perfect! Thanks for checking. The numbers of tests are different though (382 / 369)?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130869931:45,test,tests,45,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130869931,1,['test'],['tests']
Testability,"Perfect, that's what I thought thanks. `git cherry-pick` isn't a good choice for merging, because it creates new commit objects. Doing that means we never explicitly told git how the two implementations should be picked going forwards, and so any additional changes on `dev.major` _also_ could never be merged in, because they'd have different commits as their parents. Logically it's a merge operation and this is a ""true"" merge conflict, so the right thing to do is to tell git how to solve the conflict. I've already got a fixed merge all ready to go - once we've got #1440 merged I'll make the PR up, so `dev.major` is once again completely ahead of `master`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1289#issuecomment-779255284:370,Log,Logically,370,https://qutip.org,https://github.com/qutip/qutip/pull/1289#issuecomment-779255284,1,['Log'],['Logically']
Testability,Perhaps we could ask Arne himself if he wants to write a test for it? I am a bit surprised that he did not submit it with a notebook at least. @nwlambert are you still in touch with Arne?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2152#issuecomment-1591401079:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/2152#issuecomment-1591401079,1,['test'],['test']
Testability,"Perhaps you need to reverse the change 568d46e68513e2cca420f4292ab55abf9dadb316 that I made in an attempt to fix the failing tests, now that you have fixed super_to_choi?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/85#issuecomment-36420433:125,test,tests,125,https://qutip.org,https://github.com/qutip/qutip/pull/85#issuecomment-36420433,1,['test'],['tests']
Testability,Please add the 'test' target to setup.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/410:16,test,test,16,https://qutip.org,https://github.com/qutip/qutip/issues/410,1,['test'],['test']
Testability,Please rebase this against the current master @IIAOPSW . There are some changes in the travis.yml file put in by @ajgpitch which selectively avoids some py2.7 tests. There were many new additions to tackle some Python 2 issues too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398000185:159,test,tests,159,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398000185,1,['test'],['tests']
Testability,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:169,benchmark,benchmark,169,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,Pow tests for data layer.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1622:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/1622,1,['test'],['tests']
Testability,"Previously, all tests in `test_metrics.py` were skipped if cvxpy or cvxopt were not installed. Addresses part 1 of https://github.com/qutip/qutip/issues/1703. **Changelog**; Only skip the dnorm tests if cvxpy is not installed (previously all metrics tests were skipped).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1704:16,test,tests,16,https://qutip.org,https://github.com/qutip/qutip/pull/1704,3,['test'],['tests']
Testability,Propagator tests leave .pyx files,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/643:11,test,tests,11,https://qutip.org,https://github.com/qutip/qutip/issues/643,1,['test'],['tests']
Testability,Proposed solution to #1433. See that issue/commit logs for more details on this PR.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1434:50,log,logs,50,https://qutip.org,https://github.com/qutip/qutip/pull/1434,1,['log'],['logs']
Testability,Ptrace tests specalisation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1744:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1744,1,['test'],['tests']
Testability,Ptrace tests specalisation and bug fix.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1745:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1745,1,['test'],['tests']
Testability,Qtrl increase test tol,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/604:14,test,test,14,https://qutip.org,https://github.com/qutip/qutip/pull/604,1,['test'],['test']
Testability,Qtrl split unitary tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/600:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/pull/600,1,['test'],['tests']
Testability,Qtrl test out directory auto-create sync fix,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/313:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/pull/313,1,['test'],['test']
Testability,Qtrl unit tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/383:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/383,1,['test'],['tests']
Testability,"QuTiP 4.5.3 doesn't support M1 Macs, sorry. None of us has access to one to test, and our CI didn't support them for quite a while. This will be fixed in the next release of QuTiP. In the meantime, you can either build the package from the current source code here, or you can go into your QuTiP installation folder and comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473#issuecomment-808873718:76,test,test,76,https://qutip.org,https://github.com/qutip/qutip/issues/1473#issuecomment-808873718,1,['test'],['test']
Testability,"QuTiP 4.5.3 fails to build from source distribution on PyPI, e.g. on Windows:; ```; c1xx: fatal error C1083: Cannot open source file: 'qutip/cy/openmp/src/zspmv_openmp.cpp': No such file or directory; ```; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449:688,test,tests,688,https://qutip.org,https://github.com/qutip/qutip/pull/1449,2,"['log', 'test']","['log', 'tests']"
Testability,QuTiP installation test - FAILED test power-gmres,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/issues/1750,2,['test'],['test']
Testability,"QuTiP is currently distributed through both Anaconda's conda-forge channel (`conda install qutip`) and PyPI (`pip install qutip`).; It could be helpful to the maintainers to have the project also on the test channel of PyPI, https://test.pypi.org, testing the distribution before uploading a new release on the actual PyPI channel. The [instructions](https://packaging.python.org/guides/using-testpypi/) are straightforward. Placing this as a memo for v. 4.4. Testing this would be helpful also as we attempt the wheels configuration (#933), which, as I understood from @Ericgig, might not be so straightforward given the low-level calls that QuTiP makes in some functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/992:203,test,test,203,https://qutip.org,https://github.com/qutip/qutip/issues/992,5,"['Test', 'test']","['Testing', 'test', 'testing', 'testpypi']"
Testability,"QuTiP is currently incompatible with numpy 1.20. Tests will fail to even collect with an error such as; ```; AttributeError: 'numpy.ndarray' object has no attribute 'dag'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:49,Test,Tests,49,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['Test'],['Tests']
Testability,"Questions / doubt I still have is about making the `default` mandatory for states.; At first I wanted to pass `qzeros` with the dims fetched from those of the `QobjEvo`, but sometime we need to use the args first to get the QobjEvo's dimensions... I also added test for `QobjEvo.dag().dims`, previously the test passed even without the fix because we only tested for the returned qobj's dims.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1845422093:261,test,test,261,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1845422093,3,['test'],"['test', 'tested']"
Testability,Qutip use the logging library anymore.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156#issuecomment-2029146647:14,log,logging,14,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-2029146647,1,['log'],['logging']
Testability,"Qutip works fine with numpy 1.21.1, but fails on import with 1.22 numpy, released Dec 31st. Tested on ubuntu and MacOS. ```; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. Failure occurs here,. https://github.com/qutip/qutip/blob/52d01da181a21b810c3407812c670f35fdc647e8/qutip/utilities.py#L340. which is kind of mysterious since line 339 explicitly checks that the 'blas_opt_info' attribute exists, and then fails at line 340 because the attribute doesn't exist.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766:92,Test,Tested,92,https://qutip.org,https://github.com/qutip/qutip/issues/1766,1,['Test'],['Tested']
Testability,R ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpos,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52297,test,tests,52297,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,R ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - Attrib,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52379,test,tests,52379,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,R ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54183,test,tests,54183,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"R ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55167,test,tests,55167,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py -,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52051,test,tests,52051,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py -,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52461,test,tests,52461,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52543,test,tests,52543,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - At,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52625,test,tests,52625,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - Att,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52707,test,tests,52707,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53199,test,tests,53199,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py -,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53937,test,tests,53937,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54675,test,tests,54675,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,ROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - At,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54757,test,tests,54757,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"ROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make su",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:9487,test,test,9487,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperator).norm(maxiter=1e6) < 1e-5; E assert 313.53468707624677 < 1e-05; E + where 313.53468707624677 = <bound method Qobj.norm of Quantum object: dims = [[[8, 8], [8, 8]], [[8, 8], [8, 8]]], shape = (4096, 4096), type = s..... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]>(maxiter=1000000.0); E + where <bound method Qobj.norm of Quantum object: dims = [[[8, 8], [8, 8]], [[8, 8], [8, 8]]], shape = (4096, 4096), type = s..... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]> = (Quantum object: dims = [[[8, 8], [8, 8]], [[8, 8], [8, 8]]], shape = (4096, 4096), type = super, isherm = False\nQobj d...1.84124822e-06j ... -7.30641275e-03+5.65115172e-04j\n -1.23645213e-03+1.49052236e-03j 1.24635971e-01+0.00000000e+00j]] - Quantum object: dims = [[[8, 8], [8, 8]], [[8, 8], [8, 8]]], shape = (4096, 4096), type = super, isherm = False\nQob",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:2212,assert,assert,2212,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['assert'],['assert']
Testability,RROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - Attri,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51805,test,tests,51805,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - At,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51969,test,tests,51969,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseproce,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52133,test,tests,52133,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py -,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52215,test,tests,52215,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - Att,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52871,test,tests,52871,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - A,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52953,test,tests,52953,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53609,test,tests,53609,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53691,test,tests,53691,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54265,test,tests,54265,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.p,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54429,test,tests,54429,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54839,test,tests,54839,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - At,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55003,test,tests,55003,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 6,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55085,test,tests,55085,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,RROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ==,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30856,test,tests,30856,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"RS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1125,test,test-environment,1125,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,Re failing `smesolve` -- the tests pass together locally. I see Travis builds master with the PR merged in. I've merged master in to this branch in case that helps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-536773249:29,test,tests,29,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536773249,1,['test'],['tests']
Testability,Re-add scipy<1.5 test constraint,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1363:17,test,test,17,https://qutip.org,https://github.com/qutip/qutip/pull/1363,1,['test'],['test']
Testability,Re-enable all cvxpy and pyximport warnings on Python 3.10 and 3.11 tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2084:67,test,tests,67,https://qutip.org,https://github.com/qutip/qutip/pull/2084,1,['test'],['tests']
Testability,Re-enable test errors on ImportWarning,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2083:10,test,test,10,https://qutip.org,https://github.com/qutip/qutip/pull/2083,1,['test'],['test']
Testability,Rebase done. Just waiting for tests to finish re-running.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1633#issuecomment-925011432:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/pull/1633#issuecomment-925011432,1,['test'],['tests']
Testability,Recommended subset of tests for faster testing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/issues/1147,2,['test'],"['testing', 'tests']"
Testability,Reduce qutip import time by setting logger names,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1980:36,log,logger,36,https://qutip.org,https://github.com/qutip/qutip/pull/1980,1,['log'],['logger']
Testability,Reduce qutip import time by setting logger names (v5),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1981:36,log,logger,36,https://qutip.org,https://github.com/qutip/qutip/pull/1981,1,['log'],['logger']
Testability,"Referencing this : https://github.com/qutip/qutip-doc/pull/70. 1. Having manually compiled the changelog for v4.4.1 and v4.5.x today, I think that maybe we should try automating the release notes/changelogs with something like this : https://github.com/github-tools/github-release-notes; I'm attaching release notes generated by this for QuTiP.; [RELEASE_NOTES.txt](https://github.com/qutip/qutip/files/3728179/RELEASE_NOTES.txt). 2. We could also, in pursuit of having an automated release notes/changelog system start with making commits in more of a standard format, using some pre-decided keywords like [bugfix] or [improvement] in the commit message. I understand that this is a rather ambitious thing to say, but we can then use `grep` and `git log` itself to generate these in markdown. As a first step, I am proposing to use **Pull request /Issue** templates, something like this for instance : https://github.com/angular-translate/angular-translate/blob/master/.github/ISSUE_TEMPLATE.md; This way, all our Pull Requests and Issues will be homogeneously formatted.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:751,log,log,751,https://qutip.org,https://github.com/qutip/qutip/issues/1108,1,['log'],['log']
Testability,"Regarding your questions:. - It's the same in QuTiP 5 currently. I am creating a PR also for that version, but I will include support for multiple coupling operators to the PR.; - Yes, I will add a test for this.; - This parameter is only relevant for `fmmesolve` ( master equation solver ). There is already the parameter `kmax` which sets the truncation of sidebands to be considered for the integration of the coupling operator. The integral to solve reads as:. $$ \frac{1}{T} \int_0^T dt e^{-ik\Omega t} f(t) $$. where $k \in \[-k_{max}, k_{max} \]$ and $f(t)$ is a $T$-periodic function. Hence, we know the frequency of the integrand and therefore the required number of grid points for the numerical integration can be set based on `kmax`.; I think, we don't need to create another parameter for `nT`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790:198,test,test,198,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790,1,['test'],['test']
Testability,Remove Windows test suite warnings suppression.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2119:15,test,test,15,https://qutip.org,https://github.com/qutip/qutip/pull/2119,1,['test'],['test']
Testability,"Remove `Coefficient.argument` which modify the object inplace for `Coefficient.replace` which return a modified copy.; `Copy` of string coefficient is optimized.; Initially from #1481, more discussion there. Some circular import in unrelated files have been moved inside function as they are causing problem in tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1507:311,test,tests,311,https://qutip.org,https://github.com/qutip/qutip/pull/1507,1,['test'],['tests']
Testability,Remove duplicated test runners,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161:18,test,test,18,https://qutip.org,https://github.com/qutip/qutip/pull/1161,1,['test'],['test']
Testability,Remove duplicated tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2486:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/pull/2486,1,['test'],['tests']
Testability,Remove logging utils,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2146:7,log,logging,7,https://qutip.org,https://github.com/qutip/qutip/pull/2146,1,['log'],['logging']
Testability,Remove star import in tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/726:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/726,1,['test'],['tests']
Testability,Removed hardcoded pulse generator num_waves from create_pulse_optimizer; Changed TRIANGLE pulse type to start from zero (to match the other periodic types); Added test that checks freq and num_waves pulse parameters are applied correctly in create_pulse_optimizer. resolves issue #412,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/415:163,test,test,163,https://qutip.org,https://github.com/qutip/qutip/pull/415,1,['test'],['test']
Testability,"Removes the `nose` test runners found in `qutip.testing.run()` in #1158. This isn't ready to be merged yet, I think - there's still references to `nose` in `setup.py`, and a comment in `test_qobj.py`, the context of which suggests that the tests are organised specifically for `nose`. I'm not familiar enough with the differences between `nose`, `pytest` and `unittest` to know how much of a problem the latter is, though.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/pull/1161,3,['test'],"['test', 'testing', 'tests']"
Testability,"Repeat the test 20 times and accept if at least 19 pass?. I remember adapting the tests when numpy's rng changed. 1~2 where failing. I believe that the tests pass over 99% with a random seed, but with the number of tests, it's not enough. I did not realize the test tolerance was smaller than the test one. But the solver tolerance is for the state itself, not expectation values and other scalars obtained from them. The test is not to check numerical error. When there is an mistake in the code, the error is orders of magnitude greater. Not sure if using the sovler's tol is right, but probably better than using a number that just seems to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705:11,test,test,11,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705,7,['test'],"['test', 'tests']"
Testability,"Repeating just changes the probability of failure, rather than actually detecting whether it was a rare fail, and `mesolve` tests aren't always the fastest, so repetition here isn't great. For simple unitary qubit operations, I think it should be easy enough to work out how the tolerance translates. It's difficult to say that if there's a numerical error then the error will be much greater - I caught some errors in the `test_gates.py` (I think) that were sneaking through because the tolerances were set too high. It's probably best to keep as tight a tolerance as is reasonable - here I think `2 * qutip.Options.rtol` would always be correct if the numerics are.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751:124,test,tests,124,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751,1,['test'],['tests']
Testability,"Required due to changes in scipy 1.6.1. Using an explicit dtype will make matrix construction more robust. Fixes qutip Issue #1451. Tested on Debian unstable, with this patch tests/test_sparse.py now passes with scipy 1.6.1. **Description**. scipy 1.6.1 changed the API for constructing sparse matrices with `scipy.sparse.csr_matrix` (affecting the COO format). This caused qutip TestDicke tests in test_piqs.py (test_lindbladian, test_lindbladian_dims, test_liouvillian) to fail. . This patch avoids the problem by setting the dtype explicitly to np,complex128. . **Related issues or PRs**. fixes #1451. **Changelog**; Provide explicit dtype=np.complex128 when constructing sparse matrixes with csr_matrix. Required for working with scipy 1.6.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1452:132,Test,Tested,132,https://qutip.org,https://github.com/qutip/qutip/pull/1452,4,"['Test', 'test']","['TestDicke', 'Tested', 'tests']"
Testability,Restarted the Travis CI build to check whether this keeps being the latest PR where tests run fine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-540419070:84,test,tests,84,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-540419070,1,['test'],['tests']
Testability,Restore steady and liouvillian unit test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/173:36,test,test,36,https://qutip.org,https://github.com/qutip/qutip/pull/173,1,['test'],['test']
Testability,"Restructed the benchmark scripts so that matlab and qutip benchmarks can be run separately, and the comparison be done with two arbitrary benchmark results. The point of this is to make it possible to compare the benchmark results of two qutip versions, for example the last stable release and the current development code.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/14:15,benchmark,benchmark,15,https://qutip.org,https://github.com/qutip/qutip/pull/14,4,['benchmark'],"['benchmark', 'benchmarks']"
Testability,Rewrote `clebsch` function based on long integer fraction. Thus escaping the rounding error mentioned in #1141. Surprisingly it's a little faster than the float implementation. . Also added tests for the function. Closes #1141,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1142:190,test,tests,190,https://qutip.org,https://github.com/qutip/qutip/pull/1142,1,['test'],['tests']
Testability,"Rewrote sesolve, mesolve and mcsolve to use QobjEvo.; Compatible with previous version, solvers' test pass without modification. Feature/imporvement:; - state can be obtain as an argument as a vector or Qobj.; - expectation values also can be arguments.; - The system is saved in a object to be reuse.; - mcsolve is fully class based. (but the use as object is not documented); - s/mesolve follow a similar pattern to be easily made to class.; - Experimental: diagonalized mcsolve.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969:97,test,test,97,https://qutip.org,https://github.com/qutip/qutip/pull/969,1,['test'],['test']
Testability,"Right. I forgot that I had used map there, too. Anyway, it's fixed now, and that makes the `test_superoperator` unit tests pass on my system with Python 3.3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39657663:117,test,tests,117,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39657663,1,['test'],['tests']
Testability,Rtol for tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1709:9,test,tests,9,https://qutip.org,https://github.com/qutip/qutip/pull/1709,1,['test'],['tests']
Testability,Run mac test without MKL,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2020:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/2020,1,['test'],['test']
Testability,Run mac tests without mkl,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2019:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/pull/2019,1,['test'],['tests']
Testability,"Running `nosetests` in a conda environment in Python 3.6 on a Mac High Sierra 10.13.6 gives; ```. /Users/nathanshammah/github/qutip/qutip/tests/test_metrics.py:300: DeprecationWarning: invalid escape sequence \oegmentation fault: 11; ``` ; and kils the tests. ; If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496383789:138,test,tests,138,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496383789,3,['test'],"['test', 'tests']"
Testability,"Running on Python 2.7 (Ubuntu 14.10) on my local system, this change significantly increased the performance. For some reason, the change was less pronounced using Python 3.4 on the same system (under 1 second change), but in both cases, this PR resulted in test times that were at least as fast as master. ```; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ time nosetests qutip; ..............................................................................................SSSSSSS............................................................................................................................................................................................................................................/home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:434: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 382 tests in 292.925s. OK (SKIP=7). real 4m54.023s; user 11m20.584s; sys 0m5.356s; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ git checkout fix-isherm-lazy ; Switched to branch 'fix-isherm-lazy'; cgranade@berith:~/Dropbox/software-projects/qutip (fix-isherm-lazy)$ time nosetests qutip; ..............................................................................................SSSSSSS.............................................................................................................................................................................................................................../home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:436: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 369 tests in 283.042s. OK (SKIP=7). real 4m43.554s; user 10m51.428s; sys 0m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130556638:258,test,test,258,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130556638,2,['test'],"['test', 'tests']"
Testability,Running qutip tests is leaving behind rhs*.pyx files.; @nonhermitian I think you said you know which one(s); I guess it's quite easy to fix if I can pin-point the offender,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/601:14,test,tests,14,https://qutip.org,https://github.com/qutip/qutip/issues/601,1,['test'],['tests']
Testability,"Running this code; ```; import qutip.testing as qt; qt.run(); ```; produces an error:; ```; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""qutip/qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""qutip/fastsparse.py"", line 406, in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); File ""qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; ImportError: No module named spmatfuncs; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891:37,test,testing,37,https://qutip.org,https://github.com/qutip/qutip/issues/891,1,['test'],['testing']
Testability,"Running this code; import qutip.testing as qt; qt.run(); produces an error:. Monte-carlo: Collapse terms constant (str format) ... cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_130828459648281117.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:32,test,testing,32,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['test'],['testing']
Testability,"Running without MKL will be a bit slower in many cases but should otherwise work fine. If you can try upgrading to numpy 1.22 and checking that the tests pass for you, that would be great!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005733376:148,test,tests,148,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005733376,1,['test'],['tests']
Testability,SSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/t,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6874,test,tests,6874,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"SSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H FAILED [ 97%]; qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str FAILED [100%]. ======================================================================================================================================== FAILURES ========================================================================================================================================; __________________________________________________________________________________________________________________________ test_time_dependent_spline_in_c_ops ___________________________________________________________________________________________________________________________. def test_time_dependent_spline_in_c_ops():; N = 10; a = qutip.destroy(N); H = a.dag()*a; psi0 = qutip.basis(N, 9); times = np.linspace(0, 10, 100); kappa = 0.2; exact = 9 * np.exp(-2 * kappa * (1 - np.exp(-times))); a_ops = [[a + a.dag(), _string_w_interpolating_t(kappa, times)]]; collapse_points = np.sqrt(k",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:7876,Test,TestSESolve,7876,https://qutip.org,https://github.com/qutip/qutip/issues/2293,2,"['Test', 'test']","['TestSESolve', 'tests']"
Testability,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:241,test,test,241,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,2,['test'],"['test', 'testing']"
Testability,Scipy 1.5 changes to linalg.eigh break brtools zheevr tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/issues/1299,1,['test'],['tests']
Testability,"Scipy<1.5 hermitian eigenvalue claculation causing wrong results, should update requirements and testsuite",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:97,test,testsuite,97,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['test'],['testsuite']
Testability,"Seed will be moved but not removed. Please skip the test for now.; I was surprised how easily the test where passing. If all the solver test where skipped, there may be a few fails.; I will add the KeyError in __setitem__.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675510228:52,test,test,52,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675510228,3,['test'],['test']
Testability,Seems interesting but tests are failing...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-465834865:22,test,tests,22,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-465834865,1,['test'],['tests']
Testability,"Seems like an interesting piece of work. I have asked for comments from members of our group here; In general it seems like a great idea to get new research into qutip, so that interested groups can test, compare, use etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/357#issuecomment-125914337:199,test,test,199,https://qutip.org,https://github.com/qutip/qutip/pull/357#issuecomment-125914337,1,['test'],['test']
Testability,Segfault when trying to run tests locally,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:28,test,tests,28,https://qutip.org,https://github.com/qutip/qutip/issues/1093,2,['test'],['tests']
Testability,Send email test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2244:11,test,test,11,https://qutip.org,https://github.com/qutip/qutip/pull/2244,1,['test'],['test']
Testability,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:15,test,testing,15,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939,16,"['log', 'test']","['log', 'test', 'testing', 'tests']"
Testability,Shorter krylov tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1861:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/1861,1,['test'],['tests']
Testability,Should a new issue be created to replace deprecated method unittest.TestCase.assert_() with newer assertEqual/NotEqual?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-603454503:68,Test,TestCase,68,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603454503,2,"['Test', 'assert']","['TestCase', 'assertEqual']"
Testability,"Should fix tests/test_propagator.py::testPropHOStrTd sometime failing, ran it 100 times with the patch without error.; Cause: compiling the same string by multiple process at once resulted in them writing temp files with the same filename, resulting in a race condition and random fails. Not sure why it was not caught before.; @nathanshammah, @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1169:11,test,tests,11,https://qutip.org,https://github.com/qutip/qutip/pull/1169,2,['test'],"['testPropHOStrTd', 'tests']"
Testability,Should fix the issue #1039 ; Added matching automated test.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1040:54,test,test,54,https://qutip.org,https://github.com/qutip/qutip/pull/1040,1,['test'],['test']
Testability,"Should we also update the setup.cfg file with the latest version of numpy and python employed in tests? Allowing the installation of previous numpy versions that are not included in the CI may lead unanticipated bugs. Is there any reason to allow older versions of numpy in the setup.cfg (currently `numpy>=1.16"") instead of matching those with the versions used for testing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1163372067:97,test,tests,97,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1163372067,2,['test'],"['testing', 'tests']"
Testability,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-183612808:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808,3,"['assert', 'test']","['assertion', 'test', 'tests']"
Testability,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75334652:263,test,test,263,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652,3,['test'],"['test', 'tested']"
Testability,"Since NumPy 1.12, `np.linspace` raises a DeprecationWarning when its third `num` parameter cannot be safely interpreted as an integer. This method is used in the `mesolve` tests. Fixed by feeding the calls to `linspace` 100 instead of 100.0. The warning (in Travis CI):; ; ![image](https://user-images.githubusercontent.com/220701/27771317-c325fe9c-5f4c-11e7-8d4b-66980255dcfd.png). The deprecation: https://github.com/numpy/numpy/releases/tag/v1.12.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/708:172,test,tests,172,https://qutip.org,https://github.com/qutip/qutip/pull/708,1,['test'],['tests']
Testability,"Since `scipy.sparse.linalg` does not have `logm`, we need to convert it to an array to do the computation.; Without the csr version, the dispatcher will do it for us.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1993#issuecomment-1248083898:43,log,logm,43,https://qutip.org,https://github.com/qutip/qutip/pull/1993#issuecomment-1248083898,1,['log'],['logm']
Testability,"Since tests pass with the updated branch, I'm going to merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1692#issuecomment-947776584:6,test,tests,6,https://qutip.org,https://github.com/qutip/qutip/pull/1692#issuecomment-947776584,1,['test'],['tests']
Testability,"Since the PR merge of Ben's (@bcriger) code for Efficient Application of CPTP Maps to Subsystems, there has been a number of failing unit tests. I have fixed some of the tests and ported Ben's code to be python3 compatible, but there are still two remaining errors, which I have traced to the fact that `subsystem_apply(..., reference=True)` does not give the expected results (some normalization problem? perhaps with the eigenvectors?). ```; In [1]: from qutip import *; In [2]: rho_3 = rand_dm(3); In [3]: superop = kraus_to_super(rand_kraus_map(3)); In [4]: analytic_result = vector_to_operator(superop * operator_to_vector(rho_3)); In [5]: analytic_result; Out[5]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; |(0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 |. In [6]: ref_result = subsystem_apply(rho_3, superop, [True], reference=True); In [7]: ref_result; Out[7]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.354 (0.067−0.036j) (0.058+0.004j) |; |(0.067+0.036j) 0.407 (0.039−0.041j) |; |(0.058−0.004j) (0.039+0.041j) 0.240 ⎟. In [8]: efficient_result = subsystem_apply(rho_3, superop, [True]); In [9]: efficient_result; Out[9]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; | (0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 ⎟; ```. Probably @bcriger would be the best person to fix this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30:138,test,tests,138,https://qutip.org,https://github.com/qutip/qutip/issues/30,2,['test'],['tests']
Testability,"Since the update to version 4.4, calling `mesolve` without collapse operators prints a message ""no collapse operator, using sesolve"" to stdout. Is printing this message really necessary? It breaks our examples for the `krotov` package, see e.g. the notebook https://krotov.readthedocs.io/en/latest/notebooks/01_example_simple_state_to_state.html, where these messages show up in the notebook when it runs with qutip 4.4. Of course I understand that the message is technically correct, and we could work around the problem in `krotov`, but it was nice to be able to use `mesolve` as a catch-all for either a Schrödinger equation or a master equation. We'd have to start routing different cases to `mesolve` and `sesolve` manually, otherwise. Personally, I would argue that this kind of message should be emitted as `logger.debug` instead of `print`, if at all.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1047:815,log,logger,815,https://qutip.org,https://github.com/qutip/qutip/issues/1047,1,['log'],['logger']
Testability,"Since there haven't been any comments in this for a few days, and since the new `fidelity` function passes the new unit tests, I'm going to go on and merge this to fix #361.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/362#issuecomment-136130866:120,test,tests,120,https://qutip.org,https://github.com/qutip/qutip/pull/362#issuecomment-136130866,1,['test'],['tests']
Testability,"Since this is now passing all Travis tests without complaint, I think it makes sense to go on and merge now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-200152086:37,test,tests,37,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-200152086,1,['test'],['tests']
Testability,Skip avg gate fid tests on mac,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1034:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/pull/1034,1,['test'],['tests']
Testability,Skipping dnorm tests when MKL is present.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/487,1,['test'],['tests']
Testability,Small test to see if mac tests would pass with openblas instead of mkl.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1036:6,test,test,6,https://qutip.org,https://github.com/qutip/qutip/pull/1036,2,['test'],"['test', 'tests']"
Testability,"So I did an update of my conda environment to the latest version and now also the installation via pip has a problem, producing an `ImportError` (but not a segfault!) in the same location:. goerz@mlhpc2 develop:~/Documents/Programming/QNET> ipython; Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00); Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.1.0 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details. In [1]: import qutip; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-ad45215f3e51> in <module>(); ----> 1 import qutip. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 169; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/fastsparse.py in <module>(); 404 #Need to do some trailing imports here; 405 #-------------------------------------; --> 406 from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult). ImportError: /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/cy/spmath.cpython-36m-x86_64-linux-gnu.so: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E. The verbose log file from the installation (`pip install -v --no-cache-dir qutip`) is here: [pip_log.txt](https://github.com/qutip/qutip/files/914669/pip_log.txt)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-293395036:1808,log,log,1808,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-293395036,1,['log'],['log']
Testability,"So I did just that, and the ""overloaded method"" error doesn't happen again, which is good.; But installation still fails on other errors, I believe related to NumPy:. ```; ./setup.py install --user; Compiling qutip/cy/spmatfuncs.pyx because it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:751,test,testing,751,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['test'],['testing']
Testability,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:320,test,test,320,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,10,"['Test', 'test']","['TestMESolveStepFuncCoeff', 'TestMESolveSuperInit', 'TestSESolve', 'TestTimeDependence', 'testMETDDecayAsStrList', 'testPropHOStrTd', 'tests']"
Testability,"So I re-ran the failed macOS Xcode 12 test, and it succeeded no problems this time round, taking half the previous amount of time to build the library. I suspect Travis' Macs are just being intermittently overloaded.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-802012836:38,test,test,38,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-802012836,1,['test'],['test']
Testability,"So as to make progress on 3.2.0, since this is now passing tests, I'll mark as review ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/499#issuecomment-225806294:59,test,tests,59,https://qutip.org,https://github.com/qutip/qutip/pull/499#issuecomment-225806294,1,['test'],['tests']
Testability,"So now tests do run properly. They do not seem to fail. I did add an extra test for the case for the parameter `sparse=True`. This led me to a bug in `eigs_csr` that is now fixed. @jakelishman let me know if you are ok with this implementation. I am not very familiar with Cython so I am not sure how to handle the GIL in this case. I also find quire surprising to need the `sparse` argument in `trace_csr`. Shouldn't this function just perform a sparse computation of the trace norm (sparse always `True`?). Also, should the specialisation `traces_dense`, that currently does not exist, be mapped to the function `_trace_dense` I just wrote?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-898738261:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-898738261,2,['test'],"['test', 'tests']"
Testability,So one of the metrics dnorm tests failed in the MKL=0 OPENMP=1 combo. I cannot see why.; I have tried restarting the tests,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876#issuecomment-394778099:28,test,tests,28,https://qutip.org,https://github.com/qutip/qutip/pull/876#issuecomment-394778099,2,['test'],['tests']
Testability,"So the last commit fixed the **Travis CI** problems. Aside from writing test and documentation I think there is one issue left. It has to do with constructing non square operators. Consider. ```python. from qutip import *. zero = basis(2,0) . zero_log = tensor(zero, zero, zero). print(zero_log). print(zero.dag()). zero_log * zero.dag(). ```. The last line fails. . ```python; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-69-9ea42be37847> in <module>; 11 print(zero.dag()); 12 ; ---> 13 zero_log * zero.dag(). ~/qutip/qutip/qobj.py in __mul__(self, other); 544 ; 545 else:; --> 546 raise TypeError(""Incompatible Qobj shapes""); 547 ; 548 elif isinstance(other, np.ndarray):. TypeError: Incompatible Qobj shapes; ```. It seems like `*` should allow one to construct non square operators, otherwise they need to constructed in numpy and then turned into a Qobj. In the latter case the `dims` won't be correct as the tensor product structure is not understood.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-576093035:72,test,test,72,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576093035,1,['test'],['test']
Testability,"So this test has had a failure in `test_diag_liou_mult` again, despite the merging of #1474. I still believe the fix in that issue is correct in principle, but I'll investigate in more detail to determine the tightest allowable tolerances in another issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830,1,['test'],['test']
Testability,"So, I have a basic first implementation now that our paper is out: https://arxiv.org/abs/1903.05892. We have a special `HSolverUnderdampedBrownian` and I compare it with the more general `Heom` which takes in some ck and vk and gives the same results. For fun, I try to reproduce some plot from the paper where we see the effect of having the Matsubara terms in the picture vs removing them. I need to do more testing and re-factoring but we can start thinking of a more general `Heom` class now. Any comments will be helpful. . ```python; import numpy as np. from qutip import Qobj, sigmaz, basis, expect; from qutip.nonmarkov.heom import (Heom, HSolverUB); from qutip.solver import Options; import warnings; from qutip.operators import sigmax, sigmaz. import matplotlib.pyplot as plt; ```. # Parameters. ```python; Q = sigmax(); wq = 1.; wrc = 1.; w0 = 1.; temp = 0.; cut_freq = 0.5. Hsys = 0.5*wq*sigmaz(); initial_ket = basis(2, 1); Nc = 9; rho0 = initial_ket*initial_ket.dag(); Nexp = 2; lam, gamma, w0 = 0.2, 0.05, 1.; omega = np.sqrt(w0**2 - (gamma/2.)**2); a = omega + 1j*gamma/2.; wcav = omega. lam_coeff = lam**2/(2*(omega)). tlist = np.linspace(0, 20, 1000). options = Options(nsteps=1500, store_states=True, atol=1e-12, rtol=1e-12); ```. # Keep the Matsubara terms. ```python; mats_solver1 = HSolverUB(Hsys, Q, lam, temp, Nc, Nexp,; cut_freq, cav_freq = w0, cav_broad = gamma,; tlist=tlist, options=options). ck1, vk1 = mats_solver1._calc_nonmatsubara_params(lam, gamma, w0, beta); ck2, vk2 = mats_solver1._calc_matsubara_params(lam, gamma, w0, beta, Nexp, tlist). mats_solver2 = Heom(Hsys, Q, lam_coeff, np.concatenate([ck1, ck2]),; np.concatenate([vk1, -vk2]),; ncut=Nc). tlist = np.linspace(0, 200, 1000); mats_output1 = mats_solver1.run(rho0, tlist); mats_output2 = mats_solver2.run(rho0, tlist); mats_result1 = (np.real(expect(mats_output1.states, sigmaz()))+1)/2; mats_result2 = (np.real(expect(mats_output2.states, sigmaz()))+1)/2; ```. # Ignore Matsubara. ```python; no_mats_solver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/962#issuecomment-474973974:410,test,testing,410,https://qutip.org,https://github.com/qutip/qutip/pull/962#issuecomment-474973974,1,['test'],['testing']
Testability,"So, do you suggest changing to something like [pyTest](https://github.com/pytest-dev/pytest/) or just switching off the troublesome tests for now and discussing the issue for a long term change. All new PRs might face this issue and we won't be able to merge new code till this is resolved. Thanks for taking a look.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458181984:132,test,tests,132,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458181984,1,['test'],['tests']
Testability,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:183,test,tests,183,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257,4,['test'],"['test', 'tests']"
Testability,"So, in travis, only test_control_pulseoptim.py fails, but for all containers. The same test also fails locally for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560232262:87,test,test,87,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560232262,1,['test'],['test']
Testability,"So, now tests fail for Qobj subtraction, when running `nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v'])` but they run just fine when running `nose.run(defaultTest=""qutip.tests.test_qobj"", argv=['nosetests', '-v'])`. Note that before, for the metrics, the error was occuring even if only `nose.run(defaultTest=""qutip.tests.test_metrics"", argv=['nosetests', '-v'])` was run. It might be something ill allocated due to the order of how tests are run. . I also wonder if there is an issue with pycache. Also, in my folder there are both py36.pyc and py37.pyc files. Here there is a discussion that might be related (?); https://github.com/pytest-dev/pytest/issues/200#issuecomment-395816011",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496376661:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496376661,5,['test'],['tests']
Testability,Solved in QuTiP 4.4.0 release. See [`ssesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolver-new-methods.ipynb) and [benchmarks](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolve-tests.ipynb) for details. I checked that your snippet now runs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/857#issuecomment-510887275:188,benchmark,benchmarks,188,https://qutip.org,https://github.com/qutip/qutip/issues/857#issuecomment-510887275,2,"['benchmark', 'test']","['benchmarks', 'tests']"
Testability,"Solver object for `sesolve`, `mesolve` and `mcsolve`: `SeSolver`, `MeSolver` and `McSolver`:; - Removed all `rhs_reuse` (except in `brmesolve`). Still work but there is deprecation warning.; - steper for `Sesolver` and `MeSolver` as proposed by Michael.; - Variable output type (`Qobj`, `dense` or `sparse`) input must still be `Qobj`.; - Intermediate object to change the solver used: scipy `zvode`, `solve_ivp`, `dorpri853` are all available for `SeSolver`, `MeSolver`. More could be added in the future, @tehruhn 's GPU solver could probably fit here. I will work on an Adaptative Hilbert Space one eventually. . The objects do not do much more than the original functions if the system is not used more than once. Still to-do:; - Other algorithm for `McSolver`: diagonalized solver (suggested by Fabio?) and one using scipy ivp.; - Inline documentation; - Notebooks; - Cleaning options management. (Unique options object is getting limited for multiple low level solver and both all se,me,mc solve, I would appreciate opinions on how to make this better).; - Add to `__init__.py`; - Add tests. Build on the QobjEvoFunc Pr, with some bug fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1186:1091,test,tests,1091,https://qutip.org,https://github.com/qutip/qutip/pull/1186,1,['test'],['tests']
Testability,SolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3147,Test,TestTimeDependence,3147,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['Test'],['TestTimeDependence']
Testability,"Solvers: absolutely the solvers should always be packaged with the main `qutip`. I had sort of envisaged that we'd put them in a `solve` package, which would be exported into the main namespace just like `core` is. This way is more just for greater separation, so that the full core isn't entangled with the solvers themselves - I think separating them like this will help us ensure that we specify the data layer API much more cleanly if the solvers aren't referenced within it. (i.e. there's no reference to any solver within `core`, but the API is built sufficiently cleanly that they can still access all the internals). OpenMP check: I think there's two neater ways:; 1. perhaps `settings` should just be in `core` too? I avoided putting the check in `core/__init__.py` because I'm really trying to avoid bi-directional dependencies between the packages, but moving `settings.py` into `core` would solve that.; 2. alternatively, we could just write `settings.py` as part of `setup.py` - determine whether we built against OpenMP/MKL at compile-time, and then just write it in? We can still choose whether or not to use it in various runtime situations. As for the current test - yeah, the comparative complexity is kind of indicative that this isn't the right way to do it. It's a relatively straightforward use of `importlib`, but still it's more difficult. (By the way: are you and @ajgpitch getting notified when I post in [the discussion board](https://github.com/orgs/qutip/teams/data-layer-devs)?)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1282#issuecomment-638730654:1177,test,test,1177,https://qutip.org,https://github.com/qutip/qutip/pull/1282#issuecomment-638730654,1,['test'],['test']
Testability,"Some TestDicke tests in `test_piqs.py` (test_lindbladian, test_lindbladian_dims, test_liouvillian) fail with the recent scipy 1.6.1 release. They were previously passing with scipy 1.6.0. **To Reproduce**. ```; $ cp -r qutip/tests/ /tmp/qutip; $ cd /tmp/qutip; $ pytest-3 -v -k ""TestDicke""; ```. The test error message from `TestDicke.test_lindbladian` is; ```; ___________________________________________________________________________________________ TestDicke.test_lindbladian ____________________________________________________________________________________________. self = <tests.test_piqs.TestDicke object at 0x7f55475a0c10>. def test_lindbladian(self):; """"""; PIQS: Test the generation of the Lindbladian matrix.; """"""; N = 1; gCE = 0.5; gCD = 0.5; gCP = 0.5; gE = 0.1; gD = 0.1; gP = 0.1; ; system = Dicke(; N=N,; emission=gE,; pumping=gP,; dephasing=gD,; collective_emission=gCE,; collective_pumping=gCP,; collective_dephasing=gCD,; ); ; > lindbladian = system.lindbladian(). tests/test_piqs.py:450: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; /usr/lib/python3/dist-packages/qutip/piqs.py:509: in lindbladian; return cythonized_dicke.lindbladian(); qutip/cy/piqs.pyx:313: in qutip.cy.piqs.Dicke.lindbladian; ???; qutip/cy/piqs.pyx:431: in qutip.cy.piqs.Dicke.lindbladian; ???; /usr/lib/python3/dist-packages/scipy/sparse/compressed.py:54: in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. self = <[AttributeError('dtype not found') raised in repr()] coo_matrix object at 0x7f55475a0ca0>; arg1 = ([(-0.6000000238418579+0j), (0.6000000238418579+0j), (-0.9000000357627869+0j), (-0.90000003576",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:5,Test,TestDicke,5,https://qutip.org,https://github.com/qutip/qutip/issues/1451,11,"['Test', 'test']","['Test', 'TestDicke', 'test', 'tests']"
Testability,"Some Updates: . 1. I have added some tests for both the Measurement (in qutip/tests/test_circuit_measurement.py) portion and the circuit run (qutip/tests/test_qubitcircuit.py) portions of the code. There is a slight hiccup with the Python 3.8 run of one of the tests (test_run_statistics). I am not sure why it is only failing in the Python 3.8 case. ; 2. I have converted all the tests in qutip/tests/test_qubitcircuit.py to pytest style tests. Maybe, @jakelishman can comment if further changes are required. ; 3. Finally, since `measurement_density` and `measurement_ket` allow for POVM style measurements, it might be better to move those functions to qutip/measurement.py but I am not sure. Maybe @hodgestar can comment on that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-639989935:37,test,tests,37,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-639989935,7,['test'],['tests']
Testability,"Some bug fixes in fast csr.; `get_sum_dtype` import removed as it was not used and incompatible with scipy < 0.18, as mentioned in #616 ; Various improvements / bug fixes in tests (fast_csr, control and correlation); Need for manifest.ini removed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/618:174,test,tests,174,https://qutip.org,https://github.com/qutip/qutip/pull/618,1,['test'],['tests']
Testability,"Some correlation tests fail on some attempts.; Not really clear why.; This issue can be used to keep a record, and then they can be fixed. This is an example:; ```; ======================================================================; FAIL: correlation: comparing me and mc for driven oscillator in fock state; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/qutip-4.1.0.dev0+0e91439-py2.7-linux-x86_64.egg/qutip/tests/test_correlation.py"", line 125, in test_compare_solvers_coherent_state_memc; assert_(abs(corr1 - corr2).max() < 0.2); File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/numpy/testing/utils.py"", line 77, in assert_; raise AssertionError(smsg); AssertionError; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/607:17,test,tests,17,https://qutip.org,https://github.com/qutip/qutip/issues/607,9,"['Assert', 'test']","['AssertionError', 'test', 'test-environment', 'testing', 'tests']"
Testability,"Some minor pep8 fixes in files I might touch soon with regards to moving to the Numpy 1.17 random-number generation. There's a bunch of seemingly dead code in `mcsolve` about a ""diagonal"" system? Seems to have a few logic bugs in it at the very least, and no way to access it. I fixed one about `e_ops`, but looking at the log, seems like the whole system might not be needed. **Changelog**: pep8 changes.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1575:216,log,logic,216,https://qutip.org,https://github.com/qutip/qutip/pull/1575,2,['log'],"['log', 'logic']"
Testability,"Some more clean up of the code. Unit tests still pass. I touched some lines in bloch.py to make things more readable. Is there a generic example that I can run, to make sure the plotting still looks the same. For now the the change to bloch.py is minor, but thought about refactoring some things along the way and didn't want to break anything without a proper test.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/11:37,test,tests,37,https://qutip.org,https://github.com/qutip/qutip/pull/11,2,['test'],"['test', 'tests']"
Testability,"Some of the istests (like isoper) raise exceptions, when the object under test is not a Qobj, e.g. ioper raises an AttributeError exception, because it assumes that the object has a dims attribute. Shall I just modify the tests such that. ```; if isinstance(obj, Qobj):; # current test code; else:; return False; ```. Or is there a smarter way to do that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2:74,test,test,74,https://qutip.org,https://github.com/qutip/qutip/issues/2,3,['test'],"['test', 'tests']"
Testability,Some of the norms calculated in the test_ComplexSuperApply were above the tolerance of 1e-12; In 50 repeated tests 7 errors occurred. norms as large as 5e-11 were reported.; After increasing tol to 1e-10 test were repeated 200 times and no errors occurred,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:109,test,tests,109,https://qutip.org,https://github.com/qutip/qutip/pull/435,2,['test'],"['test', 'tests']"
Testability,"Some of the super operator and QPT tests may have name space issues as reported in the google group: . https://groups.google.com/d/msg/qutip/Z-5o4HHYRv4/yRX7dvjiEgAJ. I can not reproduce the errors, but here is a clean up that will likely fix this possible issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/497:35,test,tests,35,https://qutip.org,https://github.com/qutip/qutip/pull/497,1,['test'],['tests']
Testability,"Some of the test have decorators like this:. ```; @unittest.skipIf(_version2int(Cython.__version__) < _version2int('0.14') or; Cython_found == 0, 'Cython not found or version too low.'); ```. with the Cython_found variable being set at the top of the file like this:. ```; # find Cython if it exists; try:; import Cython; except:; Cython_found = 0; else:; Cython_found = 1; ```. The condition in the decorator will error, as the Cython version is checked even though it failed to import.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/449:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/issues/449,1,['test'],['test']
Testability,Some test not tidying up rhs*.pyx files,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/601:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/issues/601,1,['test'],['test']
Testability,Some tests fail from time to time. Most likely they need to have their tolerances increased; This issue replaces #607 as it is more general,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/issues/621,1,['test'],['tests']
Testability,Some tests fail on Apple M1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['test'],['tests']
Testability,"Some tests in stochastic evolution passes only most of the time.; The problematic tests are comparison of different step length, normally error should be smaller with smaller step length. Since the evolution use random number, this is not true for all seeds. By fixing the test, we should not have the tests randomly failing.; I am adding _improving stochastic tests and having them use pytest_ to my to-do. Ps. tests fail due to the error fixed in #1656",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1657:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/1657,6,['test'],"['test', 'tests']"
Testability,Some updates to the Cython code. Also removed the test scripts for the mcf90 routine as Pull #648 removed the ability to install the module.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/650:50,test,test,50,https://qutip.org,https://github.com/qutip/qutip/pull/650,1,['test'],['test']
Testability,"Some updates: . 1. I have added specifying kets as `ops` in `measure` and `measurement_statistics`. I have also added a check for whether the sum of all the measurement operators sums to identity which should be the case with any POVMs. New tests for the same have been added as well ! ; 2. I have removed `self.gates` as well as `self.gates_and_measurements`. The replacement is the more ""general"" (and less of a mouthful) `self.circuit_ops` which contains both. I still allow `propagators` function to be allowed in this case (because it is useful internally in `run`). However, now if a circuit with measurement needs to call `resolve_gates` or `adjacent_gates`, it needs to add measurements after the fact. . @BoxiLi, any opinions ? I have also addressed all the other minor issues as well ! . P.S. All of the new codeclimate issues are just previous issues re-appearing carried on because I modified those lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647187809:241,test,tests,241,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647187809,1,['test'],['tests']
Testability,Some updates:. 1. All measurements (except the one in the computational basis) have now been moved to qutip/measurement.py. The interface for the previous measurement style (using observables and eigenstates) remains the same. The only difference is that the `measure` and `measurement_statistics` functions now act as dispatch functions that can carry out projective measurements instead when the `op : list of projection operators` ; 2. I have moved all measurement tests to qutip/tests/test_measurement.py as well as moved all measurement tests to pytest style,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499:468,test,tests,468,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499,3,['test'],['tests']
Testability,"Somehow tests pass here, also for MacOS. Some of the previous PRs have passing tests now. I am rerunning some of them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484364505:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484364505,2,['test'],['tests']
Testability,"Somehow vscode published those review comments above before I was done reviewing. Only one more comment though: in the tests, you ignore some RuntimeWarnings here and there; it would be good to add a comment explaining why. Thank you for adding a good amount of tests!. If these last minor points get addressed, this looks good to me. Only those utility functions in the `bofin_fit` module are a bit of a mess - if we ever want to add more fitting methods, it will require some work. But it is non-public api and it seems to do the job for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260#issuecomment-1965979664:119,test,tests,119,https://qutip.org,https://github.com/qutip/qutip/pull/2260#issuecomment-1965979664,2,['test'],['tests']
Testability,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:32,test,test,32,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672,1,['test'],['test']
Testability,"Sorry for such a long delay... @QuantumFall This issue somehow escaped from my email list and I never noticed it. This is actually a situation often encountered when testing just one gate. If Hamiltonian acts trivially on the state for a few time steps, the adaptive solver may decide on a step size so large that all the reaming pulses are skipped. Set the max step size fixes it:; ```python; options = qutip.Options(max_step=0.05); processor_state = processor.run_state(init_state, options=options).states[-1].tidyup(1.0e-6); ```. Usually, this is because the Hamiltonian is 0 at the first few steps. This example is actually slightly different. The first pulse is a non-trivial (sxsx+sysy) (swap-like). Maybe it is because it has no effect on the initial state `(0,0,0,1)`. But `(1,0,0,0)` seems to work well. It seems really necessary to adaptively choose a step size for the simulators. BTW, new updates will most likely only be added to the separate package [`qutip-qip`](https://github.com/qutip/qutip-qip). Please feel free to check there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054:166,test,testing,166,https://qutip.org,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054,1,['test'],['testing']
Testability,"Sorry for the delay - my Windows decided it needed an update, which took hours.; I ran the specific test `test_MCSimpleConstFunc` : OK; I ran all the interpolation followed by the all the mcsolve tests: OK; This would seem to resolve #728 ; I would say this is ready to merge. Good work. Thank you @nonhermitian",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317883897:100,test,test,100,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317883897,2,['test'],"['test', 'tests']"
Testability,Sorry what is the difference between `stage_linux_38: &stage_linux_38` and this? And in general between the `stage_linux_...` and the `test`?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170#issuecomment-602517640:135,test,test,135,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602517640,1,['test'],['test']
Testability,"Sorry, I had forgotten to also commit the change of the default value for `c_ops` in `brmesolve`. The tests should pass now. In any case, I now also changed `bloch_redfield_tensor` to accept `c_ops = None` as input.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/336#issuecomment-94319111:102,test,tests,102,https://qutip.org,https://github.com/qutip/qutip/pull/336#issuecomment-94319111,1,['test'],['tests']
Testability,"Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (**1-P(no jump)**), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable? . I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the **array[1, 10, 11]**? ... . At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response. Cheers,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111#issuecomment-42091087:1464,test,test,1464,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42091087,1,['test'],['test']
Testability,"Sorry, my holidays were not that long... Here are some tests of the proposed modifications. 1 ) Computation of the weight; The proposed modification may lead to a large change of the weight in some circumstances.; For example :; ```; H = sigmaz(); c_op_list = [1e-8*sigmap()]; L = liouvillian(H, c_op_list); n = H.shape[0]; b = np.zeros(n ** 2); print(L.data.todense()). [[ 0.e+00+0.j 0.e+00+0.j 0.e+00+0.j 1.e-16+0.j]; [ 0.e+00+0.j -5.e-17+2.j 0.e+00+0.j 0.e+00+0.j]; [ 0.e+00+0.j 0.e+00+0.j -5.e-17-2.j 0.e+00+0.j]; [ 0.e+00+0.j 0.e+00+0.j 0.e+00+0.j -1.e-16+0.j]]; ```. The elements of the Liouvillian have modulus close to unity, which should be reflected in the value of the weight. ```; # Current version; weight = np.mean(np.abs(L.data.data.max())); print('Weight',weight); b[0] = weight; Ldense = L.data.todense(); Ldense[0, :] = +np.diag(weight*np.ones(n)).reshape((1, n ** 2)); rho1 = np.linalg.solve(Ldense, b). Weight 1.0000000000000001e-16. # Proposed modified version; weight = np.mean(np.abs(L.data).max(0)).real # added .real to get a float ; print('Weight',weight); b[0] = weight; Ldense = L.data.todense(); Ldense[0, :] = +np.diag(weight*np.ones(n)).reshape((1, n ** 2)); rho2 = np.linalg.solve(Ldense, b). Weight 1.0; ```. The current version leads to a very small weight because the imaginary part is discarded. Also, the mean is not doing anything. The proposed modification computes the modulus before evaluating the maximum for each line and then takes the mean. This may change the final steady state in some circumstances, but I could not rapidly find a situation where this is actually important. In this example, the two steady states are the same even though the weights are very different.; ```; np.linalg.norm(rho1-rho2); >> 1.1102230246251565e-16; ```. 2 ) Construction of the matrix to obtain the steady state; As mentioned by @fminga, this should not change anything in most situations. But the proposed modification will make the matrix identical to the one computed ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-987894724:55,test,tests,55,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-987894724,1,['test'],['tests']
Testability,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67649613:471,test,test,471,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613,1,['test'],['test']
Testability,"Sorry, this reply is very late! I was testing openmp installs on windows the other day. if you make a new conda environment, and make sure to install openmp first, it seems OK. (In once instance I did seem to have your issue, but I am not exactly sure what I did to reproduce it because it suddenly disappeared. Perhaps you had qutip already installed, and then tried to reinstall on top of it with openmp enabled?). however, you may then run into the issue currently being fixed in https://github.com/qutip/qutip/pull/1471 ; You might need to wait a little for that fix to be merged, or use Jake's branch in the mean time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-808861212:38,test,testing,38,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-808861212,1,['test'],['testing']
Testability,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:327,test,tests,327,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964,1,['test'],['tests']
Testability,Sounds cool. It would be nice with an early PR on this so one could follow the progress and test/bm it before it lands in master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/101#issuecomment-39639648:92,test,test,92,https://qutip.org,https://github.com/qutip/qutip/issues/101#issuecomment-39639648,1,['test'],['test']
Testability,"Sounds good, thanks. I'll merge it in now, then, so that the other PRs can use it for test cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/390#issuecomment-153193680:86,test,test,86,https://qutip.org,https://github.com/qutip/qutip/pull/390#issuecomment-153193680,1,['test'],['test']
Testability,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184074941:53,test,tests,53,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941,2,['test'],"['test', 'tests']"
Testability,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184069261:67,test,test,67,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261,2,['test'],"['test', 'tests']"
Testability,"Sounds good. I'm working on a couple more tests just to prevent any other regressions or stability issues, should have it ready in the next few minutes. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/362#issuecomment-134935699:42,test,tests,42,https://qutip.org,https://github.com/qutip/qutip/pull/362#issuecomment-134935699,1,['test'],['tests']
Testability,Sounds like it is xvfb that is interfering with the test environment. I guess if you install it you'll likely be able to reproduce the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458:52,test,test,52,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458,1,['test'],['test']
Testability,"Specifically this test `test_interpolate.test_interpolate_brevolve3()` followed by `test_mcsolve.test_MCCollapseTimesOperators` generates an error or the form; ```; Process SpawnPoolWorker-1:; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 249, in _bootstrap; self.run(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 93, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\pool.py"", line 108, in worker; task = get(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\queues.py"", line 345, in get; return ForkingPickler.loads(res); ImportError: No module named 'rhs47600'; ```; The rhs... file in generated by the brevolve3 test. The test appears to finish fine. But somehow it looks like some process is hanging around. Why this is triggered by the MCCollapseTimesOperators test is a bit of a mystery.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728:18,test,test,18,https://qutip.org,https://github.com/qutip/qutip/issues/728,4,['test'],['test']
Testability,Still only the sp_eigs test failing in NOMKL build,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-393946012:23,test,test,23,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-393946012,1,['test'],['test']
Testability,"Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAdd",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11281,Test,Test,11281,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Test'],['Test']
Testability,Support XYZ gates decomposition and modernize tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1356:46,test,tests,46,https://qutip.org,https://github.com/qutip/qutip/pull/1356,1,['test'],['tests']
Testability,"Sure. Shall I backport that change to `master` too?. For the time being I've put in one on XCode 11 and one on XCode 12. It's probably good to test both - the XCode 11 image is built on macOS 10.14 and XCode 12 on macOS 10.15. There were non-trivial changes to how development tools are handled (particularly with regards to compilers and code-signing) in 10.15, so it's probably a good idea to test both while we've got spare slots. In the future, we could perhaps look to having only one Mac test, and using the last slot to test on Windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679982246:143,test,test,143,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679982246,4,['test'],['test']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4519,test,test-environment,4519,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8989,test,test-environment,8989,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:22399,test,test-environment,22399,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:23889,test,test-environment,23889,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:31339,test,test-environment,31339,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2284,test,test-environment,2284,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:32084,test,test-environment,32084,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:41769,test,test-environment,41769,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:42514,test,test-environment,42514,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:43259,test,test-environment,43259,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44004,test,test-environment,44004,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5264,test,test-environment,5264,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6754,test,test-environment,6754,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7499,test,test-environment,7499,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8244,test,test-environment,8244,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11224,test,test-environment,11224,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14949,test,test-environment,14949,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15694,test,test-environment,15694,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26124,test,test-environment,26124,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:35809,test,test-environment,35809,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:41024,test,test-environment,41024,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:45494,test,test-environment,45494,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:46984,test,test-environment,46984,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3774,test,test-environment,3774,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6009,test,test-environment,6009,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:21654,test,test-environment,21654,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:23144,test,test-environment,23144,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:25379,test,test-environment,25379,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:35064,test,test-environment,35064,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:38789,test,test-environment,38789,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44749,test,test-environment,44749,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, pyt",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47729,test,test-environment,47729,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3029,test,test-environment,3029,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9734,test,test-environment,9734,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10479,test,test-environment,10479,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11969,test,test-environment,11969,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12714,test,test-environment,12714,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16439,test,test-environment,16439,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17184,test,test-environment,17184,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17929,test,test-environment,17929,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18674,test,test-environment,18674,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:20909,test,test-environment,20909,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26869,test,test-environment,26869,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:29849,test,test-environment,29849,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:32829,test,test-environment,32829,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:34319,test,test-environment,34319,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:36554,test,test-environment,36554,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:37299,test,test-environment,37299,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:38044,test,test-environment,38044,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39534,test,test-environment,39534,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:40279,test,test-environment,40279,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:46239,test,test-environment,46239,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, python 3.6.10-final-0 -----------; Name Stmts Miss Cover; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py 150 97 35%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/_mkl/__init__.py 3 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/_mkl/utilities.py 39 16 59%; /home/travis/miniconda/envs/test-environment/lib/python3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:48474,test,test-environment,48474,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13459,test,test-environment,13459,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14204,test,test-environment,14204,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:20164,test,test-environment,20164,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24634,test,test-environment,24634,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27614,test,test-environment,27614,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:29104,test,test-environment,29104,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:33574,test,test-environment,33574,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:19419,test,test-environment,19419,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:28359,test,test-environment,28359,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30594,test,test-environment,30594,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"Temporarily disables the `brtools` test `test_zheevr` when using `scipy` version >= 1.5. See #1299 for more information and discussion. This does not _need_ to be merged if we solve the more general problem quickly, but will fix the problem in the interim if we need it. Build on top of #1298 just to show that taken together they ""fix"" all the tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1300:35,test,test,35,https://qutip.org,https://github.com/qutip/qutip/pull/1300,2,['test'],"['test', 'tests']"
Testability,"Test ""mesolve: time-dependence as string list"" fails with clang compiler",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/411:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/issues/411,1,['Test'],['Test']
Testability,Test also added that would have caught this bug,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/563#issuecomment-263523175:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/563#issuecomment-263523175,1,['Test'],['Test']
Testability,Test error is an unrelated correlation test failure (it looks like a coefficient generation race condition?).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081,2,"['Test', 'test']","['Test', 'test']"
Testability,Test fails do not seem to be related to changes. Could they be rerun?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1637#issuecomment-899083258:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/1637#issuecomment-899083258,1,['Test'],['Test']
Testability,Test for `svd` more robust,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2092:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/2092,1,['Test'],['Test']
Testability,Test missing for floquet_master_equation_tensor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/624:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/issues/624,1,['Test'],['Test']
Testability,Test reshape specialisations.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1637:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/1637,1,['Test'],['Test']
Testability,Test skip for 4.5.1 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1257:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/1257,1,['Test'],['Test']
Testability,Test updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/458:0,Test,Test,0,https://qutip.org,https://github.com/qutip/qutip/pull/458,1,['Test'],['Test']
Testability,TestDicke fails with scipy 1.6.1: TypeError: can't convert complex to float,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:0,Test,TestDicke,0,https://qutip.org,https://github.com/qutip/qutip/issues/1451,1,['Test'],['TestDicke']
Testability,"Tested here at work on Win with Cython 0.26, and built fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317822634:0,Test,Tested,0,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317822634,1,['Test'],['Tested']
Testability,Testing code errors: TypeError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039:0,Test,Testing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1039,1,['Test'],['Testing']
Testability,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-224191450:0,Test,Testing,0,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450,3,"['Test', 'test']","['Testing', 'tested']"
Testability,Testing the master on: https://travis-ci.org/qutip/qutip,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394276940:0,Test,Testing,0,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394276940,1,['Test'],['Testing']
Testability,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:0,Test,Testing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176,5,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,Tests Error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['Test'],['Tests']
Testability,Tests all pass on Mac OS now & the changes look good. Merging. Thanks @fhopfmueller.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788#issuecomment-1172958557:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1788#issuecomment-1172958557,1,['Test'],['Tests']
Testability,Tests all passed. Re-running them again to check that is wasn't just luck.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1696#issuecomment-949676495:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1696#issuecomment-949676495,1,['Test'],['Tests']
Testability,"Tests didn't catch this one either:; ```; Traceback (most recent call last):; File ""/home/alex/anaconda3/envs/qutip-dev-py3/lib/python3.5/site-packages/matplotlib/sphinxext/plot_directive.py"", line 517, in run_code; six.exec_(code, ns); File ""<string>"", line 28, in <module>; File ""/home/alex/GitHub/qutip/qutip/floquet.py"", line 973, in fmmesolve; floquet_basis=floquet_basis); File ""/home/alex/GitHub/qutip/qutip/floquet.py"", line 836, in floquet_markov_mesolve; rho.data = vec2mat(r.y); File ""/home/alex/GitHub/qutip/qutip/qobj.py"", line 328, in set_data; raise TypeError('Qobj data must be in fast_csr format.'); TypeError: Qobj data must be in fast_csr format.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/624#issuecomment-271156872:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/624#issuecomment-271156872,1,['Test'],['Tests']
Testability,Tests fail: No module named 'cqobjevo_compiled_coeff_130828459648281117',MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['Test'],['Tests']
Testability,Tests fail: No module named spmatfuncs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/891,1,['Test'],['Tests']
Testability,Tests failing (possibly) due to scipy Deprecation in power-gmres solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/862,1,['Test'],['Tests']
Testability,Tests for norm,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1631:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1631,1,['Test'],['Tests']
Testability,Tests for plotting functions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/12:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/12,1,['Test'],['Tests']
Testability,Tests for the new method are added.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/461#issuecomment-207508213:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-207508213,1,['Test'],['Tests']
Testability,Tests not properly working on Canopy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/issues/469,1,['Test'],['Tests']
Testability,"Tests passed! Merging! Yay, at last!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-975914111:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-975914111,1,['Test'],['Tests']
Testability,Tests should all pass once #1125 is merged,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1127#issuecomment-553129753:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1127#issuecomment-553129753,1,['Test'],['Tests']
Testability,"Tests still run fine, also against the current master, cc @tehruhn.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-540448526:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-540448526,1,['Test'],['Tests']
Testability,"Tests were only with `Dia`, added tests with other types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2254#issuecomment-1796518340:0,Test,Tests,0,https://qutip.org,https://github.com/qutip/qutip/pull/2254#issuecomment-1796518340,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"Thank for spotting another bug @Canoming, I'll check it and merge if everything is good. @quantshah I'd say we let the test wait for a while. @jakelishman 's refactoring is still not merged and adding tests now will lead to conflicts. He will need to rewrite the test again. Maybe we can build a more thorough test for the circuit module during the GSoC project @sarsid ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629662675:119,test,test,119,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629662675,4,['test'],"['test', 'tests']"
Testability,"Thank you @AGaliciaMartinez as of late I was getting the same issue with the tests. @hodgestar ; dev.major lacks this lines in the toml. ``` ; [tool.pytest.ini_options]. addopts = ""-Werror --strict-config --strict-markers"". testpaths = [; ""tests"",; ]; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864935212:77,test,tests,77,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864935212,3,['test'],"['testpaths', 'tests']"
Testability,"Thank you @hodgestar, glad to see many details coming with this nicely drafted PR. . Functions design seems sensible. ; What is the main difference between `expect` and `measure`? That's the main thing that comes up to my mind. What different question are you answering? I also wonder if `expect` could be called. The description of the `measure` function is a bit general maybe with this regard. But I might have missed the point completely (my bad). . Tests seem quite elaborate, I wouldn't know how to add more. They can be even very simple in general. . Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-536360074:454,Test,Tests,454,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536360074,2,"['Test', 'test']","['Tests', 'tests']"
Testability,Thank you @magzpavz for catching this. Could you add some tests so the error doesn't reappears.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278,1,['test'],['tests']
Testability,"Thank you Marek,; It seems you forgot to add a seed variable in the definition of the rand_herm function (line 112~114). Because of this, many tests fails. ; Could you add it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-426421470:143,test,tests,143,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-426421470,1,['test'],['tests']
Testability,"Thank you Paul,; I will give this a test, probably tomorrow now. ; I am going to try and fix some of the little niggles (mainly in the control tests), then I am going to make a 4.0.2 release. I guess I can include this and the rest of the commits you have made since we made 4.0.0?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/596#issuecomment-269847535:36,test,test,36,https://qutip.org,https://github.com/qutip/qutip/pull/596#issuecomment-269847535,2,['test'],"['test', 'tests']"
Testability,Thank you for all the info @hodgestar! I reinstalled qutip in a new environment as you advise and then `conda install nomkl qutip` worked as expected. It resulted now in passing all tests (skipping a few) so I think it's best to leave it as it is for now since @Gerb0ise did not have more success upgrading numpy separately.; This is my current `qutip.about()`; ```; QuTiP Version: 4.6.2; Numpy Version: 1.22.0; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Stela Kusar\anaconda3\envs\qutip-env\lib\site-packages\qutip; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006378710:182,test,tests,182,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006378710,1,['test'],['tests']
Testability,"Thank you for doing this quickly, I guess you did until quite late. Yes, tests in `test_integrator` are parameterized over all integrators registered in `sesolve_integrators`, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011:73,test,tests,73,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011,1,['test'],['tests']
Testability,"Thank you for finding the source to this testing error and proposing a fix. It would be best to have @Ericgig's opinion on this, as he refurbished the stochastic solvers and has been working on migration from int32 to int64, see also project [4](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2019#4-abstraction-of-the-quantum-object-class-qutipqobjqobj) in Google Summer of Code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-478251874:41,test,testing,41,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-478251874,1,['test'],['testing']
Testability,"Thank you for reporting. Everything in `qutip.distribution` is experimental: not tested and little documentation.; We probably won't have time to look at it soon, but we will keep the issue open until we do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2286#issuecomment-1881266191:81,test,tested,81,https://qutip.org,https://github.com/qutip/qutip/issues/2286#issuecomment-1881266191,1,['test'],['tested']
Testability,"Thank you for reporting.; There seems to be an issue with our detection of mkl for a while.; Since it's an optional dependancy, the related tests have been quietly skipped for a while... You could probably manually import it until we make a patch:; ```; from ctypes import cdll; import sys; import os. qutip.settings._mkl_lib = cdll.LoadLibrary( os.path.dirname(sys.executable) + r'\Library\bin\mkl_rt.dll' ); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367:140,test,tests,140,https://qutip.org,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367,1,['test'],['tests']
Testability,"Thank you for such a quick response. I'm sorry for not getting back to you sooner. > First of all, are you sure that either of DrudeLorentzBath and DrudeLorentzPadeBath give the right solution? Because the ck_real / vk_real are supposed to be the coefficients / exponents of the real part of the correlation function (and the others the imaginary part), and if you plug in imaginary parameters, then terms that previously were only in the real parts could pick up imaginary parts etc. Perhaps this kind of thing cancels out when you add the two unphysical D-L baths to get the shifted D-L bath?. One can use the analytic expression for monomer absorption spectra to test which Drude-Lorentz bath is correct. Also, one can use [DM-HEOM](https://github.com/noma/dm-heom) [2], where they have implemented the ""Shifted Drude Lorentz Bath"" [1]. Compared with their Matsubara implementation, it gives the same density matrix evolution (up to the numerical accuracy) as QuTiP's HEOM gives with `DrudeLorentzBath` and $\gamma \rightarrow \gamma \pm \Omega$ and $\lambda \rightarrow \lambda/2$. But it is not the case for `DrudeLorentzPadeBath`. You are right to think that the unphysical part goes away when two baths are added [1], one with $+i\Omega$ and the other with $-i\Omega$. > However, I would want to be very sure that in the case where the parameters are all real, the results are not affected by the change. Is that so? Only asking because that is not clear to me at first glance. You are very much in the right to be absolutely sure before making a change. As far as I understand and have tested, it will not change the real case because the changes are as follows (I have removed all the other lines in between for clarity):. ```python; - ck_real = [np.real(eta) for eta in eta_p]; + ck_real = [eta for eta in eta_p]. - ck_imag = [np.imag(eta_p[0])]; + ck_imag = [-lam*gamma]. - eta_p = [lam * gamma * (self._cot(gamma * beta / 2.0) - 1.0j)]; + eta_p = [lam * gamma * (self._cot(gamma * beta / 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2520#issuecomment-2358685274:666,test,test,666,https://qutip.org,https://github.com/qutip/qutip/issues/2520#issuecomment-2358685274,1,['test'],['test']
Testability,"Thank you for taking the time to check it. I tested it on yet another PC with a different hardware but also with archlinux + AUR package and it also fails there. However, using the conda version works fine. Do you think it's worthwhile to further investigate? Otherwise feel free to just close this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292649678:45,test,tested,45,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292649678,1,['test'],['tested']
Testability,"Thank you for taking the time to look at these changes, @jakelishman! It must have been a true nightmare looking at my code haha 😄 . Now on a more formal note. Regarding the pytest side of things, should I reformat the tests (related to my single_qubit implementation) in test_qubitcircuit.py and test_gates to follow the changes in #1181? It would definitely make it easier to merge them later on.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607950035:219,test,tests,219,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607950035,1,['test'],['tests']
Testability,"Thank you for the code.; The present version use sparse matrices so it can be used for bigger system (tested up to 26 Qbit). ; For size that fit in memory, your version is great. And we don't have any ket version.; I can make the PR if you don't feel comfortable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1076#issuecomment-527603726:102,test,tested,102,https://qutip.org,https://github.com/qutip/qutip/issues/1076#issuecomment-527603726,1,['test'],['tested']
Testability,"Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. I admit that part of this resistance is that I cannot really foresee the implications of this change. Now the Qobj permute tests are failing for example. I also see your point for more general definitions. I would recommend that docstrings and tests be included and possibly even some dev notebook or tutorial, or even just a gist here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702:393,test,tests,393,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702,2,['test'],['tests']
Testability,"Thank you for the explanation @phfaist. I don't know the answer unfortunately. There are upcoming developments in quantum tomography with QuTiP, including recently added [notebooks](https://github.com/qutip/qutip-notebooks/pull/79), that warrant looking into this library integration further. . Besides this, regarding cvxpy, the package is now actively maintained also on conda forge https://anaconda.org/cvxgrp/cvxpy/files?page=1, we could add a check in the test failures to the to-do list...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-500419184:461,test,test,461,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-500419184,1,['test'],['test']
Testability,Thank you for the fix! I tested it locally and I was able to reproduce the error in #1753 and confirm it is fixed with this PR. `qutip.about()` also returns same message locally (not sure where it is tested if it is tested). It seems that CI was not complaining because we do not test for numpy 1.22 yet (although build requirements do install latest numpy version) but I think @hodgestar plans to include numpy 1.22 in the CI soon (see comments in #1747). I hope this PR can be merged soon as tests in PR qutip/qutip-tensornetwork#10 are failing due to `qutip.about()` not working with numpy 1.22.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347:25,test,tested,25,https://qutip.org,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347,5,['test'],"['test', 'tested', 'tests']"
Testability,"Thank you for the heads up. Just in case I am missing something here, I pulled from master and left a todense() on purpose to see how it failed, but it doesn't.; See https://github.com/MrRobot2211/qutip/blob/f3e0651a7b203841b4ae4ededce2d5b0524abb82/qutip/tests/test_superop_reps.py#L252",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-827190539:255,test,tests,255,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-827190539,1,['test'],['tests']
Testability,"Thank you for the review. > Could you add `mpi4py` to the requirement ins setup.cfg?; >; > You added the function to tests, but mpi4py is never installed for the automated tests. Did you try adding it to one of the job in `.github/workflow/tests.yml`? I am pretty sure it will run with only one process, but running the parallel function on one cpu is better than not testing it at all. If you tried and couldn't install mpi4py on github runner, please add a note about the issues somewhere. I have added it to setup.cfg, and now some tasks are failing.; * The documentation build fails because it can't install `mpi4py` (`mpi.h` is missing). I don't quite understand why that is... I can install `mpi4py` on my laptop without problems (it just uses regular parallel processes instead).; * The `mpi_pmap` tests are still being skipped. I'm sorry, but I don't understand what needs to be done with the `tests.yml`.; * The failing tests on ubuntu-latest, python 3.10 / 3.11 seem unrelated to my changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1903335386:117,test,tests,117,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1903335386,7,['test'],"['testing', 'tests']"
Testability,"Thank you for the tests. ; These tests will already ensure future changes don't break anything so we are quite grateful for them as is. We treat warnings as error during automated tests, so the casting warnings need to be fixed.; You change `self.data` to `self.data.real` in all 3 `visualize_...` functions. It will show same plot without the warnings. Maybe if there are interest, we could add an option as to what to show (real, imag, abs, ...), but not in this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916,3,['test'],['tests']
Testability,"Thank you for the updates, @gsuarezr !. To give a brief summary of the progress: on our todo-list we have the following items left:; * Neill's comment above and one TODO comment I left somewhere in the code earlier; * Finishing tests for the environment module and the fitting utility function; * Adding tests for the HEOM solver using the new API; * Updating (at least some of) the HEOM tutorial notebooks to show off the new features. The main code and documentation is converging from our side, and I think ready for more detailed reviews.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2437142464:228,test,tests,228,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2437142464,2,['test'],['tests']
Testability,"Thank you for your contribution, this looks like a nice feature. If you could please provide some unit tests as to its correctness, that would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/461#issuecomment-206655080:103,test,tests,103,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206655080,1,['test'],['tests']
Testability,Thank you for your feedback. I will write tests and documentation when I have some more time (might be in a month or so).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-759365480:42,test,tests,42,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-759365480,1,['test'],['tests']
Testability,"Thank you for your prompt reply. @sahmed95. QuTip was installed on Windows; ```; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transf",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:241,test,testing,241,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,4,"['log', 'test']","['logger', 'testing']"
Testability,Thank you for your quick fix.; Merging once tests pass.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649582507:44,test,tests,44,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649582507,1,['test'],['tests']
Testability,"Thank you very much. I have documented most of the code and written simple unit tests. I would be happy to answer any questions regarding the code. If it helps, I can explain things over a short hangout session. Suggestions and comments are welcome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-275864859:80,test,tests,80,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-275864859,1,['test'],['tests']
Testability,"Thank you, the failing tests were bugging me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1034#issuecomment-507687196:23,test,tests,23,https://qutip.org,https://github.com/qutip/qutip/pull/1034#issuecomment-507687196,1,['test'],['tests']
Testability,Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-602514600:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-602514600,1,['test'],['tests']
Testability,"Thanks @DnMGalan ! can you make a test for it? . Also could you share an example for the issue with the small finite frequency? historically it was there to fix an some edge cases that fail at w=0, but sounds like you found the opposite?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2435#issuecomment-2123699766:34,test,test,34,https://qutip.org,https://github.com/qutip/qutip/pull/2435#issuecomment-2123699766,1,['test'],['test']
Testability,Thanks @Ericgig ; I will be trying out the Windows build stuff either later or tomorrow. I will test this then.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/956#issuecomment-467306424:96,test,test,96,https://qutip.org,https://github.com/qutip/qutip/pull/956#issuecomment-467306424,1,['test'],['test']
Testability,"Thanks @Ericgig. I'll move the HEOM into `qutip.solve` (and move tests and fix docs) in the morning and then merge if all the tests are happy, unless you want to have one final check?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1167922200:65,test,tests,65,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1167922200,2,['test'],['tests']
Testability,Thanks @Ericgig; I am moving on to functional testing testing now using the notebooks linked above.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-459000895:46,test,testing,46,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-459000895,2,['test'],['testing']
Testability,"Thanks @Leo-am !The code looks great. The HTML rendering test fails in the first test run, but it seems to be a connection problem and it passes after I reran the test. @nathanshammah do you have further comments?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1828#issuecomment-1066070285:57,test,test,57,https://qutip.org,https://github.com/qutip/qutip/pull/1828#issuecomment-1066070285,3,['test'],['test']
Testability,"Thanks @claretgrace0801 for the PR. This is nice indeed that qutip_qip only needs to call `qutip.about()` and add some additional information. . As it is now, however, every new qutip family package needs to modify this to add their own info. I'm wondering if we can modify the code so that this only needs to be done once in `qutip.about` and any new family package just needs to call `qutip.about(package_name)` without having to write into qutip's source code. It could be implemented e.g.; ```; import importlib; package = importlib.import_module(package_name); print(f""package_name: {package.__version__}""); ```. Also, it would be helpful to add a test in the `qutip-qip` repo to check if the printed information indeed includes `""qutip_qip""`, e.g. see https://docs.pytest.org/en/6.2.x/capture.html.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870#issuecomment-1100835521:653,test,test,653,https://qutip.org,https://github.com/qutip/qutip/pull/1870#issuecomment-1100835521,1,['test'],['test']
Testability,"Thanks @eendebakpt for the fix! ; However, a similar fix was already included in dev.major in #1918. The only difference with your approach is that I did not include a try expect for import of iPython because the relevant change for the print_figure function was done 8 years ago. Besides, there is also the issue that currently our tests workflows do not install ipython so `repr` in your tests will not call `_repr_svg_`. Sorry I did not include this fix in master as well, but if you want it to be fixed I recommend cherry-picking the commits of #1918.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1943#issuecomment-1166512776:333,test,tests,333,https://qutip.org,https://github.com/qutip/qutip/pull/1943#issuecomment-1166512776,2,['test'],['tests']
Testability,"Thanks @jakelishman. I think for now we can use your method and move ahead. @araza6 would like to make a PR about this and probably we should link this discussion in the documentation and make you a co-author (https://medium.com/faun/how-to-give-credit-in-git-commits-ccd6485678c3). . A technical issue here is QuTiP mostly has function based API. This presents lots of problems when you want to re-use objects, e.g., in this displace function. I had proposed to slowly move to classes, eg., Solver class (https://github.com/qutip/qutip/pull/962). A possible implementation here would be making a fresh `Displace` class in `qutip.operators` which would work like this:. ```; import numpy as np. from qutip.operators import Displace, displace. N = 32; alpha = 1 + 1j. d = Displace(N=32); d_new = d(alpha); d_old = displace(N, alpha). assert (np.allclose(d_new.full() == d_old.full()); ```. @qutip/core-workers What do you think about making some class based operators?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646612460:833,assert,assert,833,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646612460,1,['assert'],['assert']
Testability,"Thanks @jakobjakobson13. A few modules' tests fail, on all operating systems, https://travis-ci.org/github/qutip/qutip/jobs/746708587. I wonder why. By the way, what software did you use, `autoflake`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735704859:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735704859,1,['test'],['tests']
Testability,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:109,log,log,109,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457,2,['log'],['log']
Testability,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-61393881:579,log,logging,579,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881,3,['log'],['logging']
Testability,"Thanks Eric, you are correct. I didn't know that. I guess that's why it was totally fine on my own machine. Now all the Python 3.7 test passes except for the Python 3.6 one.; I guess it is because 3.7 supports some circular importation. ""Circular imports involving absolute imports with binding a submodule to a name are now supported."" from https://docs.python.org/3/whatsnew/3.7.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1074#issuecomment-577880321:131,test,test,131,https://qutip.org,https://github.com/qutip/qutip/pull/1074#issuecomment-577880321,1,['test'],['test']
Testability,"Thanks Jake. I've raised the Issue in regards to building deb packages from source (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=999517), so pip can't be used in that context. The Debian build machinery invokes `python3 setup.py {config,build,install}` not `setup.py develop`, c.f. past build log with numpy 1.19 [here](https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-2&stamp=1630423818&raw=0).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974835138:298,log,log,298,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974835138,1,['log'],['log']
Testability,"Thanks Kevin. This looks very interesting. I think it will take me a few days to review and test this, but I will try to get back to you as soon as I can! I'll start with some inline code comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-50840676:92,test,test,92,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-50840676,1,['test'],['test']
Testability,"Thanks Kosuke-san! This does look like a genuine bug, seems to be because when constructing the propagator, the dims on the initial state are not set, and this clashes with very recent fixes done on mesolve (e.g., https://github.com/qutip/qutip/pull/1459 ). This wasn't caught by the tests during the above fixes because it seems like the only composite system test is done on a noiseless system, so mesolve isn't called in the propagator construction for that test. thanks for pointing this out.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865881447:284,test,tests,284,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865881447,3,['test'],"['test', 'tests']"
Testability,"Thanks Nathan. Lets see if the tests pass. Meanwhile, perhaps you could do `black -l 79` to keep the lines only 79 characters long. Also there are some trailing white spaces and spaces in a blank line which seem not to be picked up by black. Could you please quickly check that so that we get the code climate green check? If not then we can still merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381:31,test,tests,31,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381,1,['test'],['tests']
Testability,"Thanks a lot for awakening this PR from its slumber @hodgestar !. All the decorator `avg_gate_fidelity_test` does is to skip the decorated test on Mac. Looks like it has been removed in the following commit which is included in your merge, in favour of refactoring the AGF tests into a class and skipping the whole class on Mac: https://github.com/qutip/qutip/commit/99ce2d5c511e2487505a79455c9b53f7676a5731#diff-a9cd5a7620c34d60ffb61360a78bab270214a212c997e0c2cf5a6617443a90ab; (The decorator was originally introduced in https://github.com/qutip/qutip/pull/1034. The underlying issue https://github.com/qutip/qutip/issues/963 seems to be resolved, so maybe skipping the tests on Mac isn't necessary any more?). The only test that is included in my original PR, but not after your merge, is `test_average_gate_fidelity_against_legacy_implementation` at https://github.com/fhopfmueller/qutip/blob/74080688cbece61a3d095fa6fc9dd347114b6152/qutip/tests/core/test_metrics.py#L443. Would you like to include that test? On the one hand, it contains copy-pasted code from the previous implementation, so the test isn't exactly elegant. On the other hand, it ensures that the new implementation of this PR gives the same result as the previous correct implementation. I'd favor including it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788#issuecomment-1172777496:139,test,test,139,https://qutip.org,https://github.com/qutip/qutip/pull/1788#issuecomment-1172777496,7,['test'],"['test', 'tests']"
Testability,"Thanks a lot for the quick review!; I added test function `testFREDKINdecompose` into `qutip/tests/test_qubitcircuit.py`.; After I added this `testFREDKINdecompose` function, I found the test fails with the existing decomposition.; Therefore I totally changed the way of decomposition of FREDKIN gate, which eventually passed the quick test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1489#issuecomment-815845169:44,test,test,44,https://qutip.org,https://github.com/qutip/qutip/pull/1489#issuecomment-815845169,6,['test'],"['test', 'testFREDKINdecompose', 'tests']"
Testability,"Thanks a lot for the update! Could you please add few unit tests for this module, perhaps based on some of the examples from your notebook?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-69420379:59,test,tests,59,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-69420379,1,['test'],['tests']
Testability,Thanks a lot for your efforts on this. I think this is ready for merge when travis tests finish. Or is there anything else you want to add to this PR?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-65343561:83,test,tests,83,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-65343561,1,['test'],['tests']
Testability,"Thanks again for this, that's good to know. With these and related changes we have got some nice speed improvements :-). https://github.com/qutip/continuous-benchmark",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/58#issuecomment-25672612:157,benchmark,benchmark,157,https://qutip.org,https://github.com/qutip/qutip/pull/58#issuecomment-25672612,1,['benchmark'],['benchmark']
Testability,"Thanks both @jakelishman and @hodgestar for your comments! I agree that I may be depending too much on the classes in `qutip.tests.core.data` to do the testing both in qutip-tensorflow and qutip-tensornetwork. I myself was worried of ""who is going to tests the tests"" if this trend continued with other packages. Reusing the `qutip.tests.core.data`'s code though helps to speed things up in the development process and also allows QuTiP to strictly define what each specialisation is meant to do. . As you mentioned above, I think it would be best to create a `qutip.core.data.testing` module where all the classes for testing are implemented. Then these classes could be tested to ensure that the proper tests are created and these classes ca be used by both QuTiP and downstream packages. I do not have time for this now but I will come to this later, so lets keep this PR open to discuss any ideas!. ----. > the data layer tests should really discover the specialisations rather than us needing to specify them (this is true regardless of this PR). I am not sure about this one. Automatic discovery of tests for specialisations seems to lead to very restricted flexibility in how tests are parametrized. For instance, I needed to change the `rtol` to accommodate the tests for the complex64 data layer in qutip-tensorflow and I am not sure how this could be added automatically. . Also, as @hodgestar mentioned today, you probably want to be explicit on adding tests so that you are confident that those tests are running. Otherwise you need to constantly check the log to ensure the proper tests are running. . Another thing is that by being explicit on what is tested, you could assert if the tested specialisation has not been registered (which actually happened to both qutip-cupy and qutip-tensorflow before: specialisations where being tested but, surprisingly, they were not registered).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356:125,test,tests,125,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356,21,"['assert', 'log', 'test']","['assert', 'log', 'tested', 'testing', 'tests']"
Testability,Thanks for addressing all the issues so quickly. I added a commit for the krylov_error comment I wanted. Happy for this to be merged if the latest test run passes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986#issuecomment-1349624347:147,test,test,147,https://qutip.org,https://github.com/qutip/qutip/pull/1986#issuecomment-1349624347,1,['test'],['test']
Testability,"Thanks for all this. Travis CI tests fail at `""Test the method Lattice1d.k()""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-525362478:31,test,tests,31,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-525362478,2,"['Test', 'test']","['Test', 'tests']"
Testability,Thanks for having a look at this. I'm merging this now but I guess we should look out for possible regressions that is not covered by the unit tests for a while.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/158#issuecomment-46006314:143,test,tests,143,https://qutip.org,https://github.com/qutip/qutip/pull/158#issuecomment-46006314,1,['test'],['tests']
Testability,"Thanks for looking deeply into it. It's good to know the cause. We shouldn't remove support for SciPy 1.4 unless we _absolutely_ have to. Most users won't use matrices that large so won't be affected, and SciPy 1.5 is only a year old which is too recent to be a requirement in an academic setting. We should maintain at least a 2-year dependency window (like NumPy). Any constraints we make on allowable versions affect any packages downstream of us as well, so we want to try and stay as permissive as possible, as long as there's not new features that we absolutely must have. We already have mechanisms for working around an unstable `eigh` implementation because of problems with mac OpenBLAS `zheevr` in some cases, so we can add in this additional test when setting `eigh_unsafe` in our initialisation. The principle is that we decay to using the general-purpose `eig`, and include a specific orthonormalisation step to stabilise the eigensystem afterwards. This code is already in `qutip/sparse.py`, so it shouldn't be too hard to add an extra condition in `qutip/__init__.py`. Could you also test if the issue is also confined to MKL, or if it persists in OpenBLAS with SciPy 1.4 as well? We lose precision when swapping down to `eig` in place of `eigh`, so it's good to confine the switch to the minimum known-bad set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109:754,test,test,754,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109,2,['test'],['test']
Testability,"Thanks for reviewing! Sounds good, will make those changes ASAP. . Quick disclaimer, I can't seem to install `cvxpy` on my machine without using anaconda, so I haven't run the qutip tests personally. I assume these run automatically in the pipeline. I have done a lot of testing independently though and the implementation seems to work very reliably (often giving more accurate results than the semidefinite program).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281:182,test,tests,182,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281,2,['test'],"['testing', 'tests']"
Testability,Thanks for taking a look. This is good for me and you can merge it once the tests pass. Thank you.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-357944290:76,test,tests,76,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-357944290,1,['test'],['tests']
Testability,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/458#issuecomment-202057828:115,test,tests,115,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828,3,['test'],['tests']
Testability,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27496281:11,test,testing,11,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281,2,['test'],"['test', 'testing']"
Testability,"Thanks for the PR @christian512. I tested it on my machine, looks all good. . > Is there a problem in theory using `qcircuit` code, which is with license `gpl-2.0` into a BSD-new (maybe @Ericgig @ajgpitch or @goerz know more)?. I'm not very familiar with license, but QuTiP was using this package (older version) before. Any idea on how to proceed? @Ericgig @ajgpitch or @goerz",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-606142418:35,test,tested,35,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-606142418,1,['test'],['tested']
Testability,Thanks for the details and tracking it down. Could you open a Pull Request and add a test for that?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331:85,test,test,85,https://qutip.org,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331,1,['test'],['test']
Testability,Thanks for the fix. Could you also please add some tests for the addition of SWAP gates and removal?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629656336:51,test,tests,51,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629656336,1,['test'],['tests']
Testability,"Thanks for the quick response @bencbartlett. . Feel free to ignore the comments regarding the shortening of arguments. That was just a suggestion to make things shorter. But as you said clarity is more important. I will not change `waveguide` to `wg` and I think you should leave the others as they are if you can't think of shorter ones. Same applies to the `temporal_basis_vector`. I think you can even add a `temporal_basis` as you mentioned. Regarding the double line breaks wrapping top-level functions, I know the pep8 standard is two newlines but some other QuTiP modules follow just a single line break, e.g., [floquet](https://github.com/qutip/qutip/blob/master/qutip/floquet.py). But again some other modules in QuTiP follow the pep8 standard and wrap two newlines for top-level functions. I am in favor of the pep8 standard and have two newlines. @ajgpitch what do you suggest?. Please remove the helper function `count_filled` without the test if it is not required. We aim to test as much as possible and remove redundancy in code. About `__all__`, I will shift all the rest in a new PR and we can keep yours as it is now. Coming to the more important discussion regarding the `class` based implementation, I have started pushing for similar approaches in newer modules such as [qutip.models.piqs](https://github.com/qutip/qutip/blob/master/qutip/models/piqs.py). I am also working on a new non-Markovian method which requires a class. Something of that sort is already used in `qutip.nonmarkov.heom`. I understand that many of qutip's solvers are written to be isolated functions but that should not mean that we should not write code to fully use the object oriented framework Python provides. Moreover, I noticed that you have to rewrite wrappers for the functions anyways to deal with repeatedly calculating things such as `scattering_probability` which clearly can be made much more compact if we use a class based approach. I am not making this suggestion just for the minor perform",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384860713:951,test,test,951,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384860713,1,['test'],['test']
Testability,"Thanks for the review!. > * Should we stop the user from passing a list of kets to `mcsolve` directly?; > Presently it work but it's not documented (and list `ntraj` don't.). You are right, done. Of course we could also allow the same arguments for `mcsolve` as for `run`, but I thought it might be good to keep the `mcsolve` interface simpler. > * It would be nice to have the trajectories per initial state information stored in the result somewhere. I have added that information and checking it in a test. Edit: I forgot that I still haven't updated the docs. Will do that. Edit 2: Done",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143:504,test,test,504,https://qutip.org,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143,1,['test'],['test']
Testability,"Thanks for your replies.; I did not have any python on my computer. Firstly, I installed Anaconda, then build a qutip-env. I typed ""conda activate qutip-env"" and then used the following command to install the requirements: ""conda install numpy scipy cython matplotlib pytest pytest-cov jupyter notebook spyder"" .; Then, I added ""conda config --append channels conda-forge"", getting the following warning: ""conda-forge already in channels list, moving to the bottem"".; Then, I run ""conda install qutip"" with no errors.; qutip was installed in ""/root/anaconda3/env"" and i opened a terminal in ""/root"", typed ""python"" and then ""import qutip.testing as qt"" getting the above error.; I really appreciate any help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120:638,test,testing,638,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120,1,['test'],['testing']
Testability,"Thanks simon! On the tests we have one that checks the dynamics for the bosonic solver, and one that checks the steady state for the fermionic stuff, but not vice versa. I will try and construct something. I think for the HSolverDL backwards compatibility test, we can reuse the old test (which is essentially the same test I put in for the bosonic solver). In bofin.py itself, I think we can replace _pad_csr() with the cy_pad_csr cythonised version in qutip already (that HSolverDL was already using), its a bit faster (I didn't do it so far because of bug checking, but it should be ok to change now). There are probably lots of small places where things can be optimized a little as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-875287769:21,test,tests,21,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-875287769,4,['test'],"['test', 'tests']"
Testability,"Thanks simon!; I checked the logic of the changes and played with the tests, and looks OK to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1588#issuecomment-870234573:29,log,logic,29,https://qutip.org,https://github.com/qutip/qutip/pull/1588#issuecomment-870234573,2,"['log', 'test']","['logic', 'tests']"
Testability,"Thanks very much @Ericgig for preparing this!. I feel like it will be quite confusing if gates like `cnot` have different signatures than the ones in qutip-qip. Moreover, many of those gates/transformations are not only relevant to `qip`, but also used in other applications, so maybe we should keep more of them in the main qutip. One of the reasons that we want to include those gates into `qutip.operators` is because a few other downstream packages (e.g. `krylovsolver` that is now merged into qutip, and `qutip-tensornetwork` also uses Hadamard transform) also use them for testing (only) purposes. Having them in the main qutip may save them from depending on qutip-qip. I guess it would be better if we either; - Remove all qip and only define a few `_cnot`, `_swap` as private functions for testing inside the main qutip. And ask whoever else wants to use some gates to install `qutip-qip`. This may result in e.g. `qutip-tensornetwork` depending on `qutip-qip or having to implement a copy of some gates. or; - Include some more commonly used gates like `rx`, `ry` (they are unitaries generated by the Paulis and directly relevant to quantum control) `iswap` etc and keep them identical to the ones in qutip-qip, so that those who just want some gates for testing does not have to download the full qutip-qip. If the problem is the `qutip.qip.expand_operator`. I would argue that we can even include it into the main qutip. It is `tensor` + `permutation` and works not just for qubit systems, but also for other composite Hilbert spaces (provided a `dims`). It is quite handy not just for `qip`, but also for control and probably some other applications. What do you think?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103:579,test,testing,579,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103,3,['test'],['testing']
Testability,"Thanks victor!  My main worry as it stands is that, as I mentioned in the previous issue, this fix, on its own, introduces an unwanted additional error for the case with a time-dependent Hamiltonian, as then that time dependence essentially gets shifted twice, once by the H_shifted change, and once again by adding tlist[idx] to tau_list. ; This case of a time-dependent H could do with a test as well I guess. . This can be easily remedied by completely omitting the old method of shifting the time-dependence (e.g., using H and c_ops instead of H_shifted and c_ops_shifted in the call to mesolve(), for example).    But I am a little concerned that the the old method of shifting the time-dependence in H_shifted and C_ops_shifted was there for a reason.  @Ericgig any thoughts?. As an aside, I guess _correlation_mc_2t()  also needs a fix, but maybe better to do that in a separate issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129:390,test,test,390,https://qutip.org,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129,1,['test'],['test']
Testability,"Thanks!! Since the tests are passing now I'll merge now. Do you think you could write a short tutorial on how to use these modules, or perhaps some examples that introduce how the transformations between superoperators, kraus and choi representations are connected (it doesn't need to be very long) ? It would be nice with some examples, perhaps as an IPython notebook to be added to the collection we have here:. https://github.com/qutip/qutip-notebooks/tree/master/examples",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/85#issuecomment-36421094:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/pull/85#issuecomment-36421094,1,['test'],['tests']
Testability,"Thanks, @BOBO1997. Could you also add a quick test for this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1489#issuecomment-815280784:46,test,test,46,https://qutip.org,https://github.com/qutip/qutip/pull/1489#issuecomment-815280784,1,['test'],['test']
Testability,"Thanks, Kevin. And sorry for being slow to review this. I'll certainly merge it soon. One small thing, could you change naming (most importantly in the exception you raise at some point, and also in naming of the unit tests, etc) from old-style to function-callback style, which is how we usually refer to this td-format. I don't like the ""old-style format"" because it suggests that it is deprecated or inferior or has been replaced. Both function-callback and the list-string format for cython are fully supported methods and have their own distinct use-cases. While the cython format is faster, it is rather limited in what it can do, and sometimes the flexibility of the function-callback format is called form. Also, I wonder if you're method could not also be applied to `_correlation_me_2op_2t` ? It would be nice if there was feature symmetry between the _4op_2t and _2op_2t functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-52880234:218,test,tests,218,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52880234,1,['test'],['tests']
Testability,"Thanks, it's looking good now I think. In my tests is seems to work fine, so I'm merging this now. Thanks a lot for your work on this!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-63157743:45,test,tests,45,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63157743,1,['test'],['tests']
Testability,"Thanks, it's looking good!. I'm merging the PR. We don't have any tests for the appearance of the figures unfortunately. We should look into that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/11#issuecomment-11231763:66,test,tests,66,https://qutip.org,https://github.com/qutip/qutip/pull/11#issuecomment-11231763,1,['test'],['tests']
Testability,"Thanks, this helps track it down. It seems not to be an issue with ENR per se, but with the floquet steadystate solver itself (it also appears without using ENR states). . I think I pinned it down to two small bugs in that seem to have crept in to the solver with the data layer updates, I will make a PR for it and ping you for some feedback, if thats ok. We lack a sufficiently robust test for this solver really, if you can suggest something tractable (very small example, potentially analytical solution we can check against), it would be very helpful.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504:387,test,test,387,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504,1,['test'],['test']
Testability,"Thanks, this is looking good. I think resolving the failing tests could wait until after PR #95 is merged.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/97#issuecomment-39404327:60,test,tests,60,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39404327,1,['test'],['tests']
Testability,"Thanks. Both py2.7 and py3.3 passes on my system too now, so this should be ready for merging. Thanks a lot of all the work on this. I'll just wait for travis test to run as a final check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39657680:159,test,test,159,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39657680,1,['test'],['test']
Testability,Thanks. I will look into the failing Travis tests before merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/132#issuecomment-43633865:44,test,tests,44,https://qutip.org,https://github.com/qutip/qutip/pull/132#issuecomment-43633865,1,['test'],['tests']
Testability,"That environment deliberately tests against Scipy 1.4 because we still officially support it. This looks like a true test failure - we need to know what's causing it, and most likely fix it in code, not in the test suite.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093,3,['test'],"['test', 'tests']"
Testability,"That is a test for super operators that fails quite often. It is unrelated to the current PR. In fact, I think I will submit an issue to Chris about this particular test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419#issuecomment-178980416:10,test,test,10,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178980416,2,['test'],['test']
Testability,"That last commit updates the versions of macOS and XCode that we test against. XCode 12 is comparatively very slow (both compile and run), so we should likely try to figure out why that's the case and improve it. We made the same commit on `dev.major` in #1348.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347#issuecomment-680065748:65,test,test,65,https://qutip.org,https://github.com/qutip/qutip/pull/1347#issuecomment-680065748,1,['test'],['test']
Testability,"That test failure actually looks like a serious problem - there's a `NaN` that has crept into an output after a `copy` operation. In this case I think it's important that we really track down the root cause of how that happened, so we can be sure it can't happen again. All the other numbers are the same in that failure, so it looks like possibly memory corruption? There are 17 elements in the output (not a nice round number like 16), so maybe there's an off-by-one somewhere?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369,1,['test'],['test']
Testability,"That's a good catch, thanks. I'll look at how nostests handles docstrings in cases, but at the least, the test generator should have a docstring, I agree.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-179009528:106,test,test,106,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179009528,1,['test'],['test']
Testability,"That's good, thanks for restarting that! I'll submit my PR for migrating to Travis containers soon, it seems to be helping with the issue of tests being killed, though it's also slower to run so far. As for the PR at hand, I'm glad it's useful. Thanks for checking over it!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130119816:141,test,tests,141,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130119816,1,['test'],['tests']
Testability,"That's the only two problems I ran into when testing the code, but I didn't test everything. About performance of numpy/lists for small arrays; I wouldn't worry much about that in this case. On a different note: Since we don't have unit tests for the plot functions in qutip it would be great if you could consider adding an ipython notebook to qutip/qutip-notebooks that demonstrates how to use these plot function, with some suitable input states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-43740558:45,test,testing,45,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43740558,3,['test'],"['test', 'testing', 'tests']"
Testability,That's the rebase done. Those tests _should_ pass now; they do on my machine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680175955:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680175955,1,['test'],['tests']
Testability,"That's very odd, it looks like the test was killed the test midway through, but I have no idea why. I'd guess that rerunning the build may work, but answers to [a question on StackOverflow](http://stackoverflow.com/questions/17606874/trigger-a-travis-ci-rebuild-without-pushing-a-commit) claim that you must have write access to the repo in order to trigger a new build.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128689363:35,test,test,35,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128689363,2,['test'],['test']
Testability,"That’s what I thought too in hindsight, so I deleted that part of the; docstring, but nosetests now just gives a segmentation fault and quits. On Tue, 28 May 2019 at 21:33, Wojciech Rzadkowski <notifications@github.com>; wrote:. > If I understand correctly it refers to line 300 in test_metrics, which has; > a new hellinger metric test by @wrzadkow <https://github.com/wrzadkow> .; > Could it be that using ""for _ in range(10):"" is a problem?; >; > The following observations:; >; > - for _ in range(10) is already in line in 128 in test_metrics.py; > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128; > - line 300 is the end of docstring of test_hellinger_monotonicity(); > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300; > - the presence of invalid escape sequence \o in the error message; > - this thread; > https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python; >; > make me think that the issue may be caused by \otimes that I used in the; > docstring explanations. Don't have a Mac to reproduce, though.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/963?email_source=notifications&email_token=ADPF67GLVSBPTSYBEWHF753PXURAZA5CNFSM4G4MKE72YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWL7DBA#issuecomment-496497028>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67BCDAJ2I55ZNP3VBB3PXURAZANCNFSM4G4MKE7Q>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496582231:332,test,test,332,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496582231,3,['test'],"['test', 'tests']"
Testability,"The ""known issues"" are definitely still there. They cause whatever `dnorm` does using cvxpy to fail, just through having `mkl` as a conda package. `test_metrics` uses the `qutip.settings.has_mkl` to determine whether to skip the dnorm tests. This however is False whenever blas_info is not mkl, mkl could still be installed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394201492:235,test,tests,235,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394201492,1,['test'],['tests']
Testability,"The ""no cython"" case fail because it's using scipy 1.4 an not 1.3. A deprecation warning in a function called at each iteration of a solver is causing so much output that the test give up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-568514837:175,test,test,175,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-568514837,1,['test'],['test']
Testability,The .T and .H methods for fast_csr were not returning another fast_csr. This fixes that an verifies with tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/608:105,test,tests,105,https://qutip.org,https://github.com/qutip/qutip/pull/608,1,['test'],['tests']
Testability,"The CI failure on ` macOS, Python 3.8: XCode 12` is because the tests took too long. Not sure if this is just a Travis issue or a pre-existing problem or something new.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430,1,['test'],['tests']
Testability,The Mac OS ci failed with a strange pardiso error from the HEOM tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515:64,test,tests,64,https://qutip.org,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515,1,['test'],['tests']
Testability,"The SS solver has been heavily modifed since version 2.2. The bicgstab; method has been replaced in the development version with the LGMRES solver.; The bicgstab method would exit with a fatal error. The new method in; combination with the preconditioner is quite fast. However preconditioning; does fail for some models. Paul; On Jul 9, 2013 5:54 PM, ""Vutshi"" notifications@github.com wrote:. > I would like to draw your attention to this problem once again. I did some; > testing with steady state for my high dimensional model. The direct method; > runs out of memory so I was trying all sorts of iterative methods. My; > conclusion was that the BicgSTAB method is the best for my particular; > problem. However, the iterative methods are very sensitive to everything; > basically this is why there are so many different kinds of them. Moreover,; > the Scipy realisation of these methods is not the most optimal. PyAMG; > realisation of bicgSTAB worked better for me than the one from scipy. So,; > please, keep both of the methods in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/29#issuecomment-20661092; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20662801:474,test,testing,474,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20662801,1,['test'],['testing']
Testability,The Travis CI should be up and running now. Can you rebase your PR so we can rerun the tests with the latest travis ci configuration?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36082072:87,test,tests,87,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082072,1,['test'],['tests']
Testability,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148349639:71,test,test,71,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639,1,['test'],['test']
Testability,"The Windows test failure is the strange ""Tcl is not properly installed one"". Someone else reported this at https://github.com/microsoft/azure-pipelines-tasks/issues/16426 so I mentioned that we see it too. I linked to this build failure there, so please don't re-run it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394,1,['test'],['test']
Testability,"The `Qcircuit.tex` PR was unfortunately many many years ago, long before I made my first commit to QuTiP (according to `git log` it was by Anubhav Vardhan in 2014), so the damage is already done. It was on my mind because there was a PR about updating the version of the code in it (#1187). Nonetheless, we definitely should remove it. @BoxiLi Boxi: `Qcircuit.tex` is a concern for `qutip-qip` more than the main library from 5.0 onwards - it's currently in `qip/circuit_latex.py`, which we'll have removed, but you've gained. It might be most appropriate to handle this the same way Qiskit does - generate code which does `\usepackage{qcircuit}`, and leave it up to the user to have a properly-provisioned LaTeX environment. I note that `qcircuit` is included in MikTeX and TexLive since at least 2018 (but not sure when exactly it was added). > Yeah putting years I think is the correct thing. Didn't know that at the time. Ah, that's good to know, thanks. I'm trying to learn more about licensing - I'm trying to get it sorted now into the right form, but it's a really complicated field. I think if we change `LICENCE.txt` to. ```text; Copyright (c) 2011--2021 Paul Nation and Robert Johansson.; Copyright (c) 2021--2021 QuTiP Admin Team.; All rights reserved. <BSD 3-clause licence>; ```. and update the final `2021` as appropriate, we'll be in the best standing. That's also why we might want to remove the general licence text from each file - it's already redundant, but it'll be much harder to update if we have it scattered everywhere (automation would run the risk of us messing up and changing any external code's licence as well, I think, which would be wrong). > Look forward to talking to you in July!. Me too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845:124,log,log,124,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845,1,['log'],['log']
Testability,"The `_hashable_without_global_phase` made the tests nice and easy to read, but honestly it was just a timebomb waiting to go off and break the tests. Floats can't reasonably be hashed as an equality test, because they should always include a delta in the comparison. This technically makes the tests slower, but as long as we're just testing the single-qubit Clifford group, it's only a fraction of a second (because there's 24 of them ignoring global phase and 24^2 is only 576).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-626317467:46,test,tests,46,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-626317467,5,['test'],"['test', 'testing', 'tests']"
Testability,"The `lindblad_dissipator` not being trace preserving when `b` is supplied is definitively strange and there is no tests for it being right when `a!=b` is certainly worrying. However I was told that it looked right like this, so I am not sure if we should change it...; Maybe removing `b` and letting more complex variant to be constructed manually would result in less problems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1719#issuecomment-979425060:114,test,tests,114,https://qutip.org,https://github.com/qutip/qutip/issues/1719#issuecomment-979425060,1,['test'],['tests']
Testability,"The `metrics.dnorm` function uses the cvxpy library to calculate the diamond norm. Twice now it has caused many test failures out of the blue #484 and #872.; It would seem like the developers do not prioritise maintaining a conda package. As this is our recommended platform, then it is a risk having this cvxpy dependence. Perhaps there is a method using scipy that we could employ?. @cgranade perhaps could provide some context?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874:112,test,test,112,https://qutip.org,https://github.com/qutip/qutip/issues/874,1,['test'],['test']
Testability,"The `test` subcommand for `setup.py` depends on `setuptools`, rather than just `distutils`. We don't want to require `setuptools`, however, so I think the best strategy is to try and import it but fall back to `distutils` if we can't. I'll post a PR soon that will follow this strategy. Hopefully, that should make it a bit more convenient to run unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/410#issuecomment-183607483:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/issues/410#issuecomment-183607483,2,['test'],"['test', 'tests']"
Testability,"The accompanying code demonstrating the issue and help finding the issue and solution were provided by M. Pechal. Issue was found in qutip version 4.6.2 and 4.6.3. ### Code to Reproduce the Bug. ```shell; # Qubit evolving only under energy relaxation (with H = 0 and the only collapse operator being qt.destroy(2)).; # The relaxation rate is time-dependent.; #; # A simple calculation shows that <ad(t2).a(t1)> = exp( - ( int_0^t1 Gamma(t) dt + int_0^t2 Gamma(t) dt ) / 2 ). H = 0.0 * qt.identity(2); psi0 = qt.basis(2, 1); tlist = np.linspace(0, 1, 101); def Gamma(t):; return 8.0 * t; cops = [[qt.destroy(2), lambda t, args: np.sqrt(Gamma(t))]]; a = qt.destroy(2); ad = a.dag(). testcorr = qt.correlation_2op_2t(H, psi0, tlist, tlist, cops, ad, a); #testcorrM = qt.correlation_2op_2t_MPAF(H, psi0, tlist, tlist, cops, ad, a). i1 = 20; i2 = 50; print('qt.correlation_2op_2t:'); print('<ad(t2).a(t1)> =',testcorr[i1, i2 - i1]). #print('qt.correlation_2op_2t MPAF:'); #print('<ad(t2).a(t1)> =',testcorrM[i1, i2 - i1]). print('------'); print('""manual"" calculation using mesolve:'); rhom = qt.mesolve(H, psi0, np.linspace(0, tlist[i1], 101), cops).states[-1]; print('<ad(t2).a(t1)> =',(qt.mesolve(H, a*rhom, np.linspace(tlist[i1], tlist[i2], 101), cops).states[-1] * ad).tr()). print('------'); print('theory:'); t1 = tlist[i1]; t2 = tlist[i2]; print('<ad(t2).a(t1)> =', np.exp(-(4.0*t1**2 + 4.0*t2**2)/2)); ```. ### Code Output. ```shell; qt.correlation_2op_2t:; <ad(t2).a(t1)> = (0.7117768902828536+0j); ------; ""manual"" calculation using mesolve:; <ad(t2).a(t1)> = 0.5598976820725802; ------; theory:; <ad(t2).a(t1)> = 0.559898366565402; ```. ### Expected Behaviour. qt.correlation_2op_2t should reproduce numbers from theory and 'manual' calculations. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.4.2; Python Version: 3.8.10; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:1389,test,testcorrM,1389,https://qutip.org,https://github.com/qutip/qutip/issues/1808,1,['test'],['testcorrM']
Testability,"The anaconda people have said they have / will fix the scipy openblas package in the next few days, so I think we can wait.; However, I see there were hundreds of new failures in all the py3 latest tests. I will set them of again, see what happens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394079084:198,test,tests,198,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394079084,1,['test'],['tests']
Testability,"The build bot didnt start right, so I just restarted it to get the tests to pass",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529#issuecomment-243791751:67,test,tests,67,https://qutip.org,https://github.com/qutip/qutip/pull/529#issuecomment-243791751,1,['test'],['tests']
Testability,"The change to ""not"" using `ode2es` in the correlation functions is already in `dev.major` (it basically absorbs the few working parts of `ode2es` into a private function in `qutip.correlation`), so my plan had just been to leave the file as-is until that's merged to `master`. My logic in that just feels a bit questionable though, hence my asking.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-815320632:280,log,logic,280,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-815320632,1,['log'],['logic']
Testability,"The checks are too restrictive. For the collapse and expectation operator lists, previous versions allowed the input of single operators. The documentation also explicitly states this is OK. Ex. ; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()). But now this yields the error:. Traceback (most recent call last):; File ""/home/kevinf/PycharmProjects/QutipProjects/test/test.py"", line 3, in <module>; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()); File ""/usr/local/lib/python3.4/dist-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python3.4/dist-packages/qutip/solver.py"", line 813, in _solver_safety_check; for ii in range(len(c_ops)):; TypeError: object of type 'Qobj' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/630:375,test,test,375,https://qutip.org,https://github.com/qutip/qutip/issues/630,2,['test'],['test']
Testability,"The cluster that I use is running on CentOS 6.7. As it is important to me that qutip runs on this, then I will give our 4.2 version a test on this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-318019176:134,test,test,134,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-318019176,1,['test'],['test']
Testability,"The code change look good, but could we also add a test for this so it doesn't fail again in the future? Maybe there is a simple example from a notebook that can be borrowed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1952#issuecomment-1197371391:51,test,test,51,https://qutip.org,https://github.com/qutip/qutip/pull/1952#issuecomment-1197371391,1,['test'],['test']
Testability,The commit af17ded3dec6d712eb852575bf6d5a6c5bbaf832 introduced a performance regression in Qobj.expm. https://github.com/qutip/continuous-benchmark#qobj_expm_20,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/50:138,benchmark,benchmark,138,https://qutip.org,https://github.com/qutip/qutip/issues/50,1,['benchmark'],['benchmark']
Testability,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194836741:83,test,test,83,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741,1,['test'],['test']
Testability,"The conflicts are due to some recent change in `qip`. I had a look at the PRs, those not merged #1187, #1226 do not modify tests. So it should be fine now to resolve it I suppose.; @jakelishman Would you like me to review the current version of `test_gates` or after the conflicts are resolved? I suppose resolving the conflicts won't change the existing test functions. I'll start with; - [x] test_cavityqed.py; - [ ] test_gates.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-619420541:123,test,tests,123,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619420541,2,['test'],"['test', 'tests']"
Testability,"The current `Qobj.type` attribute will be stored within the dimension object; unlike the list format, each object is unambiguously one single type (1D spaces are a problem in list form). Similarly, the ""size"" of a given dimension object is stored within it. ### How this solves the problems. Type inference is removed as a problem; each `Qobj` type has only one unambiguous representation when expressed as dimension objects. The actual name of the type could be stored as a string attached to the objects to maintain compatibility with the 4.x branch. Dimension compatibility test speed are solved by having dimensions represented by singleton class instances like the Python builtin `None`. The reason to use a singleton class is to replace `==` tests with `is` tests; the former is structural equality and requires walking the tensor structure, whereas the latter is referential equality, and is true if and only if the two operands are the same object in memory. For example the dimensions test of the `add` operation is now `left.dims is right.dims`, which is the same speed as comparing two integers. Dimension/shape compatibility is solved by attaching size information into the singleton classes. As the dimension objects are singletons, the size of a dimension object is calculated only on creation of the object. All subsequent `Qobj` that are of the same dimensions as one that came earlier will consequently reuse the same dimensions object, which already calculated its size. This avoids (relatively) expensive calls to `np.prod` on Python lists. The current list syntax allows for invalid dimensions to be represented such as `[2, 1]` (should be `[[2], [1]]`, probably). These sorts of failures cannot be represented in the new system. Similarly, `[[2], [1], [1]]` cannot be represented as the `Map` constructor will take only two arguments. ### Problems this does not immediately solve. Since QuTiP uses matrices to represent linear algebra objects, we tie ourselves to working in some ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:4439,test,test,4439,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['test'],['test']
Testability,"The current test failure is unrelated and not your fault. It's everyone's favourite `dnorm` again, and it's not because of any _new_ problems with it, it's just because we recently re-enabled the `dnorm` tests (see #1463) that had been lying dormant due to a problem in how they were written when we swapped to `pytest` as our runner.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743,2,['test'],"['test', 'tests']"
Testability,"The current test failures can probably be fixed by merging #1651, so I should review that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660,1,['test'],['test']
Testability,"The current test implementation is taking 3 seconds locally. But the times are quite bigger on the CI.I am positive that the test I implemented is minimal both in dimensions and requirements, as the alternativeof limiting the number of `eigvals` claculated and checking distinct from 0 on unitary matrices impacts the performance negatively on my side.; Maybe we should ship this without tests?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-821186337:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-821186337,3,['test'],"['test', 'tests']"
Testability,The dnorm tests are sporadically (quite regularly) failing e.g. ```; ======================================================================; ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.; ----------------------------------------------------------------------; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.; ```. I suggest we turn them off by not installing cvxpy for any of the test configurations.; We can turn them on again if someone can make an attempt to make the dnorm tests more reliable @cgranade . I will raise a PR for this now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/880:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/issues/880,3,['test'],"['test', 'tests']"
Testability,The dumping tests were mainly added to increase coverage; The unitarity test would have caught #477,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/478#issuecomment-221549276:12,test,tests,12,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-221549276,2,['test'],"['test', 'tests']"
Testability,"The eigenvalues can be found with the typical functions present in qutip, such as `eigenenergies()` and `qutip.eigenstates()`. However, there can be some spurious eigenvalues, as detailed in this issue, #993. Only the steadystate, with eigenvalue 0, is assured to be correct. If you are just interested in the Liouvillian gap only, that should be fine. . Another faster and more stable technique that can be used in the case that only local dissipation processes are present (while the Hamiltonian is long range), is that of calculating the ""antigap"": since an additional weak PT symmetry is present, the symmetry of the Liouvillian spectrum in the complex plane can be exploited by just calculating the two largest eigenvalues. More details about this method, also benchmarking the validity of the Liouvillian gap calculated from a PIQS object, can be found here https://arxiv.org/abs/1912.07570. . For a tutorial detailing the differences between the different symmetric approached, but allowing the calculation also of nonlinear functions on initial states and their evolution, see the notebook entitled ""Von Neumann entropy and purity"" at http://qutip.org/tutorials#piqs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1545#issuecomment-832803880:766,benchmark,benchmarking,766,https://qutip.org,https://github.com/qutip/qutip/issues/1545#issuecomment-832803880,1,['benchmark'],['benchmarking']
Testability,"The eigenvectors returned by .eigenstates() method are determined up to a sign (which is correct, but leads to interesting issues in some cases). Is it possible to update the eigenstates method to fix these internally? A simple workaround is to invert (multiply by -1) any eigenstates that cause trouble, but I'm not sure I know of a universal test for ""trouble"". As an example, [this gist](https://gist.github.com/amcdawes/437f8756fcb8ff8ca4c1b720600adf43) demonstrates a fix whereby all eigenstates are made to have positive initial values. I suspect this fix is specific to SHO states, but perhaps a universal standard exists where each vector could be made to match the expected result?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1118:344,test,test,344,https://qutip.org,https://github.com/qutip/qutip/issues/1118,1,['test'],['test']
Testability,"The equation for `d_{2,i}` for `ssesolve` seems to be missing a 1/2 term. I checked two sources: Quantum Measurement and Control, Wiseman and Milburn (equation 4.76, page 162), and [the development notebook for SSE](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolve-tests.ipynb). In both cases, the expression for d_{2, i} for the SSE is: . <img width=""278"" alt=""Untitled"" src=""https://user-images.githubusercontent.com/39472087/145735966-85d0c932-a247-42e7-91e1-98fc0f6d0c49.png"">. For the stochastic master equation, I also found a different expression for `d_{2,i}`. Both book (equations 4.24 and 4.72 in pages 152 and 161, respectively) and development notebook, state that it should be written:. <img width=""483"" alt=""d2master"" src=""https://user-images.githubusercontent.com/39472087/145737189-9e3996a5-186a-47e3-9e2f-7e365e00e5ea.png"">. To test the current qutip implementation, I tried to replicate the results of both [SSE](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolve-tests.ipynb) and [SME](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb) development notebooks. The results obtained with QuTiP homodyne and heterodyne methods were similar to the results obtained with the d_1 and d_2 implemented 'by hand' in the notebooks, which used the expressions I listed above. In my tests, I used QuTiP 4.5.2. The equations above are also the current reported equations in the [stochastic solver documentation](https://qutip.org/docs/latest/guide/dynamics/dynamics-stochastic.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-992023974:319,test,tests,319,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-992023974,5,['test'],"['test', 'tests']"
Testability,The equivalent functionality has tests in version 5.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/624#issuecomment-1427858476:33,test,tests,33,https://qutip.org,https://github.com/qutip/qutip/issues/624#issuecomment-1427858476,1,['test'],['tests']
Testability,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922781:76,test,tests,76,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781,1,['test'],['tests']
Testability,The error here has nothing to do with the pull but rather with the coveralls that shouldnt be running anyway for py3.2. Since we are no longer testing against 3 2 anyway I see no reason why this cant be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66583536:143,test,testing,143,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583536,1,['test'],['testing']
Testability,The error is related to my new metrics tests being too strict. So this seems to be ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66949855:39,test,tests,39,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66949855,1,['test'],['tests']
Testability,"The errors in this PR are caused by SciPy 1.11 raising:; ```; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; =========== 2 failed, 3250 passed, 12 skipped in 1792.40s (0:29:52) ============; ```; These should be fixed but in another PR. Issue #2093 created to ensure this isn't forgotten.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078:75,test,tests,75,https://qutip.org,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078,2,['test'],['tests']
Testability,"The failing test are related to #2301 not being merged in yet. I am not sure we want tests for this.; We have no control on the memory of the runner, which could change at any time.; There could be strange thing with virtual memory, swap, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304#issuecomment-1908803360:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/2304#issuecomment-1908803360,2,['test'],"['test', 'tests']"
Testability,The failing test has nothing to do with this PR,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444#issuecomment-781749400:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1444#issuecomment-781749400,1,['test'],['test']
Testability,"The failing test in `CircuitSimulator` is likely from `run_statistics`, which collects all the possible outcomes wrt. the measurement result. If the measurement result is `None`, it will skip that state. I can also set tolerance there, or update the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083,2,['test'],['test']
Testability,"The failing test is a niche feature in coefficient compilation for which I expect very few users to want it (I used it for debugging /timing, but I can't think of any general use). I will look into it, it means that something changed with cython usage in python 3.10. But we can just remove it if it cause any problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791#issuecomment-1028090347:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/1791#issuecomment-1028090347,1,['test'],['test']
Testability,The failing test was unrelated:; ```; FAILED qutip/tests/solver/test_floquet.py::TestFloquet::testFloquetUnitary - assert (0.9999980885...77441045e-05j) == 1.0 ± 5.0e-05; comparison failed; Obtained: (0.9999980885612143+5.1789504077441045e-05j); Expected: 1.0 ± 5.0e-05; ```; Recording it here so that we can fix it (looks like just a tolerance issue in the Floquet tests).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731:12,test,test,12,https://qutip.org,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731,6,"['Test', 'assert', 'test']","['TestFloquet', 'assert', 'test', 'testFloquetUnitary', 'tests']"
Testability,The failing tests is unrelated so I will merge this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1878#issuecomment-1109771422:12,test,tests,12,https://qutip.org,https://github.com/qutip/qutip/pull/1878#issuecomment-1109771422,1,['test'],['tests']
Testability,"The fermionic stuff looks to me! For the change in the terminator, I see the logic I guess. Also makes it easier for the user to include it or not, without remaking the bath. I have some reservations about it just because I can imagine someone following the examples and using jupyter notebook rerunning the same cell multiple times and continuously modifying their Hsys or something? But that can just be made clear in the examples so lets go ahead and merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1726#issuecomment-987532370:77,log,logic,77,https://qutip.org,https://github.com/qutip/qutip/pull/1726#issuecomment-987532370,1,['log'],['logic']
Testability,"The following can be used for testing: @hodgestar ; ```python; import qutip. dm = qutip.rand_dm(4); fig, ax = qutip.hinton(dm); fig.show(). qutip.settings.colorblind_safe = True; fig, ax = qutip.hinton(dm, color_style=""threshold""); fig.show(); qutip.settings.colorblind_safe = False. fig, ax = qutip.hinton(dm, color_style=""phase""); fig.show(); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1674#issuecomment-991972646:30,test,testing,30,https://qutip.org,https://github.com/qutip/qutip/pull/1674#issuecomment-991972646,1,['test'],['testing']
Testability,"The following error occurred several times while running the tests on my machine:; ```; ======================================================================; ERROR: Stochastic: ssesolve: heterodyne, time-dependent H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_stochastic_se.py"", line 208, in test_ssesolve_heterodyne; map_func=parallel_map, args={""a"":2}); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 698, in ssesolve; args=args, **kwargs); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 417, in __init__; self.noise = np.random.randint(0, 2**32, ntraj).astype(""u4""); File ""mtrand.pyx"", line 990, in mtrand.RandomState.randint; ValueError: high is out of bounds for int32. ----------------------------------------------------------------------; ```; It is due to the fact that the default integer of python on windows is int32 instead of int64. `np.random.randint(0, 2**32)` produces the same error on my machine. Maybe it is better to add `dtype=np.int64` or `dtype=np.uint32` since they are platform independent. If you agree I can work on fixing it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968:61,test,tests,61,https://qutip.org,https://github.com/qutip/qutip/issues/968,3,['test'],"['test', 'tests']"
Testability,"The function `rand_herm` doesn't return a uniformly random sample from the space of Hermitean matrices -- instead it uses by default a simpler procedure of generating a random matrix with moderately sized entries and then calculating `M + M.conj().transpose()`. The following note in the `rand_herm` documentation explains how to select the eigenvalues:. > If given a list/ndarray as input 'N', this function returns a; > random Hermitian object with eigenvalues given in the list/ndarray.; > This is accomplished via complex Jacobi rotations. While this method; > is ~50% faster than the corresponding (real only) Matlab code, it should; > not be repeatedly used for generating matrices larger than ~1000x1000. Specifically one may generate random eigenvalues and supply those. I don't think anyone is against improving the `rand_XXX` function to have better statistical properties, but they're primarily used for testing and simple trial data at the moment, so their implementations have been good enough so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642#issuecomment-905691827:915,test,testing,915,https://qutip.org,https://github.com/qutip/qutip/issues/1642#issuecomment-905691827,1,['test'],['testing']
Testability,"The git version matches the latest, so I am a bit confused. We have unit tests for expm that work fine and I pulled the latest version here at work and everything works. I also couldnt find any changes to diags in the scipy changelog. . Maybe remove the old qutip in the sitepackages dir and reinstall.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237353730:73,test,tests,73,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237353730,1,['test'],['tests']
Testability,"The green line is after the first commit of this pull request where I used a for loop. The orange line is after the second commit when I switched to using numpy.cumprod.; The red line is from the quantum optics framework written in julia that I'm currently working on (https://github.com/bastikr/QuantumOptics.jl). While doing some benchmarks I realized that for large N qutips coherent function failed which is why I wrote this patch. I don't know where the constant offset in the benchmark originates from but I think the speed is fine now, creating coherent states is probably never a bottleneck anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292929031:332,benchmark,benchmarks,332,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292929031,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,The information has been moved to the change log,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/431:45,log,log,45,https://qutip.org,https://github.com/qutip/qutip/pull/431,1,['log'],['log']
Testability,"The installation seems to succeed, but there seems to be a problem when the tests are run (or when I go into python, trying to load anything like `from qutip import *` gives an error. The script gives the following error (which can be reproduced by just running `import qutip.testing as qt` in python):. ```; [. . .]; Successfully installed qutip-3.1.0; Running QuTiP unit tests; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""/usr/local/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""/usr/local/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""/usr/local/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""/usr/local/lib/python2.7/site-packages/qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 431, in load_module; language_level=self.language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 209, in load_module; inplace=build_inplace, language_level=language_level); File ""/usr/local/lib/python2.7/site-packages/pyximpo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:76,test,tests,76,https://qutip.org,https://github.com/qutip/qutip/issues/348,3,['test'],"['testing', 'tests']"
Testability,The intermittent test failure in c6d68c0 is unrelated and should be resolved by merging in dev.major.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969:17,test,test,17,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969,1,['test'],['test']
Testability,"The intermittently failing test seems unrelated and is `test_usage_in_solvers[mesolve-complex-spline,string]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1553#issuecomment-840354389:27,test,test,27,https://qutip.org,https://github.com/qutip/qutip/pull/1553#issuecomment-840354389,1,['test'],['test']
Testability,"The internal data type for storing dynamics generators (Hamiltonians), propagators, and the time evolution can now be set as Qobj. When using Qobj the propagators are computed using qutip methods for expm. Resolves #370; The default for small systems remains ndarray, as this provides much faster execution (factor of 10 approx). However, it is assumed, but not yet tested, that for larger systems the Qobj propagation will be faster, and certainly less memory consumptive. The internal data type (if not specified) is chosen automatically using the same criteria Qobj.expm() uses to determine whether to use the (cython) sparse method.; The main motivation for implementing this change is for users developing their own custom fidelity and gradient measures which use the partial trace method. Consequently, preserving the dimensions is important. This has been shown (by colleagues testing) to be more efficient than recreating the Qobjs from ndarrays.; The internal operator processing methods and attributes have been renamed with underscores preceding to indicate that these will be of the internal operator data type. Accessors have been added that will always provide Qobj representations of the operators.; Theoretically any operator data type that supports the dot() method could be used, e.g. some other sparse matrix type, however this has not been extensively tested and should be considered an experimental feature.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/397:366,test,tested,366,https://qutip.org,https://github.com/qutip/qutip/pull/397,3,['test'],"['tested', 'testing']"
Testability,"The issue is not with import, but deprecation warnings. ; For our tests, warnings are considered errors.; This is why the tests using scipy 1.12 are still failing.; We will fix this on our side. Thank you again for your contribution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398:66,test,tests,66,https://qutip.org,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398,2,['test'],['tests']
Testability,The issue occurs when running tests on Windows. Both p35 and py36 behave the same. Both tests work fine when run separately,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728#issuecomment-317279556:30,test,tests,30,https://qutip.org,https://github.com/qutip/qutip/issues/728#issuecomment-317279556,2,['test'],['tests']
Testability,"The issue turned out to be that I hadn't merged with upstream/master yet to include the unitarity feature, so those tests were not being included. With those added, `master` and this PR take about the same amount of time on Python 2.7— the variation between runs is larger than the difference. Sorry again for missing those tests before.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130896657:116,test,tests,116,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130896657,2,['test'],['tests']
Testability,"The macOS Xcode 12 runners have been terminally slow for some time now. Looking at the setup time, it took nearly 9 minutes to build QuTiP, which is crazy compared to Linux and Windows build times (~2 minutes), or even Xcode 11 (~3 minutes). We noticed this starting several months ago, but the problem is that I don't have a machine I can test it on to see if it's a Travis problem or an Xcode 12 one. I'm unwilling to change my personal macOS version beyond 10.14 in part _because_ there are changes to how C compilation and debugging are handled - Apple are making it harder and harder to attach debuggers and set up sane compilers that aren't Xcode, and it took me long enough to get an actually fully featured compiler running on 10.14, let alone the next versions. Their vendored version of clang doesn't even support OpenMP!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801774874:340,test,test,340,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801774874,1,['test'],['test']
Testability,"The main purpose of this patch is to cherry-pick up the commits which allow us to move our testing infrastructure to GitHub Actions, without absolutely messing up the merge of #1481. After that is merged, I'll merge everything up properly. This stop-gap measure is necessary because Travis CI is shutting down its free tier _today_, and we haven't managed to effect the merge yet. Unfortunately, I had to pick out rather more than I had hoped to get this without seriously rewriting `__init__.py`, `setup.py` and the testing workflow, so apologies for the larger PR. I have, however, cherry-picked out PRs in full, rather than splitting them, to make it logically a bit simpler. I have also cherry-picked the PRs commit-by-commit, rather than squashing them, to make it easier to understand the history when I have to do a larger merge later (even though it'll still be more confusing in the `git log` than desirable). The cherry-picked PRs are:; - #1465; - #1471; - #1484; - #1510; - #1541; - #1551 (the actual target). I had to fix several merge conflicts in `__init__.py` over time, but most stuff was trivial to solve. The largest merge conflicts that needed to be handled were issues where the old and new methods of handling settings conflicted, but again, it's obvious what is the correct version in this. I have also disabled warnings-as-errors in the testing infrastructure, until we've fixed them properly on this branch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1574:91,test,testing,91,https://qutip.org,https://github.com/qutip/qutip/pull/1574,5,"['log', 'test']","['log', 'logically', 'testing']"
Testability,"The mcsolve is Ok. But I did not test it on windows yet.; td_Qobj work fine for the solvers. However, there are probably a few methods/properties that would be useful but I did not think about. If somebody would have the time to try it and send feedback, that would be great.; For now, sesolve and mesolve also accept td_Qobj. I am working, in another branch, to have the stochastic solvers work with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/774#issuecomment-351799673:33,test,test,33,https://qutip.org,https://github.com/qutip/qutip/pull/774#issuecomment-351799673,1,['test'],['test']
Testability,"The mcsolver should be quite a bit faster now. Using the code in my previous comment as a benchmark, I am getting ~6.8 sec for the mcsolver vs. ~4.2 for the mcsolve_f90 code. So within a factor of 2 from pure fortran. Not bad.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64745841:90,benchmark,benchmark,90,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64745841,1,['benchmark'],['benchmark']
Testability,The most recent three PR should resolve all error and warnings in the tests. I will merge them all later today unless there any objections,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-186011649:70,test,tests,70,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-186011649,1,['test'],['tests']
Testability,The naming convention of test class methods seems to vary a lot throughout the library. Is there any reason why we do not stick with the usual pep8 naming convention in this area?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405#issuecomment-164471659:25,test,test,25,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-164471659,1,['test'],['test']
Testability,"The negative values problem is definitely present when `state` is a density matrix, and right now that is the only case I have tested. . I understand it will be very slow for larger systems (exponentially so), but in my application is seems to be much slower even than the time evolution of the function, which seems like it should be more computationally complex. Given that, I suspect there is some room for optimization. . What's the best way to tell if there are any relevant differences between 4.7.2 and the 5.0.x alpha?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2265#issuecomment-1819970769:127,test,tested,127,https://qutip.org,https://github.com/qutip/qutip/issues/2265#issuecomment-1819970769,1,['test'],['tested']
Testability,"The new `super_tensor` function now works and passes all relevant tests. This required getting permutation defined and working for superoperators, which in turn will need better documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39584350:66,test,tests,66,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39584350,1,['test'],['tests']
Testability,"The new and existing functions now share a uniform API, with each taking an `N` and a `dims` argument. Since `rand_ket` did not currently respect `dims` due to a bug in `check_dims`, I modified that function and `rand_ket_haar` slightly and added unit tests to check that they act uniformly. The new tests run fine for me locally, so I'm happy for with this PR if the Travis build works. Thank you!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/316#issuecomment-74508115:252,test,tests,252,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74508115,2,['test'],['tests']
Testability,"The new test explicitly checks the eigenvalue equation for each generated eigenvalue/vector pair, and tests (via the determinant) that all eigenvectors are linearly independent, as they must be since they are eigenvectors of a Hermitian matrix. The previous test relied on the implementation of `zheevr` producing _exactly_ the same result as `scipy.linalg.eigh`, which was very fragile, and indeed broken by scipy 1.5. Fixes #1299.; Deprecates PR #1300, since this actually turned out to be a much easier fix than I had feared. Intermittent segfaults on Mac persist, unfortunately, so this still requires #1288.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/1301,3,['test'],"['test', 'tests']"
Testability,The new test is failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2114#issuecomment-1468855861:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/2114#issuecomment-1468855861,1,['test'],['test']
Testability,"The new version of expm that I grabbed from Expokit does not behave quite as well as the SciPy version. After a bit of testing, the SciPy version performs the best overall. For our purposes, I think that either method would be sufficient. However, the SciPy version is the current best algorithm, and replacing as much code as possible with SciPy code is probably a good thing. This code still defaults to the dense method.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/466:119,test,testing,119,https://qutip.org,https://github.com/qutip/qutip/pull/466,1,['test'],['testing']
Testability,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/313#issuecomment-73030236:144,test,test,144,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236,2,"['log', 'test']","['log', 'test']"
Testability,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182174246:334,test,testing,334,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246,1,['test'],['testing']
Testability,"The previous implementation of `choi_to_chi` and `chi_to_choi` required that `dims` be specified explicitly as qubits; for example, `[[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]` for a three-qubit system. This PR generalizes to allow for `dims` built from powers of 2 instead, as in `[[[8], [8]], [[8], [8]]]`. In addition, this PR adds new test cases to check that `to_choi` and `to_chi` properly roundtrip for multiqubit dimensions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/390:345,test,test,345,https://qutip.org,https://github.com/qutip/qutip/pull/390,1,['test'],['test']
Testability,"The problem appears in qutip version 4.0.0 when considering the tensor product of a few systems, and including more than one dissipation channel. I noticed a similar issue on a much more complex system, but in the code attached I consider the simplest system on which I have found the bug to appear. Consider three uncoupled qubits, each with a distinct frequency. The Hamiltonian is (ignoring tensor products with identity matrices) :. H = (w1 / 2) * sigmaz_1 + (w2 / 2) * sigmaz_2 + (w3 / 2) * sigmaz_3. Let us couple qubits 2 and 3 to independent white-noise environments through operators sigmax_2 and sigmax_3. Qubit 1 is decoupled from the other qubits, and does not couple to any relaxation channel. We consider the initial state |1:e, 2:g, 3:g>, where g(e) labels the ground (excited) state of a qubit, and evaluate the population of the excited state of qubit 1 as a function of time using bloch_redfield_tensor() and bloch_redfield_solve(). Since qubit 1 is decoupled from the other qubits, its excited-state population should remain 1 at all times. Yet, qutip yields exponential decay of the population of qubit 1. I noticed that when I remove dissipation for qubit 2 (keeping only dissipation through sigmax_3), the problem disappears and qubit 1 forever stays in its excited state. So the problem seems to arise when combining two relaxation sources. I am using qutip version 4.0.0. A colleague of mine tried the attached test code on qutip version 3.1.0 and did not catch any bug (i.e. qubit 1 did not relax with qutip 3.1.0). So the problem seems to be related to versions of qutip later than 3.1.0. Can anyone replicate the bug with the attached code ? . (I tried putting the code directly here but the hashtag signs for the comments made a mess, and github does not accept attached .py files, so I have put the code in a .txt file instead.). [redfield.txt](https://github.com/qutip/qutip/files/635122/redfield.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/572:1435,test,test,1435,https://qutip.org,https://github.com/qutip/qutip/issues/572,1,['test'],['test']
Testability,The problem is solved by myself. This is due to remain files after I uninstalling qutip 3.1.0. One ; just need to delete the whole folder 'lib.macosx-10.11-x86_64-3.5' at the position ~/.pyxbld. Then the self testing working. ---. The delete is not needed. Reopen the terminal may solve the problem,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/445#issuecomment-190647470:209,test,testing,209,https://qutip.org,https://github.com/qutip/qutip/issues/445#issuecomment-190647470,1,['test'],['testing']
Testability,"The problem seems pretty simple, I think I could take care of it. However, I don't have much experience in collaborative programming, in particular I don't know what the local customs are. (I know how to use git, but I'm not familiar with the layout of the library, what tests should I perform [or even add my own, since this issue wasn't noticed before 5.0.0] etc.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2129#issuecomment-1483294457:271,test,tests,271,https://qutip.org,https://github.com/qutip/qutip/issues/2129#issuecomment-1483294457,1,['test'],['tests']
Testability,"The problem with OPENMP is that the point where parallel processing begins to have an advantage is platform, and hardware dependent. As such, I have added a simple benchmark routine that calculates a good number of NNZ that a matrix should have for OPENMP to be utilized. This also required me to change the way the qutiprc file is done, i.e. it now uses the standard configparser module. This benchmark is called on first run, or anytime where the qutiprc 'openmp_thresh' flag is missing, or the qutiprc file itself does not exist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/652#issuecomment-283874454:164,benchmark,benchmark,164,https://qutip.org,https://github.com/qutip/qutip/pull/652#issuecomment-283874454,2,['benchmark'],['benchmark']
Testability,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-145857462:403,test,tested,403,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462,2,['test'],"['test', 'tested']"
Testability,"The python 2 test keep failing, but if you are updating travis to run only python 3 test, then it should be ready to merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-428607673:13,test,test,13,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-428607673,2,['test'],['test']
Testability,The qip.hadamard_transform function does not return return expected output. . Tested with N=1 in Python 2.7 and factor is 0.5 rather than 1/sqrt(2). . The 2*_(-N / 2) would need to be something like 2_(-N / 2.0) to ensure float division,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/257:78,Test,Tested,78,https://qutip.org,https://github.com/qutip/qutip/issues/257,1,['Test'],['Tested']
Testability,"The qutip.fortran module seems to be built and installed in the TravisCI environment, but for some reason loading it after install fails, so the tests are skipped. . See for example the build log at https://travis-ci.org/qutip/qutip/jobs/19551778",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/80:145,test,tests,145,https://qutip.org,https://github.com/qutip/qutip/issues/80,2,"['log', 'test']","['log', 'tests']"
Testability,"The qutip/setup.py; has these lines. ```; config.add_subpackage('cy'); config.add_subpackage('control'); ```. Should the qip packages and nonmarkov go in there or or is this covered by this in the main setup.py. ```; PACKAGES = ['qutip', 'qutip/ui', 'qutip/cy', 'qutip/qip', 'qutip/qip/models',; 'qutip/qip/algorithms', 'qutip/control', 'qutip/nonmarkov', ; 'qutip/tests']; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/450:365,test,tests,365,https://qutip.org,https://github.com/qutip/qutip/issues/450,1,['test'],['tests']
Testability,"The segfault on mac is not fixed yet. @nathanshammah found 3 tests that fails because of it.; Since we don't have a solution comming soon, we are simply skipping these tests for 4.5.1. This is the error in #1197. In common with these 3 test is the computation of eigenvalues, 2 of them do it directly with scipy, the last one compare the cython version to the scipy one.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1257:61,test,tests,61,https://qutip.org,https://github.com/qutip/qutip/pull/1257,3,['test'],"['test', 'tests']"
Testability,The six library is used for Python 2.x and 3.x compatibility tricks. It failed to import during Travis tests. Should we make this library available in Travis tests?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378:103,test,tests,103,https://qutip.org,https://github.com/qutip/qutip/issues/378,2,['test'],['tests']
Testability,"The solver seems to be working nicely, and passes all the tests that I have come up with. The last few tests still need to be added, interpolation functions should be able to be used for H and c_op terms, and the docstrings need to be updated as there is a new preferred way to input the a_ops that eliminated the need for a spectra_cb kwarg.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/676#issuecomment-300685498:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/pull/676#issuecomment-300685498,2,['test'],['tests']
Testability,"The steadystate tests pass in our Windows GitHub Actions test runs now, so I'm closing this under the assumption that it was fixed between 2020 and now. Very happy for a new bug to filed if it still persists in 4.6.3 or 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459:16,test,tests,16,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459,2,['test'],"['test', 'tests']"
Testability,"The stochastic solver are not thought for a lot of noise operators.; In v4, operations are all `CSR @ Dense_1D_array`.; In v5, you have more control on which storage is used for each operators, we support dense, csr, dia format (+ plugin for cupy, jax, tensor network in development.). But I fail to see how you can use sparsity for speed it up in this case in particular.; Could you write the equations / logic of the optimization here?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2298#issuecomment-1904360503:406,log,logic,406,https://qutip.org,https://github.com/qutip/qutip/issues/2298#issuecomment-1904360503,1,['log'],['logic']
Testability,"The stochastic solver have been redone.; smesolve and ssesovle can be used for time dependent systems (H, c_ops and sc_ops).; The available solvers are : 'euler-maruyama', 'pc-euler, 'milstein', 'platen', 'milstein-imp', 'taylor15', 'taylor15-imp', 'explicit15'. All solvers are usable by both ssesolve and smesolve, for time-dependent cases and for both heterodyne and homodyne methods. There is no restriction on the number of sc_ops. The solvers are in cython, making them 2~3 time faster than the previous version, with the exception of the implicit solvers, where the timing is about the same. The photocurrent method as been moved to it's own functions: photocurrentmesolve and photocurrentsesolve. It can take time-dependent Hamiltonian. The stochastic (piecewse deterministic process) PDP solvers (ssepdpsolve and smepdpsolve) are untouched. The previous version of smesolve/ssesolve allowed the user to determine it's own d1 and d2 function. This capacity have been moved to the function general_stochastic. However the function only has access to some solver: 'euler-maruyama', 'platen', 'explicit15'. . I created a function which list the solvers with the references: stochastic_solver_info(). The convergence of the solvers was tested with a tests similar to https://github.com/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815:1240,test,tested,1240,https://qutip.org,https://github.com/qutip/qutip/pull/815,2,['test'],"['tested', 'tests']"
Testability,"The string type time-dependent solvers generate pyx files and compile them in runtime. Much of qutip will run without Cython. But not the string type time-dependent solvers, which are one of the main features of qutip.; @yurivict you could try removing Cython from your Python env and then run the tests - see how many fail",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/893#issuecomment-404095769:298,test,tests,298,https://qutip.org,https://github.com/qutip/qutip/issues/893#issuecomment-404095769,1,['test'],['tests']
Testability,"The suggestion that @Ericgig and I discussed is that qutip will set the the flags `-w -O3 -funroll-loops` via Cython's `extra_compile_args` *unless* the `CFLAGS` variable is set, in which case it will not set `extra_compile_args`, as Cython picks these `CFLAGS` up. That is if `CFLAGS` is set then qutip assumes the user knows what they are doing and won't interfere. We need to test that this will work with the conda-forge build etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/951#issuecomment-466654660:379,test,test,379,https://qutip.org,https://github.com/qutip/qutip/issues/951#issuecomment-466654660,1,['test'],['test']
Testability,"The sysconfig docs are a little terse on the subject, but the tests show that the depreciation fix is not compatible with 2.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/394#issuecomment-154925807:62,test,tests,62,https://qutip.org,https://github.com/qutip/qutip/pull/394#issuecomment-154925807,1,['test'],['tests']
Testability,The test failure is the sporadic Window tk one.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400,1,['test'],['test']
Testability,"The test failure is unrelated; the swap to the new `CSR` type has meant that a few test tolerances have become much more fragile when considering numerical precision; since we're now using our own mathematical operations rather than scipy's, we're a bit more likely to have disagreements with them. This may also have to do with the new version of `Qobj` being more consistent about applying the `auto_tidyup` rule. This is one rule I really think we should look at removing or seriously reworking; it's basically just ""numerical imprecision as a feature, not a bug"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149,2,['test'],['test']
Testability,"The test failure on Python 3.6 appears to be due to some exceptionally weird behaviour by `conda` in the Travis setup - if you look closely, you can see that when it runs `conda uninstall cython`, it _downgrades_ `numpy` to 1.14.2. This would not be a problem in a `conda-forge` release build, because the `numpy` API dependency is pinned in the feedstock, but it is a potential problem on `pip` source builds. It's possible this super odd behaviour of `conda` is the cause of people's complaints on the email lists about failed imports. I will push a change to the requirements here to try and enforce `numpy >= 1.16.6`, which ought to solve the dependency issues. I will make a similar change on `master` and in #1429 (which I will likely back-port to master before 4.6).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359,1,['test'],['test']
Testability,The test failure was just the occasional bloch sphere test failure that happens on Windows sometimes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734,2,['test'],['test']
Testability,The test failure was just the random superoperator `iscptp` and `isherm` test that is being fixed in #2147.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493,2,['test'],['test']
Testability,The test failures seem to be only coveralls result upload errors. I'm happy to merge without re-running. Let's just double check that the merge commits pass everything.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452,1,['test'],['test']
Testability,"The test for python 3.6 seems to fail at coveralls, not sure why though. It may not be related as the rest of the tests do not fail. Could it be rerun?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973125463:4,test,test,4,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973125463,2,['test'],"['test', 'tests']"
Testability,"The tests don't work with numpy 1.25, the actual code work but raise warnings from time to time.; The fix is already merged in the qutip-4.7.X branch (#2178).; I can't say when the patch will be officially released, but I am expecting it to come sooner than later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180#issuecomment-1601563608:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/issues/2180#issuecomment-1601563608,1,['test'],['tests']
Testability,"The tests fail because if one defines `f(t, args, k)` and defines `g = partial(f, k=0.5)` then the signature of g is `<Signature (t, args, *, k=5)>`. There will likely be other cases like this (e.g. many decorators will change the signature). I vote that we give up on all the complicated detection of the old syntax and simply ask users to change `f(t, args)` to `f(t, **args)` when they upgrade to QuTiP 5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-892540881:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-892540881,1,['test'],['tests']
Testability,The tests fail but it looks like a short network outage that caused conda to fail to download some packages. Probably just running it again will sort it out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672,1,['test'],['tests']
Testability,"The tests failed because of the recent packaging release (see #2037). The documentation builds passed though, so I'm merging this change to the documentation requirements.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035#issuecomment-1342951991:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/2035#issuecomment-1342951991,1,['test'],['tests']
Testability,"The tests for this are sometimes erroring in Travis; See test result for #424 ; ERROR: Test Qobj: trunc_neg works for non-diagonal opers. I saw a conversation about this somewhere, but can't find it now",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/issues/425,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"The tests ran fine, besides for the option with OpenMP, where it gave ; ```; /home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+2fe7701-py3.7-linux-x86_64.egg/qutip/__init__.py:166: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Calibrating OPENMP threshold...; No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.; Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received; The build has been terminated; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-566115975:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-566115975,2,['test'],"['test-environment', 'tests']"
Testability,The tests report errors because of the cancelled PR #1340 which was made to the wrong branch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992,1,['test'],['tests']
Testability,"The tests were failing because Kraus operators are defined up to a complex phase. Fixing the phase in the eigensolver helped with the operators that have non-zero `[0,0]` element. But where this element is 0, the function still may return Kraus operators like `-sigmax()` where one previously expected `sigmax()`. Which is still a correct operator, but it may fail tests in projects that rely on `qutip` if they compare operators element-wise, and not up to a global phase (like comparing eigenvectors or looking at an overlap).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2276#issuecomment-1846486935:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/2276#issuecomment-1846486935,2,['test'],['tests']
Testability,The tests will probably fail horrendously on Linux until #1383 is merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1384#issuecomment-728384766:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/1384#issuecomment-728384766,1,['test'],['tests']
Testability,"The unitary operator evolution implemented in #832 was flawed.; This is a complete overhaul. It uses the method from mesolve map evolution.; The tests implemented in #832 did not uncover the flaws, and so extra ones are added that would have.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/868:145,test,tests,145,https://qutip.org,https://github.com/qutip/qutip/pull/868,1,['test'],['tests']
Testability,The version of ptrace can support bigger system and is faster for large matrices. The ptrace of 4.3 create a integer overflow when the matrix size is `2**16` (#828).; I tested this version up to `2**25` without problem.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/970:169,test,tested,169,https://qutip.org,https://github.com/qutip/qutip/pull/970,1,['test'],['tested']
Testability,"Then out about removing dict expect? Dictionary support was not tested and supported only for some solver for a long time. It would be strange to have it become the default. There are a some differences for the user. Code using `np.array(result.expect)` or `for expect in result.expect:` will break. . For MC result, it has little impact, dict are a little more annoying to work with compared to list, but it need the expect as ndarray; not list or dict anyway. . As for plotting function, I forgot they existed.... We could have them as methods of `Result`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141239672:64,test,tested,64,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141239672,1,['test'],['tested']
Testability,"There are ""breaking"" changes within the scipy private code which various parts of QuTiP depended on (see gh-1298, gh-1301 and commits 46e04a1, 6c85261 and 663d7d2). We ensure that at least one test on Travis uses a scipy version before 1.5 so that we always maintain support for it - the other tests will typically install scipy>=1.5. This particular test is chosen by elimination:; - we want the ""default"" case testing against the newest versions of Python to use the newest versions of the libraries available; - we want the Cython parts to be tested against both versions of scipy, since we link against their versions of LAPACK/BLAS.; - the Mac tests (at the time of writing) skip some tests which are problematic because of intermittent segfaults, including at least one which has issues with scipy 1.5. The MKL/OMP one skips some tests, but not any which use scipy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302:193,test,test,193,https://qutip.org,https://github.com/qutip/qutip/pull/1302,8,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"There are a few options:; - Wait for #2193 to be merged and add the missing tests after.; - Merge this and add the tests for `matrix_histogram`, etc. in #2193. Any is good, just tell me when you are ready for a review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2192#issuecomment-1635892287:76,test,tests,76,https://qutip.org,https://github.com/qutip/qutip/pull/2192#issuecomment-1635892287,2,['test'],['tests']
Testability,"There are many deprecation warnings arising from the Travis tests. It would seem wise to resolve these before generating the next stable release, as it is likely to be long-lived.; Although there are lots of warnings, the sources might be few.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/381:60,test,tests,60,https://qutip.org,https://github.com/qutip/qutip/issues/381,1,['test'],['tests']
Testability,"There are no test code for progress bars yet.; You will need to create a new test file: `qutip/tests/test_progressbar.py`. The test can be as simple as creating the bar, call `update`, call `finished` and check that the total time is a sensible value.; You could also use pytest to catch print with [capsys](https://docs.pytest.org/en/7.1.x/how-to/capture-stdout-stderr.html#accessing-captured-output-from-a-test-function) and confirm that something was printed when `update` / `finished` is called.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2112#issuecomment-1471949520:13,test,test,13,https://qutip.org,https://github.com/qutip/qutip/pull/2112#issuecomment-1471949520,5,['test'],"['test', 'test-function', 'tests']"
Testability,"There are ten other test files with `from qutip import *`. I will fix these soon, as this may fix the problem we are experiencing with tests on Windows with the release we are trying to make",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/726#issuecomment-317071325:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/726#issuecomment-317071325,2,['test'],"['test', 'tests']"
Testability,"There is a chance that this is the same bug as #1495, which has a fix posited in #1498 - it matches all the versioning criteria, though on that issue we hadn't detected a problem with this particular test at these dimensions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-820355903:200,test,test,200,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-820355903,1,['test'],['test']
Testability,"There is a failing test for mesolve coeff, which I don't think is relevant to this PR.; And another test failing in `test_zheevr`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446#issuecomment-805773343:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/pull/1446#issuecomment-805773343,2,['test'],['test']
Testability,"There is a section in qutip/**init**.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful. Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?. Should we look remove this section from the **init**.py, and put some warning in the methods that use cython at runtime?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448:444,test,tests,444,https://qutip.org,https://github.com/qutip/qutip/issues/448,1,['test'],['tests']
Testability,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134832098:577,test,test,577,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098,1,['test'],['test']
Testability,"There is one particular setup where the sparse eigen solver segfault. This happen with pure scipy and is not related to qutip.; Looking into it, I saw that when we installed qutip, it updated scipy version. It downgraded scipy 1.12 to 1.11, thus we never tested for 1.12.; Also build isolation meant that the version of numpy, scipy and cython we set in our test matrix did not match the one at installation. This is not ideal for cython since the compilation version could have a major impact. I set it to not use build isolation and used the matrix set version to compile qutip.; This had the side effect of not using the setup that caused the segfault and solving the failing test issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660:255,test,tested,255,https://qutip.org,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660,3,['test'],"['test', 'tested']"
Testability,"There seems to be a failure in how `Qobj.istp` checks trace-preservingness for superoperators acting on composite systems. I think there's an exception raised inside the property accessor which is being downgraded to `istp == False`; I'll investigate and fix it soon. In the meantime, I've written a [brief test case](https://gist.github.com/cgranade/31bce360282097d4abd545b68eb65b7d) that shows the problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/498:307,test,test,307,https://qutip.org,https://github.com/qutip/qutip/issues/498,1,['test'],['test']
Testability,"There should be a button for the project owners to restart TravisCI for a particular PR, but I've closed/reopened myself to force it to re-test. The PR should merge into qutip/master branch so I don't think I need to rebase unless there's some conflict.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36082785:139,test,test,139,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082785,1,['test'],['test']
Testability,"There we go. A gross history according to this Github PR, but a nice clean `git log`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605529223:80,log,log,80,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605529223,1,['log'],['log']
Testability,"There were a few invalid escape sequences and scipy imports that somehow escaped being fixed #1493, so this fixes those. Also, in #1480 we issued deprecation warnings for user-facing uses of `eseries`, `essolve` and `ode2es`, however we are not deprecating the correlation and spectrum methods (in QuTiP 5.0 the necessary components are just absorbed into private functions inside `correlation.py`), so these should not generate warnings. Simon (@hodgestar) and I briefly discussed whether we needed a special warnings filter inside those functions, but we thought we didn't need it because default Python filters would prevent `DeprecationWarning` from being shown, since it is triggered by library code and not code in `__main__`. The problem is that not everything uses the default filters; both `pytest` and the documentation build do not suppress all `DeprecationWarning` messages. This was a particular problem in `pytest`, where approximately 68,000 warnings (!) were generated. Since this is _not_ deprecated functionality, nor is it using deprecated functionality, so there shouldn't be any warnings. This PR removes those as well. The end result is that a completely clean documentation build now should generate 0 warnings. My eventual intent is to create an automatic documentation build process, which treats warnings as errors to prevent us from breaking it in PRs. This cannot happen until the merger of the documentation into this repository, however, because otherwise new features/feature removals could get into an impossible situation where the two PRs to `qutip` and `qutip-doc` would not be aware of each other, so would return failed CI. Tests still generate several warnings, but that's for a different PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1505:1661,Test,Tests,1661,https://qutip.org,https://github.com/qutip/qutip/pull/1505,1,['Test'],['Tests']
Testability,There were brackets missing in a list comprehension in the function `qip.qubit_states`. ; Additionally puting states = [0] put the qubit in the |1> state and states=[1] put the qubit in the |0> state. I have changed this so that [0] correpsonds to |0> and [1] corresponds to |1>. This pull request addresses these issues and provides a test to test the added functionality.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/553:336,test,test,336,https://qutip.org,https://github.com/qutip/qutip/pull/553,2,['test'],['test']
Testability,There's a bunch of warnings in the build log that indicate that scipy.special.factorial should be used in favor of scipy.misc.factorial.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/781:41,log,log,41,https://qutip.org,https://github.com/qutip/qutip/pull/781,1,['log'],['log']
Testability,"There's a distinction between `git` and GitHub here, in that PRs are purely a GitHub thing. As far as `git` is concerned, there's actually no problem at all with a PR being merged from `master` on somebody else's fork (`master` after all is an arbitrary label). The reason to do it is that the person who created the PR will find it harder to incorporate upstream changes, because their `master` will now always be out-of-sync from ours until they fetch from our `master` and do a `git reset --hard` onto it, which would delete their commits and force their branch to line up with ours again. From our side, it makes no difference except that the default commit message that Github gives us will say `Merge branch mlaguna10:master into qutip:master`. You can just change the message and no-one would ever know from looking at the `git log`. I think this is all Boxi meant - it's no issue on our side. If you do the funky two-PR merge/rebase that Alex and I were talking about (by email) then it's all moot anyway, because all commits from this PR and #1212 will get squashed together and GitHub won't know that the PRs were actually merged (the author contributions will count, but I think the PRs will have to be manually closed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637:835,log,log,835,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637,1,['log'],['log']
Testability,"There's a new failure on an `mesolve` test in the Xcode 12 branch based on the relative tolerance. It's _probably_ fine, but maybe just check. Let's merge the fix for that in with this so we don't end up with the `diag_liou_mult` problem again (that I still haven't sorted out...). It's probably just a case of being a little more lenient with the test tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421:38,test,test,38,https://qutip.org,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421,2,['test'],['test']
Testability,"There's no link, just bad luck. This won't prevent merge - the tests clearly show your change is fine. Unfortunately our test suite isn't perfect, and sometimes it tries to integrate an insanely stiff system or something like that by accident.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050:63,test,tests,63,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050,2,['test'],"['test', 'tests']"
Testability,"There's only those two references in test_processor.py that are affected as far as I can see. So that PR should work fine. Closing only the specific `fig` from the test is a good idea too, not as stentorious as closing ""all"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909207169:164,test,test,164,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909207169,1,['test'],['test']
Testability,"These are all the remaining files from #1181 that neither Eric nor Boxi had explicitly said they were checking, with the commits all tidied up and rebased onto `master`. This is based on #1249, and that one needs to be merged first. **Changelog**; Major test refactor into a pytest style.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1252:254,test,test,254,https://qutip.org,https://github.com/qutip/qutip/pull/1252,1,['test'],['test']
Testability,"These are the files that Boxi (@BoxiLi) was checking in #1181, but the commits are tidied up and rebased onto `master`. The merge conflict in `test_gates.py` that's present in #1181 is fixed (with all the tests safely maintained). This is based on #1249, and that one needs to be merged first. **Changelog**; Major test refactor into a pytest style.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251:205,test,tests,205,https://qutip.org,https://github.com/qutip/qutip/pull/1251,2,['test'],"['test', 'tests']"
Testability,"These are the files that Eric (@Ericgig) was checking in #1181, but the commits are tidied up and rebased onto `master`. I'll copy over the review comments in that PR that haven't been actioned yet. The potential merge conflict with `test_mcsolve.py` is fixed. This is based on #1249, and that one needs to be merged first. **Changelog**; Major test refactor into a pytest style.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1250:345,test,test,345,https://qutip.org,https://github.com/qutip/qutip/pull/1250,1,['test'],['test']
Testability,"These could be my final modifications before pushing this if all is smooth.; There are some other things that it would be nice to include but it’s best; to wait for the next round as this is already quite a complete library. Shortly I will also upload a bunch of notebooks in my folder with different; physical models studied there and I would be happy to frame them in the; best shape for qutip examples / tutorials if they are not already ok. Some state definitions overlap with state definitions in qutip.states, here; using this new Dicke basis. For the sake of simplicity we thought for now; that it would be best to keep these states bundled in the Piqs model.; Thanks. Il giorno lun 5 mar 2018 alle 19:07 Alexander Pitchford <; notifications@github.com> ha scritto:. > Also, all tests are failing. The one I checked showed:; >; > ImportError: No module named dicke; >; > I assume that this will affect all the builds; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/753#issuecomment-370370268>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffN6PK_jI4M8IgYNWBk3qKS4OXCtMks5tbQ5ugaJpZM4PgbIo>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-370377840:786,test,tests,786,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-370377840,1,['test'],['tests']
Testability,"These failing tests are different from those random failing we've been seeing before. I also have this in my scheduler PR, but it is completely unrelated to the PR. It starts to appear yesterday, but nothing was merged in the last three weeks. Does anyone have a clue?. The error seems to come from the core data part @jakelishman @Ericgig. Scipy made a release 4 days ago and we are using one of the private attributes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292:14,test,tests,14,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292,1,['test'],['tests']
Testability,"These tests are now skipped with the skipif decorator, but should be looked at again before next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30#issuecomment-35974556:6,test,tests,6,https://qutip.org,https://github.com/qutip/qutip/issues/30#issuecomment-35974556,1,['test'],['tests']
Testability,"These tests seem a little too scant in my opinion, I am not fully satisfied with the final result. They do not provide full coverage of these new functionalities. I am thinking of refactoring the whole thing and start all over again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607558652:6,test,tests,6,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607558652,1,['test'],['tests']
Testability,"This PR addresses #315 by providing sampling for Haar (unitary), Hilbert-Schmidt (DMs), Ginibre (DMs) and BCSZ (superoperators) distributions. Some more documentation is needed still, but the tests pass locally on Python 2.7 and 3.4.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/316:192,test,tests,192,https://qutip.org,https://github.com/qutip/qutip/pull/316,1,['test'],['tests']
Testability,"This PR addresses #410 by attempting to import `setuptools`, which has support for unittesting and nose integration. Upon failure, it should leave the setup process as it was. This PR also fixes a rare exception in `settings.py` that can be caused if you have a `*.pyc` file for `logging.py` and call into QuTiP from something like nose.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/429:280,log,logging,280,https://qutip.org,https://github.com/qutip/qutip/pull/429,1,['log'],['logging']
Testability,This PR addresses #484 by skipping dnorm() tests in the known failure case that MKL is present (see #484 and cvxopt/cvxopt#57).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487:43,test,tests,43,https://qutip.org,https://github.com/qutip/qutip/pull/487,1,['test'],['tests']
Testability,"This PR addresses #498 by collapsing composite (multipartite) dimensions before taking the partial trace. This is backed by new functions to collapse dimensions specifications of multipartite systems, and both these new functions and the originally erroneous behavior of `Qobj.istp` are now covered by new test cases.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/499:306,test,test,306,https://qutip.org,https://github.com/qutip/qutip/pull/499,1,['test'],['test']
Testability,"This PR changes `Qobj.__mul__` and `Qobj.__add__` to leave `isherm` lazily-evaluated (that is, `_isherm = None`) unless the Hermicity of the result is already known from closure under addition. This change was prompted by noticing that `isherm` alone took up over half of the runtime of a computation I was attempting, despite that nothing actually ever looked at the Hermicity of a product of two `Qobj` instances. I also added additional tests to ensure that `__mul__` doesn't result in incorrect values of `isherm`, something that was not previously covered by `qutip.tests.test_qobj.test_QobjHerm`. The new tests pass locally on Python 2.7 and 3.4 (Ubuntu 14.10) as well as on Windows with Python 2.7.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359:440,test,tests,440,https://qutip.org,https://github.com/qutip/qutip/pull/359,3,['test'],['tests']
Testability,"This PR changes the norm used in `qutip.tests.test_superoper.testLiouvilleImplem` to the max-norm. Previously, this test used the tr-norm, which scaled badly with the dimension of the Liouvillian under test, such that spurious failures were generated (see #419).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/420:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/pull/420,4,['test'],"['test', 'testLiouvilleImplem', 'tests']"
Testability,"This PR continues to expand on superoperator representation support by adding `superrep=""chi""` for chi (process) matrices in the Pauli basis. Currently, the unit tests fail on my system due to me misunderstanding how `dims` and `tensor` work together for `type=""super""` `Qobj`s (see line 92 of `test_superop_reps.py` and lines 161 and 173 of `superop_reps.py`), but hopefully this should be a straightforward fix. Once we have it working for qubits, we should be able to generalize to arbitrary dimensions by using the Heisenberg-Weyl group.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/97:162,test,tests,162,https://qutip.org,https://github.com/qutip/qutip/pull/97,1,['test'],['tests']
Testability,"This PR fixes #386 by changing checking if `j == i + 1`, in which case NumPy doesn't automatically move fancy indices to the left. In particular, for adjacent indices, we should sum over index `i`, not over index `0` as was assumed before. To catch regressions, this PR also adds more robust unit tests that check more unusual tensor contractions. Thanks to @arnelg for pointing this out!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/387:297,test,tests,297,https://qutip.org,https://github.com/qutip/qutip/pull/387,1,['test'],['tests']
Testability,"This PR fixes every warning reported in `pytest`, and then makes `pytest` treat warnings as errors to hopefully make sure we stick to this state of affairs. (Or at least it fixes all the ones that appear on my particular machine...). The reason this is desirable is that it means we cannot ignore deprecation warnings in dependencies or even in our own code. It also helps us not let certain parts of the codebase get lost in the sands of time, or at least compels us to do something about potential problems before they actually become catastrophic. This is _somewhat_ of a trial, though I hope we can stick to it; warnings usually indicate that something's wrong. Tests can still test run code that generates warnings, but you now have to mark it explicitly in `pytest`. This doesn't mean you should just ""blank out"" warnings by filtering them away. You should first consider if what you're doing is the right way to do it (fix the warning), and then only if it absolutely is and you're testing something that is _supposed_ to warn, then you can use `pytest.warns` to _assert_ that it warns. Of note: a `warnings.catch_warnings` block _inside_ a test (i.e. in test code, not module code) does not work when `pytest` is treating warnings as errors. There are a few classes of fixes in this PR:. - filtering ""expected"" warnings from `pyximport` (hoping to remove QuTiP's dependence on this in 5.0 anyway); - removal of the old `np.matrix` type in favour of `ndarray`, with some changes to accommodate the different arithmetic semantics; - convert an `__init__` method in a test into just class attributes to allow `pytest` to collect it; - bug fixes for behaviour that was raising warnings we hadn't been paying attention to. I'll be mightily surprised if all 5 CI runs pass immediately with warnings enabled; I haven't tested MKL on my laptop, and a quick glance at old logs suggests that SciPy 1.4 might be issuing a few more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506:666,Test,Tests,666,https://qutip.org,https://github.com/qutip/qutip/pull/1506,8,"['Test', 'log', 'test']","['Tests', 'logs', 'test', 'tested', 'testing']"
Testability,"This PR introduces a new generator function, qubit_clifford_group, that yields each member of the single-qubit Clifford group as a Qobj. This functionality should be useful in contexts such as quantum error correction and randomized benchmarking.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358:233,benchmark,benchmarking,233,https://qutip.org,https://github.com/qutip/qutip/pull/358,1,['benchmark'],['benchmarking']
Testability,"This PR introduces a new metric, unitarity, based on [work with Wallman, Harper and Flammia](https://scirate.com/arxiv/1503.07865). In that work, we show that this metric is useful for discriminating between coherent and incoherence noise. As such, I hope that contributing an implementation of our new metric to QuTiP will be of use, especially for comparison to experimental data from randomized benchmarking. While it still needs some more documentation and test cases, I wanted to open the PR now to get some initial feedback.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/357:398,benchmark,benchmarking,398,https://qutip.org,https://github.com/qutip/qutip/pull/357,2,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,"This PR is now feature-complete, but needs a bit more debugging and test coverage to make a nice feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198229615:68,test,test,68,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198229615,1,['test'],['test']
Testability,"This PR is obviously very old now, and the state of the library as it is now means that there are a few places where this behaviour is assumed. I'd consider this to be a breaking change for the 4.x cycle right now, so I'll close this PR. Note that we _are_ actually merging this functionality in the future - it already exists in `dev.major`, where we took care to handle all the uses of it in the rest of the library. See commit 85afb6f in PR #1332 (though you're probably better looking in the git log - that's a big PR that includes a merge commit. I started doing merges in separate PRs after that one...).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/735#issuecomment-812890376:500,log,log,500,https://qutip.org,https://github.com/qutip/qutip/pull/735#issuecomment-812890376,1,['log'],['log']
Testability,"This PR is perhaps not quite as insane as it looks. It ""simply"" writes the entire history of the `qutip/qutip-doc` repository into `qutip/qutip` as if it has always been there within the subdirectory `doc`. The commit objects of `qutip/qutip-doc` are all _technically_ completely rewritten (all the hashes change when you change the tree structure), but I kept all the metadata of them so they'll appear the same, and you can traverse the history just like you could before. Aside from the complete rewriting of history to place it inside a `doc` subdirectory, `git` sees this PR as an actual merge commit, because I melded the two repositories together. All commits will appear separately in `git log`, as you'd expect (although by default `git log --graph` might only show you one branch). I rewrote history to make using `git log` and `git blame` a little less confusing; if I had just made a single commit renaming everything into the subdirectory, there might have been weird name conflicts and a rename to navigate when trying to look through the history. This PR also logically changes a few links, so there are 3 commits tacked on the top to make the necessary changes within the `doc` folder and within the main QuTiP README. These include moving the docs GitHub Actions workflow up into the root of the repository (and suitably modifying it), and updating several links within the documentation. The documentation build action [has succeeded on my branch](https://github.com/jakelishman/qutip/runs/2469049269). I have excluded the `docs` repository from the CodeClimate analysis, since it's not really part of the code we want tested. I'm not absolutely certain that this is the correct decision (there's plenty of ancient code within `docs`), so I'm open to changing it. As part of this exclusion, I also had to specify the exclusion of the `tests` and (autogenerated) `dist` directories. This is not actually new behaviour; when no exclusions are set, [CodeClimate implicitly excludes thes",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513:698,log,log,698,https://qutip.org,https://github.com/qutip/qutip/pull/1513,3,['log'],['log']
Testability,"This PR is very much still in progress, but adds three very nice new features inspired by the rather widespread interest in diamond norms (see, for example, pyGSTi, SchattenNorms.jl, QETLAB). Having them in QuTiP should help a lot. I've run some informal checks against other libraries, and the results returned by the new dnorm method agree pretty well; I'll write more formal tests soon. Adding tensor swap and dual channel functionality is helpful in writing specialized cases for dnorm based on the observation that the diamond norm for positive maps is the same as the completely-bounded infinity norm (see [Johnston and Kribs](http://arxiv.org/pdf/1102.0948v2.pdf) and Watrous' notes). I hope to have this case added to dnorm soon as well, but I wanted to focus on making sure that the prerequisite features are included and well-tested. Thanks to @ysanders for pointing out that CVXPY has come a long way recently. With that library in place, I think it's a good time to get dnorm() out there.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456:378,test,tests,378,https://qutip.org,https://github.com/qutip/qutip/pull/456,2,['test'],"['tested', 'tests']"
Testability,"This PR now includes test cases that cover even quite strange tensor contractions. Hopefully these should be good canaries for pretty much all typical usages. That said, the new cases are failing for a surprising reason: `Qobj.isket` fails for ""ragged"" dims:. ``` python; In [1]: import qutip as qt. In [2]: import numpy as np. In [3]: qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-3-46359a4eb5bd> in <module>(); ----> 1 qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]). C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in __init__(self, inpt, dims, shape, type, isherm, fast, superrep); 281 self.superrep = superrep; 282 else:; --> 283 if self.type == 'super' and self.superrep is None:; 284 self.superrep = 'super'; 285. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in type(self); 1542 if self.isoper:; 1543 self._type = 'oper'; -> 1544 elif self.isket:; 1545 self._type = 'ket'; 1546 elif self.isbra:. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in isket(self); 1572 @property; 1573 def isket(self):; -> 1574 return (np.prod(self.dims[1]) == 1 and; 1575 isinstance(self.dims[0], list) and; 1576 isinstance(self.dims[0][0], (int, np.integer))). C:\Anaconda\lib\site-packages\numpy\core\fromnumeric.pyc in prod(a, axis, dtype, out, keepdims); 2347 except AttributeError:; 2348 return _methods._prod(a, axis=axis, dtype=dtype,; -> 2349 out=out, keepdims=keepdims); 2350 return prod(axis=axis, dtype=dtype, out=out); 2351 else:. C:\Anaconda\lib\site-packages\numpy\core\_methods.pyc in _prod(a, axis, dtype, out, keepdims); 33; 34 def _prod(a, axis=None, dtype=None, out=None, keepdims=False):; ---> 35 return umr_prod(a, axis, dtype, out, keepdims); 36; 37 def _any(a, axis=None, dtype=No",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389#issuecomment-152932921:21,test,test,21,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152932921,1,['test'],['test']
Testability,"This PR should fix #451 by adding an additional check to `Qobj.iscp` to check the hermicity-preserving condition. Since this is a useful condition in its own right, the PR also adds `Qobj.ishp` to expose that logic separately. Finally, new unit tests have been added to check for regressions on #451, and for the new `Qobj.ishp` attribute.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/452:209,log,logic,209,https://qutip.org,https://github.com/qutip/qutip/pull/452,2,"['log', 'test']","['logic', 'tests']"
Testability,"This PR should now be caught up with #390, which should fix the problem with the new unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/375#issuecomment-153001561:90,test,tests,90,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-153001561,1,['test'],['tests']
Testability,"This PR should now preserve dimensionality of its arguments, has better documentation, and is now covered by several unit tests. Next, I'll make sure that I've got it working for Python 3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/332#issuecomment-92690814:122,test,tests,122,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-92690814,1,['test'],['tests']
Testability,"This PR starts work on fixing #388 by splitting out much of the logic handling lists of dims into a new module, `dims_utils`, and providing a new function that converts between indices into `Qobj.dims` and tensor indices (as used by `np.reshape`). While this PR is not yet done, I wanted to make a PR for the fixes early to solicit feedback.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389:64,log,logic,64,https://qutip.org,https://github.com/qutip/qutip/pull/389,1,['log'],['logic']
Testability,"This PR suggests enhancing the `qutip.metrics` module by adding a new distance b/w quantum states: the quantum Hellinger distance (QHD), implemented as new function `qutip.metrics.hellinger_dist()`. Excellent description is provided for example in:; _Geometric measures of quantum correlations with Bures and Hellinger distances_, D. Spehner, F. Illuminati, M. Orszag, W. Roga, https://arxiv.org/abs/1611.03449. Albeit a bit less popular than already implemented Bures and trace distances, the QHD is actively studied, eg:; https://arxiv.org/abs/1903.10455; https://arxiv.org/abs/1806.10814; https://arxiv.org/abs/1510.06995. The PR contains tests of properties of the QHD as outlined in arXiv:1611.03449. I am of course keen on performing additional tests, code refactoring, documentation of this feature etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/998:642,test,tests,642,https://qutip.org,https://github.com/qutip/qutip/pull/998,2,['test'],['tests']
Testability,This Pull attempts to fix the issues with Win not finding RHS functions when repeated time-dependent solvers are used in the tests. I have also added some unit tests to verify that rhs_reuse still works.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729:125,test,tests,125,https://qutip.org,https://github.com/qutip/qutip/pull/729,2,['test'],['tests']
Testability,"This Pull was a bit tricky as some unrelated test failed when using OPENMP for no apparent reason. The same code, when copied to a notebook, worked as expected. Therefore, I modified the non-Hermitian eigen test, moving from a unitary to a complex sum of Hermitians for the non-Hermitian operator. The tests now pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/763#issuecomment-335061714:45,test,test,45,https://qutip.org,https://github.com/qutip/qutip/pull/763#issuecomment-335061714,3,['test'],"['test', 'tests']"
Testability,"This and #1593 both look like solid improvements to me, I did a little testing and couldn't break anything. Also your approach makes the code much more readable than it was. Probably @hodgestar can comment on whether it is best to combine them into one?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1594#issuecomment-872033231:71,test,testing,71,https://qutip.org,https://github.com/qutip/qutip/pull/1594#issuecomment-872033231,1,['test'],['testing']
Testability,"This branch adds support for `rho0` argument to `mesolve` being a superoperator, to resolve #384. The functionality has been added to all the different mesolvers (but not the sesolvers). Unit tests are added to tests/test_mesolve.py in a new class, `TestMESolveSuperInit`. There are tests for all the different mesolvers, and the result with `rho0` as a density matrix is compared to the result for `rho0` being the identity super-operator, by comparing the fidelity of the resulting states in each respective case. The reason the tests are a little bit slow compared to, e.g., the tests in `TestMESolveTDDecay` is the computation of the fidelity of the states at all the different times. If you think the tests are too slow, i can change them, and for example only check the fidelity of the final state. As a side note: As I wrote this new functionality, I also ran some simple tests comparing a pure python implementation of the right hand side for `_mesolve_const` to the cython implementation (I did this because I was considering how much cython code I had to write, or if a pure python implementation of the new functionality would suffice). I actually found that a pure python implementation was as fast (or maybe slightly _faster_) than the cython implementation. The pure python implementation of the right hand side is simply (see lines 767-769 of mesolve.py). ``` python; def _ode_rho_test(t, rho, data):; # for performance comparison of cython code; return data*(np.transpose(rho)); ```. Here is a plot of the performance compare to the standard cython implementation for a very simple test. The benchmark was a damped-cavity JC-model with Hilbert space dimension 4 for the cavity, integrated up to ""integration time"". ""run time"" is the real run time on my laptop. ![benchmark](https://cloud.githubusercontent.com/assets/2354542/11615553/48fe8604-9c32-11e5-83b9-2de366bd3cef.png). Since there is no big difference between the cython implementation and the pure python implementation (if an",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404:192,test,tests,192,https://qutip.org,https://github.com/qutip/qutip/pull/404,9,"['Test', 'test']","['TestMESolveSuperInit', 'TestMESolveTDDecay', 'tests']"
Testability,"This branch adds the ability to calculate two-time correlations with fully time-dependent Hamiltonians and collapse operators. The time-dependence may now either be in the Hamiltonian or the collapse operators, or both. Additionally, support for the numpy list format was added. New tests were made to test all of these functionalities. Bugs were fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/509:283,test,tests,283,https://qutip.org,https://github.com/qutip/qutip/pull/509,2,['test'],"['test', 'tests']"
Testability,"This change enables the use of Python standard logging, and backs it by a new qutip.settings entry. A few instances of classic `if debug: print` style logging have been refactored. The new `qutip.settings` entry is based on [configobj](http://configobj.readthedocs.org), with a fallback to classic `~/.qutiprc` parsing if that library is not available. Errors in the new functionality introduced by this commit are also logged, and can be accessed by setting up `logging.basicConfig` _before_ importing QuTiP. The optional configobj dependency should almost always be met, since it's shipped with matplotlib.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248:47,log,logging,47,https://qutip.org,https://github.com/qutip/qutip/pull/248,4,['log'],"['logged', 'logging']"
Testability,This commit should fix #331 and add extra tests to prevent regression. The new tests are of the form encountered in #332.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/333:42,test,tests,42,https://qutip.org,https://github.com/qutip/qutip/pull/333,2,['test'],['tests']
Testability,"This could be ready and be part 1 of a part 1 and part 2 project, in order to start merging, if missing tests are independent on these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1164#issuecomment-579636625:104,test,tests,104,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579636625,1,['test'],['tests']
Testability,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/182#issuecomment-48622482:277,test,tests,277,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482,3,"['benchmark', 'test']","['benchmark', 'benchmarking', 'tests']"
Testability,"This document is a design specification for new dimensions handling. It is only a draft right now; please feel free to offer comments and suggestions. If you only read one section, read ""Overview"" inside ""Proposal"" to get the gist of what will happen. ## Background. For an extended discussion of some of the problems in 4.x branch dimension handling, see #1320. With the new system, we aim to solve a few main problems:; 1. `Qobj` `type` inference should be instantaneous; 2. Binary operation dimension compatibility tests should be instantaneous; 3. Dimension/shape equality tests should be instantaneous; 4. Invalid dimensions should not be representable; Currently, dimension handling is the major overhead in `Qobj` because these problems are not solved. The allowed exception to point 1 is if we include a short-hand notation to represent dimension objects; we may allow a ""pure-Python"" representation (effectively the current dimension specification) to be parsed into new-form dimension objects for user convenience. Certain objects, like the excitation-number-restricted spaces (enr) may not have ""compatible"" dimensions and shapes. This may need further discussion elsewhere. ## Proposal. ### Overview. The principle change is to make dimension objects singleton instances of classes. All `Qobj` of the same dimension will have a reference to the exact same object, which has all the expensive operations already calculated. Internally, dimensions will represented in a very pure linear algebra manner. A dimension object is a single `Dims` object, which is exactly one of the subclasses:; - `Space` representing a vector space; * `Space(size: int)` is a standard ket; * `Space(Map(...))` is an operator-ket; - `Space(Map(from, to))` representing an operator in column-stacked format.; - `Map(from, to)` representing some mapping `Dims -> Dims`; - `Field` used only to represent the absence of `Dims` in `Map` and `Compound`. A `Qobj` may not have this `dims`; it would simply be a complex n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:518,test,tests,518,https://qutip.org,https://github.com/qutip/qutip/issues/1421,2,['test'],['tests']
Testability,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-63485058:227,test,tests,227,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058,4,['test'],"['test', 'tests']"
Testability,"This faces the same issue as other new PRs which are failing on Mac due to how the test suites handle C code. I am guessing that since the tests pass on Linux, we can merge this? Till we find a fix for the test suite issue, we may need to ignore tests on Mac. @ajgpitch I can merge this if this is okay.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/942#issuecomment-458959052:83,test,test,83,https://qutip.org,https://github.com/qutip/qutip/pull/942#issuecomment-458959052,4,['test'],"['test', 'tests']"
Testability,"This feature starts work towards implementing diamond norms between quantum channels by providing Stinespring dilations of `type=""super""` Qobjs. This requires generalizing the current `to_kraus` feature, since the left and right Kraus operators are the same only for CP maps, whereas the arguments to diamond norms are very often not CP (in particular, will often be a difference, || \Lambda_1 - \Lambda_2 ||_\diamond). The pull request is currently in an incomplete state, so as to solicit feedback before solidifying the design. The docstrings are missing or are incomplete, Python 3 compatibility has not yet been tested, and I still need to make unit tests. Most importantly, the `dims` attribute of the input Qobj is not yet preserved, in lieu of solving #331.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/332:617,test,tested,617,https://qutip.org,https://github.com/qutip/qutip/pull/332,2,['test'],"['tested', 'tests']"
Testability,"This fixes #688, following the suggestion by @mrcalixe. The fix sets the swap targets to `[N - i - 1, i]`, instead of setting a target and a control separately. The method `qft_gate_sequence` was untested: This pull request provides various test cases of varying length (1-6) and with and without swapping enabled.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/709:241,test,test,241,https://qutip.org,https://github.com/qutip/qutip/pull/709,1,['test'],['test']
Testability,"This fixes the calls to the `qutip.configrc` module in `qutip/__init__.py` when setting up OpenMP. Also, this tidies up a lot of very old code out of `__init__.py` that was testing for ancient versions of SciPy and Numpy. Since we have hard requirements at installation time for those, it's fine for us not to test their versions at initialisation. We still should check the version of Cython because it's an optional dependency, so isn't always constrained by the package manager. Some of the changes deliberately make `qutip/__init__.py` less forgiving of exceptions, especially when it comes to loading up `pyximport`. This is deliberate, even though it may make a couple more errors surface that have previously gone undetected. As it stands right now, the file will causes several errors to be silently ignored, even if they weren't the error we were testing for. That masks problems for a short while, but they usually resurface during use when they're much harder to debug. We should be solving the underlying problems, not sweeping them under the rug. In particular, we've frequently had complaints about `pyximport` failing, or trying to import OpenMP modules that have previously been compiled but aren't currently active, and things like that. This patch won't fix all those problems, but it hopefully will make some of them easier to debug when they do appear. There is more explanation to the logic behind each change in the commit messages. Fix #1470.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471:173,test,testing,173,https://qutip.org,https://github.com/qutip/qutip/pull/1471,4,"['log', 'test']","['logic', 'test', 'testing']"
Testability,"This happens to me as well, except that I'm running Ubuntu.; I should note that these are created particularly when running qutip.testing.run().; This test also produces warning messages pertaining to these files. The image below depicts the problem.; ![rhstest](https://user-images.githubusercontent.com/45544401/59579796-70420080-9083-11e9-9b66-df1c48686cbd.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544:130,test,testing,130,https://qutip.org,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544,2,['test'],"['test', 'testing']"
Testability,"This has been going on for a while now - `test_diag_liou_mult` fails about ~5-10% of the time on Travis runs, with only 1 or 2 elements of the huge matrix differing by a small relative tolerance. I _think_ this started around the time that scipy 1.5 was released, which changed how `scipy.linalg.eigh` chose its underlying LAPACK driver, and broke a load of tests that relied on our custom `eigh` functions reproducing the `scipy` behaviour exactly (#1299). At the time we fixed those tests (#1298, #1301), but this intermittent failure of `test_diag_liou_mult` may have slipped through. Equally, at the same time on `dev.major` I think I was moving the `brtools` internals to use the new `CSR` types, which involved rewriting things like `diag_liou_mult`. I don't think this is the cause (though I may have done at the time), because we see the intermittent test failures still on `master`, which does not use the new types yet. I'm not absolutely certain the `eigh` changes are the cause, which is why I don't want to just bump up `atol`/`rtol` in the test without going through and calculating what the acceptable tolerance _should_ be. This is a note for posterity. I'll look into it myself and try and determine the true root cause, and PR an appropriate change.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1431:358,test,tests,358,https://qutip.org,https://github.com/qutip/qutip/issues/1431,4,['test'],"['test', 'tests']"
Testability,"This have been working fine in my tests, so I'm merging now. Thanks for the contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/65#issuecomment-28357138:34,test,tests,34,https://qutip.org,https://github.com/qutip/qutip/pull/65#issuecomment-28357138,1,['test'],['tests']
Testability,"This is a quick proof of concept for the approach listed in qutip/qutip#88. I've added and unit tests and modified those made by @bcriger, but one of them is currently failing for something deep in `norm()` that I'm not yet sure how to fix, sorry.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/90:96,test,tests,96,https://qutip.org,https://github.com/qutip/qutip/pull/90,1,['test'],['tests']
Testability,"This is a tidied up and completed version of #934. The first commit is credited to the original author (although I fixed up some little concerns in the PR and rebased it), because it's logically built off that PR, although in the end it's a complete reimplementation. This is a complete rewrite of the Husimi Q calculations, to make a more formal split between the iterative (low-memory) and precomputed (faster) algorithms, giving full access to both of them. It's a bit easier to use from a user's perspective, and it's faster than #934 as well. The concept of the precomputed matrix is encapsulated into a class with a cached tensor, so that the same precomputed system can be used for many states of different sizes, and autoexpands (up to the memory limit) to accommodate larger states. This is called `QFunc` as opposed to the standard function interface `qfunc`. It also adds rather more error checking on its inputs, and adds a complete testing suite for the new implementation. Closes #934. ## Examples. Let's say we have some states, and the phase-space coordinates we want to calculate the Husimi Q function at.; ```python; >>> import qutip; >>> states = [qutip.rand_dm(32, density=0.2) for _ in [None]*100]; >>> xs = np.linspace(-2, 2, 401); ```. Now the normal way of calculating the Q distribution for a single state is; ```python; >>> qutip.qfunc(states[0], xs, xs); array( ... ); ```. This already has some speed advantages over the pre-PR version of `qfunc`, because it caches a lot of its intermediary results, to avoid recomputing them. This results in calculating more matrix-vector products than before, but far fewr FLOPS overall. By default, `qfunc` issues a warning if it exceeds a certain amount of memory, and falls back to the low-memory version. You can control this limit with the `precompute_memory` option:; ```python; >>> qutip.qfunc(states[0], xs, xs, precompute_memory=0); qutip/qutip/wigner.py:822: UserWarning: Falling back to iterative algorithm due to lack of mem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:185,log,logically,185,https://qutip.org,https://github.com/qutip/qutip/pull/1583,2,"['log', 'test']","['logically', 'testing']"
Testability,"This is causing test failures in all CI builds against scipy 1.5 currently. The other failing tests on scipy 1.5 are due to changes to the handling of `csr` matmul operations, which is fixed in patch #1298. As far as I can see, there is no way to recover the exact same behaviour as existed in scipy < 1.5 (there's optimisations of the `lwork` input to the LAPACK routine), and consequently we are not getting the exact same set of eigenvectors for problem dimensions > 32. This does not mean that `brtools` is suddenly doing something wrong. It just means that the test assumed we would have the exact same output as `scipy`, and we don't any more. . This is an annoying problem to fix, I think. Two possible methods:. 1. attempt to ""trick"" scipy into doing the same pre-1.5 behaviour. Possibly this would involve monkey-patching out the ability of `eigh` to optimise the `lwork` parameters (i.e. stubbing out `scipy.linalg.lapack._compute_lwork` to always return `lwork=18*nrows`, `lrwork=24*nrows` and `liwork=10*nrows` to match `qutip.cy.brtools.ZHEEVR`).; 2. do some linear algebra work to determine that the eigenvectors we have returned are equivalent to the ones scipy has returned. 2 is a better solution, but harder to implement, especially in the presence of degenerate or near-degenerate eigenvalues (of which there are likely a lot around 0). 1 is very unsatisfying, but might be enough. In general, this problem will hopefully be solved a bit more thoroughly when `brmesolve` is updated to use the new data layer types, and we standardise the calculation of eigenvalues and -vectors across QuTiP. Hopefully someone has a better idea than me? @Ericgig, @nonhermitian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:16,test,test,16,https://qutip.org,https://github.com/qutip/qutip/issues/1299,4,"['stub', 'test']","['stubbing', 'test', 'tests']"
Testability,This is in draft mode and cannot be merged. Only Mac tests are failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1035#issuecomment-513787787:53,test,tests,53,https://qutip.org,https://github.com/qutip/qutip/pull/1035#issuecomment-513787787,1,['test'],['tests']
Testability,This is in ref to #610. I have also cleaned up some pep8 and added a test for `add_gate`. This is now ready for review. @ajgpitch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/611:69,test,test,69,https://qutip.org,https://github.com/qutip/qutip/pull/611,1,['test'],['test']
Testability,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/985#issuecomment-485054530:15,test,test,15,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530,2,['test'],['test']
Testability,This is looking fine. It would be great if you could think about some possible unit tests for this module and add to the qutip/tests directory. Perhaps something based on the example notebooks?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/281#issuecomment-66248230:84,test,tests,84,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66248230,2,['test'],['tests']
Testability,This is looking great. Will try it out and merge after testing. One small thing: could you pep8 format the code? (some long lines),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/65#issuecomment-28300877:55,test,testing,55,https://qutip.org,https://github.com/qutip/qutip/pull/65#issuecomment-28300877,1,['test'],['testing']
Testability,"This is old, but caught my eye - it might be worth us revisiting. There's a few places in the code where the version requirement is 0.14, and also I'm not 100% certain that 0.21 is the minimum requirement anymore; I think the ability to pickle `cdef`'ed classes requires 0.26. Perhaps @Ericgig knows? The `cython >= 0.21` requirement was added in 836ab63 back in December 2016. Also, `cython` isn't actually a hard requirement, just like `matplotlib` (which was removed from `requirements.txt` in bc7b3c0 (February 2014) because they weren't mandatory. Maybe something to add in to the [testing and distribution project](https://github.com/qutip/qutip/projects/3)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-607721916:587,test,testing,587,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607721916,1,['test'],['testing']
Testability,"This is one example:; ```; ======================================================================; FAIL: correlation: comparing me and mc for driven oscillator in fock state; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/qutip-4.1.0.dev0+0e91439-py2.7-linux-x86_64.egg/qutip/tests/test_correlation.py"", line 125, in test_compare_solvers_coherent_state_memc; assert_(abs(corr1 - corr2).max() < 0.2); File ""/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/numpy/testing/utils.py"", line 77, in assert_; raise AssertionError(smsg); AssertionError; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621#issuecomment-270850766:317,test,test-environment,317,https://qutip.org,https://github.com/qutip/qutip/issues/621#issuecomment-270850766,8,"['Assert', 'test']","['AssertionError', 'test', 'test-environment', 'testing', 'tests']"
Testability,"This is post for discussion over whether it might be beneficial to consider additional continuous integration (CI) tools for QuTiP, beyond Travis CI. . Some open-source projects use multiple CI tools, possibly to do different tasks and test different configurations. For example by adding QuTiP to the list of projects using Sphinx for the documentation I noticed they use concurrently Travis CI, CircleCI and [Appveyor](https://github.com/marketplace/appveyor). . [Stackshare](https://stackshare.io/stackups/circleci-vs-jenkins-vs-travis-ci) allows to compare multiple developers tools.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959:236,test,test,236,https://qutip.org,https://github.com/qutip/qutip/issues/959,1,['test'],['test']
Testability,This is post for discussion over whether it might be beneficial to switch from `nose` to another unit testing software. . - QuTiP is using nose for unit testing. A [disclaimer](https://nose.readthedocs.io/en/latest/) on that project homepage warns that nose might not be maintained in the future. . - [`nose2`](https://nose2.readthedocs.io/en/latest/differences.html) is the successor to `nose`. It is actively maintained. There are some [differences](https://nose2.readthedocs.io/en/latest/differences.html). . - [pytest](https://pytest.readthedocs.io/en/latest/) is another open-source solution. By comparing [nose2](https://github.com/nose-devs/nose2/graphs/contributors?from=2010-08-01&to=2019-02-27&type=a) and [pytest](https://github.com/pytest-dev/pytest/graphs/contributors?from=2009-04-05&to=2019-02-27&type=a) activity it seems that the latter has grown and is actively updated. . I wonder whether it would make sense to migrate to a more popular (possibly more robust?) software and how much work this would mean. Other implications are not clear to me at this moment.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958:102,test,testing,102,https://qutip.org,https://github.com/qutip/qutip/issues/958,2,['test'],['testing']
Testability,"This is ready for a review. I incorporated the changes and the pep8 fixes. We still might go for a change in the name for the module as `piqs` and the class as `Dicke` to follow the naming in the paper. There are some more tests that we would like to add today. . However, for the rest of it, things remain the same. Since the `is_diagonal` feature is more general, I could open a PR to include that as a `Qobj` property. Otherwise, this function will only be used once we add the enhancement `diagonal_solver` which can solve for some special classes of Hamiltonians. But that is for later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-367197236:223,test,tests,223,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-367197236,1,['test'],['tests']
Testability,This is ready to be reviewed and added to QuTiP. Notebooks are in : https://github.com/nathanshammah/piqs/blob/master/notebooks/notebook_piqs.ipynb. One would need to change the import statement to `from qutip.models.dicke import *`. Perhaps some more testing could be done for the states and operators but I want to get this merged first before trying to optimize. The Liouvillian created here works with QuTiP's solver (thanks to Neill's suggestion). Thus one can easily work with ensembles of spins or even ensembles coupled to bosonic cavities and take full advantage of QuTiP machinery. We have an optimized solver for diagonal Hamiltonians which is faster and perhaps there is a scope to make this even faster with the correct RHS calculation. Please have a look and review the changes to get this merged. @nwlambert @nonhermitian @ajgpitch,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-360766438:252,test,testing,252,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-360766438,1,['test'],['testing']
Testability,This is testing using oldest supported numpy and enabling 3.10.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1738:8,test,testing,8,https://qutip.org,https://github.com/qutip/qutip/pull/1738,1,['test'],['testing']
Testability,"This is the base PR for the split-up of #1181. This one puts in all the helper functions and updates to previously converted files that are present in that PR, and needs to be merged first before any of the others can be merged. The commits are tidied up and rebased onto `master`. This is the base PR for #1250, #1251 and #1252. **Changelog**; Add pytest helper functions for large-scale test refactoring",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249:389,test,test,389,https://qutip.org,https://github.com/qutip/qutip/pull/1249,1,['test'],['test']
Testability,This is to fix issue #413 that caused new installations to be non-functional.; Anyone got any ideas as to why this was not picked up by the travis tests?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/414:147,test,tests,147,https://qutip.org,https://github.com/qutip/qutip/pull/414,1,['test'],['tests']
Testability,"This isn't quite ready for a PR (not tested, missing documentation, etc.), but should show the general scope of what I am planning on. I went with the convention of naming new functions something along the lines of `rand_dm_ginibre` to differentiate from existing functions like `rand_dm`. Does this make sense, or is there another API design that would work better? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/315#issuecomment-74319723:37,test,tested,37,https://qutip.org,https://github.com/qutip/qutip/issues/315#issuecomment-74319723,1,['test'],['tested']
Testability,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:47,test,test,47,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700,9,['test'],"['test', 'testing', 'tests']"
Testability,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:53,test,testing,53,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553,3,['test'],"['testing', 'tests']"
Testability,"This looks awesome! Haven't read it properly yet, but I noticed one thing: ""cython -a stochastic.pyx"" produces quite a lot of yellow lines inside loops.; Maybe the problem is in memoryview slicing. Raw pointers or another way of using memoryviews can be faster https://jakevdp.github.io/blog/2012/08/08/memoryview-benchmarks/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-370937289:314,benchmark,benchmarks,314,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-370937289,1,['benchmark'],['benchmarks']
Testability,"This looks good to me. Good to have a test as well. The stochastic functions also need documentation. Since you have some experience with this functionality, it would be great if you could help generate some docs. Also, expanded time-dependence, for example as discussed here:. https://groups.google.com/d/msg/qutip/MoN5VNHvTgk/Liy2v6OKBQAJ. would also be of great help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529#issuecomment-245490262:38,test,test,38,https://qutip.org,https://github.com/qutip/qutip/pull/529#issuecomment-245490262,1,['test'],['test']
Testability,"This looks good. Also, good to see the unit test added. Thank you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/310#issuecomment-72574499:44,test,test,44,https://qutip.org,https://github.com/qutip/qutip/pull/310#issuecomment-72574499,1,['test'],['test']
Testability,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-35965183:22,test,tested,22,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183,3,['test'],"['tested', 'tests']"
Testability,"This looks like a very interesting pull. I will have to play around with it. In the mean time, you will need to get the Travis tests to run and probably make a jupyter notebook to demo the usage. Hopefully the former just requires adding pyopencl to the install packages in Travis.yml",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-258476718:127,test,tests,127,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-258476718,1,['test'],['tests']
Testability,This looks like it's gonna pass. I check two of the tests and the MKL directive was successfully followed.; Happy for this to be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876#issuecomment-394769833:52,test,tests,52,https://qutip.org,https://github.com/qutip/qutip/pull/876#issuecomment-394769833,1,['test'],['tests']
Testability,"This merges #1588 from master into dev.major. - Fixed support for calculating the ``propagator`` of a density matrix with collapse operators. QuTiP 4.6.2 introduced extra sanity checks on the dimensions of inputs to mesolve (#1459), but the propagator function's calls to ``mesolve`` violated these checks by supplying initial states with the dimensions incorrectly set. ``propagator`` now calls ``mesolve`` with the correct dimensions set on the initial state. Fixes #1585. - Fixed support for calculating the ``propagator`` for a superoperator without collapse operators. This functionality was not tested by the test suite and appears to have broken sometime during 2019. Tests have now been added and the code breakages fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1589:601,test,tested,601,https://qutip.org,https://github.com/qutip/qutip/pull/1589,3,"['Test', 'test']","['Tests', 'test', 'tested']"
Testability,"This moves our entire testing apparatus over to GitHub Actions, since Travis has changed its pricing model and we can no longer rely on it. This actually has several advantages for us right now:; - better integration with other GitHub Actions workflows; - more concurrent jobs; - more access to Windows and macOS machines; - easier job dependency graphs within our resources. This first commit does not add in any Windows tests because they're currently known to fail, but the intention is to turn them on. The blocking issue is currently a failure of the multiprocessing capabilities, which also affects mcsolve. We can now reasonably run coverage reporting on every test run, and upload all of them to Coveralls at the end, so we get accurate stats on what lines were actually tested. I've also turned pytest's timer, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:22,test,testing,22,https://qutip.org,https://github.com/qutip/qutip/pull/1551,8,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,This needs a unit test of some kind.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-245490392:18,test,test,18,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245490392,1,['test'],['test']
Testability,This new function doesn't calculate the explicit sqrtm() unless; absolutely necessary to improve numerical stability. Also includes new; tests to check for regressions of #361.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/362:137,test,tests,137,https://qutip.org,https://github.com/qutip/qutip/pull/362,1,['test'],['tests']
Testability,"This no longer has any conflicts. However, as usual, the errors are generated by qutip.tests.test_subsys_apply as given in Issue #430.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-184880374:87,test,tests,87,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-184880374,1,['test'],['tests']
Testability,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46#issuecomment-25209786:46,Test,Testing,46,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786,3,"['Test', 'test']","['Testing', 'tests']"
Testability,"This pull implements a safety check where the Qobj data class is validated as fast_csr_matrix type everytime the Q.data attribute is set. This guarantees that the Qobj's have the correct data type. This was not always true previously. In addition, many items are fixed so that the above rule passes. Finally, we no longer need the tests that check for Qobj csr_matrix type. This is now strictly enforced.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609:331,test,tests,331,https://qutip.org,https://github.com/qutip/qutip/pull/609,1,['test'],['tests']
Testability,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:22,test,test,22,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749,2,"['Assert', 'test']","['AssertionError', 'test']"
Testability,"This relaxes the amount of sorting required in the `add_csr` operation. In the current version in `dev.major`, both the left and right matrices are sorted in all cases. This PR makes `add_csr` an `Accumulator` operation, which straight away reduces the number of sorts required to one. Second, I add a track inside `scatter` to know whether the scatters were in sorted order; if so, there's no need to sort within `gather`, which removes the other sort from `add_csr`. Effectively, this means that `add_csr` is O(n) when both input matrices are sorted (the most common) and O(n lg(n)) when either isn't, and we don't actually have to perform a separate test to decide between them. In practice, this is around a 2x speedup for most common sparse matrices, and goes up from there. I have also made `Accumulator` a C struct, and all the operations on it header-file only. This allows them to be operated on without holding the GIL (though threaded access to the same one would be unsafe anyway), and it also allows them to be inlined - if they are defined in the `pyx` file, then they will be compiled into a separate object and so must be called. We had talked about making `CSR` have a ""guarantee"" that it is always sorted, but I haven't implemented that here. Because of the changes to `scatter`, that would no longer give an algorithmic speedup in this case for matrices that are sorted (although we could avoid the use of `Accumulator` which would be more efficient). All of the operations I have written return a sorted matrix, so generally matrices will tend to become sorted over time anyway.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1362:653,test,test,653,https://qutip.org,https://github.com/qutip/qutip/pull/1362,1,['test'],['test']
Testability,This second commit fixes the test error in `test_ptrace.py` - the commit message in 6c85261 explains what I've done. The errors in `brtools` are due to a much more difficult fix to implement. See #1299.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147:29,test,test,29,https://qutip.org,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147,1,['test'],['test']
Testability,This seemed to fix the #728 issue. The specific test combination mentioned in that issue no longer fails.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317797335:48,test,test,48,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317797335,1,['test'],['test']
Testability,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/454#issuecomment-193501554:132,test,testing,132,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554,3,['test'],['testing']
Testability,This seems to be independent of the logger as it occurs for qutip 3.0.1 as well.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-65739721:36,log,logger,36,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-65739721,1,['log'],['logger']
Testability,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:311,test,tests,311,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,5,"['Test', 'test']","['TestSuperopReps', 'test', 'tests']"
Testability,"This should at least partially address #377, as it seems that `from __future__ import absolute_import` isn't causing the built-in `logging` to appear in preference to `qutip.logging` on Windows 8. Given the hassles of calling both `logging`, the idea behind this PR is to just rename and avoid conflicts that way.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379:131,log,logging,131,https://qutip.org,https://github.com/qutip/qutip/pull/379,3,['log'],['logging']
Testability,"This should be fixed by #428. I tried running tests locally several times, and didn't observe any failures. If Travis checks out on that PR, I'll merge it and close both issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425#issuecomment-183599625:46,test,tests,46,https://qutip.org,https://github.com/qutip/qutip/issues/425#issuecomment-183599625,1,['test'],['tests']
Testability,"This simplifies some of the long if/else blocks in the MKL module, making it simpler to parse. No logic should actually have changed. Everything is at most 10 cyclomatic complexity now, but I don't think that corresponds exactly to CodeClimate's metrics, so let's see. **Changelog**: simplify logic in `_mkl` module.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1576:98,log,logic,98,https://qutip.org,https://github.com/qutip/qutip/pull/1576,2,['log'],['logic']
Testability,This test seems to be failing with. ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6699 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```; I will try and recreate locally,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/issues/871,1,['test'],['test']
Testability,"This test would fail approximately 1 in 10 times. I have parametrised the test case so pytest sees the different dimension runs as separate elements, which gives us better information on what's going on. I have only seen the test fail on CI on Mac, as best as I remember, and after a bit of experimentation, I was able to reproduce the issue on my Mac at approximately the same frequency as we saw it on Travis, if I was using OpenBLAS. I couldn't reproduce the failures with MKL, so I'm fairly sure this is to do with our use of `eig` instead of `eigh` on Mac/OpenBLAS to avoid segfaults (see #1197, #1288). This makes some sense - the tolerances of `eig` are effectively slightly more permissive than `eigh` when dealing with real numbers, because there's more scope for an eigenvalue to be different by having a small imaginary component (contributes in quadrature) as opposed to only having the linear difference. I'm pretty confident that there's no logic error that caused the tolerances to slip a little, it's just a reality of dealing with an imperfect eigensystem solver, so I've relaxed the test tolerances by just a little. Fix #1431",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1474:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/pull/1474,5,"['log', 'test']","['logic', 'test']"
Testability,"This took longer than anticipated because of a bunch of knock-on nasty Cython problems, and I struggled to get OpenMP running locally on macOS ([but I've got it now](https://www.binhbar.com/posts/2020/06/compiling-openmp-libraries-on-macos/)). Tag: @Ericgig, @ajgpitch. ---. Separate out what will become the ""core"" of qutip into its own subpackage. This package is intended to have most of its public symbols re-imported into the global package namespace. There should be no substantive changes to any actual worker code in this large commit, just what is necessary to carve out a major entangled part of the core library. Some files currently in core may be moved out in a future version (e.g. graph, metrics, semidefinite), but right now they are too entangled with `Qobj` or other true-core parts, and to remove them now would require too much substantive change to the code, which would be difficult to review in this commit. Major changes required as part of this:; - module-level imports (e.g. `from qutip.qobj import Qobj`) are replaced with simple ones from the namespace (e.g. `from qutip import Qobj`). While inside the `core` package, imports are kept as module-specific, largely to support the mess of circular imports present in qutip at the more.; - .pxi files are no longer recommended as the way to share code between Cython files, so these have been converted into proper Cython modules and added to the distribution.; - collection of Cython extension components in `setup.py` is consolidated to support them no longer all existing in the same place. As the data layer is fleshed out, likely there will be even more Cython locations present.; - the test for OpenMP in `__init__.py` had to be made more indirect via importlib to avoid causing a full import of `qutip.core`, which would in turn cause Qobj and other parts to be imported. These components required `__init__.py` to have discovered whether OpenMP existed already before they were imported, causing false negatives.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1282:1667,test,test,1667,https://qutip.org,https://github.com/qutip/qutip/pull/1282,1,['test'],['test']
Testability,"This tries to address https://github.com/qutip/qutip/issues/73 using some type conversion and some fused types. I see a unit test error due to some fortran thing, and a couple of unit test failures, but I don't know if they are related.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76:125,test,test,125,https://qutip.org,https://github.com/qutip/qutip/pull/76,2,['test'],['test']
Testability,"This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:; ```; File ""C:\Users\ym24chen\Anaconda3\; x = lu.solve(b, verbose=verbose); File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000000000008; envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; ```. Env info:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.1.0; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.2; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; ==============================================================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:242,test,testing,242,https://qutip.org,https://github.com/qutip/qutip/issues/975,1,['test'],['testing']
Testability,"This will repeat the issue quite quickly and always reliability; ```; import traceback; import sys; import qutip.tests.test_interpolate as test_interpolate; import qutip.tests.test_mcsolve as test_mcsolve. def main():. try:; test_interpolate.test_interpolate_brevolve3(); test_mcsolve.test_MCCollapseTimesOperators(). print(""Tests passed""); except:; print(""Test failed:""); traceback.print_exc(). if __name__ == ""__main__"":; main(); ```. The main function is necessary on windows for scripts that use multiprocessing somewhere",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728#issuecomment-317279772:113,test,tests,113,https://qutip.org,https://github.com/qutip/qutip/issues/728#issuecomment-317279772,4,"['Test', 'test']","['Test', 'Tests', 'tests']"
Testability,"This won't be implemented in QuTiP 4.7, but one can implement it oneself for a given `qobj` using:. ```python; import scipy.linalg. qobj_logm = Qobj(; scipy.linalg.logm(qobj.full()),; dims=self.dims,; type=self.type; ); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1990#issuecomment-1345301587:164,log,logm,164,https://qutip.org,https://github.com/qutip/qutip/issues/1990#issuecomment-1345301587,1,['log'],['logm']
Testability,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:194,test,test,194,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734,2,['test'],['test']
Testability,Tidy up pep8 and minor logic bugs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1575:23,log,logic,23,https://qutip.org,https://github.com/qutip/qutip/pull/1575,1,['log'],['logic']
Testability,"TimeDependence::test_varying_coefficient_hamiltonian_2ls[string] - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_46049686147042.pyx; FAILED qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_26849686147052.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_60949686147062.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_57149686147072.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff - Exception: Could not convert string to importable function, tmpfile:td_Qobj_single_str38349686147072.pyx; FAILED qutip/tests/test_openmp.py::test_openmp_mesolve_td - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_00149686147082.pyx; FAILED qutip/tests/test_propagator.py::testPropHOStrTd - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_91749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call_args - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147102.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_457496861",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:24183,test,tests,24183,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"To get more familiar with bits of the internals, I'm going through and migrating the tests to `pytest`. While I'm at it, I'm also fixing PEP8 issues in the testing files, since CodeClimate will moan at me if I don't. I'm basically learning how to use `pytest` and how to code as part of an organisation as I go, so please feel free to correct me if I'm doing something wrong. I'll leave this PR as in draft mode until I've made it through more of the testing files.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1164:85,test,tests,85,https://qutip.org,https://github.com/qutip/qutip/pull/1164,3,['test'],"['testing', 'tests']"
Testability,"To guard against regression on this, I would like to add unit tests covering adjoint channels before merging, since that's where I first noticed this issue. I will try to do so soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/375#issuecomment-142731122:62,test,tests,62,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-142731122,1,['test'],['tests']
Testability,"To illustrate the point further for dimension 8 the resulting superoperator has dims `[[[8, 8], [8, 8]], [[8, 8], [8, 8]]]` this amounts to 16777216 numbers. If the differences in each is of the order of 1e-8 this test will not pass, as the resulting total error will be well above 1e-5. . This difference is not seen in scipy versions :; - 1.5; - 1.6; - 1.6.2. Going deeper when running the 8 dimension tests in scipy 1.4 set to verbose this error is thrown. >Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB. looking at it in stackoverflow ; https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an. and then looking at the PR history in scipy I found this. https://github.com/scipy/scipy/pull/11304. which refers to this issue in particular. https://github.com/scipy/scipy/issues/8205. which seems in consonance with my finding. Scipy 1.4 has issues in its `linalg.eigh()` API Iam surprised this is not producing errors elsewhere. Specially when calculating the tracenorm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661:214,test,test,214,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661,2,['test'],"['test', 'tests']"
Testability,"Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR; BR Tools : zheevr ...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197:946,test,tests,946,https://qutip.org,https://github.com/qutip/qutip/issues/1197,1,['test'],['tests']
Testability,Travis CI tests - Specify blas type in conda env create,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/876,1,['test'],['tests']
Testability,Travis CI tests are passing. Codeclimate issues actually come from improved lines beyond the purity fucntion. cc @quantshah,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1045#issuecomment-514213043:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/1045#issuecomment-514213043,1,['test'],['tests']
Testability,"Travis CI tests update - NOMKL+OPENMP, cvx NOMKL only",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/pull/875,1,['test'],['tests']
Testability,"Travis appears to be buggy. When I closed/reopened to force a retest, it correctly tested ""Merge 60651d6 into 0711347"" but then when I added the celebratory comment it buggily started testing against an old version ""Merge 60651d6 into 42d1c72"". I guess I'll try rebasing, although I don't think I've ever done this before so I might screw it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083715:83,test,tested,83,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083715,2,['test'],"['tested', 'testing']"
Testability,"Travis only runs 5 test suite in parallel. Each tested commit have 6 to 8 test suite (add 3.8 and 3.8 for mac) and each test take 20 to 30min. So if many of us are working at the same time, automated test can take a few hours to run (like today).; I propose:; 1) Run the short suite for older python version (3.6 and 3.7), keeping the full test for only the latest for each os (linux + mac).; 2) For the specialised test (mkl, openmp, no cython) only run test affected by it. While this will probably not speed up for when only one PR is done, it should help when many are lined up. (2) could be done by adding new marks for the tests. @jakelishman, will this cause conflict with your unmerged PRs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/issues/1217,9,['test'],"['test', 'tested', 'tests']"
Testability,Travis tests currently unpredictable,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/issues/430,1,['test'],['tests']
Testability,Travis tests failing for MacOS - incorrect checksum for freed object,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/issues/963,1,['test'],['tests']
Testability,"Tried a few more options, looks good. Yeah, I know it is from a linter. Personally, I'm fine since the change is not massive. If others think this might mess up the code history, please speak up. Please add a Towncrier file for the change log. I'll wait for one or two days, if no one comments, will merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2146951100:239,log,log,239,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2146951100,1,['log'],['log']
Testability,"Try for example:; ```; cdef extern from ""<complex>"" namespace ""std"":; double complex exp(double complex z). def test(double complex z):; return exp(z); ```; Should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647#issuecomment-279543233:112,test,test,112,https://qutip.org,https://github.com/qutip/qutip/issues/647#issuecomment-279543233,1,['test'],['test']
Testability,"Turns out the failure in the Python 2 tests was because `Qobj` was declared `class Qobj():`, which supports getting properties, but not setting them. Thus, `isherm = None` was overriding the property call. I have less experience with Python 3, though, so I'm not sure why the reshuffling is causing the `dims` property to be set to `[[], []]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39650759:38,test,tests,38,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39650759,1,['test'],['tests']
Testability,"Two small bugs appeared in floquet steadystate in v5, this is a quick patch. **Description**; Two bugs:. 1) Small minus sign error in one of the terms (comparing to v4.7 and what is written in the old toolbox guide). 2) Some kind of data copying confusion with the S and T operators when updating their data contents with the results. Just initiating these two separately seems to fix it. other minor fix: updated the link to the toolbox guide. Some other minor niggles that I didn't fix:; - some of the optional solver methods dont work (seem not to support square right hand sides in '_data.solve()'. I didn't dig much on fixing these though. - the 'splu' method fails for a couple of reasons. I can get it to work by removing the choice of warnings as errors in 'solve.py' (which make it fail in other instances as well i suppose, like with normal steadystate()), making sure the solver option is not passed to steadystate(), and making sure that S and T are always converted back to CSR() after being updated in the iterative bit (in `steadystate_floquet()' they get returned as dense from _data.solve). I did not include those changes here though as the docstrings dont actually indicate support for splu anyway, so perhaps not needed. I am marking this as draft at the moment as I also want to update the test to be sensitive to these bugs (its a bit too coarse at the moment), and double check that the results from this solver are now correct. **Related issues or PRs**; fix #2386",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2393:1311,test,test,1311,https://qutip.org,https://github.com/qutip/qutip/pull/2393,1,['test'],['test']
Testability,Typo in nose tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/106:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/issues/106,1,['test'],['tests']
Testability,Udated tests to 3.8,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1214:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1214,1,['test'],['tests']
Testability,"Ugh, Windows sucks soooo much. Is that the only test that fails because of it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311#issuecomment-655011233:48,test,test,48,https://qutip.org,https://github.com/qutip/qutip/issues/1311#issuecomment-655011233,1,['test'],['test']
Testability,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36086389:44,benchmark,benchmark,44,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389,3,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"Unfortunately I have had some issues with `conda` in CI (for instance, it's solver uses quite a bit of memory, which had readthedocs actually shoot it down when solving the environment at some point). Also build matrices that test various combinations of optional dependencies are much cleaner when using a pure `pip` setup. I see your point though. I'll have to work around it for now. Thanks anyway!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377:226,test,test,226,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377,1,['test'],['test']
Testability,"Unfortunately not, or at least, certainly not the underlying cause - I was only able to reproduce the segfaults maybe once, but then it disappeared once I attached a debugger. It's very unlikely to be that particular test function, since I used to get them in fairly random locations. Just rearranging the test functions may have caused it to temporarily disappear, but it'll be back eventually until we find out whatever use-after-free or out-of-bounds error's actually causing it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925:217,test,test,217,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925,2,['test'],['test']
Testability,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:291,test,tests,291,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694,7,['test'],"['test', 'testfile', 'tests']"
Testability,Unit test for #490.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/495:5,test,test,5,https://qutip.org,https://github.com/qutip/qutip/pull/495,1,['test'],['test']
Testability,"Unit testing software: nose, nose2, pytest",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958:5,test,testing,5,https://qutip.org,https://github.com/qutip/qutip/issues/958,1,['test'],['testing']
Testability,Unit tests for fast_csr class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/586:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/586,1,['test'],['tests']
Testability,"Unit tests for superop_reps now work on my system, and without the ugly import hack I was using earlier. Thanks for teaching me that trick! Once Travis catches up, hopefully this should do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/94#issuecomment-38997570:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/pull/94#issuecomment-38997570,1,['test'],['tests']
Testability,Unit tests should be added for each of the main methods control.pulse_optim.; These should be based on the examples in qutip_notebooks; Gradient calcs should also be checked,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/368:5,test,tests,5,https://qutip.org,https://github.com/qutip/qutip/issues/368,1,['test'],['tests']
Testability,Units tests added for the qutip.control modules; Tests based on the notebook examples; Some other small fixes applied to issues found during the testing.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/383:6,test,tests,6,https://qutip.org,https://github.com/qutip/qutip/pull/383,3,"['Test', 'test']","['Tests', 'testing', 'tests']"
Testability,Unreliable correlation tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/607:23,test,tests,23,https://qutip.org,https://github.com/qutip/qutip/issues/607,1,['test'],['tests']
Testability,Unreliable tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621:11,test,tests,11,https://qutip.org,https://github.com/qutip/qutip/issues/621,1,['test'],['tests']
Testability,"Unstable `qutip.testing.run()` prompts abort traps locally (Mac, Python 3.7)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160:16,test,testing,16,https://qutip.org,https://github.com/qutip/qutip/issues/1160,1,['test'],['testing']
Testability,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:1164,test,test,1164,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021,2,"['Test', 'test']","['Tests', 'test']"
Testability,Update dev.major CI tests setup from master.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/1791,1,['test'],['tests']
Testability,Update diag_liou_mult test tolerances,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:22,test,test,22,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['test'],['test']
Testability,Update steadystates tests to pytest,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1679:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/1679,1,['test'],['tests']
Testability,Update test matrix to include python 3.12,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2309:7,test,test,7,https://qutip.org,https://github.com/qutip/qutip/pull/2309,1,['test'],['test']
Testability,Update tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1125:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/pull/1125,1,['test'],['tests']
Testability,Update the release action to push to testpypi and allow dev release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2069:37,test,testpypi,37,https://qutip.org,https://github.com/qutip/qutip/pull/2069,1,['test'],['testpypi']
Testability,"Update to the original 4.5.1 which is already a month old. New inclusions: . Better error message for failed string coefficient compilation.; Run the python 3.8 test in travis. (by Simon Cross ); Fix clebsch function for half-integer (by Thomas Walker); Deprecate graph function (by Jake Lishman); Fix travis warning (by Ivan Carvalho); Fix spin husimi/wigner functions (by maij). I would like the mac stuff to be fixed and moving the mac test to 3.8, but that will take some time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215:161,test,test,161,https://qutip.org,https://github.com/qutip/qutip/pull/1215,2,['test'],['test']
Testability,Update with micro release to 4.5.1 to include bug fix on tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1173:57,test,tests,57,https://qutip.org,https://github.com/qutip/qutip/pull/1173,1,['test'],['tests']
Testability,Updated travis.yml to move to pytest. ; Also updated qutip.testing to use pytest.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131:59,test,testing,59,https://qutip.org,https://github.com/qutip/qutip/pull/1131,1,['test'],['testing']
Testability,"Updates:. 1. Added `str_qasm` to read QASM input from string. Added tests for export by doing export followed by import. ; 2. The only remaining issue is that of global phase with gates. Specifically, with the `SQRTNOT`, `CSIGN` gates, the global phase is distorted when exporting to QASM and then re-importing. Should we just add a warning that this might happen more generally? Furthermore, gates like iSWAP become pretty useless with this. @BoxiLi . Otherwise, the PR is mostly ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318#issuecomment-657746734:68,test,tests,68,https://qutip.org,https://github.com/qutip/qutip/pull/1318#issuecomment-657746734,1,['test'],['tests']
Testability,Updating superop module tests allowing rectangular channels/channels with tracing representation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491:24,test,tests,24,https://qutip.org,https://github.com/qutip/qutip/pull/1491,1,['test'],['tests']
Testability,"Updating tests in meetrics, superops,and tensor modules",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487:9,test,tests,9,https://qutip.org,https://github.com/qutip/qutip/pull/1487,1,['test'],['tests']
Testability,"Upon a third run, tests ran fine, and then the bug found in #1158 occurred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-575861207:18,test,tests,18,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-575861207,1,['test'],['tests']
Testability,Use anaconda for Travis tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/300:24,test,tests,24,https://qutip.org,https://github.com/qutip/qutip/pull/300,1,['test'],['tests']
Testability,Use scipy's svd in tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2239:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/pull/2239,1,['test'],['tests']
Testability,"UserWarning: Multiplying superoperators with different representations; issued during tests.; @cgranade I think you implemented this part. Is this something to concern; I mainly raised it as I have spent my evening removing all the other warnings from the tests, so would be nice to clear them all",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/433:86,test,tests,86,https://qutip.org,https://github.com/qutip/qutip/issues/433,2,['test'],['tests']
Testability,"Using integer-like floats in `math.factorial` is deprecated as of Python 3.9. Glancing over the rest of the code, I'm fairly sure `math.factorial` is only called on floats formed by (e.g.) `N / 2 + 0.5`, which is guaranteed be an integer for all odd `N` integers, but to be safe I inserted the same test that `math.factorial` will do as well. By the way: depending on how accurate you actually want/need to be with your degeneracy calculations, a common way to deal with these binomial quantities is to work in the logarithmic space --; ```python; def factln(x):; return scipy.special.gammaln(x + 1). def energy_degeneracy(N, m):; return int(np.exp(Decimal(factln(N) - factln(N/2 + m) - factln(N/2 - m)))); ```; This is pretty much guaranteed to be faster, but a little less precise; double-precision floats have ~15 decimal digits of precision compared to the `Decimal` default of 28. You have to be careful that the `np.exp` call doesn't overflow (unless you can use the number in logarithmic space as well), but you can just use a single `Decimal` instance like I did if it really matters to you to have huuuuge numbers output. I suspect it doesn't, since you multiply it by a float right after, which will overflow to `inf`. Timings:; ```python; from math import factorial; from decimal import Decimal; import numpy as np; from scipy.special import gammaln. def degeneracy_all_decimal(N, m):; return int(Decimal(factorial(N)) / (Decimal(factorial(int(N/2+m))) * Decimal(factorial(int(N/2-m))))). def degeneracy_log_then_decimal(N, m):; return int(np.exp(Decimal(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1)))). def degeneracy_log(N, m):; return int(np.exp(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1))); ```; ```python; In [3]: %timeit degeneracy_all_decimal(1000, 0); ...: %timeit degeneracy_log_then_decimal(1000, 0); ...: %timeit degeneracy_log(1000, 0); 831 µs ± 1.91 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each); 31.9 µs ± 190 ns per loop (mean ± std. dev. of 7 runs,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1550:299,test,test,299,https://qutip.org,https://github.com/qutip/qutip/pull/1550,2,"['log', 'test']","['logarithmic', 'test']"
Testability,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:134,test,tests,134,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634,4,['test'],"['test', 'tests']"
Testability,"Version 5 has `loky` (and mpi) based parallel maps available for when `multiprocessing` doesn't want to cooperate.; All maps are tests of linux, mac and windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757:129,test,tests,129,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757,1,['test'],['tests']
Testability,"Very nice! The fortran stuff never worked on travis. In fact, it builds and install ok, but fails to load when the tests are ran. Perhaps some missing library path?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/300#issuecomment-68425677:115,test,tests,115,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425677,1,['test'],['tests']
Testability,Wait 1 more commit so I check the test skipped without cython.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-532268201:34,test,test,34,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-532268201,1,['test'],['test']
Testability,"We (mainly @Ericgig ) are developing some changes that would only be included in the next major release. It would make sense to merge these into one branch, but not the `master` branch, so that we can test their compatibility. Maybe `development` is a good name, although we often refer to our `master` as the 'development' branch. I have seen some template for this in another project, but cannot remember where. If anyone has some ideas for this, then would be good if they could share here",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/964:201,test,test,201,https://qutip.org,https://github.com/qutip/qutip/issues/964,1,['test'],['test']
Testability,We aim at delivering the next release in a couple of weeks. Maybe just adding tests to be sure nothing is broken here would help including this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425:78,test,tests,78,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425,1,['test'],['tests']
Testability,"We already don't match our requirement with tests. We require scipy 1.0 but test for >=1.4. Same for numpy, we tests for >=1.20.; We should update it before making the release. ; But we will still build with oldest-supported-numpy so it may not be inline with the tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1163446152:44,test,tests,44,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1163446152,4,['test'],"['test', 'tests']"
Testability,"We already have a separate repo for lattice: https://github.com/qutip/qutip-lattice.; Make a PR for that repo, there is nothing to do here. From v5, all lattice code and tests will be removed from this repo and only https://github.com/qutip/qutip-lattice will remain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2014#issuecomment-1297498455:170,test,tests,170,https://qutip.org,https://github.com/qutip/qutip/pull/2014#issuecomment-1297498455,1,['test'],['tests']
Testability,We don't currently test or build for 3.12 on the `qutip-4.7.X` branch. Probably we should since 5 isn't fully released yet.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892426006:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892426006,1,['test'],['test']
Testability,"We get warnings when compiling using the mingw32 compiler under windows.; ```; ""unknown conversion type 'z' in format""; ```; The warnings only seem to occur during the tests and not the build_ext, so there may be something we can do with CFLAGS. ; I have done quite a lot of reading around and it seems many projects suffer from this. There did not seem to be a clear resolution, other than to change the C code. We don't seem to use the 'z' in any of our source, but it is found in all the so files, so I guess it is used in one of the dependencies, and hence I don't think we can take that approach.; The tests still seem to pass, so I am putting it down as a won't fix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597:168,test,tests,168,https://qutip.org,https://github.com/qutip/qutip/issues/597,2,['test'],['tests']
Testability,"We have a number of pull requests that are all nice fixes and enhancements, however we are delaying merging because of travis test failures. I can't see how any of these pull request can be an underlying cause:; #421; #422; #428; #429. So I will merge all these. We can then investigate what is causing some of the tests to fail under this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430:126,test,test,126,https://qutip.org,https://github.com/qutip/qutip/issues/430,2,['test'],"['test', 'tests']"
Testability,"We have not modified the sp_eigs code in some time. Also, the only error that I have ever seen is subsys_apply. Taking care of that test would cure most, if not all, of our issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-184881659:132,test,test,132,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184881659,1,['test'],['test']
Testability,"We have test cases both with and without `mpi4py`.; I believe trying to use `mpi_pmap` without `mpi4py`, it will raise the default `ImportError`. ; @pmenczel can confirm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319#issuecomment-1930838671:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/2319#issuecomment-1930838671,1,['test'],['test']
Testability,"We need to be careful not to remove too much, we need keep the tests meaningful, with a good coverage. ; The first 2 are quite rare cases and could be marked as slow. Or at least one of them since they are quite similar.; Tests in QobjEvo could be rearranged to limit the number of compilations.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604140927:63,test,tests,63,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604140927,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"We presently support operator in data layer including binary operators with themselves (`CSR + CSR`). But we use them sometime without confirming that both data object are of the same type, which will eventually cause bugs. Here I remove this support and fixed many places were we used them, but there are probably some uses remaining in place not covered by tests. This is an alternative solution to the issue from #1647.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1649:359,test,tests,359,https://qutip.org,https://github.com/qutip/qutip/pull/1649,1,['test'],['tests']
Testability,"We run tests on Windows in CI now and they pass, so I'm going to close this now. Feel free to comment if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026#issuecomment-1439940914:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-1439940914,1,['test'],['tests']
Testability,"We will keep 1 test for each 3.6 and 3.7. If the test passes, other tests should be moved to 3.8. But this may be another PR is you are ready to merge this as is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170#issuecomment-583543437:15,test,test,15,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-583543437,3,['test'],"['test', 'tests']"
Testability,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:38,log,log,38,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030,1,['log'],['log']
Testability,"Well then this seems more or less done, however it doesn't look like there is a unit tests for the new code that returns both states and expect values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66559972:85,test,tests,85,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66559972,1,['test'],['tests']
Testability,"Well, `-march=native` gives you couple of percents of performance in the compiled binary (I wonder, did anyone benchmark how much, actually?), but it is a promise ""I will never run this binary on another machine, than this"". It is better not to do it by default. Even worse if it propagates somewhere on Conda: typically it uses some modern Intel-based servers to build packages, and if one has AMD CPU, it will definitely segfault with an illegal instruction. I vaguely remember such problems with conda-forge packages, but not sure if it was QuTiP or some other package with the same problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/949#issuecomment-463255325:111,benchmark,benchmark,111,https://qutip.org,https://github.com/qutip/qutip/pull/949#issuecomment-463255325,1,['benchmark'],['benchmark']
Testability,"Well, having a higher version of scipy and cython does not seem to fix it and we are plagued again by the `dnorm` issue. Attempting to run with the latest scipy (1.1) one last time. Otherwise, we should decide to include this after QuTiP drops python 2.7, or let it be merged as it is with a warning that python2 is not recommended for the `piqs` module. I cannot understand the error, as locally, all tests are passing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396131009:402,test,tests,402,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396131009,1,['test'],['tests']
Testability,"Well, the default implementation for states is actually nearly completely unchanged (the only difference is that I replaced `np.fliplr(array)` with `array[::-1]`, which I think is a more readable idiom for ""backwards""). You're right that in the new form, basically the method is that you cache various parts of the `np.polyval` call into a 3D tensor, rather than recomputing this large polynomial each time. The `np.polyval` call is how you actually go from an array of different values of `alpha` (which comes from the meshgrid) to the coherent state, but doing it with `polyval` means you construct the coherent state and do the dot product simultaneously to save memory. If you need to repeat the calculations a bunch, and you've got enough memory to spare, you can build up all the `alpha**n / sqrt(factorial(n))` tensor once, then just dot it against every state. Since we're dealing with _complex_ Hilbert spaces, the inner product isn't a straight dot product, it needs the conjugate of one of the sides, so we only store the conjugate of the alpha tensor. You can see in the timings that this isn't _always_ the biggest win you'd expect; in some cases, the additional memory usage causes you to be more heavily bound by memory bandwidth issues rather than CPU pipelined stuff, which is another reason we allow forcing either method to be used. If you're interested in the most readable implementation, you might want to look at the test:; https://github.com/qutip/qutip/blob/a20c26307e2f6e738f87efd75abafc3dff4daad5/qutip/tests/test_wigner.py#L251-L260",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877254212:1440,test,test,1440,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877254212,2,['test'],"['test', 'tests']"
Testability,"Well, there are still some issues with the tests not passing. Probably due to the 1e-12 tol there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/464#issuecomment-210095371:43,test,tests,43,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210095371,1,['test'],['tests']
Testability,"Well, we have been using mingw for qutip, while the Win Python has always been compiled with VS. while I agree with your statement, using VS seems not to be an option for us. I haven't had any problems in mu minimal testing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222805219:216,test,testing,216,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222805219,1,['test'],['testing']
Testability,"What is strange about this Travis CI thing is that usually tests do not run on push, I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1188#issuecomment-593255566:59,test,tests,59,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593255566,1,['test'],['tests']
Testability,"What should we do with the qutip/examples directory? It contains a lot of old stuff which is not really maintained anymore, but there are still some useful tests examples there. The current situation is:. qutip/qutip/examples - official examples accessible through the GUI and used in the docs; qutip/qutip/tests - unit tests; qutip/notebooks - development tests and benchmarks; qutip/examples - no clear purpose and not well maintained. We need to think about what we want to do with the examples directory and what purpose these example scripts have. I'm inclined to getting rid of these examples in favor or more contextual development examples in notebook form stored in qutip/notebooks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/23:156,test,tests,156,https://qutip.org,https://github.com/qutip/qutip/issues/23,5,"['benchmark', 'test']","['benchmarks', 'tests']"
Testability,"When I tried to use the `qutip.squeeze` function for my simulations I noticed that something was off. Upon further investigation I found out that the output is not a truncated version of the single-mode squeezing unitary, but rather the matrix exponential of the truncated generator. These are _very_ different things!. Am I right in assuming that the most useful matrix would be the truncated unitary? If that's the case, the current method to compute it is wrong. To compute the right matrix one can use the disentangling formula for SU(1,1) (formula (31) [here](http://aip.scitation.org/doi/pdf/10.1063/1.3413923)):. ```python; def squeeze(n,z):; s0 = np.exp(1j*np.angle(z))*np.tanh(abs(z)); s1 = -2*np.log(np.cosh(abs(z))); s2 = -np.exp(-1j*np.angle(z))*np.tanh(abs(z)); ; L = s0*0.5*(qt.create(n)*qt.create(n)); K = s1*(0.5*qt.num(n)+0.25*qt.identity(n)); R = s2*0.5*(qt.destroy(n)*qt.destroy(n)); ; return (L.expm())*(K.expm())*(R.expm()); ```. As you can see, this definition does *not* depend on the truncation parameter. Specifically, the upper-left portion of the matrix that `qutip.squeeze` outputs converges to my `squeeze` function for large `n`. I suspect that one can apply similar arguments to other functions in `qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/661:706,log,log,706,https://qutip.org,https://github.com/qutip/qutip/issues/661,1,['log'],['log']
Testability,"When I was trying to run a script written with qutip on a cluster with Ubunt 18.04, python 2.7 conda 4.7.12 installed, the following error occurred. Traceback (most recent call last):; File ""test.py"", line 13, in <module>; from qutip import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobj.py"", line 2434, in <module>; import qutip.superop_reps as sr; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superop_reps.py"", line 61, in <module>; from qutip.superoperator import vec2mat, spre, spost, operator_to_vector; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superoperator.py"", line 408, in <module>; from qutip.qobjevo import QobjEvo; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobjevo.py"", line 515; raise TypeError(""Qobj not compatible."") from e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:191,test,test,191,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['test'],['test']
Testability,"When calling `ssesolve` or `smesolve` without any stochastic collapse operators but `store_measurement` set to True, there is an IndexError. This PR fixes the error and adds a test for this situation. Example code:; ```python; import qutip as qt; r = qt.ssesolve(qt.sigmaz(), qt.basis(2, 1), [0, 1, 2], options={'store_measurement': True}, ntraj=15); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2423:176,test,test,176,https://qutip.org,https://github.com/qutip/qutip/pull/2423,1,['test'],['test']
Testability,"When running nosetest with just test_mcsolve in a folder, on Windows, I found that somehow the tests appeared to respawn recursively. For some reason this change seemed to fix that problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/726#issuecomment-317070981:95,test,tests,95,https://qutip.org,https://github.com/qutip/qutip/pull/726#issuecomment-317070981,1,['test'],['tests']
Testability,"When using qutip.propagator with unitary_mode='single' and parallel=False, the result does not have the same dims as the Hamiltonian, for other setting it does work.; Minimal example (tested with qutip 4.4.1):; ```; In [1]: import qutip . In [2]: H = qutip.tensor([qutip.qeye(2)]*2) . In [3]: H.dims ; Out[3]: [[2, 2], [2, 2]]. In [4]: qutip.propagator(H, 1 , unitary_mode='single', parallel=True).dims ; Out[4]: [[2, 2], [2, 2]]. In [5]: qutip.propagator(H, 1, unitary_mode='batch').dims ; Out[5]: [[2, 2], [2, 2]]. In [6]: qutip.propagator(H, 1 , unitary_mode='single').dims ; Out[6]: [[4], [4]]```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1152:184,test,tested,184,https://qutip.org,https://github.com/qutip/qutip/issues/1152,1,['test'],['tested']
Testability,"When using the `rhs_with_state=True` with list func type time dependence the state is passed to the user defined func as a numpy vector. I think users would expect this to be a `Qobj`, as in:; https://groups.google.com/forum/#!topic/qutip/BqUZQEQN1c4. The question is whether this should be considered a bug, and hence whether we can fix this without worrying too much about how this will affect other users. My guess it that it is not a well used feature anyway @nonhermitian what do you think? There is no documentation on it's usage for instance, and I don't think there are any tests for it. This is perhaps related #824, insomuchas any fix we do here should be replicated in sesolve as well. The fix seems quite easy, as I think we can assume that the `rho` can be converted as; ```; def drho_list_td_with_state(t, rho, L_list, args):; d = np.sqrt(len(rho_vec)); rho_qobj = QObj(dense2D_to_fastcsr_fmode(vec2mat(rho), d, d)); ```; @Ericgig how do you accommodate rhs_with_state in `QobjEvo`?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947:582,test,tests,582,https://qutip.org,https://github.com/qutip/qutip/issues/947,1,['test'],['tests']
Testability,"While the tests now pass for Mac on Travis CI, this is the error messages I get locally on Mac, . ```; (base) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = F",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:10,test,tests,10,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,3,['test'],"['test', 'tests']"
Testability,"While trying to migrate to pytest from nose , #1131, there is only one failed test arising on all platforms. ; The problem seems to be a test in the `control` module, exactly it is `qutip.tests.test_control_pulseoptim.TestPulseOptim` called by `test_03_dumping(self):` on line 340. . ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Any help @tehruhn and @ajgpitch would be great. I think one should call `setUp`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1134:78,test,test,78,https://qutip.org,https://github.com/qutip/qutip/issues/1134,8,"['Test', 'test']","['TestPulseOptim', 'test', 'tests']"
Testability,"While you're at it, could you update the mac test to a more recent version of mac. xcode12 is now out but we are still testing on xcode10 (https://docs.travis-ci.com/user/reference/osx). There were segfault with xcode11, thus we skipped it, but I hope it's solved with the `eigh` patch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679979350:45,test,test,45,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679979350,2,['test'],"['test', 'testing']"
Testability,"Whoops! Yeah, absolutely. I'll fix it in the other PR. It only affects the names of tests at least. I got it right in `test_mathematics` at least...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-667324781:84,test,tests,84,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-667324781,1,['test'],['tests']
Testability,"Whoops, you're right. That `prod` should say `np.prod` instead and there's a similar bug in `rand_ket_haar`. Thanks for reporting it!. I also wouldn't be averse if someone wants to change the signature of `rand_ket` to; ```python; def rand_ket(N=None, dims=None, ...):; ...; ```; so that it becomes possible to do `rand_ket(dims=[[2], [1]])` without needing to specify the first argument. Obviously there'll need to be a couple more tests in the function to ensure that at least one of `N` and `dims` was passed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1504#issuecomment-823455134:433,test,tests,433,https://qutip.org,https://github.com/qutip/qutip/issues/1504#issuecomment-823455134,1,['test'],['tests']
Testability,"Why though? It _is_ a badly written function and it should be changed. It's a true error, and I wouldn't be confident that there isn't an edge-case bug in it, because it's got so many branches I can't separate them easily in my head when reading it. There's loads of ways to write the same functionality where it's decomposed into smaller bits that are all much easier to check for correctness individually (`mul_dense`, `mul_scalar`, `mul_sparse`, etc) - way easier to verify the top-level dispatching logic into those bits, and then way easier to verify each individual component within them. Also, as long as we have the ""TODO"" error filter turned on, it would be wrong to silence the error that comes from adding a new one, right? If we wanted to skip it, we should turn it off globally (which I'm not against for the TODO thing). If it's in, this way at least lets us use codeclimate properly to see when certain errors were introduced, or when issues in funny-looking functions might have been affected. At any rate, the many-return function is completely removed in `dev.major` since we completely rewrote the backing types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390:503,log,logic,503,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390,1,['log'],['logic']
Testability,Will address other test errors as they pop up.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621#issuecomment-273363278:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/issues/621#issuecomment-273363278,1,['test'],['test']
Testability,"Win32com is in win Anaconda. That is how I tested the code. . > On Feb 8, 2016, at 22:34, Chris Granade notifications@github.com wrote:; > ; > I only had comtypes installed for something else, but at least it's in conda and pip. Sadly, win32com is not in either repository.; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-181909452:43,test,tested,43,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181909452,1,['test'],['tested']
Testability,"Windows does not allow opening a tempfile.NamedTemporaryFile more than once, so it's not really suitable for a lot of uses. We just remove this fixture and use `in_temporary_directory` instead. Fix #1311 . **Changelog**; Fix fileio tests on Windows",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1312:232,test,tests,232,https://qutip.org,https://github.com/qutip/qutip/pull/1312,1,['test'],['tests']
Testability,"With all the new checks you've added for arithmetic on superoperators, it might be good to add unit tests to make sure those new checks don't regress. If you like, I can work on doing that in a new branch after this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/95#issuecomment-39346763:100,test,tests,100,https://qutip.org,https://github.com/qutip/qutip/pull/95#issuecomment-39346763,1,['test'],['tests']
Testability,"With cython0.29 that came out this weeks there where warning at ""cythonization"" about language_level. Complied with it by adding `#cython: language_level=3` at the start of every .pyx and .pxd. Also rename the cy/*testing* files to cy/*checks* since nose detected them as tests to run which caused automated tests to fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/927:214,test,testing,214,https://qutip.org,https://github.com/qutip/qutip/pull/927,3,['test'],"['testing', 'tests']"
Testability,"With that logic, we could say that the `c_ops`, `sc_ops` etc. are part of the system and should come right after the Hamiltonian. While this feels right to me, it would break too many code... Since HEOM is new and somewhat niche, I think it would be more doable to bring in line with other, even if it's the worst order. But it would be hard to do it smoothly, so it may be best to just let it be.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2489#issuecomment-2228684459:10,log,logic,10,https://qutip.org,https://github.com/qutip/qutip/issues/2489#issuecomment-2228684459,1,['log'],['logic']
Testability,"With the change away from `type='choi'` for `superrep='choi'` instead, `norm()` now works, and the tests all pass on my local machine. Additionally, I added an implementation of an average gate fidelity function that uses the new `to_choi`, `to_super` and `to_kraus` functions to calculate fidelities from any of several superreps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/90#issuecomment-37784118:99,test,tests,99,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37784118,1,['test'],['tests']
Testability,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389#issuecomment-152941888:126,log,logic,126,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888,2,"['log', 'test']","['logic', 'tests']"
Testability,"With this PR mesolve and mcsolve accept single operators as input for the collapse operator or the operator for which the expectation value is calculated. Internally, a list containing only that operator is constructed and passed on. I added test cases, by just copying a test that was already there and changing the input to a single operator for the collapse and expectation value respectively. For mcsolve the tests take quite some time, so a simpler test might be better. Any idea?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/5:242,test,test,242,https://qutip.org,https://github.com/qutip/qutip/pull/5,4,['test'],"['test', 'tests']"
Testability,Without documentation I would not expect anybody to use it. ; For density matrices I would reverse the default: precomputation unless the users says not to. ; Maybe check `amat_pwr` size and build it only if under 1G?. Could you add a test to check both method give the same output.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-468442121:235,test,test,235,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-468442121,1,['test'],['test']
Testability,Without more detail we can't help resolve this so closing it for now. Feel free to re-open if you can help debug. Tests pass in quite a few CI combinations.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1856842578:114,Test,Tests,114,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1856842578,1,['Test'],['Tests']
Testability,"Without seeing the code it is difficult to be sure exactly what this problem was. Python's garbage collection should have been aggressively pruning the stored objects once they were no longer referenced, and I'm not aware of any other people reporting memory usage problems in `mesolve`, but it's possible there was a reference being kept to a dense Liouvillian at every time step at some point in the past (the Liouvillian would explain the N^4 usage, as opposed to a dm which should be just N^2). I'm fairly sure this isn't a problem any more at least; I was able to run the test script; ```python; import qutip; import numpy as np; N = 500; L = [[qutip.liouvillian(qutip.rand_herm(N)), '1']]; rho = qutip.rand_dm(N); times = np.linspace(0, 1, 101); e_op = qutip.jmat((N - 1)/2, 'x'); qutip.mesolve(L, rho, times, e_ops=[e_op]); ```; on a fairly non-descript Macbook without issue as of a `master` shortly (hopefully) before the 4.6 release, without ever exceeding 3GB of RAM used. Just for approximate calculations for N=115: a 100% dense DM stored in CSR format takes ~257kB of memory, while a 100% dense Liouvillian would be ~3.26GB. Closing now due to lack of activity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-809630515:577,test,test,577,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-809630515,1,['test'],['test']
Testability,"Without the black changes, the patch would have applied cleanly, I think. With them, it's better to wait til the end, and then rebase the PR on top of master (in git, not github), then merge the PR into master as normal. The rebase is a destructive operation (rewrites history of the PR), so we have to take more care when working with more than one person, but it's better afterwards. I've heard this called a few things - Atlassian calls it a ""foxtrot merge"", for example. Here's a blog post they made about them, and some of the problems: https://blog.developer.atlassian.com/stop-foxtrots-now/. *Edit*: I usually wouldn't care about this, and we'd just squash the PR into a single commit to avoid all these problems, but in this particular case, the PR is kind of like two logical things at once. First it does @dweigand's original PR (but completed), and then it does what could have been another improvement change to all the code. We want to preserve the history in source control of the original PR (so you can see the changes I made to speed it up), so it needs to go in as two separate commits, doing a regular merge. If you're working on your own stuff, normally you'd be able to just squash and be done with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-878194970:777,log,logical,777,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-878194970,1,['log'],['logical']
Testability,"Woot for finding this buglet. I have some questions:. - What happens in v5?; - Can we also add a test for this case where a different nT is needed?; - Should we make nT a parameter which defaults to your new value? How closely do the signatures of the various Floquet solvers match currently? If they already have different options we can likely just add a new parameter. If not, perhaps we can anyway, but we should think a bit more.; - We should update the docstring to match.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1198052613:97,test,test,97,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1198052613,1,['test'],['test']
Testability,Woot. And thanks for adding the tests!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1614#issuecomment-882514922:32,test,tests,32,https://qutip.org,https://github.com/qutip/qutip/pull/1614#issuecomment-882514922,1,['test'],['tests']
Testability,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:40,test,tests,40,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018,24,['test'],"['test', 'testfile', 'testfiles', 'tests']"
Testability,"Wow, that a lot of work. Good to see you are still working on the lattice stuff. Right now, we don't have enough hands to maintain it and it pretty much abandoned. If you have the will to give it some love, it would be great. However could you make those PRs to qutip-lattice, in small review able chunks? v4.7 is the last of the v4 series and new feature like this can't be a bug-fix release. And in v5 we are splitting lattice, qip and control in other repo and keeping in Qutip only what me and @hodgestar can actively maintain. qutip-notebook is also taking the door in favour of qutip-tutorial, which tests notebooks and adds other maintainability features. Is this tools you created for your research that you are now contributing or do you plan to stick around contributing on qutip-lattice?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1956#issuecomment-1186306765:606,test,tests,606,https://qutip.org,https://github.com/qutip/qutip/pull/1956#issuecomment-1186306765,1,['test'],['tests']
Testability,"Yeah, I didn't notice before because I always run the tests locally before I push big things like that, and all the solver tests run locally, since it was just a packaging mix-up. As long as changing `__setitem__` means that `SolverOptions(seeds=[1, 2, 3])` throws an error (for now), then it's all good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997:54,test,tests,54,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997,2,['test'],['tests']
Testability,"Yeah, `qutip-qip` is a much easier build and installation process because you don't need to be concerned about compiler infrastructure, ABI compatibility or stuff like that. In addition in that particular test run, there were three individual calls to change the installed packages, which meant plenty of space for stuff to go wrong. In this case, I think it was a strange interaction between the old `.travis.yml` specifically installing `numpy` and all other dependencies from `conda-forge`, without the channel being in the defaults list. Since `conda uninstall` doesn't specify an additional channel, the dependency calculator considers `defaults` to be higher priority, so it sets various packages to arbitrary allowed ones from `defaults`, which with `openblas` installed like this meant numpy `1.14`. That's my guess at least - it's a pretty weird set up circumstances, but the new `.travis.yml` file that's already in `master` is far simpler about the build process.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609:205,test,test,205,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609,1,['test'],['test']
Testability,"Yeah, auto-tidyup should be a function of CSR matrices only. It doesn't make sense for dense matrices to have it, that's just burning cycles. As Asier mentioned, you already can't rely on floating-point operations being exactly identical between different matrix types, so there's no particular problem there. The point about auto-differentiation is an excellent reason that it must be allowed to vary between types as well. To be honest, I'm not sure how many cases the auto-tidyup operation actually helps in keeping things efficient. It may well be worth us having a proper investigation, and seeing how often it actually helps. I can tweak the addition and matrix-multiplication sparse algorithms to automatically tidy up when generating their output (if they don't already...), in which case we could probably entirely remove all ""automatic"" tidyup, and just have it be a manual operation?. `isherm_csr_full` is actually explicitly meant to handle all cases, _especially_ those involving matrices that have not been tidied up. The logic is actually sound (it's been deployed in `master` for a while now), but looks like there's a typo made when I handled the merge up, and the data-layer is missing a few of its mathematical tests so it didn't get spotted. I'll fix that now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752:1036,log,logic,1036,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752,2,"['log', 'test']","['logic', 'tests']"
Testability,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:42,test,tests,42,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,9,['test'],"['test', 'testing', 'tests']"
Testability,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:303,log,log,303,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820,1,['log'],['log']
Testability,"Yeah, on the practical side I was using those states to construct collapse operators, and then using these in steadystate() for a large range of parameters. Bit surprised to see what took 20 minutes in 4.7 took >5 hours in in v5 :0 I guess this is a combo of Liouvillian construction taking much longer as it then converts the Hamiltonian to Dense as well, and steady-state solving taking a bit longer too. Of course I can manually make those operators sparse (and then v5 just takes 7 mins!), but more generally, I think the logic of default_dtype is nice; essentially allows you to run QuTiP in that 'mode'. Also useful for cases like making jax objects, etc. ; I have another case where I actually want all operators to be dense, as I use .expm() a lot. . I think most functions in operators.py and states.py follow this logic, e.g., `basis()` in states.py: `dtype = dtype or settings.core[""default_dtype""] or _data.Dense`. I think it seems to make sense to apply it universally, irrespective of whether a particular object is naturally of one type or another, to avoid the cost of conversion when doing lots of repetitive things, avoid accidentally getting or making a particular type when you expect something different from default_dtype, etc. edit: Just to add, your suggestion of having two different default_dtypes could be nice too. I can imagine situations were you want to define both separately.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1951469496:526,log,logic,526,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1951469496,2,['log'],['logic']
Testability,"Yeah, perhaps we only need the py3.4 clang tests. Nothing that we do should require testing compilers against different Python versions. . Paul. > On Feb 21, 2015, at 08:55, Dominic Meiser notifications@github.com wrote:; > ; > Ok, I removed gcc 4.4. The matrix is now:; > ; > gcc 4.6 + python 2.7; > gcc 4.6 + python 3.4; > clang 3.4 + python 2.7; > clang 3.4 + python 3.4; > Is that what you want or just one line for clang?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75344573:43,test,tests,43,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75344573,2,['test'],"['testing', 'tests']"
Testability,"Yeah, seems like in v5 if you give a list of colors to add_points it ignores whether you choose 's' or 'm' and just plots multicolored. I would keep that as is (since i guess the logic of choosing 's' or 'm' is more about what default values to choose if the user provides no list of colors), and maybe update the docstring to just say giving a list of colors to add_points will override the choice of 's' or 'm'? . in v4.7 on the other hand, giving point_color() seems to still obey the choice of s or m used in add_points(). i would say its not so important to preserve that (presumably if you give a list you want multiple colors). @AGaliciaMartinez @Ericgig does this sound reasonable?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1974#issuecomment-1905451596:179,log,logic,179,https://qutip.org,https://github.com/qutip/qutip/issues/1974#issuecomment-1905451596,1,['log'],['logic']
Testability,"Yeah, sure, though parts one through fifteen might be more appropriate - there's a lot of tests. I'll rebase this branch onto master first, though, since I think there will be some merge conflicts after the merging of #1151.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1164#issuecomment-579719426:90,test,tests,90,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579719426,1,['test'],['tests']
Testability,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:53,test,tests,53,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364,3,['test'],"['test', 'tests']"
Testability,"Yeah, that's good. There are plenty of cases (like in the tests) where we want to change something like `ntraj` on-the-fly within the same script. Even just in regular REPL work, I mess around with tolerances and things like that, and it's much much easier to be able to do that case-by-case, rather than having to set global state, which often ends up with boilerplate when you're trying to be safe - you can't do quick checks as one-liners, and you have to use `try/finally` if you only want to temporarily set it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540:58,test,tests,58,https://qutip.org,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540,1,['test'],['tests']
Testability,"Yeah, the `fileio` test is the only one. `tempfile` is also only used there (sofar).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311#issuecomment-655013004:19,test,test,19,https://qutip.org,https://github.com/qutip/qutip/issues/1311#issuecomment-655013004,1,['test'],['test']
Testability,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:564,log,logical,564,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526,3,"['log', 'test']","['logic', 'logical', 'tests']"
Testability,"Yeah, you're right, I should have done the style changes in a different PR. It was mostly a lack of thought - I have a linter hooked into my text editor, so I get gutter-marks telling me all the PEP8 inconsistencies and stuff like that, and I usually change them without thinking. The `assert_` usually gets changed to bare `assert` when I'm actually trying to debug the tests - the bare `assert` gives _far_ more debugging detail with `pytest`, so it's much more helpful. By the way, if you're interested, the list of files which _didn't_ change is; ```text; .codeclimate.yml; .coveragerc; .github/ISSUE_TEMPLATE/bug_report.md; .github/ISSUE_TEMPLATE/feature_request.md; .github/ISSUE_TEMPLATE/others.md; .github/pull_request_template.md; .mailmap; .travis.yml; CODE_OF_CONDUCT.md; LICENSE.txt; README.md; pyproject.toml; qutip.bib; qutip/_mkl/__init__.py; qutip/_mkl/spmv.py; qutip/_mkl/spsolve.py; qutip/_mkl/utilities.py; qutip/about.py; qutip/cite.py; qutip/configspec.ini; qutip/control/__init__.py; qutip/control/cy_grape.pyx; qutip/hardware_info.py; qutip/ipynbtools.py; qutip/logging_utils.py; qutip/matplotlib_utilities.py; qutip/orbital.py; qutip/parallel.py; qutip/qip/__init__.py; qutip/qip/algorithms/__init__.py; qutip/qip/circuit_latex.py; qutip/qip/compiler/__init__.py; qutip/qip/compiler/cavityqedcompiler.py; qutip/qip/compiler/gatecompiler.py; qutip/qip/compiler/spinchaincompiler.py; qutip/qip/device/__init__.py; qutip/qip/gates.py; qutip/qip/operations/__init__.py; qutip/qip/qasm.py; qutip/qip/qip_deprecation.py; qutip/tests/Hadamard_params.ini; qutip/tests/__init__.py; qutip/tests/conftest.py; qutip/tests/pytest.ini; qutip/tests/qasm_files/bracket_error.qasm; qutip/tests/qasm_files/command_error.qasm; qutip/tests/qasm_files/qasm_error.qasm; qutip/tests/qasm_files/teleportation.qasm; qutip/tests/qasm_files/test_add.qasm; qutip/tests/qasm_files/test_custom_gates.qasm; qutip/tests/test_control_pulseoptim.py; qutip/tests/test_entropy.py; qutip/tests/test_fileio.py; quti",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332#issuecomment-671534803:325,assert,assert,325,https://qutip.org,https://github.com/qutip/qutip/pull/1332#issuecomment-671534803,3,"['assert', 'test']","['assert', 'tests']"
Testability,"Yeah. Just do a 'git pull upstream master' on this branch. The Travis; config file was updated and it's not the same as this branch. You don't; have to do a painful rebase. The tests need to run online. On Mon, Jun 18, 2018, 9:03 PM Louis Tessler <notifications@github.com>; wrote:. > @sahmed95 <https://github.com/sahmed95> shouldn't the merge automatically; > take care of that without bothering to rebase?; >; > I'd like to avoid wasting time on a rebase if there's no tangible benefit; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/883#issuecomment-398031660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBArCWgSxWGFO-QoURjxQPLZ63Eeiks5t95crgaJpZM4UrUyK>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398048087:177,test,tests,177,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398048087,1,['test'],['tests']
Testability,Yes please. Also make sure that you update to the latest master in your pull so that the travis tests pass.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264249437:96,test,tests,96,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264249437,1,['test'],['tests']
Testability,"Yes that is a typo. But as the tests pass, it shows that that method is never used. Usually q.isherm does the job. Will likely depreciate it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/440#issuecomment-187159975:31,test,tests,31,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187159975,1,['test'],['tests']
Testability,"Yes there seems to be an inconsistency in when LM and LR are used. Will try to sort this out.; - sp.linalg.eigsh should be used with LM and SM.; - http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigsh.html; - sp.linalg.eigs should be used LR and SR (sort by real value) or LM and SM (sort by magnitude), but should LR and LM should not be mixed.; - http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigs.html. For eigs/eigsh LR and SR might correspond closer to the behavior for dense matrices. I'll write some test cases for this before I do any changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16367480:557,test,test,557,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16367480,1,['test'],['test']
Testability,"Yes they are, they seems about 3x slower.; I am not sure why, but my guess would be the eigen solving being run in sparse instead of dense for not that sparse Hamiltonian in tests. We should be careful about it when porting the solver to v5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1861#issuecomment-1099170180:174,test,tests,174,https://qutip.org,https://github.com/qutip/qutip/pull/1861#issuecomment-1099170180,1,['test'],['tests']
Testability,"Yes, 4.0.1 has this issue. Hence the main motivation for 4.0.2. ; 4.0.1 only really exists on PyPI right now. Website and conda-forge are now 4.0.2. I will be uploading 4.0.2 to PyPI today. I don't know if 4.0.2 will work with scipy 0.15. It only gets built and tested (import qutip) on conda-forge against numpy 1.10 / scipy 0.17 and numpy 1.11 / scipy 0.18 as far as I know. Our Travis (full) tests only test numpy 1.11 / scipy 0.18. @nonhermitian do you think we should bump the requirements up to numpy 1.10 / scipy 0.17?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616#issuecomment-270812257:262,test,tested,262,https://qutip.org,https://github.com/qutip/qutip/issues/616#issuecomment-270812257,3,['test'],"['test', 'tested', 'tests']"
Testability,"Yes, I am not going to worry about it, everything works from scripts and when called from the library, so probably just some funny business. I am about to commit a minor update where the diags are grabbed directly from the sparse density matrix, for larger density matrices, or really sparse ones, this bumps up the speed a bit. I will also make a few more unit tests, just for my own sanity. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/526#issuecomment-242821449:362,test,tests,362,https://qutip.org,https://github.com/qutip/qutip/issues/526#issuecomment-242821449,1,['test'],['tests']
Testability,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207490289:47,test,test,47,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289,3,['test'],"['test', 'tests']"
Testability,"Yes, I had used it to check whether a variable was a string type. I saw it suggested somewhere. It has only just come up as I am adding (long overdue) tests for the control modules. I have now replaced the six based method with something else, but I think the six.string_types method was more elegant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378#issuecomment-145861008:151,test,tests,151,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145861008,1,['test'],['tests']
Testability,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-483000016:63,test,tests,63,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016,3,['test'],"['test', 'tests']"
Testability,"Yes, I have tested and it works both with `numpy` and `jax.numpy`. Should I just change the base branch to `dev.major`?; Is `numpy_backend` getting successfully imported in `metrics` and `entropy` enough or we should write separate tests?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2490#issuecomment-2229030829:12,test,tested,12,https://qutip.org,https://github.com/qutip/qutip/pull/2490#issuecomment-2229030829,2,['test'],"['tested', 'tests']"
Testability,"Yes, I will add the tests and modify the loops soon. Thanks for the comments, @AGaliciaMartinez :+1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1843#issuecomment-1086112353:20,test,tests,20,https://qutip.org,https://github.com/qutip/qutip/pull/1843#issuecomment-1086112353,1,['test'],['tests']
Testability,"Yes, It's looking good, and travis tests are passing, so I'm merging. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/136#issuecomment-44080820:35,test,tests,35,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44080820,1,['test'],['tests']
Testability,"Yes, `target` makes them a bit specialized and calling `expand_operator` manually is probably a good option. If I may propose the following:; - Move `expand_operator` to `dimensions.py` and keep it in qutip.; - Keep two functions `hadamard_transform` and `qubit_clifford_group`, and find a proper place for them in the main qutip (`operator.py`?). They are not that trivial to implement like the rest of the gates and are also not limited to just `qip`. Keep them consistent with other functions that generate Qobj (support `dtype`).; - Remove all rest of the gates and create some private substitutions just for testing. We should probably add somewhere in the changelog for the major release that if users are using gates like `cnot` for testing and now cannot find it. They should either define the gate themselves (and use `expand_operator` if needed) or install `qutip-qip`. (BTW, is there a place where we can maintain a list of those notes for the major release?)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1121214389:613,test,testing,613,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1121214389,2,['test'],['testing']
Testability,"Yes, in test mathematics we test kron for both dense and sparse non-square.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2224#issuecomment-1706571816:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/pull/2224#issuecomment-1706571816,2,['test'],['test']
Testability,"Yes, it's a strange one because the warnings don't appear on build_ext just; on import.; Anyway, all the tests passed on Windows, so I am happy to live with the; warnings for now.; But it does intrigue me, so I will pick it up some other time. On 2 Jan 2017 02:53, ""Paul Nation"" <notifications@github.com> wrote:. Some say setting:. CFLAGS=""-D_GNU_SOURCE=1"". works. But have not tried. Seems the 4.X GCC on Windows is missing some; features that even earlier GCC (3.5) had. Alexander Pitchford wrote:; >; > I think that this may have something to do with the heom.pyx file; > From what I have read about the 'z' format it has something to do with; > size.; > So I suspect this line; >; > |cdef size_t kk; > |; >; > @nonhermitian <https://github.com/nonhermitian> is the some reason why; > |kk| can't be an |int|; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/597#issuecomment-269906304>, or; > mute the thread; > <https://github.com/notifications/unsubscribe-auth/; ABMPqdURdzVvxNtmuLZAXNqId_9nPIB4ks5rN8C5gaJpZM4LYrBS>. —; You are receiving this because you were assigned.; Reply to this email directly, view it on GitHub; <https://github.com/qutip/qutip/issues/597#issuecomment-269912472>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/AIxX7REgAjFryTDQC6DwkWxI2-6XLB27ks5rN-gNgaJpZM4LYrBS>; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597#issuecomment-269929903:105,test,tests,105,https://qutip.org,https://github.com/qutip/qutip/issues/597#issuecomment-269929903,1,['test'],['tests']
Testability,"Yes, let's add it to the benchmarks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2196#issuecomment-1663036896:25,benchmark,benchmarks,25,https://qutip.org,https://github.com/qutip/qutip/pull/2196#issuecomment-1663036896,1,['benchmark'],['benchmarks']
Testability,"Yes, looks good to me. Think you should merge sooner rather than later. btw these other tests have appeared due trying to make this conda-forge package. Looks like I will have to create some kind of solution file for the appveyor one to work. However, nice to see the circleci one worked without any specific config.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/443#issuecomment-187578137:88,test,tests,88,https://qutip.org,https://github.com/qutip/qutip/pull/443#issuecomment-187578137,1,['test'],['tests']
Testability,"Yes, something very simple would work, I guess. . ```; from numpy.testing import assert_,assert_almost_equal; assert_(molmer_sorensen(0)==tensor(qeye(2),qeye(2))); assert_almost_equal(molmer_sorensen(np.pi/2).full(),(np.array([[0.70710678+0.j, 0.+0.j,0. +0.j, 0.-0.70710678j],; [0. +0.j , 0.70710678+0.j,0.-0.70710678j, 0.+0.j],; [0. +0.j , 0. -0.70710678j,0.70710678+0.j, 0. +0.j],; [0.-0.70710678j, 0. +0.j , 0.+0.j , 0.70710678+0.j ]]))); ```; and something for N>3 if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1028#issuecomment-505109850:66,test,testing,66,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505109850,1,['test'],['testing']
Testability,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/249#issuecomment-61443740:15,test,tests,15,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740,1,['test'],['tests']
Testability,"Yes, the `smesolve` test is failing elsewhere already and it's unrelated. Sorry could you explain me a bit the tensor issue and if this is merge-ready?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-540272340:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-540272340,1,['test'],['test']
Testability,"Yes, the development notebooks can become outdated. Sometimes they are used to test specific new features. . Please remind me here specifically which notebook you have found a problem with and I will raise an issue for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472#issuecomment-218413712:79,test,test,79,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218413712,1,['test'],['test']
Testability,"Yes, the tests ran locally on a test environment I had created. The metrics test ran fine on Travis indirectly on this other PR : https://travis-ci.org/qutip/qutip/builds/379109476. . Note that the python 2.7 failures are not related but are of similar nature with something changing for supplying arguments in tuples vs directly passing them. However, in hindsight, I should have tried a rebuild on this PR. But I could find no way of re-starting the tests here as travis didn't see any change to trigger a new test. I will test this with a fresh PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394276414:9,test,tests,9,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394276414,6,['test'],"['test', 'tests']"
Testability,"Yes, there are some cases where the dense operation is much faster. But there will be others (larger H space) where the sparse routine is faster. And it's not really fair to compare when you don't include the preops in the timeit. It's difficult, but not impossible, for us to tell in the code which situation we are in when make a superop vector multiplication. If we add lots of checks in, then this will slow things too. I think this is similar to #818. If we are going to address this, that is use dense matrix algebra for small systems, then we need to do it comprehensively. As is outlined in #437. I don't think we should make small changes in individual functions, this could make a big mess. I am putting a proposal together for a funding application. I have included work to something like #437. Maybe I will have time before also. You could maybe do something in your HEOM work where you have a `dense_oper` attribute, in which case you use numpy dense operations. I do this in the control modules, where typically the Hamiltonians are small. You can quickly run out of memory though, as the `L` gets very big, esp for `k >> 1`. I tried some tests on this when I was working on it last year.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831#issuecomment-368958389:1153,test,tests,1153,https://qutip.org,https://github.com/qutip/qutip/issues/831#issuecomment-368958389,1,['test'],['tests']
Testability,"Yes, this is a bug in the most recent cvxopt package from pip. I am trying to fix it in #566. I do not see any issues with the changes you made, so once I get the tests up and running again I will look into merging. Thanks for the fix!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-263945040:163,test,tests,163,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-263945040,1,['test'],['tests']
Testability,"Yes, you are right. Thanks for spotting this! That was a stupid mistake. I added the `mcsolve` option along with a few other small stuffs, didn't pay enough attention to it. The test just tests if the things run fine... Actually I don't really have a straightforward idea of how to test if a specific solver is used. Free free to propose any idea you have!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1322#issuecomment-659003253:178,test,test,178,https://qutip.org,https://github.com/qutip/qutip/pull/1322#issuecomment-659003253,3,['test'],"['test', 'tests']"
Testability,"Yes. Sadly having a windows machine is a requirement here in Korea :(. Robert Johansson wrote:. > OK, I see. Oh well, I guess we should trying to restore; > multiprocessing windows.. Do you have a windows computer to test it on?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/274#issuecomment-66576350.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-66576471:217,test,test,217,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66576471,1,['test'],['test']
Testability,Yes. The tests run fine on a Mac if I call it with just python. But they fail if I run the test suite with nosetests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458567870:9,test,tests,9,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458567870,2,['test'],"['test', 'tests']"
Testability,"You can either run it on your local machine by the command `pytest` or turn it from a draft PR into a ready-for-reveiw PR, which will trigger the Travis CI tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-637357742:156,test,tests,156,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-637357742,1,['test'],['tests']
Testability,"You can go ahead and merge it. The tests are passing and I checked the; latex code and visualization myself. On 05-Apr-2017 3:04 PM, ""Alexander Pitchford"" <notifications@github.com>; wrote:. > @mortenkjaergaard <https://github.com/mortenkjaergaard> once merged there; > are documented procedures for you to install the latest version from this; > repo; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/679#issuecomment-291807222>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBEIN656ybDBmGOjjWYVVsvlBH2Qnks5rs2AIgaJpZM4MyxeC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291862617:35,test,tests,35,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291862617,1,['test'],['tests']
Testability,"You can see from the attached figure that it works pretty good, even at lower Hilbert space sizes. I would be hesitant to add both options because the bicgstab method fails not because of too few iterations, but because of some ""breakdown"" that can not be figured out. Since the current method works so well, and the only issues are the number of iterations, which is taken care of by using a preconditioner, it seems that the LMGRES method is the way to go. . On Wednesday, July 3, 2013 at 11:52 AM, Robert Johansson wrote:. > Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-); > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/29#issuecomment-20392672).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20393941:870,benchmark,benchmarks,870,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20393941,1,['benchmark'],['benchmarks']
Testability,"You can still open an empty issue or PR without the template, although the button for that is a bit smaller and is at the end of the template list. I set this up in my fork https://github.com/BoxiLi/qutip, you can try open one there. The behaviour should be exactly the same for the QuTiP main repo after this PR is merged. Let me know if you have suggestions on a better name than ""others"". Sure I can add a suggestion for tests. A proposal for automatization is in https://github.com/qutip/qutip/issues/1108. I'm not yet sure if that can be directly applied to this template.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602778824:424,test,tests,424,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602778824,1,['test'],['tests']
Testability,You can test with the 4.4.0 conda / pip release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-510881793:8,test,test,8,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-510881793,1,['test'],['test']
Testability,You can use [coverage](http://www.saltycrane.com/blog/2012/04/test-coverage-nose-and-coveragepy/) with nose to see which part of the code is not getting caught by the tests. I have the coverage report for floquet here : http://sahmed.in/qutip_cover/qutip_floquet_py.html. This can be quite useful at times.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/624#issuecomment-275752285:62,test,test-coverage-nose-and-coveragepy,62,https://qutip.org,https://github.com/qutip/qutip/issues/624#issuecomment-275752285,2,['test'],"['test-coverage-nose-and-coveragepy', 'tests']"
Testability,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:106,test,test,106,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956,3,['test'],"['test', 'tests']"
Testability,"You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/221#issuecomment-53840086:252,test,tests,252,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840086,1,['test'],['tests']
Testability,"You should take care of the fact that both `H` and `rho0` are allowed to be superoperators as well. `H` can be a Liouvillian, and `rho0` can be a superoperator to allow for the type of situation mentioned in #384. If one of the two, but not both, are supers, your simple test will fail. . We should fix the docstring of `mesolve` so that it mentions that rho0 can be a super.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/481#issuecomment-222396968:271,test,test,271,https://qutip.org,https://github.com/qutip/qutip/pull/481#issuecomment-222396968,1,['test'],['test']
Testability,"You simple need to create a function starting with `test_` that use the progress bar. Ideally you would use it in a way that ensure all lines of code are used at least once. Then if there is an error in the code, python will raise an error and the test will fail. There should be some tutorials for pytest on the web, writing a step per step guide on making tests is more work than making the tests themselves so please have mercy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084:248,test,test,248,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084,3,['test'],"['test', 'tests']"
Testability,You tests are passing locally on my computer now. Did you find and fix the problem?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45195466:4,test,tests,4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45195466,1,['test'],['tests']
Testability,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/18#issuecomment-17175299:133,assert,assertion,133,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299,1,['assert'],['assertion']
Testability,"Yup, it installed ok, the openmp threshold check error is gone, and all tests passed ok~!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693:72,test,tests,72,https://qutip.org,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/1478018/badge)](https://coveralls.io/builds/1478018). Coverage increased (+0.15%) when pulling **5035c836272cfe0a63a1673c0fd6b7cbb49e4f09 on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-63155272:206,log,logging,206,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63155272,1,['log'],['logging']
Testability,[![Coverage Status](https://coveralls.io/builds/1478065/badge)](https://coveralls.io/builds/1478065). Coverage increased (+0.15%) when pulling **8c1dcf7859dc5c2c8d2b99935e943076b25fb538 on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-63156135:206,log,logging,206,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63156135,1,['log'],['logging']
Testability,[![Coverage Status](https://coveralls.io/builds/1478151/badge)](https://coveralls.io/builds/1478151). Coverage increased (+0.13%) when pulling **ef38e1626942fc964870c6539a1223105305612e on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-63157712:206,log,logging,206,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63157712,1,['log'],['logging']
Testability,[![Coverage Status](https://coveralls.io/builds/1523226/badge)](https://coveralls.io/builds/1523226). Coverage decreased (-1.06%) when pulling **d8f64c773c474bbfb5210a77be3243d8410511d1 on jrjohansson:stochastic-unit-test-multiprocessing** into **53e6c98c12d746e732b22346002dcdec26378ab2 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/266#issuecomment-64317662:217,test,test-multiprocessing,217,https://qutip.org,https://github.com/qutip/qutip/pull/266#issuecomment-64317662,1,['test'],['test-multiprocessing']
Testability,[![Coverage Status](https://coveralls.io/builds/1841454/badge)](https://coveralls.io/builds/1841454). Coverage decreased (-0.01%) to 54.79% when pulling **1ab5566cf741511898a2dc567a9453e968093359 on jrjohansson:fix-qobj-division-test** into **0bf9b619ab30af7551467ee2388d0e3db641db14 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/306#issuecomment-72345337:229,test,test,229,https://qutip.org,https://github.com/qutip/qutip/pull/306#issuecomment-72345337,1,['test'],['test']
Testability,[![Coverage Status](https://coveralls.io/builds/31689108/badge)](https://coveralls.io/builds/31689108). Coverage increased (+0.02%) to 71.087% when pulling **5d9236b9192fd2fa537834c2f66afc02eb5f04fd on jakelishman:ci-enforce-scipy-1.4-test** into **52c1925ab676495e2fc0836c6d4e2c18ce812ad1 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302#issuecomment-649681790:235,test,test,235,https://qutip.org,https://github.com/qutip/qutip/pull/1302#issuecomment-649681790,1,['test'],['test']
Testability,[![Coverage Status](https://coveralls.io/builds/31916810/badge)](https://coveralls.io/builds/31916810). Coverage increased (+0.0009%) to 71.252% when pulling **4d3f9b8647b788b95621a68292ab8bc0cc09baa9 on jakelishman:fix-fileio-test-windows** into **9e82f5b81955952833e25bb3eeff3fa24d36556b on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1312#issuecomment-655032650:227,test,test-windows,227,https://qutip.org,https://github.com/qutip/qutip/pull/1312#issuecomment-655032650,1,['test'],['test-windows']
Testability,[![Coverage Status](https://coveralls.io/builds/32474905/badge)](https://coveralls.io/builds/32474905). Coverage decreased (-0.06%) to 71.407% when pulling **3677d6e5707596ad88dfcae89885c656ac7bd148 on rajathshetty20:testBranch** into **d359d9b14f4ca8c3f63e209a9745bc52a99cf90b on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1315#issuecomment-656032256:217,test,testBranch,217,https://qutip.org,https://github.com/qutip/qutip/pull/1315#issuecomment-656032256,1,['test'],['testBranch']
Testability,[![Coverage Status](https://coveralls.io/builds/32984225/badge)](https://coveralls.io/builds/32984225). Coverage decreased (-8.3%) to 64.813% when pulling **0a7d8a350686ffe65a3993db377561db55ce6574 on jakelishman:dev.major-fix-test-coverage** into **e8854aa9b3710486b429f1d1d9e9e9cc415e382f on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679993941:227,test,test-coverage,227,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679993941,1,['test'],['test-coverage']
Testability,[![Coverage Status](https://coveralls.io/builds/33727290/badge)](https://coveralls.io/builds/33727290). Coverage decreased (-8.3%) to 63.214% when pulling **7ffdcd905b02144bb7fb70e7e2d86d02b63a30ba on jakelishman:master-fix-test-coverage** into **8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347#issuecomment-679416484:224,test,test-coverage,224,https://qutip.org,https://github.com/qutip/qutip/pull/1347#issuecomment-679416484,1,['test'],['test-coverage']
Testability,[![Coverage Status](https://coveralls.io/builds/36757585/badge)](https://coveralls.io/builds/36757585). Coverage remained the same at 63.449% when pulling **f9ac0ae6935b3a6fee188768792bbe7c93ecef6d on jakelishman:fix-consumable-iteration-tests** into **b67ac6418a450524aeb08a3b408c57592148b525 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1430#issuecomment-770963331:238,test,tests,238,https://qutip.org,https://github.com/qutip/qutip/pull/1430#issuecomment-770963331,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/38335889/badge)](https://coveralls.io/builds/38335889). Coverage decreased (-0.009%) to 63.606% when pulling **c9f77423a47ebfc967f20da7c147652ba24bb54d on jakelishman:fix-vector-operator-dims-test** into **da1f08226b078e528651b202033a107ebbb7925a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1475#issuecomment-809358328:240,test,test,240,https://qutip.org,https://github.com/qutip/qutip/pull/1475#issuecomment-809358328,1,['test'],['test']
Testability,[![Coverage Status](https://coveralls.io/builds/38535940/badge)](https://coveralls.io/builds/38535940). Coverage remained the same at 63.606% when pulling **8acb0258468864d337d3d14226e1bfe2eed70663 on jakelishman:fix-platform-test** into **8681e995c09986a4355ba16d586dd2d2f1f49657 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1484#issuecomment-813480314:226,test,test,226,https://qutip.org,https://github.com/qutip/qutip/pull/1484#issuecomment-813480314,1,['test'],['test']
Testability,[![Coverage Status](https://coveralls.io/builds/38609281/badge)](https://coveralls.io/builds/38609281). Coverage increased (+0.05%) to 63.659% when pulling **862d0de844d9d5b39f0301d0ea4c47c37d995499 on jakelishman:tests-refactor-metrics** into **ee047df81e3fcb1b941d04588409c4a8de09e2c7 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815115509:214,test,tests-refactor-metrics,214,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815115509,1,['test'],['tests-refactor-metrics']
Testability,[![Coverage Status](https://coveralls.io/builds/39127235/badge)](https://coveralls.io/builds/39127235). Coverage increased (+0.06%) to 64.305% when pulling **c2c1cd647263331acf82d40f38a8c17e730f406f on jakelishman:fix-test-warnings** into **624405e7c49f7c25d0623451cff5a5a5d0544559 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826084831:218,test,test-warnings,218,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826084831,1,['test'],['test-warnings']
Testability,[![Coverage Status](https://coveralls.io/builds/39576138/badge)](https://coveralls.io/builds/39576138). Coverage increased (+0.5%) to 64.822% when pulling **51dcddba2aff9b5f6e43edd691609f0e0fb7fdb9 on jakelishman:move-tests-to-github-actions** into **6845908363c53c4c56b42be385f8f0b22ba8278b on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-838497323:218,test,tests-to-github-actions,218,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-838497323,1,['test'],['tests-to-github-actions']
Testability,[![Coverage Status](https://coveralls.io/builds/39739382/badge)](https://coveralls.io/builds/39739382). Coverage decreased (-0.006%) to 64.896% when pulling **8466e01691f98cfc8d743be7f5b9b3370a4ee967 on Yash-10:Version-tests-matplotlib** into **c1a3b9df16be09e9895385f3274a2a39e50695d2 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1556#issuecomment-841228166:219,test,tests-matplotlib,219,https://qutip.org,https://github.com/qutip/qutip/pull/1556#issuecomment-841228166,1,['test'],['tests-matplotlib']
Testability,[![Coverage Status](https://coveralls.io/builds/40603210/badge)](https://coveralls.io/builds/40603210). Coverage increased (+0.2%) to 65.597% when pulling **c446e4acd0e4b87a7993a9861440debe5436023b on jakelishman:move-tests-to-github-actions** into **be241cac446062f8817f61ee4f14a6cbdb8351a6 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1574#issuecomment-861634545:218,test,tests-to-github-actions,218,https://qutip.org,https://github.com/qutip/qutip/pull/1574#issuecomment-861634545,1,['test'],['tests-to-github-actions']
Testability,[![Coverage Status](https://coveralls.io/builds/42370531/badge)](https://coveralls.io/builds/42370531). Coverage remained the same at 64.891% when pulling **65d67ed872d82b58f922148f23fa62108a52368b on hodgestar:test-maths-remove-unnecessary-scipy-sparse-use** into **0a9fd8d6b06731d269b6d6e7fb8169d06a4ce8ca on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1641#issuecomment-904676572:211,test,test-maths-remove-unnecessary-scipy-sparse-use,211,https://qutip.org,https://github.com/qutip/qutip/pull/1641#issuecomment-904676572,1,['test'],['test-maths-remove-unnecessary-scipy-sparse-use']
Testability,[![Coverage Status](https://coveralls.io/builds/42475208/badge)](https://coveralls.io/builds/42475208). Coverage increased (+0.004%) to 65.767% when pulling **1144ecc5578c2c0d7919874d372a037d58614314 on Ericgig:mcsolve.test.fix** into **b9f66c6ea29a4c215f188085cf3059974a45876d on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1645#issuecomment-907406782:219,test,test,219,https://qutip.org,https://github.com/qutip/qutip/pull/1645#issuecomment-907406782,1,['test'],['test']
Testability,[![Coverage Status](https://coveralls.io/builds/42542345/badge)](https://coveralls.io/builds/42542345). Coverage increased (+0.02%) to 65.758% when pulling **d08058b2cc134947d1a3838d960a5af26fa49ab7 on hodgestar:feature/fix-processor-plot-test-under-xvfb-gh1639** into **ac27129f9171de4641d0787515872427f8f1983c on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1648#issuecomment-909749680:239,test,test-under-xvfb-,239,https://qutip.org,https://github.com/qutip/qutip/pull/1648#issuecomment-909749680,1,['test'],['test-under-xvfb-']
Testability,[![Coverage Status](https://coveralls.io/builds/42898363/badge)](https://coveralls.io/builds/42898363). Coverage increased (+0.03%) to 64.907% when pulling **3d6cfc0553ff66eabda803f748380bd328e9b337 on Ericgig:stochastic.tests** into **7362b32449a821293940de9690734b6331594289 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1657#issuecomment-920189096:221,test,tests,221,https://qutip.org,https://github.com/qutip/qutip/pull/1657#issuecomment-920189096,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/43683136/badge)](https://coveralls.io/builds/43683136). Coverage remained the same at 16.832% when pulling **4b027c3c555bacd135e15bd21f842dd5c1962cf1 on hodgestar:fix/failing-steady-state-tests** into **091574d12a27a15f8d4861a6ae9c0c8a560dac42 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-948594430:236,test,tests,236,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-948594430,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/43703453/badge)](https://coveralls.io/builds/43703453). Coverage remained the same at 67.118% when pulling **818214c8e58d17c2f264d28eb8dc361eb0f32c5c on hodgestar:fix/test-numpy-versions** into **a41285691e0f5a276a5ad5e72c4ab6f0a7f4c157 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1696#issuecomment-949498838:215,test,test-numpy-versions,215,https://qutip.org,https://github.com/qutip/qutip/pull/1696#issuecomment-949498838,1,['test'],['test-numpy-versions']
Testability,[![Coverage Status](https://coveralls.io/builds/46127930/badge)](https://coveralls.io/builds/46127930). Coverage remained the same at 68.408% when pulling **c45199ec874076cff819b29adbdbdf7ade3290f5 on hodgestar:feature/test-numpy-122-in-ci** into **51443081561cce79660aa34646c715b1932eebb5 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1777#issuecomment-1016882453:219,test,test-numpy-,219,https://qutip.org,https://github.com/qutip/qutip/pull/1777#issuecomment-1016882453,1,['test'],['test-numpy-']
Testability,[![Coverage Status](https://coveralls.io/builds/46168599/badge)](https://coveralls.io/builds/46168599). Coverage increased (+0.07%) to 65.687% when pulling **299f22bc6d2d57f572db0948fa1f0fbff32b8ed6 on hodgestar:fix/update-dev-major-ci-tests** into **0503eb03e2f1a53e747c21b99221d1d4adc1b833 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791#issuecomment-1028153738:236,test,tests,236,https://qutip.org,https://github.com/qutip/qutip/pull/1791#issuecomment-1028153738,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/47184103/badge)](https://coveralls.io/builds/47184103). Coverage remained the same at 68.993% when pulling **175afa8685d8c131ab09587014abc7f6e863d6ad on hodgestar:update-superop-tests** into **71ad3088887e6ccde897fa5f2a632932218ae337 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1825#issuecomment-1061784670:226,test,tests,226,https://qutip.org,https://github.com/qutip/qutip/pull/1825#issuecomment-1061784670,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/48244897/badge)](https://coveralls.io/builds/48244897). Coverage remained the same at 69.593% when pulling **0d539847926766c5164632a2b05d7c890d0a8ebd on hodgestar:feature/disable-mcsolve-tests-on-windows** into **ec9e8f4265a6544b1841467b9f83634f6c3727c0 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1855#issuecomment-1097989703:235,test,tests-on-windows,235,https://qutip.org,https://github.com/qutip/qutip/pull/1855#issuecomment-1097989703,1,['test'],['tests-on-windows']
Testability,[![Coverage Status](https://coveralls.io/builds/48262235/badge)](https://coveralls.io/builds/48262235). Coverage decreased (-0.04%) to 66.191% when pulling **1be01e42288f24e0fe00516e78d5e7cbc9af45fd on Ericgig:shorter.krylov.tests** into **f8c997e61accbb40664b1e9c298ac51dff212e16 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1861#issuecomment-1098463313:225,test,tests,225,https://qutip.org,https://github.com/qutip/qutip/pull/1861#issuecomment-1098463313,1,['test'],['tests']
Testability,[![Coverage Status](https://coveralls.io/builds/48300415/badge)](https://coveralls.io/builds/48300415). Coverage decreased (-0.7%) to 68.879% when pulling **f0f18caf96230063da09805a00653c0e3d934d0f on hodgestar:fix/heom-tests-for-v5** into **4c68ce2d6ea7ca7f208a85387a004de586b97839 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1868#issuecomment-1099651885:220,test,tests-for-,220,https://qutip.org,https://github.com/qutip/qutip/pull/1868#issuecomment-1099651885,1,['test'],['tests-for-']
Testability,[![Coverage Status](https://coveralls.io/builds/50419378/badge)](https://coveralls.io/builds/50419378). Coverage increased (+4.001%) to 70.988% when pulling **b1dc4f34754ed7a2d8eac00326460d6747282bde on hodgestar:fix/heom-tests-for-v5** into **04d213fd4972e387352df60e949c95ea0f6bfe9d on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1099649732:222,test,tests-for-,222,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1099649732,1,['test'],['tests-for-']
Testability,[![Coverage Status](https://coveralls.io/builds/50504519/badge)](https://coveralls.io/builds/50504519). Coverage increased (+0.07%) to 71.055% when pulling **b9047e5b5d34c1d102e0c0b651fa3dc27952d887 on hodgestar:feature/v5-activate-mcsolve-tests-on-windows** into **1da5795fe762ccbf81ff58f417100ffbd60536c0 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1948#issuecomment-1170357096:240,test,tests-on-windows,240,https://qutip.org,https://github.com/qutip/qutip/pull/1948#issuecomment-1170357096,1,['test'],['tests-on-windows']
Testability,[![Coverage Status](https://coveralls.io/builds/54311514/badge)](https://coveralls.io/builds/54311514). Coverage remained the same at 69.919% when pulling **cb585f21fdaa441d98aa5004e179a9e4c83cf485 on hodgestar:feature/fix-matplotlib-test-flakiness-on-windows** into **b79c7cca9f67dcdaca141b4c1a32be9c7279cb4d on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2013#issuecomment-1318339342:234,test,test-flakiness-on-windows,234,https://qutip.org,https://github.com/qutip/qutip/pull/2013#issuecomment-1318339342,1,['test'],['test-flakiness-on-windows']
Testability,[![Coverage Status](https://coveralls.io/builds/54352960/badge)](https://coveralls.io/builds/54352960). Coverage remained the same at 72.139% when pulling **edad48ec43fabd8ccd32c45853563b0c2055de79 on hodgestar:feature/v5/fix-matplotlib-test-flakiness-on-windows** into **88fea8427be9a26ac99b58bdba39c55b79a9cfc9 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2022#issuecomment-1319739195:237,test,test-flakiness-on-windows,237,https://qutip.org,https://github.com/qutip/qutip/pull/2022#issuecomment-1319739195,1,['test'],['test-flakiness-on-windows']
Testability,[![Coverage Status](https://coveralls.io/builds/57993720/badge)](https://coveralls.io/builds/57993720). Coverage: 75.391%. Remained the same when pulling **a25e4d4192323ea695fc611e144d8368973c8b07 on HarshKhilawala:test-progressbar** into **41129bc2924fa6fa7726c051f5560e17be2c8039 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1474764914:215,test,test-progressbar,215,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1474764914,1,['test'],['test-progressbar']
Testability,[![Coverage Status](https://coveralls.io/builds/58978308/badge)](https://coveralls.io/builds/58978308). Coverage: 75.624% (+0.3%) from 75.317% when pulling **133677f9c94efa2b57d976618f0e15b55e2a31a6 on hodgestar:feature/add-hypothesis-tests-for-data-operators** into **fb72696119f00358b1337f88f103688d705fe9e8 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1506051484:235,test,tests-for-data-operators,235,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1506051484,1,['test'],['tests-for-data-operators']
Testability,[![Coverage Status](https://coveralls.io/builds/63232951/badge)](https://coveralls.io/builds/63232951). coverage: 43.961% (-40.9%) from 84.833% when pulling **c193e9c98bf391c45d791368c3ba1ded91682ccd on Ericgig:test.email** into **7f28e55e0fa03017b308f2f1582d77e3dbbb1c99 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2244#issuecomment-1756117748:211,test,test,211,https://qutip.org,https://github.com/qutip/qutip/pull/2244#issuecomment-1756117748,1,['test'],['test']
Testability,"[0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]]; krylov_dim = 12. def _check_inputs(H, psi0, krylov_dim):; """"""Check that the inputs 'H' and 'psi0' have the correct structures.""""""; if not isinstance(H, Qobj):; raise TypeError(; ""krylovsolve currently supports Hamiltonian Qobj operators only""; ); ; if not H.isherm:; raise TypeError(""Hamiltonian 'H' must be hermician.""); ; if not isinstance(psi0, Qobj):; raise TypeError(""'psi0' must be a Qobj.""); ; if not psi0.isket:; raise TypeError(""Initial state must be a ket Qobj.""); ; if not ((len(H.shape) == 2) and (H.shape[0] == H.shape[1])):; raise ValueError(""the Hamiltonian must be 2-dimensional square Qobj.""); ; if not (psi0.dims[0] == H.dims[0]):; > raise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_10_happy_breakdown_e_ops_none[eigenstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; sta",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:2997,test,tests,2997,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,"] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4609,test,tests,4609,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,"] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4252,Test,TestKrylovSolve,4252,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"],; 64 [0., 0., pe / 2., 0.],; 65 [1. - pe, 0., 0., 1. - pe / 2.]]),; 66 superrep='choi'); 69 # CHANGE OF BASIS FUNCTIONS ---------------------------------------------------; 70 # These functions find change of basis matrices, and are useful in converting; 71 # between (for instance) Choi and chi matrices. At some point, these should; 72 # probably be moved out to another module.; ---> 74 _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()); 77 def _pauli_basis(nq=1):; 78 # NOTE: This is slow as can be.; 79 # TODO: Make this sparse. CSR format was causing problems for the [idx, :]; 80 # slicing below.; 81 B = zeros((4 ** nq, 4 ** nq), dtype=complex). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:508, in identity(dims); 492 def identity(dims):; 493 """"""Identity operator. Alternative name to :func:`qeye`.; 494; 495 Parameters; (...); 506 Identity operator Qobj.; 507 """"""; --> 508 return qeye(dims). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:488, in qeye(dimensions); 452 """"""; 453 Identity operator.; 454; (...); 485; 486 """"""; 487 size, dimensions = _implicit_tensor_dimensions(dimensions); --> 488 return Qobj(fast_identity(size),; 489 dims=dimensions, isherm=True, isunitary=True). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:389, in fast_identity(N); 387 ptr = np.arange(N+1, dtype=np.int32); 388 ptr[-1] = N; --> 389 return fast_csr_matrix((data,ind,ptr),shape=(N,N)). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:55, in fast_csr_matrix.__init__(self, args, shape, dtype, copy); 53 self.dtype = complex; 54 self.maxprint = 50; ---> 55 self.format = 'csr'. AttributeError: property 'format' of 'fast_csr_matrix' object has no setter; ```. ### Expected Behaviour. I expected to be able to import qutip :) . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.11.0; Cython Version: ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:2527,test,test-env-scipy-qutip,2527,https://qutip.org,https://github.com/qutip/qutip/issues/2182,1,['test'],['test-env-scipy-qutip']
Testability,"]; [0.]; [0.]; [0.]; [0.]]; krylov_dim = 12. def _check_inputs(H, psi0, krylov_dim):; """"""Check that the inputs 'H' and 'psi0' have the correct structures.""""""; if not isinstance(H, Qobj):; raise TypeError(; ""krylovsolve currently supports Hamiltonian Qobj operators only""; ); ; if not H.isherm:; raise TypeError(""Hamiltonian 'H' must be hermician.""); ; if not isinstance(psi0, Qobj):; raise TypeError(""'psi0' must be a Qobj.""); ; if not psi0.isket:; raise TypeError(""Initial state must be a ket Qobj.""); ; if not ((len(H.shape) == 2) and (H.shape[0] == H.shape[1])):; raise ValueError(""the Hamiltonian must be 2-dimensional square Qobj.""); ; if not (psi0.dims[0] == H.dims[0]):; > raise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_10_happy_breakdown_e_ops_none[eigenstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:3024,Test,TestKrylovSolve,3024,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; qutip/core/cy/coefficient.pyx:126: in qutip.core.cy.coefficient.Coefficient.__call__; ???; qutip/core/cy/coefficient.pyx:346: in qutip.core.cy.coefficient.StrFunctionCoefficient._call; ???; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. t = 0.0, args = {'op': CSR(shape=(3, 3), nnz=3)}. > ???; E NameError: name 'expect_csr' is not defined. <string>:4: NameError; ======================================================================= short test summary info =======================================================================; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_CoeffOptions; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_advance_use; =============================================== 2 failed, 214 passed, 1 skipped, 5700 deselected, 13 warnings in 1.17s ================================================; ```. (Note that the second failing test only fails because without cython, there is no `cimport`.). ---. If we install filelock, everything works as expected:. ```shell; $ conda install filelock; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	> [1/1] Cythonizing qtcoeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:7328,test,tests,7328,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['test'],['tests']
Testability,"_**edit to put the positivity up top!**_: This is a very exciting prospect to me, and I'm always happy when other libraries want to interact with QuTiP! In the interests of inciting more discussion, I've got thrown in some more discussion points below - I'm 100% sure they're all solvable, but it also seems like there isn't one way that's unambiguously correct to do them, so they're worth discussing. ---. In principle I'm happy to implement this, though I don't really agree with your assertion that `othertype.toqobj()` is bad style! It might be so in Julia, but Python doesn't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no ot",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:488,assert,assertion,488,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['assert'],['assertion']
Testability,"_.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:24699,test,tests,24699,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qft.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubits.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_me.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_optpulseprocessor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qpt.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_enr_state_operator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubitcircuit.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_states.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> bui,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:12497,test,tests,12497,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,"_; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26669,test,tests,26669,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_Edit 2020-08-25:_ reporting to Coveralls is now fixed. As a bonus, I also fixed the tree reporting in Coveralls, so now you can get line-by-line coverage analysis within the files in the Coveralls webapp. _Orginal comment from when Coveralls reported at 0%:_; Ok, that Coveralls report is clearly broken, but you can see in the test log that the coverage reporting is correctly fixed (see the Linux, Python 3.7 report). I suspect that my directory hopping has caused the generated `.coverage` file to get lost, which I'll fix tomorrow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347#issuecomment-679418397:329,test,test,329,https://qutip.org,https://github.com/qutip/qutip/pull/1347#issuecomment-679418397,2,"['log', 'test']","['log', 'test']"
Testability,"_Last updated: 2020-08-12_. This is an issue for tracking and publicising the development status of a separated data layer. This is a major breaking change to be introduced in QuTiP 5, and will change how library functions and users access the underlying data structures of `Qobj`. This document and issue will change over time. Development is taking place on the [`dev.major` branch](https://github.com/qutip/qutip/tree/dev.major) in `qutip/qutip`. Pull requests implementing new features:; - #1282 separating out the core QuTiP operations into a (logical but user-transparent) package `qutip.core`.; - #1296 implementing the first parts of the data multiple dispatch and new data types.; - #1332 replacing the `fast_csr_matrix` with the new Cython type `CSR` all across QuTiP; - #1338 implementing the data-layer creation, conversion and dispatcher routines. We are writing a new ""developers' guide"" to explain the logic behind the design decisions, and help new QuTiP developers work on the code. You can follow initial development hosted as [a repo in my user account](https://github.com/jakelishman/qutip-devguide) until we decide how this will be added to the main documentation. You can view a rendered version of the documentation at https://jakelishman.github.io/qutip-devguide. Some design documents:; - [data layer](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/01-data-time-layer-separation.md); - [data structure implementation choices](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/02-data-structures.md); - [original GSoC proposal (PDF)](https://www.binhbar.com/posts/2020/05/welcome-to-google-summer-of-code-2020/proposal.pdf). New design elements under consideration:; - [improved `'type'` and `'dims'` handling for tensor-product spaces](https://github.com/qutip/qutip/issues/1320). Major breaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:549,log,logical,549,https://qutip.org,https://github.com/qutip/qutip/issues/1278,2,['log'],"['logic', 'logical']"
Testability,"__ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initialize_data(arg, dims, copy); qutip/core/qobj.py:295: in _initialize_data; self._data = _data.create(arg, copy=copy); qutip/core/data/convert.pyx:477: in qutip.core.data.convert._create.__call__; return create(arg, shape, copy=copy); qutip/core/data/csr.pyx:139: in qutip.core.data.csr.CSR.__init__; self._scipy = _csr_matrix(data, col_index, row_index, self.shape); qutip/core/data/csr.pyx:56: in qutip.core.data.csr._csr_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; _________________________________________ ERROR collecting qutip/tests/solver/test_integrator.py _________________________________________; qutip/tests/solver/test_integrator.py:16: in <module>; class TestIntegratorCte():; qutip/tests/solver/test_integrator.py:20: in TestIntegratorCte; me_system = qutip.liouvillian(qutip.QobjEvo(qutip.qeye(2)),; qutip/core/superoperator.py:96: in liouvillian; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:96: in <genexpr>; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().of",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:2695,test,tests,2695,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['test'],['tests']
Testability,"__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29194,test,test,29194,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"__; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Segmentation fault: 11; ```; and with nosetests; ```; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from Py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:29632,test,tests,29632,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"___; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py'.; Hint: make sure your test modules/packages have valid Python na",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:22161,test,tests,22161,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_____; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python na",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:3265,test,tests,3265,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"______ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Use",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6740,test,tests,6740,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"______; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python name",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:19453,test,tests,19453,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_______; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Pyth",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:16758,test,tests,16758,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the tests passed, but for qutip dashboard, the last one always fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:1272,test,tests,1272,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896,4,"['Assert', 'test']","['AssertionError', 'tests']"
Testability,"__________. def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.01597663; E Max relative difference: 11.81715334; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.017329, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:1661,assert,assert,1661,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['assert'],['assert']
Testability,"__________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:14959,test,tests,14959,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_______________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initialize_data(arg, dims, copy); qutip/core/qobj.py:295: in _initialize_data; self._data = _data.create(arg, copy=copy); qutip/core/data/convert.pyx:477: in qutip.core.data.convert._create.__call__; return create(arg, shape, copy=copy); qutip/core/data/csr.pyx:139: in qutip.core.data.csr.CSR.__init__; self._scipy = _csr_matrix(data, col_index, row_index, self.shape); qutip/core/data/csr.pyx:56: in qutip.core.data.csr._csr_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; _________________________________________ ERROR collecting qutip/tests/solver/test_integrator.py _________________________________________; qutip/tests/solver/test_integrator.py:16: in <module>; class TestIntegratorCte():; qutip/tests/solver/test_integrator.py:20: in TestIntegratorCte; me_system = qutip.liouvillian(qutip.QobjEvo(qutip.qeye(2)),; qutip/core/superoperator.py:96: in liouvillian; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:96: in <genexpr>; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:2750,Test,TestIntegratorCte,2750,https://qutip.org,https://github.com/qutip/qutip/issues/2472,2,"['Test', 'test']","['TestIntegratorCte', 'tests']"
Testability,"________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13003,test,tests,13003,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:8544,test,tests,8544,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/g",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:15705,test,tests,15705,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:10438,test,tests,10438,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"__________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21106,test,tests,21106,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"__________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/pyt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28318,test,tests,28318,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test m",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11184,test,tests,11184,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/gugliel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13914,test,tests,13914,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:17499,test,tests,17499,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:25606,test,tests,25606,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test m",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:4008,test,tests,4008,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_____________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit object at 0x12c081640>, method = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4158,test,tests,4158,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['test'],['tests']
Testability,"_________________________________________________________________________________________________________________. collapse_operators = <function _2_tuple_split at 0x7fe9f0ca6520>. @pytest.mark.parametrize(""collapse_operators"", [; _2_tuple_split,; pytest.param(_4_tuple_split, marks=pytest.mark.slow),; pytest.param(_2_tuple_splines, marks=pytest.mark.slow),; pytest.param(_2_list_entries_2_tuple_split, marks=pytest.mark.slow),; ]); def test_split_operators_maintain_answer(collapse_operators):; N = 10; w0 = 1.0 * 2*np.pi; g = 0.05 * w0; kappa = 0.15; ; a = qutip.destroy(N); H = w0*a.dag()*a + g*(a+a.dag()); psi0 = (qutip.basis(N, 4) + qutip.basis(N, 2) + qutip.basis(N, 0)).unit(); psi0 = qutip.ket2dm(psi0); times = np.linspace(0, 25, 1000); e_ops = [a.dag()*a, a+a.dag()]; ; me_c_ops, brme_c_ops, a_ops = collapse_operators(N, kappa, times); me = qutip.mesolve(H, psi0, times, me_c_ops, e_ops); > brme = qutip.brmesolve(H, psi0, times, a_ops, e_ops, brme_c_ops). /usr/lib/python3/dist-packages/qutip/tests/test_brmesolve_td.py:256: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /usr/lib/python3/dist-packages/qutip/bloch_redfield.py:200: in brmesolve; output = _td_brmesolve(H, psi0, tlist, a_ops=a_ops, e_ops=e_ops,; /usr/lib/python3/dist-packages/qutip/bloch_redfield.py:482: in _td_brmesolve; exec(code, globals()); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . > ???; E ModuleNotFoundError: No module named 'rhs4968611'. <string>:1: ModuleNotFoundError; _________________________________________________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:11250,test,tests,11250,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:5612,test,testing,5612,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"_bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (asser",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:5443,test,tests,5443,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:14442,test,tests,14442,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"_bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:24339,test,tests,24339,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split] FAILED [ 5%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string] FAILED [ 8%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%];,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6344,test,tests,6344,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call t,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1393,Test,TestSESolve,1393,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['Test'],['TestSESolve']
Testability,"_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6356,test,tests,6356,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,_init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/heom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; creating build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spmv.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; creating build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_tensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brtools.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spinchain.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spmath.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mkl.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py ->,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:11528,test,tests,11528,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,_mkl/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; creating build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_tensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brtools.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spinchain.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spmath.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mkl.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qft.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubits.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_me.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_optpulseprocessor.py -> build/lib,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:11975,test,tests,11975,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,"_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:4788,test,testing,4788,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11964,test,testing,11964,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,_mt19937.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_direct.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/param,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44536,test,tests,44536,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler using new_build_clib; building 'npymath' library; compiling C sources; C compiler: clang -Wno-unused-res,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:46073,test,testing,46073,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,['test'],"['testing', 'tests']"
Testability,"_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:3394,test,tests,3394,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"_ref = mesolve(H, rho0, times, c_ops, e_ops); #plot_expectation_values(result_ref); #plt.show(). L = liouvillian(H); D = lindblad_dissipator(c_ops[0]); d1_operator = L + D; def d1_rho_func(t, rho_vec):; return d1_operator * rho_vec. B1 = spre(c_ops[0]) + spost(c_ops[0].dag()); B2 = spre(c_ops[0]) + spost(c_ops[0].dag()); def d2_rho_func(t, rho_vec):; e1 = expect_rho_vec(B1.data, rho_vec, False); drho1 = B1 * rho_vec - e1 * rho_vec. e1 = expect_rho_vec(B2.data, rho_vec, False); drho2 = B2 * rho_vec - e1 * rho_vec. return np.vstack([1.0/np.sqrt(2) * drho1, -1.0j/np.sqrt(2) * drho2]); # Everything above is almost the same as the example. I only modified the following part; result = smesolve(H=H*0, rho0=ket2dm(rho0), times=times,; e_ops=e_ops,; d1=d1_rho_func, d2=d2_rho_func,; d2_len=2, ntraj=ntraj, nsubsteps=nsubsteps*2,; dW_factors=[np.sqrt(2/gamma), np.sqrt(2/gamma)],; store_measurement=True, map_func=parallel_map); ```. The error message; ```; ============================= test session starts ==============================; platform darwin -- Python 3.6.8, pytest-3.3.2, py-1.5.2, pluggy-0.6.0; rootdir: /Users/haiwen/PycharmProjects/Qutip_test, inifile:Total run time: 0.13s. test_smesolve2.py:None (test_smesolve2.py); multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:1933,test,test,1933,https://qutip.org,https://github.com/qutip/qutip/issues/1029,1,['test'],['test']
Testability,_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-de,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3507,Test,TestOptimization,3507,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['Test'],['TestOptimization']
Testability,_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:45034,test,testing,45034,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['testing']
Testability,"_stochastic_me.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:23493,test,testing,23493,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:8421,test,testing,8421,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11061,test,testing,11061,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29023,test,testing,29023,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,_superoper.py deleted in HEAD and modified in master. Version master of qutip/tests/test_superoper.py left in tree.; CONFLICT (content): Merge conflict in qutip/tests/test_subsys_apply.py; CONFLICT (content): Merge conflict in qutip/tests/test_random.py; CONFLICT (modify/delete): qutip/tests/test_rand.py deleted in master and modified in HEAD. Version HEAD of qutip/tests/test_rand.py left in tree.; CONFLICT (content): Merge conflict in qutip/tests/test_qubitcircuit.py; CONFLICT (content): Merge conflict in qutip/tests/test_noise.py; CONFLICT (content): Merge conflict in qutip/tests/test_mkl.py; CONFLICT (content): Merge conflict in qutip/tests/test_device.py; CONFLICT (content): Merge conflict in qutip/tests/solve/test_qubit_evolution.py; CONFLICT (content): Merge conflict in qutip/tests/solve/test_brtools.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_superop_reps.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_qobj.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_metrics.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_eigen.py; CONFLICT (modify/delete): qutip/superoperator.py deleted in HEAD and modified in master. Version master of qutip/superoperator.py left in tree.; CONFLICT (modify/delete): qutip/sparse.py deleted in HEAD and modified in master. Version master of qutip/sparse.py left in tree.; CONFLICT (content): Merge conflict in qutip/solve/stochastic.py; CONFLICT (content): Merge conflict in qutip/solve/steadystate.py; CONFLICT (content): Merge conflict in qutip/solve/sesolve.py; CONFLICT (content): Merge conflict in qutip/solve/mesolve.py; CONFLICT (content): Merge conflict in qutip/solve/mcsolve.py; CONFLICT (content): Merge conflict in qutip/solve/floquet.py; CONFLICT (content): Merge conflict in qutip/solve/countstat.py; CONFLICT (content): Merge conflict in qutip/solve/correlation.py; CONFLICT (content): Merge conflict in qutip/solve/_brtools.pyx; CONFLICT (content): Merge conflict in qut,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165:1356,test,tests,1356,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165,1,['test'],['tests']
Testability,"_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2157,test,tests,2157,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; lapack_armpl_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; openblas_lapack_info:; NOT AVAILABLE; openblas_clapack_info:; NOT AVAILABLE; flame_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; atlas_3_10_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; lapack_info:; libraries = ['lapack', 'lapack']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = f77; lapack_opt_info:; libraries = ['lapack', 'lapack', 'blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = c; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; include_dirs = ['/usr/local/include', '/usr/include']; Supported SIMD extensions in this NumPy install:; baseline = SSE,SSE2,SSE3; found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2; not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL; ```; So numpy itself marks openblas_info as NOT AVAILABLE (evidently using a build-time test, not runtime, which arguably is a pity). It seems to me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:3439,test,test,3439,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['test'],['test']
Testability,`2 * Options.rtol` could be good enough for most the tests.; ; But expecting `Options.rtol` to be a good estimation of the numerical error in all case is risky. There is no promise by the solver that the result is within rtol of the analytical solution and it ignore error propagation in the post-treatment steps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196:53,test,tests,53,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196,1,['test'],['tests']
Testability,"`; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eige",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:1081,log,logger,1081,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['log'],['logger']
Testability,"`Qobj` has some fast-path constructors that are basically the solvers saying ""this data is valid, just trust me"", causing it to skip sanity checks. There are a few slow points that can be skipped: copying unnecessary data, parsing/verifying the `dims` data, and determining the properties (`isherm`, `iscp`, etc). All of those add on very non-negligible construction time, but at most points in QuTiP we _know_ the values when passing them. Old-style code uses these magic ""fast-path"" constructors, but the new 5.0 branch gets rid of all of them - you can achieve much more, and more explicitly, by using the kwargs, and function-specific logic stays at the call location, rather than being bolted into `Qobj`. We still want to maintain passing `isherm` to `Qobj` when we know it for speed reasons, especially when we know the most common use of the `Qobj` created by `mesolve` is for finding expectation values. However, you can set the value based on the hermicity of the input density matrix; if you're passed a true density matrix, you'll always get a Hermitian matrix out, whereas you'll generally be in an unknown state if you're not. The test can be; ```python; def mesolve(H, rho0, tlist, ...):; hermicity = rho0.isherm or None; ...; for t in tlist:; output.states.append(Qobj(fdata, dims=dims, isherm=hermicity)); ```; which forces `isherm=True` if that's _known_, but leaves it unset if not. This is approximately how we handle things in 5.0, which is in part why we have huge reductions in `Qobj` construction time in the new version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796689049:639,log,logic,639,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796689049,2,"['log', 'test']","['logic', 'test']"
Testability,`TestPulseOptim` fails,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1134:1,Test,TestPulseOptim,1,https://qutip.org,https://github.com/qutip/qutip/issues/1134,1,['Test'],['TestPulseOptim']
Testability,"`__array_wrap__` for coercion back (something that isn't currently implemented). At the time and up to inclusively 1.19, the presence of `__array__` caused otherwise scalar types passed alone to `np.array` to return the output of `input.__array__(*args, **kwargs)`, instead of becoming a 0D numpy array (like `np.array(1)` does). Taken purely alone, that could make sense as something we implement. However, this also implies that `Qobj` should fulfil the numpy ufunc interface; `Qobj` would be a container for data such that operations like `np.sin` is the elementwise sin, or (most notably) `np.multiply` is the *elementwise* multiplication. Our `Qobj` _does not_ fulfil the ufunc interface:; 1. elementwise operations don't make sense on quantum objects, which are arrays only as an implementation detail - the `Qobj` class is meant to represent an abstract linear algebra object, not specifically a matrix.; 2. we don't honour the `shape` guarantees of numpy as we test compatibility based on `dims`, which are not 1D (superoperators) so cannot follow numpy's broadcasting rules; 3. we treat multiplication as matrix multiplication, violating how `np.multiply` should behave. My main concern is point 1: I don't think that `Qobj` provides a similar object to an `ndarray` at all. Right now we _do_ use matrices underneath, but proposed additions to QuTiP such as symbolic `Qobj` and adaptive Hilbert spaces are compatible with the idea of ""abstract linear algebra objects"", but do not necessarily have a backing array. Point 2 is mostly an extension of that: I'm not sure there is a sensible way for numpy's broadcasting rules to be applied to quantum objects as they exist now, even without extensions. ## More control over dispatch: `__array_ufunc__` and `__array_function__`. See [NEP 13](https://numpy.org/neps/nep-0013-ufunc-overrides.html), [NEP 18](https://numpy.org/neps/nep-0018-array-function-protocol.html) and [NEP 35](https://numpy.org/neps/nep-0035-array-creation-dispatch-with-arra",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:4420,test,test,4420,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['test'],['test']
Testability,"``; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:1166,log,logger,1166,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['log'],['logger']
Testability,"``` bash; correlation: comparing TLS emission correlations (str-list td format) ... capi_return is NULL; Call-back cb_f_in_zvode__user__routines failed.; ERROR; ```. It seems that we are passing an extra arg to the td cython ode function, but this error does not occur when running the tests once, only twice in a row. ``` bash; Traceback (most recent call last):; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/tests/test_correlation.py"", line 278, in test_str_list_td_corr; sm.dag(), sm.dag() * sm, sm, args=args); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 392, in correlation_3op_2t; solver=solver, args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1086, in _correlation_2t; args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1135, in _correlation_me_2t; ).expect[0]; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 280, in mesolve; progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 618, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 867, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/opt/local/Librar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:286,test,tests,286,https://qutip.org,https://github.com/qutip/qutip/issues/269,3,['test'],"['test', 'tests']"
Testability,"```; File ""/home/alex/GitHub/qutip/qutip/floquet.py"", line 989, in fmmesolve; R = floquet_master_equation_tensor(Amat, f_energies); File ""/home/alex/GitHub/qutip/qutip/floquet.py"", line 724, in floquet_master_equation_tensor; R.data = R.data.tolil(); File ""/home/alex/GitHub/qutip/qutip/qobj.py"", line 328, in set_data; raise TypeError('Qobj data must be in fast_csr format.'); TypeError: Qobj data must be in fast_csr format.; ```. tests should have caught this #624",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/625:433,test,tests,433,https://qutip.org,https://github.com/qutip/qutip/issues/625,1,['test'],['tests']
Testability,"`auto-tidyup` exist to remove 0s stored in sparse matrices. `auto-tidyup` is quite messy, rounding all values under 1e-12 to 0 per default after each matrix operation can only cause problems. . As for the benchmark, why ask for dense operations to add an extra step to increase their outputs error to the same level as sparse operations so their benchmark do not look to good in comparisons. I think it is fair that the sparse operation's timing include the time needed to manage it's structure. . For auto-differentiation, if operations included are done with `Qobj`, it would have to differentiate tidy-up steps after each operation. But since the tidy-up operation does not have a clean derivative (`out[out < 1e-12] = 0`) it will make the auto-differentiation very inefficient. I see `auto-tidyup` more as a necessary evil to keep sparse matrix efficient. I would argue that we should not have `auto-tidyup` in `Qobj` and have sparse matrix operation clean themselves instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826:205,benchmark,benchmark,205,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826,2,['benchmark'],['benchmark']
Testability,"`logm` still does not work, I am unable to figure out the reason.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2484#issuecomment-2214437849:1,log,logm,1,https://qutip.org,https://github.com/qutip/qutip/pull/2484#issuecomment-2214437849,1,['log'],['logm']
Testability,"`scipy` 1.5 has changed some of its private attributes for matrix multiplication (to a _much_ better name!), and so matrix-matrix multiplication is completely broken for us at the moment: see scipy/scipy@53fac7a. There's also been some changes to how Hermitian eigenvalues and vectors are calculated (which actually is good news for us in general), which may has a bit of a knock-on for some of the `zheevr` tests, which is going to be a bit of a nuisance to fix. To avoid polluting this PR with (any more) off-topic discussion, I've opened #1299. The new data layer types will fix the matrix multiplication issue permanently, because we'll not be duplicating/reusing large tracts of `scipy` private code - we have our own Cython versions that operate faster on more optimised types. In the meantime, #1298 is a patch to catch the renames.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649446743:408,test,tests,408,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649446743,1,['test'],['tests']
Testability,"`setup.py test` invokes test_td_formats.py, which generates rhs*.pyx files in the build subdir. `setup.py install` installs everything in the build subdir. So that includes the rhs*pyx test files. The test files get installed at the toplevel of the installation path, just above the qutip dir.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987:10,test,test,10,https://qutip.org,https://github.com/qutip/qutip/issues/987,3,['test'],['test']
Testability,"`setup.py` do not add the `-fopenmp` flag on linux. It still use the openmp version of the `CSR * vector` product but without any gain... Our tests only check that openmp does not break anything, not for speedup so it was broken for quite some time.; It should be is quick fix. But even when fixed the scaling is not great, I get at most a 2x.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671#issuecomment-948005544:142,test,tests,142,https://qutip.org,https://github.com/qutip/qutip/issues/1671#issuecomment-948005544,1,['test'],['tests']
Testability,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:59,test,test,59,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137,5,['test'],"['test', 'tests']"
Testability,"a, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; __________________________________________ ERROR collecting qutip/tests/solver/test_mesolve.py ___________________________________________; qutip/tests/solver/test_mesolve.py:28: in <module>; class TestMESolveDecay:; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =============================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:4280,Test,TestMESolveDecay,4280,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['Test'],['TestMESolveDecay']
Testability,"ached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4""><code>147c851</code></a> v2.31.0</li>; <li><a href=""https://github.com/psf/requests/commit/74ea7cf7a6a27",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:4444,test,testing,4444,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['test'],['testing']
Testability,acosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_tensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brtools.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spinchain.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spmath.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mkl.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qft.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubits.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_me.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_optpulseprocessor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qpt.py -> build/lib.macos,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:12064,test,tests,12064,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,acosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/_locales.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_defchararray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_conversion_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/dis,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19166,test,tests,19166,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,acosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/cpuinfo.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19645,test,tests,19645,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,acosx-11.0-arm64-3.9/numpy/f2py; copying numpy/f2py/f2py_testing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py; copying numpy/f2py/use_rules.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py; copying numpy/f2py/auxfuncs.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py; copying numpy/f2py/__main__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py; creating build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_mixed.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_logical.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_assumed_shape.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_common.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_kind.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_array_from_pyobj.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_real.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_size.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> bu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:30831,test,tests,30831,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,add isunitary attribute for checking if qobj is a unitary operator:; unitary checking func and property funcs added; initialisation of isunitary; clear flag on operations that risk unitarity; qobj unitarity testing added; preset isunitary for qeye,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/817:207,test,testing,207,https://qutip.org,https://github.com/qutip/qutip/pull/817,1,['test'],['testing']
Testability,"added an argument to take dpsi (dots per inch) in Bloch.save(), whose usage would be as follows :; ``` b = Bloch(); b.save(""test"", dpsi = 1000); ```; Only modified bloch.py, hence merge ready",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1104:124,test,test,124,https://qutip.org,https://github.com/qutip/qutip/pull/1104,1,['test'],['test']
Testability,"added the change log, sorry for missing it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2103#issuecomment-1453007487:17,log,log,17,https://qutip.org,https://github.com/qutip/qutip/pull/2103#issuecomment-1453007487,1,['log'],['log']
Testability,"admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Tra",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1399,log,logger,1399,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['log'],['logger']
Testability,"age/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolv",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4446,Test,TestKrylovSolve,4446,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"ages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 398, in testMESimpleTDDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs0; # ; ## ERROR: mesolve: constant decay as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 349, in testMESimpleConstDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:15419,test,tests,15419,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['test'],['tests']
Testability,"ages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Segmentation fault: 11; ```; and with nosetests; ```; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 34",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:29380,test,test,29380,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['test']
Testability,"ages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your te",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:8627,test,test,8627,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochasti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21190,test,test,21190,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28402,test,test,28402,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"al/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4636,Test,TestKrylovSolve,4636,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,all test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Q,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2433,Test,TestMESolveSuperInit,2433,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,2,"['Test', 'test']","['TestMESolveSuperInit', 'testSuperJC']"
Testability,"all_args - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147102.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_with_state - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_76649686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_pickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147142.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_98549686147162.pyx; =====================================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:25729,test,tests,25729,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:4710,test,testing,4710,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"ammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.01597663; E Max relative difference: 11.81715334; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.017329, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit object at 0x12c081640>, method = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:2977,test,tests,2977,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['test'],['tests']
Testability,ams.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:38396,test,tests,38396,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,"and compatible with previous syntax. **Description**; Operating System: MacOS Big Sur 11.0.1; CPU: Apple M1. The syntax of output of command ; ```; sysctl -n machdep.cpu.brand_string; ``` ; has been changed. The output for previous MacOS: ; ```; $ sysctl -n machdep.cpu.brand_string; Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n; ```. The updated output; ```; $ sysctl -n machdep.cpu.brand_string; VirtualApple @ 2.50GHz processor\n; ```. Therefore, the function [`_mac_hardware_info`](https://github.com/qutip/qutip/blob/cb201690a2ca3a9c904bc642ef6600f2ef54f763/qutip/hardware_info.py#L48) of file `hardware_info.py` cannot parse the frequency of CPU correctly. The popped error information is attached below. ```; ValueError: could not convert string to float: ' 2.50GHz proces'; ```. This pull request fix this problem and compatible with both syntax of hardware information. . Since the unit tests of file or function are not found, I do not add test files for this change. I attach python code below to prove the correctness of the implementation. ```python; # before change; old_str = 'Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n'; new_str = 'VirtualApple @ 2.50GHz processor\n'; # parse old hardware message; int(float(old_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); # parse new hardware message; int(float(new_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); ```. **Related issues or PRs**; No related issue. **Changelog**; Fixed error parsing hardware information for MacOS Big Sur (Apple M1 chip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401:894,test,tests,894,https://qutip.org,https://github.com/qutip/qutip/pull/1401,2,['test'],"['test', 'tests']"
Testability,"ank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Importing qutip takes a long time. On a Windows system import takes almost 4 seconds. The import time can be analyzed with [importtime-waterfall](https://github.com/asottile/importtime-waterfall). A large part of the time is spend in importing external packages (scipy, IPython, matplotilib), but also qutip itself adds to the import time. This PR reduces the import time by setting the logger names in 4 submodules explicitly. ; Benchmark:; ```; python -c ""import time; import matplotlib; import IPython; import scipy; t0=time.time(); import qutip; dt=time.time()-t0; print(f'{dt*1e3:.2f} ms')""; ``` ; Results:; ```; dev.major: 1996.52 ms; PR: 1510.06 ms; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1980:1750,log,logger,1750,https://qutip.org,https://github.com/qutip/qutip/pull/1980,2,"['Benchmark', 'log']","['Benchmark', 'logger']"
Testability,annot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Pyt,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29980,test,tests,29980,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"annot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERR",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6541,test,testing,6541,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"anshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:1163,test,tests,1163,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; creating build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_methods.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarmath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_item_selection.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_machar.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_unicode.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarbuffer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexerrors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_print.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_errstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_records.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarinherit.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath.py -> build/lib.macos,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:16586,test,tests,16586,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"are not engaged with the project, do not reply to communications or attend board meetings. . **<span style=""text-decoration:underline;"">Decisions</span>**; Each board member has a vote in decisions, which are taken by a majority vote. . **<span style=""text-decoration:underline;"">Communications</span>**; The board agrees to meet **[once a year]** (also via online meeting). The board is informed at least **[once a year]** by the Admin Team on QuTiP development and other activities (via email in the qutip-board channel). . ### 4. Non-profit Support; Since 2018, QuTiP is an affiliated project of [NumFOCUS](https://numfocus.org/), a 501(c)(3) nonprofit organization registered in the USA. The mission of NumFOCUS is to promote open practices in research, data, and scientific computing **[Unitary Fund](http://unitary.fund/)** pledges to support the QuTiP project as a fiscally sponsored project. QuTiP remains an affiliated project of NumFOCUS. [Unitary Fund](http://unitary.fund/) is a 501(c)(3) nonprofit organization registered in the USA working to create a quantum technology ecosystem that benefits the most people. Due to its role in the quantum software community, Unitary Fund pledges to: . * Promote the knowledge of QuTiP in the quantum software and sci-dev community.; * Provide scientific and technical software advice upon request of the Admin team and Board. ; * Provide logistic and financial support for code projects and meetings (subject to request by the QuTiP admins and availability of Unitary Fund funds). ; * Accept financial support on behalf of the QuTiP project. These funds will be allocated to and managed by the QuTiP admins on board’s approval in coordination with Unitary Fund. ; * Provide access to expert legal advice (subject to request by the QuTiP board or admin team and availability of Unitary Fund funds) through its legal counsel, useful for matters related to licensing, copyright, collaborations with industry and to protect the QuTiP brand and project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:13650,log,logistic,13650,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['log'],['logistic']
Testability,arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_datetime.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test__exceptions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_extint128.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/_locales.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_defchararray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_conversion_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:18401,test,tests,18401,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_interaction.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_masked_matrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/_polybase.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/__init__.py -> ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:40417,test,tests,40417,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests;,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44775,test,testing,44775,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['testing']
Testability,ary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30061,test,tests,30061,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,ary/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py;,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30695,test,tests,30695,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"ary/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:18609,test,test,18609,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,arying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASS,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6606,test,tests,6606,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:14594,test,testing,14594,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"at of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],; [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],; [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]); ```; we get; ```; qutip: [9, 6, 7, 1, 4, 5, 2, 0, 3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converte",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1399,assert,assert,1399,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['assert'],['assert']
Testability,"at this is probably a subtle point which the user might overlook but using `np.dot(spre(Q).full(), rho)` take ns while the more readable `spre(Q)*vec` takes us. In most cases, we get away with this since we always pack the elements in `spre` into a sparse Liouvillian and invoke `cy_ode_rhs` but if there was some way to modify the `.__mul__` method of superoperators to use `np.dot`, it might be helpful to get up to 1000x speed improvement. This comes of use when the RHS is calculated on the fly by the action of these superoperators (eg., the Heom method). The comparisons are below. I pre-compute all the *operators* and *vectors* before running `%timeit` and these are the timing for the matrix-vector multiplication only. @nwlambert @ajgpitch Should we do something about this or mention it somewhere if it is important?. ```; np.dot(spre(Q).full(), vec); 789 ns ± 6.68 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each). spre(Q).data * vec; 5.66 µs ± 57.8 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each). spre(Q)*vec; 7.35 µs ± 213 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each). spre(Q)*operator_to_vector(rho); 62.5 µs ± 1.73 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each); ```. The code to reproduce this:; ```; from qutip.superoperator import spre, spost, operator_to_vector; from qutip import sigmax, basis; import numpy as np; from numpy.testing import assert_array_equal. Q = sigmax(); rho = basis(2,0)*basis(2,0).dag() \; + 0.25*basis(2,1)*basis(2,1).dag() \; - 0.1*basis(2,0)*basis(2,1).dag() . spreQ = spre(Q). numpy_vec = np.array(rho.data.todense().ravel(""F""), dtype=np.complex); vec = numpy_vec.T; qutip_vec = operator_to_vector(rho). spreQ_full = spreQ.full(); spreQ_data = spreQ.data. print(""np.dot(spre(Q).full(), vec)""); %timeit(np.dot(spreQ_full, vec)). print(""\nspre(Q).data * vec""); %timeit(spreQ_data*vec). print(""\nspre(Q)*vec""); %timeit(spreQ*vec). print(""\nspre(Q)*operator_to_vector(rho)""); %timeit(spreQ*qutip_vec); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831:1623,test,testing,1623,https://qutip.org,https://github.com/qutip/qutip/issues/831,1,['test'],['testing']
Testability,"at. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:2452,test,tested,2452,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['test'],['tested']
Testability,"ata_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -1]]); - expected = expected/np.sqrt(8); + expected /=np.sqrt(8); np.testing.assert_allclose(test, expected); ; def test_cyclic_permutation(self):; diff --git a/qutip/tests/test_graph.py b/qutip/tests/test_graph.py; index 23fa6f22..f29c7379 100644; --- a/qutip/tests/test_graph.py; +++ b/qutip/tests/test_graph.py; @@ -70,7 +70,7 @@ def test_graph_rcm_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=complex); with pytest.deprecated_call():; perm = reverse_cuthill_mckee(M, 1); @@ -120,7 +120,7 @@ def test_graph_weighted_matching():; A.data = np.ones(a_len); d = np.arange(0, 25) + 2; B = sp.diags(d, offsets=0, format='csc'); - A = A+B; + A += B; perm = np.random.permutation(25); perm2 = np.random.permutation(25); B = sp_permute(A, perm, perm2); diff --git a/qutip/tests/test_mcsolve.py b/qutip/tests/test_mcsolve.py; index f8567d0e..fe3f264c 100644; --- a/qutip/tests/test_mcsolve.py; +++ b/qutip/tests/test_mcsolve.py; @@ -173,7 +173,7 @@ def test_expectation_dtype(options):; a = qutip.tensor(qutip.destroy(f",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:24469,test,testing,24469,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['testing']
Testability,"ate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7600,benchmark,benchmarking,7600,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['benchmark'],['benchmarking']
Testability,ating build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_direct.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44439,test,tests,44439,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"ave the correct structures.""""""; if not isinstance(H, Qobj):; raise TypeError(; ""krylovsolve currently supports Hamiltonian Qobj operators only""; ); ; if not H.isherm:; raise TypeError(""Hamiltonian 'H' must be hermician.""); ; if not isinstance(psi0, Qobj):; raise TypeError(""'psi0' must be a Qobj.""); ; if not psi0.isket:; raise TypeError(""Initial state must be a ket Qobj.""); ; if not ((len(H.shape) == 2) and (H.shape[0] == H.shape[1])):; raise ValueError(""the Hamiltonian must be 2-dimensional square Qobj.""); ; if not (psi0.dims[0] == H.dims[0]):; > raise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. ―――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[magnetization subspace state XXZ model] ――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa1095afd0>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 1.0, 1, 0). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = np.linspace(0, 20, 200); > self.simple_check_states_e_ops(; H, psi0, tlist, krylov_dim=krylov_dim, square_hamiltonian=False; ). stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:457: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/usr/local/lib/python3.9/site-packages/quti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:7994,test,tests,7994,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,b Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations m,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1751,log,logger,1751,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['log'],['logger']
Testability,b.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qft.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubits.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_me.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_optpulseprocessor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qpt.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_enr_state_operator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubitcircuit.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_states.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:12753,test,tests,12753,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,b.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14670,test,tests,14670,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,b.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_states.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14243,test,tests,14243,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,b.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_mixed.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_logical.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_assumed_shape.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_common.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_kind.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_array_from_pyobj.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_real.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_size.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:31201,test,tests,31201,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,b.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_logical.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_assumed_shape.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_common.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_kind.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_array_from_pyobj.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_real.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_size.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:31294,test,tests,31294,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"b/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tes",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:7717,test,test,7717,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"b/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. ―――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[magnetization subspace state XXZ model] ――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa1095afd0>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 1.0, 1, 0). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = np.linspace(0, 20, 200); > self.simple_check_states_e_ops(; H, psi0, tlist, krylov_dim=krylov_dim, square_hamiltonian=False; ). stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:457: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:217: in simple_check_states_e_ops; output = krylovsolve(; stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:86: in krylovsolve; _check_inputs(H, psi0, krylov_dim); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. H = Quantum object: dims = [[2, 2, 2, 2], [2, 2, 2, 2]], shape = (16, 16), type = oper, isherm = True; Qobj data =; [[ 4. 0...0. 0. 0. 0. 0. -1. 0. 0. 0. 0. -1. -2. 0.]; [ 0. 0. 0. -1. 0. 0. 0. 0. 0. -1. 0. 0. -1. 0. 0. -4.]]; psi0 = Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:8723,test,tests,8723,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,b/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; creating build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_twodim_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_index_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:35289,test,tests,35289,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"base=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:3992,test,tests,3992,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eige,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1666,log,logger,1666,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['log'],['logger']
Testability,"bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, ru",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:4539,test,tests,4539,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11715,test,tests,11715,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"brary/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26714,test,test,26714,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"btw when I run the tests in Windows, using:; import nose; nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v']). they restart themselves when there is an error. And I can't close the cmd window (even using the task manager)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708728:19,test,tests,19,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708728,2,['test'],['tests']
Testability,build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14579,test,tests,14579,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14410,test,tests,14410,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_interpolate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_control_pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; creating build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy;,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:15955,test,tests,15955,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_interpolate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_control_pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; creating build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/bloch_redfield.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/bench_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; package init file 'qutip/cy/openmp/src/__init__.py' not found (or not a regular file); running egg_info; writing qutip.egg-info/PKG-INFO; writing dependency_links to qutip.egg-info/depend,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:16646,test,tests,16646,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_i,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:39544,test,tests,39544,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:45874,test,testing,45874,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,['test'],"['testing', 'tests']"
Testability,"c_ops td (np-list td format) ... ok; correlation: comparing 3LS emission corr., c_ops td (fn-list td format) ... ok; correlation: comparing TLS emission corr. (str-list td format) ... ok; correlation: comparing TLS emission corr. (np-list td format) ... ok; correlation: comparing TLS emission corr. (fn-list td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Cython structs : COO to CSR ... ok; Cython structs : sort CSR indices inplace ... ok; Cython structs : COO to CSR inplace (no sort) ... ok; Cython structs : COO to CSR inplace (sorted) ... ok; Cython structs : CSR to COO ... ok; qutip.tests.test_dimensions.test_flatten ... ok; qutip.tests.test_dimensions.test_enumerate_flat ... ok; qutip.tests.test_dimensions.test_deep_remove ... ok; qutip.tests.test_dimensions.test_unflatten ... ok; qutip.tests.test_dimensions.test_dims_idxs_to_tensor_idxs ... ok; qutip.tests.test_dimensions.test_dims_to_tensor_shape ... ok; qutip.tests.test_dimensions.test_type_from_dims ... ok; qutip.tests.test_dimensions.test_collapse ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Excitation-number-restricted state space: thermal density operator (II) ... ok; Entropy: von-Neumann entropy ... ok; Entropy: Linear entropy ... ok; Entropy: Concurrence ... ok; Entropy: Mutual information ... ok; Entropy: Conditional entropy ... ok; Entropy: Entangli",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:6671,test,tests,6671,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['test'],['tests']
Testability,"ced from <a href=""https://github.com/kjd/idna/releases"">idna's releases</a>.</em></p>; <blockquote>; <h2>v3.7</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1139,test,tests,1139,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['test'],['tests']
Testability,"ception: Coul...; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; = 23 failed, 3077 passed, 101 skipped, 68 deselected, 1387 warnings in 1058.36s (0:17:38) =; ```. #1084 notes that a major overhaul of qobjevo has been done for qutip v5. Perhaps the issue is fixed. On the hand it could be an issue with python 3.12 that still needs to be addressed in v5, so I though I should mention in. ### Code to Reproduce the Bug. ```shell; python3.12 -c ""import qutip.testing; qutip.testing.run(pytest_options=[['-k', 'mesolve_td or test_varying_coefficient_hamiltonian_2ls or testMEDecayAsStrList or test_array_str or test_qobjevo or test_04 or test_06_4_compare_state_and_unitary_list_str or testPropHOStrTd']])""; ```. ### Code Output. ```shell; $ python3.12 -c ""import qutip.testing; qutip.testing.run(pytest_options=[['-k', 'mesolve_td or test_varying_coefficient_hamiltonian_2ls or testMEDecayAsStrList or test_array_str or test_qobjevo or test_04 or test_06_4_compare_state_and_unitary_list_str or testPropHOStrTd']])"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.3; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.36; Matplotlib Version: 3.6.3; Python Version: 3.12.1; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; I",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:2933,test,testing,2933,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['testing']
Testability,"cf04a2a547c57""><code>15ea1ed</code></a> release 8.10.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:1245,mock,mock,1245,https://qutip.org,https://github.com/qutip/qutip/pull/2085,2,"['mock', 'test']","['mock', 'test']"
Testability,"check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = np.linspace(0, 20, 200); > self.simple_check_states_e_ops(; H, psi0, tlist, krylov_dim=krylov_dim, square_hamiltonian=False; ). stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:457: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4950,Test,TestKrylovSolve,4950,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"chedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:3904,Test,TestCircuitProcessor,3904,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,"['Test', 'test']","['TestCircuitProcessor', 'testPlot']"
Testability,cial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:38002,test,tests,38002,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"cially with quite how many names `qutip` exports. The `from qutip.very.deep.nested.module import name` is certainly good, and I think I've generally left those. I think I started converting in a few places because there were things like `from qutip import Cubic_Spline` and `from scipy.interpolate import CubicSpline`, and then the test was unreadable as to which was which. Having `qutip.Cubic_Spline` and `scipy.interpolate.CubicSpline` is unambiguous. The smaller cases like `from qutip import Qobj` are highly unlikely to have any conflicts, but in general I just went for consistency. That all said, there's certainly arguments both ways, e.g. explicit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1172,Test,Test,1172,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,1,['Test'],['Test']
Testability,"cient_hamiltonian_2ls[numpy] - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_26849686147052.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_60949686147062.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_57149686147072.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff - Exception: Could not convert string to importable function, tmpfile:td_Qobj_single_str38349686147072.pyx; FAILED qutip/tests/test_openmp.py::test_openmp_mesolve_td - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_00149686147082.pyx; FAILED qutip/tests/test_propagator.py::testPropHOStrTd - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_91749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call_args - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147102.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:24381,test,testPropHOStrTd,24381,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['testPropHOStrTd']
Testability,"ck (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 144, in test_sparse_bandwidth; out2=sparse_bandwidth(B); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 603, in sparse_bandwidth; return _sparse_bandwidth(A.indices, A.indptr, nrows);",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:1242,test,tests,1242,https://qutip.org,https://github.com/qutip/qutip/issues/73,1,['test'],['tests']
Testability,"ckages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6953,test,test,6953,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ckages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11267,test,test,11267,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"code'.; Using a temporary file starting by 'basefilename'.; """"""; filename = (basefilename + str(hash(code))[1:4] +; str(os.getpid()) + time.strftime(""%M%S"")); tries = 0; import_list = []; ext = "".pyx"" if cythonfile else "".py""; e = ImportError() # used if import_list remains empty; if os.getcwd() not in sys.path:; sys.path.insert(0, os.getcwd()); while not import_list and tries < 3:; try_file = filename + str(tries); file_ = open(try_file+ext, ""w""); file_.writelines(code); file_.close(); if not os.access(try_file, os.R_OK):; time.sleep(0.1); codeString = str(""from "" + try_file +; "" import "" + obj_name + '\n' +; ""import_list.append("" + obj_name + "")""); try:; import_code = compile(codeString, '<string>', 'exec'); > exec(import_code, locals()); E ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_46049686147042'. /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:45: ModuleNotFoundError. The above exception was the direct cause of the following exception:. self = <qutip.tests.test_correlation.TestTimeDependence object at 0x7fe9f0e896d0>, dependence_2ls = 'exp(-(t-t_off)**2 / (2 * tp*tp))'. def test_varying_coefficient_hamiltonian_2ls(self, dependence_2ls):; H = [[_2ls_args['H0'], dependence_2ls]]; > assert abs(_2ls_g2_0(H, []) - 0.575) < 1e-2. /usr/lib/python3/dist-packages/qutip/tests/test_correlation.py:167: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /usr/lib/python3/dist-packages/qutip/tests/test_correlation.py:135: in _2ls_g2_0; correlation = qutip.correlation_3op_2t(H, start, times, times, [sp],; /usr/lib/python3/dist-packages/qutip/correlation.py:324: in correlation_3op_2t; return _correlation_2t(H, state0, tlist, taulist,; /usr/lib/python3/dist-packages/qutip/correlation.py:1030: in _correlation_2t; return _c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:13896,test,tests,13896,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"code'.; Using a temporary file starting by 'basefilename'.; """"""; filename = (basefilename + str(hash(code))[1:4] +; str(os.getpid()) + time.strftime(""%M%S"")); tries = 0; import_list = []; ext = "".pyx"" if cythonfile else "".py""; e = ImportError() # used if import_list remains empty; if os.getcwd() not in sys.path:; sys.path.insert(0, os.getcwd()); while not import_list and tries < 3:; try_file = filename + str(tries); file_ = open(try_file+ext, ""w""); file_.writelines(code); file_.close(); if not os.access(try_file, os.R_OK):; time.sleep(0.1); codeString = str(""from "" + try_file +; "" import "" + obj_name + '\n' +; ""import_list.append("" + obj_name + "")""); try:; import_code = compile(codeString, '<string>', 'exec'); > exec(import_code, locals()); E ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_98549686147162'. /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:45: ModuleNotFoundError. The above exception was the direct cause of the following exception:. self = <qutip.tests.test_sesolve.TestSESolve object at 0x7fe9e7e576e0>. def test_06_4_compare_state_and_unitary_list_str(self):; ""sesolve: compare state and unitary operator evo - list str td""; eps = 0.2 * 2*np.pi; delta = 1.0 * 2*np.pi # atom frequency; w0 = 0.5*eps; w1 = 0.5*delta; H0 = w0*sigmaz(); H1 = w1*sigmax(); w_a = w0; ; td_args = {'w_a':w_a}; H = [H0, [H1, 'cos(w_a*t)']]; ; psi0 = basis(2, 0) # initial state; tlist = np.linspace(0, 20, 200); ; > self.compare_evolution(H, psi0, tlist,; normalize=False, td_args=td_args, tol=5e-5). /usr/lib/python3/dist-packages/qutip/tests/test_sesolve.py:322: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /usr/lib/python3/dist-packages/qutip/tests/test_sesolve.py:223: in compare_evolution; out_s = sesolve(H, psi0, tlist, [si",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:19173,test,tests,19173,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:4339,test,tests,4339,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -1]]); - expected = expected/np.sqrt(8); + expected /=np.sqrt(8); np.testing.assert_allclose(test, expected); ; def test_cyclic_permutation(self):; diff --git a/qutip/tests/test_graph.py b/qutip/tests/test_graph.py; index 23fa6f22..f29c7379 100644; --- a/qutip/tests/test_graph.py; +++ b/qutip/tests/test_graph.py; @@ -70,7 +70,7 @@ def test_graph_rcm_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=complex); with pytest.deprecated_call():; perm = reverse_cuthill_mckee(M, 1); @@ -120,7 +120,7 @@ def test_graph_weighted_matching():; A.data = np.ones(a_len); d = np.arange(0, 25) + 2; B = sp.diags(d, offsets=0, format='csc'); - A = A+B; + A += B; perm = np.random.permutation(25); perm2 = np.random.permutation(25); B = sp_permute(A, perm, perm2); diff --git a/qutip/tests/test_mcsolve.py b/qutip/tests/test_mcsolve.py; index f8567d0e..fe3f264c 100644; --- a/qutip/tests/test_mcsolve.py; +++ b/qutip/tests/test_mcsolve.py; @@ -173,7 +173,7 @@ def test_expectation_dtype(options):; a = qutip.tensor(qutip.destroy(focks), qutip.qeye(2)); sm = qutip.tensor(qutip.qeye(focks), qutip.sigmam()); H = 1j*a.dag()*sm + a; - H = H + H.dag(); + H +=",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:24595,test,tests,24595,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,copying numpy/core/_type_aliases.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/cversions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/code_generators/generate_numpy_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; creating build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_methods.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarmath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_item_selection.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_machar.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_unicode.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarbuffer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexerrors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_print.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_errstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_records.py -> build/lib.m,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:16292,test,tests,16292,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; creating build/lib.macosx-11.0-a,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:32094,test,tests,32094,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,corr_mat casting made explicit; A cast from object to complex that was acceptable in numpy 1.9; was failing in numpy 1.10; This was causing an error in #379 Travis tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/380:164,test,tests,164,https://qutip.org,https://github.com/qutip/qutip/pull/380,1,['test'],['tests']
Testability,correlation and mcsolve tests error without cython,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/449:24,test,tests,24,https://qutip.org,https://github.com/qutip/qutip/issues/449,1,['test'],['tests']
Testability,cosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qft.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubits.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_me.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_optpulseprocessor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qpt.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_enr_state_operator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubitcircuit.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_states.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.m,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:13023,test,tests,13023,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,cosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_conversion_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/di,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19353,test,tests,19353,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,cosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/cpuinfo.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/msvc9compiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19738,test,tests,19738,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,cosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_printing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_classes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/_pickle.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; creating build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_direct.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstat,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:43147,test,tests,43147,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,"ct? Dictionary support was not tested and supported only for some solver for a long time. It ; > would be strange to have it become the default. Well, this is v5 -- we are trying to make things nicer. The issue with lists of e_ops is that often the e_ops have no sensible ordering. E.g. if the e_ops are, say, the number operator and projectors on to two different bases of interest then `[qutip.num(N), proj1, proj2]` are later accessed as `.expect[0]`, `.expect[1]` and `.expect[2]` which are then unreadable and fairly arbitrary and unmemorable numbers. Having `.expect[""num""]`, `.expect[""proj1""]` and `.expect[""proj2""]` is much more readable and will result in fewer mistakes. I *really* like the dict interface because it gives this readability to results. I'm happy to accept that others may prefer lists, but providing multiple interfaces creates a problem for any code working with results. So it is a bit of tricky question to resolve. > For MC result, it has little impact, dict are a little more annoying to work with compared to list, but it need the expect as ndarray; not list or dict anyway. The MC result classes already have to work around these things in awkward ways, and probably need to be a lot more careful -- e.g. e_ops functions can return strange things like Qobjs or perhaps even stranger things like strings or dicts which can't be averaged over. > There are a some differences for the user. Code using `np.array(result.expect)` or `for expect in result.expect:` will break. Agreed, although unless `result.expect` contains a uniform set of things, this are probably not sensible things to be doing. I have some other ideas but I think they make more of a mess -- e.g. keep `.expect` a list but provide `.expect_d` which is a dict. If one needs to write v4 compatible code one can always pass a list of e_ops and then work with `.expect` a bit carefully (i.e. as a dict). Thoughts?. I have added tests now, so it's just the `.expect` issue to resolve for this PR, I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141326041:1959,test,tests,1959,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141326041,1,['test'],['tests']
Testability,"cted, 13 warnings in 1.17s ================================================; ```. (Note that the second failing test only fails because without cython, there is no `cimport`.). ---. If we install filelock, everything works as expected:. ```shell; $ conda install filelock; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	> [1/1] Cythonizing qtcoeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [ 81%]; .......................................s [100%]. ==================================================== 216 passed, 1 skipped, 5700 deselected, 14 warnings in 59.58s ====================================================; ```. ---. I suggest documenting this dependence in the documentation. Regarding the tests, the concerned tests should probably be skipped if there is a dependency missing? (Just like they already are if cython is missing.) ; In case they are not skipped, the reason for the failure should somehow become more clear. Regarding the actual behavior, qutip could print a warning if `cython` is installed and `filelock` is not, but I am not sure whether that would be a good idea. ---. For completeness, my `qutip.about()` output:. ```; QuTiP Version: 5.0.0.dev0+7892453;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:8461,test,tests,8461,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['test'],['tests']
Testability,"cuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5067,test,tests,5067,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,cvxpy Variable and Parameter dims passed as tuple; cvxpy and its depends only installed in tests for NOMKL builds; Extra test added for NOMKL with OPENMP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873:91,test,tests,91,https://qutip.org,https://github.com/qutip/qutip/pull/873,2,['test'],"['test', 'tests']"
Testability,"d array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.; * [x] Swap illinois algorithm with a root finder from scipy. --> **Now using <code>scipy.optimize.root_finder</code>**.; * [x] <code>n_iterations</code> become <code>delta_t</code> when <code>optimizer</code> is called. It does not seems to be an integer so isn't <code>delta_t</code> a better name here? --> **Renamed to <code>delta_t</code>.**; * [x] <code>bound_function</code> seems very generic. Same with <code>optimizer</code>. --> **Renamed to <code>_lanczos_error_equation_to_optimize_delta_t</code> and <code>_optimize_lanczos_timestep_size</code>.**; * [x] numpy's array have a <code>dot</code> method that act the same a sparse array's one. This is not needed.; * [x] The <code>dims</code> of the output are not kept at <code>evolved_states = map(Qobj, evolved_states[1:-1]</co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1784,Test,Testing,1784,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['Test'],['Testing']
Testability,d/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/transfertensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/heom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; creating build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spmv.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; creating build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_tensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brtools.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spinchain.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spmath.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mkl.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:11363,test,tests,11363,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,d/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14926,test,tests,14926,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,d/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_ufunc_config.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_exceptions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_type_aliases.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/cversions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/code_generators/generate_numpy_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; creating build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_methods.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarmath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_item_selection.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_machar.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_unicode.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarbuffer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexerrors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_print.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_deprecations.py -> buil,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:16004,test,tests,16004,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,d/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:37453,test,tests,37453,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,d/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; creating build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_twodim_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_index_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:35852,test,tests,35852,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,d/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_printing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_classes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/_pickle.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; creating build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying num,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:42506,test,tests,42506,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,d/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler using new_build_clib; building 'npymath' library; compiling C sources; C compiler: clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9; creating build/temp.macosx-11.0-arm64-3.9/numpy; creating build/temp.macosx-11.0-arm64-3.9/numpy/core; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/npymath; creating build/temp.macosx-11.0-arm64-3.9/build; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath; compile options: '-Ibuild/src.macosx-11.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:46919,test,tests,46919,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,"d=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983""><code>bce1746</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1""><code>7277d80</code></a> update pre-commit hooks</li>; <li><a href=""https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14""><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=""https://redirect.github.com/pallets/jinja/issues/1918"">#1918</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1807,test,test,1807,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['test'],['test']
Testability,"d_col)),; shape=(nds**2, nds**2),; dtype=np.complex128); ```; and recompile. If you want to make a PR of something similar against QuTiP, I'll accept it. I would actually file this against `scipy.sparse` - I think our usage is completely in line with the contract of `scipy.sparse.csr_matrix` and they've got a bug in their dtype handling. You currently can't construct a CSR matrix using the COO triplet format for complex data, unless the dtype is made explicit _somewhere_, but the constructor is meant to correctly infer a suitable dtype if one is not passed. Basic Scipy reproducer to illustrate the problem:; ```python; >>> import scipy.sparse; >>> scipy.__version__; '1.6.1'; >>> scipy.sparse.csr_matrix(([1+1j], ([0], [0])), shape=(2, 2)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/scipy/sparse/compressed.py"", line 54, in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/scipy/sparse/coo.py"", line 161, in __init__; self.data = np.array(obj, copy=copy, dtype=data_dtype); TypeError: can't convert complex to float; ```. This can be fixed either by passing `dtype=np.complex128` to the constructor, or passing the data inside a NumPy array, since that'll also fix the dtype. I imagine with their implicit conversions, SciPy may also need to test the special cases where all list elements are things like `1+0j`, which have type `complex` but can be safely represented by reals - the Python call `float(1 + 0j)` is forbidden even though the imaginary part is 0. I actually originally thought this was the problem in this issue, since all the Lindbladian data tested is real numbers with complex type. I suppose it's up to SciPy to decide how they want to handle that case - either always maintaining `complex` or putting in a special-case cast (`np.real(x)`) for known-safe complex -> float conversions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451#issuecomment-784265398:1770,test,test,1770,https://qutip.org,https://github.com/qutip/qutip/issues/1451#issuecomment-784265398,2,['test'],"['test', 'tested']"
Testability,"dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); c_, n_ = qutip.countstat_current_noise(L, [], rhoss=rhoss, J_ops=J_ops); current[n] = c_[0]; noise[n] = n_[0, 0, 0]; ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:1870,test,testing,1870,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['test'],['testing']
Testability,"dencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:2113,test,test-venv,2113,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['test'],['test-venv']
Testability,"der-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:4250,Test,TestCircuitProcessor,4250,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,"['Test', 'test']","['TestCircuitProcessor', 'testNoise']"
Testability,"dnorm tests have historically been very flaky, and for as long as we're using random tests (which we possibly shouldn't be), we always run the risk of temperamental failures. In particular, the semidefinite solvers used in dnorm fail every now and again on random states; we historically haven't treated this as a bug, since it's pretty similar to an integration failing to converge because the system was too stiff. It means that the user has to adjust some settings and try again. To prevent this sort of error from failing our test suite, however, we can mark the tests as being allowed to rerun twice on a failure. We had a relatively small sample to judge the test failure rate by, but my very very approximate guess is that we'd have a failure about 1 in 10 runs on Travis. We counter this with two strategies:. 1. parametrise the tests in pytest style, so each random repetition is a separate instance, and known to pytest (some of this was done in earlier commits); 2. allow 2 reruns of every dnorm test. The two of these together should remove all random failures; since all random loops have been moved into pytest-handled repeats, there are far fewer calls to dnorm handled within each test. This means less chance that an individual test run will fail, but a slightly higher chance the entire suite will. Now with the test re-running a single failure point is tried again up to twice more, to determine if it was just a one-off, or if the test is truly broken. The reruns are handled by a pytest plugin pytest-rerunfailures. It's quite nontrivial behaviour to hook this in to the pytest mechanism, so better to use an external dependency to do it than to vendor in a custom version. The dnorm problems have resurfaced a little after lying dormant for a long time, because #1463 reactivated them. Before that, they'd not actually been running because none of the test runners had cvxpy installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490:6,test,tests,6,https://qutip.org,https://github.com/qutip/qutip/pull/1490,12,['test'],"['test', 'tests']"
Testability,dom/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:45607,test,testing,45607,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['testing']
Testability,"dule; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_eq",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:19822,test,tests,19822,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"e ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 144, in test_sparse_bandwidth; out2=sparse_bandwidth(B); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 603, in sparse_bandwidth; return _sparse_bandwidth(A.indices, A.indptr, nrows); File ""sparse_utils.pyx"", line 42, in qutip.cy.sparse_utils._sparse_bandwidth (qutip/cy/sparse_utils.c:1458); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:1906,test,test,1906,https://qutip.org,https://github.com/qutip/qutip/issues/73,2,['test'],"['test', 'tests']"
Testability,"e 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:18276,test,testing,18276,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"e * full_oper.dag(); + rho_out += full_oper * state * full_oper.dag(); return Qobj(rho_out); diff --git a/qutip/superoperator.py b/qutip/superoperator.py; index dacc0e1e..8d099484 100644; --- a/qutip/superoperator.py; +++ b/qutip/superoperator.py; @@ -112,19 +112,19 @@ def liouvillian(H, c_ops=[], data_only=False, chi=None):; c_ = c_op; ; if c_.issuper:; - data = data + c_.data; + data += c_.data; else:; cd = c_.data.H; c = c_.data; if chi:; - data = data + np.exp(1j * chi[idx]) * \; + data += np.exp(1j * chi[idx]) * \; zcsr_kron(c.conj(), c); else:; - data = data + zcsr_kron(c.conj(), c); + data += zcsr_kron(c.conj(), c); cdc = cd * c; cdct = cdc.T; - data = data - 0.5 * zcsr_kron(spI, cdc); - data = data - 0.5 * zcsr_kron(cdct, spI); + data -= 0.5 * zcsr_kron(spI, cdc); + data -= 0.5 * zcsr_kron(cdct, spI); ; if not td:; if data_only:; diff --git a/qutip/tests/test_expect.py b/qutip/tests/test_expect.py; index 45568110..17491981 100644; --- a/qutip/tests/test_expect.py; +++ b/qutip/tests/test_expect.py; @@ -120,7 +120,7 @@ def test_equivalent_to_matrix_element(hermitian):; state = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:22859,test,tests,22859,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,"e -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; ```. ### Expected Behaviour. Qutip should build against a newer version of Numpy. ### Your Environment. Can't get output of `Qutip.about()`. MacBook Pro 2021 with M1 Pro. Python 3.9.* (miniconda and Miniforge). ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:71322,log,logs,71322,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['log'],['logs']
Testability,"e = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -1]]); - expected = expected/np.sqrt(8); + expected /=np.sqrt(8); np.testing.assert_allclose(test, expected); ; def test_cyclic_permutation(self):; diff --git a/qutip/tests/test_graph.py b/qutip/tests/test_graph.py; index 23fa6f22..f29c7379 100644; --- a/qutip/tests/test_graph.py; +++ b/qutip/tests/test_graph.py; @@ -70,7 +70,7 @@ def test_graph_rcm_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=complex); with pytest.deprecated_call():; perm = reverse_cuthill_mckee(M, 1); @@ -120,7 +120,7 @@ d",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:23956,test,tests,23956,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,e collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency be,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1577,log,logger,1577,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['log'],['logger']
Testability,"e fixtures at whatever level is appropriate. In this particular case, I scoped the `dimension` fixture at the module level, because there's loads of places that needed to test varying dimensions, and it's very convenient to define it just once. In the few cases where we needed to override that (e.g. in `dnorm`), I overrode it by providing a definition in a tighter scope - either at class level or per-function (via `pytest.mark.parametrize` directly). The correct scoping just depends a lot on the type of tests you're writing - if you're going to have to overwrite something constantly then module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files starting from those beginning with ""a"" up to (now) ""metrics"" while I was first getting to know the QuTiP codebase, and hopefully you can see that my early efforts weren't that great, and they get a bit better",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:1204,test,tests,1204,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,1,['test'],['tests']
Testability,"e just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, wh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:1248,test,test,1248,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['test'],['test']
Testability,"e left: 00:00:00:04; 60.0%. Run time: 5.07s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.50s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.88s. Est. time left: 00:00:00:01; Total run time: 5.99s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 119, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.81s. Est. time left: 00:00:00:27; 20.0%. Run time: 4.76s. Est. time left: 00:00:00:19; 32.0%. Run time: 5.66s. Est. time left: 00:00:00:12; 40.0%. Run time: 5.67s. Est. time left: 00:00:00:08; 52.0%. Run time: 6.59s. Est. time left: 00:00:00:06; 60.0%. Run time: 6.65s. Est. time left: 00:00:00:04; 72.0%. Run time: 7.53s. Est. time left: 00:00:00:02; 80.0%. Run time: 8.38s. Est. time left: 00:00:00:02; Total run time: 8.43s. --------------------- >> end captured stdout << ----------------------. ----------------------------------------------------------------------; Ran 320 tests in 1336.173s. FAILED (SKIP=7, errors=6)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:10737,test,tests,10737,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['tests']
Testability,"e not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:3101,test,tests,3101,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"e rules:. - `Compound(Map(x1, y1), Map(x2, y2))` is `Map(Compound(x1, x2), Compound(y1, y2))`; - `Compound(Map(x1, y1), Space(z))` is `Map(Compound(x1, Field), Compound(y1, Space(z)))`. In other words, the `from` and `to` fields inside maps are `Compound`ed with their counterparts, and `Space` is ""promoted"" to `Map(Field, Space)`. This latter object is not actually valid, but `Space` will behave as if it were within `Compound`. Related but different, `Compound(Field, Field)` will exist for the purposes of tensor-product `'bra'` types as the `to` field of `Map` (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python complex number. The dimensions types should be available for advanced users (to allow them to access the full parsing speed-ups), but should not be presented as the standard choice. I propose we place the types inside a nested namespace, such as `qutip.dims` (logically - physically it would be `qutip/core/dims.py`), to allow the form `from qutip.dims import *` where appropriate without forcing the user to do the modern bad practice left over from our MATLAB past `from qutip import *`. ## User impact. In principle, nothing will change for the normal QuTiP user compared to the 4.x branch. You will still be able to supply the `dims` argument to the `Qobj` constructor as lists in the exact same format, and they will be parsed in the same way. Users _do not_ need to type out the new computer-friendly dimensions objects, but they will be available for advanced users who frequently make `Qobj` using the raw constructor with funny dimensions. We will publicly provide `qutip.dims.parse` to turn a list into the new form, so even advanced users do not need to type out all the nonsense. `Qobj` factory functions that take a `dims` parameter should now also accept the new form. Since almost all of them just pass this directly to the `dims` argument in the `Qobj` constructor, t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:9573,log,logically,9573,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['log'],['logically']
Testability,"e the bug**; Currently qutip is requiring scipy > 1.12 and in the CI checks scipy <1.5 is being checked. There was a bug in scipy 1.4 See [.Stackoverflow error](https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); ch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1005,test,tests,1005,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['test'],['tests']
Testability,"e, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:7433,test,testing,7433,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"e-dependence as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 4.37e+12); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-pack",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:4865,Test,Test,4865,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['Test'],['Test']
Testability,"e-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/P",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:10862,test,testing,10862,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"e-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13996,test,test,13996,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,e.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:15097,test,tests,15097,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_index_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/lin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:36692,test,tests,36692,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_interaction.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_masked_matrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying num,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:40201,test,tests,40201,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"e.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21687,test,testing,21687,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,e.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESo,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6808,test,tests,6808,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,e/qutip/qutip/qutip] (qutip-dev) (dev.major); jake@tauros$ git merge master | grep 'CONFLICT'. CONFLICT (content): Merge conflict in setup.py; CONFLICT (add/add): Merge conflict in setup.cfg; CONFLICT (content): Merge conflict in qutip/visualization.py; CONFLICT (modify/delete): qutip/tests/test_superoper.py deleted in HEAD and modified in master. Version master of qutip/tests/test_superoper.py left in tree.; CONFLICT (content): Merge conflict in qutip/tests/test_subsys_apply.py; CONFLICT (content): Merge conflict in qutip/tests/test_random.py; CONFLICT (modify/delete): qutip/tests/test_rand.py deleted in master and modified in HEAD. Version HEAD of qutip/tests/test_rand.py left in tree.; CONFLICT (content): Merge conflict in qutip/tests/test_qubitcircuit.py; CONFLICT (content): Merge conflict in qutip/tests/test_noise.py; CONFLICT (content): Merge conflict in qutip/tests/test_mkl.py; CONFLICT (content): Merge conflict in qutip/tests/test_device.py; CONFLICT (content): Merge conflict in qutip/tests/solve/test_qubit_evolution.py; CONFLICT (content): Merge conflict in qutip/tests/solve/test_brtools.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_superop_reps.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_qobj.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_metrics.py; CONFLICT (content): Merge conflict in qutip/tests/core/test_eigen.py; CONFLICT (modify/delete): qutip/superoperator.py deleted in HEAD and modified in master. Version master of qutip/superoperator.py left in tree.; CONFLICT (modify/delete): qutip/sparse.py deleted in HEAD and modified in master. Version master of qutip/sparse.py left in tree.; CONFLICT (content): Merge conflict in qutip/solve/stochastic.py; CONFLICT (content): Merge conflict in qutip/solve/steadystate.py; CONFLICT (content): Merge conflict in qutip/solve/sesolve.py; CONFLICT (content): Merge conflict in qutip/solve/mesolve.py; CONFLICT (content): Merge conflict in qutip/solve/mcsolve.py; CO,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165:1056,test,tests,1056,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165,1,['test'],['tests']
Testability,"e/releasenotes/10.2.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Trim negative glyph offsets in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Removed unnecessary &quot;pragma: no cover&quot; <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7668"">#7668</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Trim glyph size in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7669"">#7669</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix loading IPTC images and update test <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7667"">#7667</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Allow uncompressed TIFF images to be saved in chunks <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7650"">#7650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Concatenate multiple JPEG EXIF markers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7496"">#7496</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed IPTC tile tuple to match other plugins <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7661"">#7661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not assign new fp attribute when exiting context manager <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7566"">#7566</a> [<a href=""https://github.com/radarhere""><code>@​",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:1348,test,test,1348,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['test'],['test']
Testability,e/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/cpuinfo.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/msvc9compiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/npy_pkg_config.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/misc_util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/log.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/line_endings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/lib2def.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/pathccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/system_info.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/exec_command.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/from_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/mingw32ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distuti,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:20948,log,log,20948,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['log'],['log']
Testability,"e: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 4.37e+12); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.08e+13); > > > warnings.wa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:5016,Test,Test,5016,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['Test'],['Test']
Testability,"e; >; > -; >; >; > Leaving this blank line here makes the comments above it confusing.; > ------------------------------; >; > In qutip/superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768189423>:; >; > > # Find the SVD.; >; > U, S, V = svd(q_oper.full()); >; >; >; > # Truncate away the zero singular values, up to a threshold.; >; > - nonzero_idxs = S > thresh; >; > - dK = nonzero_idxs.sum(); >; > - U = U[:, nonzero_idxs]; >; > - S = sqrt(S[nonzero_idxs]); >; > +; >; > + dK = np.count_nonzero(S > thresh); >; >; > I'm just checking why this code was changed. Yes, svd returns the; > singular values in descending order, but what was wrong with previous code; > that didn't rely on that?; > ------------------------------; >; > In qutip/tests/test_superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768191681>:; >; > > ***@***.***(scope=""function"", params=[; >; > + pytest.param(rand_super, id=""super""); >; > +]); >; > +def superoperator(request, dimension):; >; > + return request.param(dimension); >; >; > This is quite a strange function to read given that it could have just; > been:; >; > @pytest.fixture; >; > def superoperator(dimension):; >; > return rand_super(dimension); >; >; > Maybe there was a plan to do something more? Could we either add another; > param or use the simpler implementation?; > ------------------------------; >; > In qutip/tests/test_superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768192756>:; >; > > + # FIXME: problem if Kraus index is implicitly; >; > + # ptraced!; >; >; > Could you explain the FIXME a bit more? Was this an existing issue? Can we; > just fix it?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1491#pullrequestreview-830847431>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AFTMVKGNCG4DDNE5NVOSMRTUQZ4STANCNFSM42RMIOQA>; > .; >. -- ; *φ*",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-994994001:2978,test,tests,2978,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-994994001,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:19139,test,tests,19139,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:4003,test,tests,4003,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:15829,test,tests,15829,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:14409,test,tests,14409,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12045,test,tests,12045,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:16301,test,tests,16301,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:17248,test,tests,17248,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['test'],['tests']
Testability,"e; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:8343,test,testing,8343,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"e; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:3634,test,tests,3634,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"e=time_sense); > +; > + Rate_Qobj_list = [Qobj(; > + RateMat, dims=[[self.Hdim, self.Hdim], [; > + self.Hdim, self.Hdim]],; > + type=""super"",; > + superrep=""super"",; > + copy=False; > + ) for RateMat in RateDic.values()]; > + self.R0 = Rate_Qobj_list[0]; > +; > + self.Rt_timedep_pairs = []; >; > These self.Rt_timedep_pairs are never used?; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245667295>:; >; > > + floquet : bool,optional {False}; > + Whether to return the state in the floquet basis or laboratory; > + basis.; > +; > + args : dict,optional {None}; > + Not supported; > +; > + .. note::; > + The state must be initialized first by calling ``start`` or; > + ``run``. If ``run`` is called,``step`` will continue from the last; > + time and state obtained.; > + """"""; > + if args:; > + raise ValueError(; > + ""FMESolver cannot update arguments""); > + state = super().step(t); >; > Did you test this?; > I am pretty sure it would not work when time_sense=0.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245668542>:; >; > > + RateMat, dims=[[self.Hdim, self.Hdim], [; > + self.Hdim, self.Hdim]],; > + type=""super"",; > + superrep=""super"",; > + copy=False; > + ) for RateMat in RateDic.values()]; > + self.R0 = Rate_Qobj_list[0]; > +; > + self.Rt_timedep_pairs = []; > + for idx, key in enumerate(RateDic.keys()):; > + if key != 0.0:; > + self.Rt_timedep_pairs.append(list([Rate_Qobj_list[idx],; > + 'exp(1j*' + str(; > + key * list(Hargs.values())[0]); > + + '*t)'])); > + self.Rt_timedep_pairs = [list([Rate_Qobj_list[idx],; >; > This is defined twice...; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245675791>:; >; > > + time_sense=0,; > + quicksolve=False,; > + options=None):; > + """"""; > + Parameters; > + ----------; > +; > + H : :class:`Qobj`,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:13289,test,test,13289,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['test'],['test']
Testability,"e>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, python 3.6.10-final-0 -----------; Name Stmts Miss Cover; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py 150 97 35%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/_mkl/__init__.py 3 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/_mkl/utilities.py 39 16 59%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/__init__.py 1 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/openmp/__init__.py 0 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:49604,test,test-environment,49604,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['test-environment']
Testability,"e_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ======================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:4578,test,tests,4578,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"e_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-package",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13790,test,testing,13790,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"e_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:19992,test,testing,19992,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"ect of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.30s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.23s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.61s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.61s. Est. time left: 00:00:00:06; 52.0%. Run time: 4.99s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.01s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.37s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.74s. Est. time left: 00:00:00:01; Total run time: 5.89s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 89, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.31s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.25s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.65s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.65s. Est. time left: 00:00:00:06; 52.0%. Run time: 5.06s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.07s. Est",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:7841,test,tests,7841,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['tests']
Testability,"ect of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.46s. Est. time left: 00:00:00:25; 20.0%. Run time: 4.37s. Est. time left: 00:00:00:17; 32.0%. Run time: 5.00s. Est. time left: 00:00:00:10; 40.0%. Run time: 5.01s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.65s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.69s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.31s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.89s. Est. time left: 00:00:00:01; Total run time: 7.03s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 90, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.40s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.32s. Est. time left: 00:00:00:17; 32.0%. Run time: 4.88s. Est. time left: 00:00:00:10; 40.0%. Run time: 4.89s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.45s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.49s. Est",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:3043,test,tests,3043,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['tests']
Testability,"ect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vuln",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:1490,mock,mock,1490,https://qutip.org,https://github.com/qutip/qutip/pull/2085,2,"['mock', 'test']","['mock', 'test']"
Testability,"ector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit still. 3. Currently the input local operator is expected to be square, and we do not take output dimension arguments. This means it keeps the system dimensions the same. This can be relaxed easily, but we probably need an additional output dimension list, which needs to be consistent with the input operator. Again, this is easy to do, but was not sure if it is needed. If I get time I might add this anyway. 4. There are some examples of the code in the docstring to see how to run it (and also in the tests of course). I also have offline a script to perform certain speed comparisons (vs the sparse routine), I can share some more results of that. I figured this type of script shouldn't go into the project, but I can also add this. **Changelog**; Added a local multiplication routine, to speed up certain dense matrix operations.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:2683,test,tests,2683,https://qutip.org,https://github.com/qutip/qutip/pull/1405,2,['test'],['tests']
Testability,"ed lines that have >linespace errors and more, should I edit them too?; >Output:. > ```; > D:\qutip\qutip\core\cy>pycodestyle --first qobjevo.pyx; > qobjevo.pyx:1:1: E265 block comment should start with '# '; > qobjevo.pyx:2:80: E501 line too long (83 > 79 characters); > qobjevo.pyx:20:37: E211 whitespace before '('; > qobjevo.pyx:46:56: W605 invalid escape sequence '\s'; > qobjevo.pyx:190:30: E225 missing whitespace around operator; > qobjevo.pyx:423:5: E303 too many blank lines (2); > qobjevo.pyx:426:5: E301 expected 1 blank line, found 0; > qobjevo.pyx:451:34: E127 continuation line over-indented for visual indent; > qobjevo.pyx:572:21: E128 continuation line under-indented for visual indent; > qobjevo.pyx:987:39: E231 missing whitespace after ','; > qobjevo.pyx:989:20: E124 closing bracket does not match visual indentation; > ```. - [ ] Please add tests to cover your changes if applicable. > The issue was to add `__repr__` function to `QobjEvo` class. Do I need to add a test? If so, can someone help me with it?. - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. > I am not sure in what bracket this issue falls. The issue was labeled as `ENH`. - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). > Related to the previous point. **Description**; Added `__repr__` to `QobjEvo`. It is showing the following attributes: `dims`, `shape`, `type`, `superop` (if a super operator is present), `isconstant` and `num_elements`. Output:; ```; >>> import qutip; >>> qutip.QobjEvo([qutip.qeye(2), lambda t: t]); <QobjEvo dims = [[2], [2]], shape= (2, 2), type = oper, superrep ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111:1241,test,test,1241,https://qutip.org,https://github.com/qutip/qutip/pull/2111,1,['test'],['test']
Testability,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1737,test,test,1737,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,1,['test'],['test']
Testability,"ement.density_measurement(self, measurement_ops, state)` : This adds generalized state/density matrix measurements given a list of observables. Still needs addition of checks to see if the list of observables is valid ; - `Measurement.measurement_comp_basis(self, state)` : This adds measurement statistics for specific qubit measurements in the computational basis and also returns the collapsed states (without changing the dimensions). ; - `QubitCircuit.run(self, state, cbits)`: Given a ket input to the circuit, applies gates and measurements from the circuit and returns the resultant ket. . Right now, the measurement module is very bare-bones and splintered between the previous code ; from @hodgestar and the new code added by me. The eigenstate based measurements are slightly different than the measurements usually used on circuits (or I might be missing something). Ofc, in the case of measurements on all qubits, they amount to the same result. I have not added tests yet but I have added a basic quantum teleportation notebook. It will be nice to get feedback on testing methods as well as what kind of notebooks the community is interested in. Also, any other feature requests on this module would also be appreciated. . PS: I have also added measurement code from Simon's PR here so maybe we can either add him as a contributor to this PR or figure out something else. ; ; Update: . 1. Addressing some concerns about the PR containing multiple diverging pieces of code, I think classical registers, measurement on the circuit and the classically-controlled gates are best grouped together as they all rely on each other in some ways. The valid concern is that of the Measurement class encapsulating all projective style measurements. I also want to point out that it was raised by @BoxiLi that we may want to move the Gate class and Measurement class completely to qutip.qip.operations to which I agree but I believe that should be addressed in a clean-up PR with naming changes sugg",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274:2212,test,tests,2212,https://qutip.org,https://github.com/qutip/qutip/pull/1274,1,['test'],['tests']
Testability,"en module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files starting from those beginning with ""a"" up to (now) ""metrics"" while I was first getting to know the QuTiP codebase, and hopefully you can see that my early efforts weren't that great, and they get a bit better and easier to read as time went on. (The later files haven't been converted yet.) The main things are to always be thinking about readability both of the code and the error messages that are coming out, and making sure that your tests are really testing that your functions have your behaviour you want them to have. Another thing we really don't have enough of in QuTiP yet is tests for ""negative"" behaviour, i.e. testing that functions _fail_ when they're passed incorrect inputs - consequently, quite a lot of QuTiP actually will just silently do the wrong thing if it's passed nonsense.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:1959,test,testing,1959,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,6,['test'],"['testing', 'tests']"
Testability,enblas-devel; - openssl; - packaging; - pandas; - pandoc; - pandocfilters; - pango; - pari; - parso; - patsy; - pbr; - pcre; - perl; - pexpect; - pickleshare; - pillow; - pip; - pixman; - prometheus_client; - prompt_toolkit; - protobuf; - psutil; - ptyprocess; - pycodestyle; - pycparser; - pyflakes; - pygments; - pylint; - pyopenssl; - pyparsing; - pyqt; - pyrsistent; - pysocks; - python; - python-dateutil; - python-symengine; - pytz; - pyyaml; - pyzmq; - qt; - qtawesome; - qtconsole; - qtpy; - qutip; - r-base; - r-clisymbols; - readline; - reportlab; - requests; - rope; - scikit-learn; - scipy; - send2trash; - setuptools; - simplegeneric; - sip; - six; - snowballstemmer; - sphinx; - sphinxcontrib; - sphinxcontrib-applehelp; - sphinxcontrib-devhelp; - sphinxcontrib-htmlhelp; - sphinxcontrib-jsmath; - sphinxcontrib-qthelp; - sphinxcontrib-serializinghtml; - sphinxcontrib-websupport; - spyder; - spyder-kernels; - sqlite; - symengine; - symmetrica; - sympow; - sympy; - tensorboard; - tensorflow; - tensorflow-base; - tensorflow-estimator; - termcolor; - terminado; - testpath; - tk; - tktable; - tornado; - traitlets; - typed-ast; - typing; - urllib3; - wcwidth; - webencodings; - werkzeug; - wheel; - wrapt; - wurlitzer; - xz; - yaml; - zeromq; - tqdm; - zlib; - zstd; - pytest; - numba; - hypothesis; - pytest-cov; - mypy; - pytest-xdist; - watchdog; - pytest-runner; - coveralls; - doctr; - gitpython; - pre-commit; - tox; - cookiecutter; - pdbpp; - sphinx-autobuild; - sphinx-autodoc-typehints; - sphinx_rtd_theme; - travis-encrypt; - twine; - nbval; - nbsphinx; - watermark; - ipyparallel; - unittest2pytest; - pytest-benchmark; - pytest-repeat; - pytest-subtests; - fastcore; - fastscript; - asttokens; - cached-property; - crayons; - executing; - flask; - humanize; - ipywidgets; - itsdangerous; - jsonpickle; - jupyter; - littleutils; - nbconvert; - outdated; - portpicker; - sqlalchemy; - widgetsnbextension; - nbdime; - rich; - mayavi; - pip:; - birdseye; - icecream; - nbdev==1.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563:2689,test,testpath,2689,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563,2,"['benchmark', 'test']","['benchmark', 'testpath']"
Testability,ence::test_varying_coefficient_hamiltonian_2ls[string] FAILED [ 8%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%];,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6479,test,tests,6479,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"enstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. se",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4072,Test,TestKrylovSolve,4072,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"ent'>); E + where <class 'qutip.core.cy.coefficient.StrFunctionCoefficient'> = <qutip.core.cy.coefficient.StrFunctionCoefficient object at 0x7f86f86a7f00>.__class__. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py:239: AssertionError; __________________________________________________________________________ test_advance_use ___________________________________________________________________________. @pytest.mark.requires_cython; def test_advance_use():; opt = CompilationOptions(recompile=True, extra_import=""""""; from qutip import basis; from qutip.core.data cimport CSR; from qutip.core.data.expect cimport expect_csr; """"""); csr = qutip.num(3).data; coeff = coefficient(""expect_csr(op, op)"",; args={""op"": csr},; args_ctypes={""op"": ""CSR""},; compile_opt=opt); > assert coeff(0) == 5. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py:292:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; qutip/core/cy/coefficient.pyx:126: in qutip.core.cy.coefficient.Coefficient.__call__; ???; qutip/core/cy/coefficient.pyx:346: in qutip.core.cy.coefficient.StrFunctionCoefficient._call; ???; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. t = 0.0, args = {'op': CSR(shape=(3, 3), nnz=3)}. > ???; E NameError: name 'expect_csr' is not defined. <string>:4: NameError; ======================================================================= short test summary info =======================================================================; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:6182,test,tests,6182,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['test'],['tests']
Testability,"ent_to_matrix_element(hermitian):; state = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -1]]); - expected = expected/np.sqrt(8); + expected /=np.sqrt(8); np.testing.assert_allclose(test, expected); ; def test_cyclic_permutation(self):; diff --git a/qutip/tests/test_graph.py b/qutip/tests/test_graph.py; index 23fa6f22..f29c7379 100644; --- a/qutip/tests/test_graph.py; +++ b/qutip/tests/test_graph.py; @@ -70,7 +70,7 @@ def test_graph_rcm_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=complex); with pytest.deprecated_call():; perm = reverse_cu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:23923,test,tests,23923,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,"ently supports Hamiltonian Qobj operators only""; ); ; if not H.isherm:; raise TypeError(""Hamiltonian 'H' must be hermician.""); ; if not isinstance(psi0, Qobj):; raise TypeError(""'psi0' must be a Qobj.""); ; if not psi0.isket:; raise TypeError(""Initial state must be a ket Qobj.""); ; if not ((len(H.shape) == 2) and (H.shape[0] == H.shape[1])):; raise ValueError(""the Hamiltonian must be 2-dimensional square Qobj.""); ; if not (psi0.dims[0] == H.dims[0]):; > raise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. ―――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[magnetization subspace state XXZ model] ――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa1095afd0>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 1.0, 1, 0). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = np.linspace(0, 20, 200); > self.simple_check_states_e_ops(; H, psi0, tlist, krylov_dim=krylov_dim, square_hamiltonian=False; ). stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:457: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:217: in simple_check_states_e_ops; output = krylovsolve(; stage/usr/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:8017,Test,TestKrylovSolve,8017,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"epickle - Exception: Coul...; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; = 23 failed, 3077 passed, 101 skipped, 68 deselected, 1387 warnings in 1058.36s (0:17:38) =; ```. #1084 notes that a major overhaul of qobjevo has been done for qutip v5. Perhaps the issue is fixed. On the hand it could be an issue with python 3.12 that still needs to be addressed in v5, so I though I should mention in. ### Code to Reproduce the Bug. ```shell; python3.12 -c ""import qutip.testing; qutip.testing.run(pytest_options=[['-k', 'mesolve_td or test_varying_coefficient_hamiltonian_2ls or testMEDecayAsStrList or test_array_str or test_qobjevo or test_04 or test_06_4_compare_state_and_unitary_list_str or testPropHOStrTd']])""; ```. ### Code Output. ```shell; $ python3.12 -c ""import qutip.testing; qutip.testing.run(pytest_options=[['-k', 'mesolve_td or test_varying_coefficient_hamiltonian_2ls or testMEDecayAsStrList or test_array_str or test_qobjevo or test_04 or test_06_4_compare_state_and_unitary_list_str or testPropHOStrTd']])"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.3; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.36; Matplotlib Version: 3.6.3; Python Version: 3.12.1; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Install",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:2918,test,testing,2918,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['testing']
Testability,"er than a hard limit, but it's a good rule of thumb for testing one piece of functionality. [Here's a (slightly out-dated) list of our current longest tests](https://github.com/qutip/qutip/issues/1217#issuecomment-604116373), bearing in mind that some of those ones actually test many many things in the same test function. The test seems structured ok to me. Certainly the testing algorithm isn't the major cause of speed loss. You could try timing some ""real-world"" examples of using your measurements, and try running them in a profiler to see if there are any obvious ways to speed things up. With any luck the new data-layer tools and the possibility of using dense `Qobj` storage will give you a fair amount of speed-up once they're complete, since I imagine in your small circuit you're paying quite a lot of sparse matrix overhead. I'll prefix this last part with: _you should always profile your code before optimising it_. That said, let me wildly break that rule and guess at where I think you'll find big speed-ups: caching and pre-computation. If you know you're going to run the same thing loads and loads of times, then you shouldn't have to call `self.propagators` each time, or build `measurement_ops` inside `measure_comp_basis`. Do those once at the start of `run_statistics`, and save them. Minor things that _may_ speed up - check the profiling!; 1. ""compress"" the output of `self.propagators`: consecutive propagators with no measurements or classical controls inbetween can be pre-multiplied together at the start to make one matrix. This will save you ~3 matrix multiplications per run in the test.; 2. use more efficient ways to construct large tensor spaces: `qutip.basis`, `qutip.projection` and `qutip.qeye` can all directly constructor product spaces (e.g. `qutip.basis([2, 2, 2], [0, 1, 0])`). `tensor` is a comparatively expensive operation, and tensoring a list of elements internally is effectively `tensor(...(tensor(tensor(els[0], els[1]), els[2]), ...), els[-1])`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640127213:1669,test,test,1669,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640127213,1,['test'],['test']
Testability,"er, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because I now install _all_ optional dependencies in most runners, so slightly more gets tested than before. Currently there's also a slowdown on several machines because `cvxpy` doesn't build many wheels, and none at all for Linux, on `pip`. I install all our dependencies except BLAS/LAPACK stuff that way, since it's easiest to read out the dependencies like that. We can potentially save some build time (maybe ~3 minutes?) if we install that from conda-forge instead. I also fixed a minor point of how environment variables are read within `setup.py` (in the end I didn't actually use the new behaviour in the action, but I did during testing), and added a warning filter on dnorm tests to account for a deprecated Numpy alias being used within `cvxpy` code. Also of note: this [should allow us to have commits that ski",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:1765,test,test,1765,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['test'],['test']
Testability,"er_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collected 11 items . ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProces",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2590,test,tests,2590,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"erator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), but the ""proper"" unqualified access `from qutip import mesolve` remains unchanged. This is for internal code organisation purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-bit. The C++ backing source file `zspmv.cpp` and its associated header are renamed to `matmul_csr_vector` to match the new data-layer naming conventions, but more importantly, the functions are now templated over integral types so they will ""magically"" work at either size. In general, `setuptools` likes to link dynamically (on Linux and Mac, but not Windows), and so the templates have to be made explicit, rather than allowing Cython to generate only the necessa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:1813,log,logically,1813,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['log'],['logically']
Testability,"eroper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26197,test,testing,26197,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"ert string to importable function, tmpfile:cqobjevo_compiled_coeff_60949686147062.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_57149686147072.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff - Exception: Could not convert string to importable function, tmpfile:td_Qobj_single_str38349686147072.pyx; FAILED qutip/tests/test_openmp.py::test_openmp_mesolve_td - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_00149686147082.pyx; FAILED qutip/tests/test_propagator.py::testPropHOStrTd - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_91749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call_args - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147102.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_with_state - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coe",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:24692,test,tests,24692,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"es in each respective case. The reason the tests are a little bit slow compared to, e.g., the tests in `TestMESolveTDDecay` is the computation of the fidelity of the states at all the different times. If you think the tests are too slow, i can change them, and for example only check the fidelity of the final state. As a side note: As I wrote this new functionality, I also ran some simple tests comparing a pure python implementation of the right hand side for `_mesolve_const` to the cython implementation (I did this because I was considering how much cython code I had to write, or if a pure python implementation of the new functionality would suffice). I actually found that a pure python implementation was as fast (or maybe slightly _faster_) than the cython implementation. The pure python implementation of the right hand side is simply (see lines 767-769 of mesolve.py). ``` python; def _ode_rho_test(t, rho, data):; # for performance comparison of cython code; return data*(np.transpose(rho)); ```. Here is a plot of the performance compare to the standard cython implementation for a very simple test. The benchmark was a damped-cavity JC-model with Hilbert space dimension 4 for the cavity, integrated up to ""integration time"". ""run time"" is the real run time on my laptop. ![benchmark](https://cloud.githubusercontent.com/assets/2354542/11615553/48fe8604-9c32-11e5-83b9-2de366bd3cef.png). Since there is no big difference between the cython implementation and the pure python implementation (if anything, the pure python implementation is slightly faster), maybe it makes sense to replace the call to `cy_ode_rhs` with a call to `_ode_rhs_test` (see lines 744 to 747 in mesolve.py)? This makes the code a tiny bit easier to read. Of course, this was a single, very simplistic test. Sorry about all the merge commits. I'm still learning good workflow for this type of feature branch. Will use rebasing more in the future. Let me know if you have any questions about the implementation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404:1598,test,test,1598,https://qutip.org,https://github.com/qutip/qutip/pull/404,4,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"es occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another concern that I intuitively have (I may be _wildly_ wrong on this one, though, not having yet properly explored QuTiP's testing landscape) is that - depending on how some Hypothesis tests are set up - th",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:1831,mock,mock,1831,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['mock'],['mock']
Testability,"es/qutip/krylovsolve.py:453: ValueError. stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_10_happy_breakdown_e_ops_none[eigenstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:3900,Test,TestKrylovSolve,3900,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,eselected / 36 selected . qutip/tests/test_brmesolve_td.py::test_time_dependent_spline_in_c_ops FAILED [ 2%]; qutip/tests/test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split] FAILED [ 5%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string] FAILED [ 8%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6219,test,tests,6219,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"essor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/P",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:7326,test,testing,7326,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,estMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py:,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3403,Test,TestOptimization,3403,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['Test'],['TestOptimization']
Testability,estMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_cle,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3882,Test,TestOptimization,3882,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['Test'],['TestOptimization']
Testability,"est_expectation_dtype(options):; a = qutip.tensor(qutip.destroy(focks), qutip.qeye(2)); sm = qutip.tensor(qutip.qeye(focks), qutip.sigmam()); H = 1j*a.dag()*sm + a; - H = H + H.dag(); + H += H.dag(); state = qutip.basis([focks, 2], [0, 1]); times = np.linspace(0, 10, 5); c_ops = [a, sm]; diff --git a/qutip/tests/test_mesolve.py b/qutip/tests/test_mesolve.py; index f17115ec..bc6cce59 100644; --- a/qutip/tests/test_mesolve.py; +++ b/qutip/tests/test_mesolve.py; @@ -238,8 +238,8 @@ class TestJCModelEvolution:; nc_ss, na_ss = self.jc_steadystate(; N, wc, wa, g, kappa, gamma, pump, psi0, use_rwa, tlist); ; - nc_ss = nc_ss * np.ones(np.shape(nc)); - na_ss = na_ss * np.ones(np.shape(na)); + nc_ss *= np.ones(np.shape(nc)); + na_ss *= np.ones(np.shape(na)); ; assert_(abs(nc[-1] - nc_ss[-1]) < 0.005, True); assert_(abs(na[-1] - na_ss[-1]) < 0.005, True); diff --git a/qutip/tests/test_qobj.py b/qutip/tests/test_qobj.py; index 11caa048..c875ef3f 100644; --- a/qutip/tests/test_qobj.py; +++ b/qutip/tests/test_qobj.py; @@ -244,7 +244,7 @@ def test_QobjAddition():; x1 = q + 5; x2 = 5 + q; ; - data = data + np.eye(5) * 5; + data += np.eye(5) * 5; assert np.all(x1.full() == data); assert np.all(x2.full() == data); ; @@ -298,7 +298,7 @@ def test_QobjDivision():; data = _random_not_singular(5); q = Qobj(data); randN = 10 * np.random.random(); - q = q / randN; + q /= randN; assert np.allclose(q.full(), data / randN); ; ; diff --git a/qutip/visualization.py b/qutip/visualization.py; index 47f40fc1..21ef765e 100644; --- a/qutip/visualization.py; +++ b/qutip/visualization.py; @@ -416,7 +416,7 @@ def _stick_to_planes(stick, azim, ax, M, spacing):; Stick to xz and yz planes; """"""; if stick is True:; - azim = azim % 360; + azim %= 360; if 0 <= azim <= 90:; ax.set_ylim(1 - .5,); ax.set_xlim(1 - .5,); @@ -879,7 +879,7 @@ def plot_energy_levels(H_list, N=0, labels=None, show_ylabels=False,; ; for H1 in H_list[1:]:; ; - H = H + H1; + H += H1; evals1 = H.eigenenergies(); ; for e_idx, e in enumerate",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:26408,test,tests,26408,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,"est_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/pytho",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:15393,test,testing,15393,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,esting/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> bu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:45776,test,testing,45776,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,['test'],"['testing', 'tests']"
Testability,"ests/test_expect.py; @@ -120,7 +120,7 @@ def test_equivalent_to_matrix_element(hermitian):; state = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -1]]); - expected = expected/np.sqrt(8); + expected /=np.sqrt(8); np.testing.assert_allclose(test, expected); ; def test_cyclic_permutation(self):; diff --git a/qutip/tests/test_graph.py b/qutip/tests/test_graph.py; index 23fa6f22..f29c7379 100644; --- a/qutip/tests/test_graph.py; +++ b/qutip/tests/test_graph.py; @@ -70,7 +70,7 @@ def test_graph_rcm_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:23857,test,tests,23857,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,ests/test_randomstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_direct.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44637,test,tests,44637,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,"et; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 4.13s. Est. time left: 00:00:00:30; 20.0%. Run time: 5.12s. Est. time left: 00:00:00:20; 32.0%. Run time: 6.16s. Est. time left: 00:00:00:13; 40.0%. Run time: 6.21s. Est. time left: 00:00:00:09; 52.0%. Run time: 7.26s. Est. time left: 00:00:00:06; 60.0%. Run time: 7.37s. Est. time left: 00:00:00:04; 72.0%. Run time: 8.34s. Est. time left: 00:00:00:03; 80.0%. Run time: 9.25s. Est. time left: 00:00:00:02; Total run time: 9.33s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 59, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.30s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.23s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.61s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.61s. Est. time left: 00:00:00:06; 52.0%. Run time: 4.99s. Est. time ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:6183,test,test,6183,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['test']
Testability,"ete): qutip/essolve.py deleted in HEAD and modified in master. Version master of qutip/essolve.py left in tree.; CONFLICT (modify/delete): qutip/eseries.py deleted in HEAD and modified in master. Version master of qutip/eseries.py left in tree.; CONFLICT (content): Merge conflict in qutip/entropy.py; CONFLICT (modify/delete): qutip/cy/spmatfuncs.pyx deleted in HEAD and modified in master. Version master of qutip/cy/spmatfuncs.pyx left in tree.; CONFLICT (modify/delete): qutip/cy/sparse_routines.pxi deleted in HEAD and modified in master. Version master of qutip/cy/sparse_routines.pxi left in tree.; CONFLICT (modify/delete): qutip/cy/codegen.py deleted in HEAD and modified in master. Version master of qutip/cy/codegen.py left in tree.; CONFLICT (content): Merge conflict in qutip/core/superop_reps.py; CONFLICT (content): Merge conflict in qutip/core/subsystem_apply.py; CONFLICT (content): Merge conflict in qutip/core/states.py; CONFLICT (content): Merge conflict in qutip/core/semidefinite.py; CONFLICT (content): Merge conflict in qutip/core/metrics.py; CONFLICT (content): Merge conflict in qutip/control/pulseoptim.py; CONFLICT (content): Merge conflict in qutip/control/pulsegen.py; CONFLICT (content): Merge conflict in qutip/control/optimizer.py; CONFLICT (content): Merge conflict in qutip/control/dump.py; CONFLICT (content): Merge conflict in qutip/bloch.py; CONFLICT (content): Merge conflict in qutip/_pyxbuilder.py; CONFLICT (content): Merge conflict in qutip/_mkl/utilities.py; CONFLICT (content): Merge conflict in qutip/_mkl/spsolve.py; CONFLICT (content): Merge conflict in qutip/_mkl/spmv.py; CONFLICT (content): Merge conflict in qutip/_mkl/__init__.py; CONFLICT (content): Merge conflict in qutip/__init__.py; CONFLICT (add/add): Merge conflict in VERSION; CONFLICT (content): Merge conflict in MANIFEST.in; CONFLICT (add/add): Merge conflict in .github/workflows/tests.yml; ```. Uh-oh. (This is actually expected: most of these are benign, and I can fix them quickly.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165:4928,test,tests,4928,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864984165,1,['test'],['tests']
Testability,"evo.py::test_QobjEvo_with_state - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_76649686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_pickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147142.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_98549686147162.pyx; ============================================================================================================== 21 failed, 15 passed, 3233 deselected, 33 warnings in 15.37s ==============================================================================================================; ```. ### Expected Behaviour. Tests should pass with python3.12. ### Your Environment. ```shell; $ python3.12 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:26489,Test,TestSESolve,26489,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['Test'],['TestSESolve']
Testability,"extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 354, in test_06_4_compare_state_and_unitary_list_str; normalize=False, td_args=td_args, tol=5e-5); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 255, in compare_evolution; options=options,args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_suppor",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:27279,test,tests,27279,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['test'],['tests']
Testability,"f""><code>d6ebc4a</code></a> v2.32.0</li>; <li><a href=""https://github.com/psf/requests/commit/9a40d1277807f0a4f26c9a37eea8ec90faa8aadc""><code>9a40d12</code></a> Avoid reloading root certificates to improve concurrent performance (<a href=""https://redirect.github.com/psf/requests/issues/6667"">#6667</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/0c030f78d24f29a459dbf39b28b4cc765e2153d7""><code>0c030f7</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6702"">#6702</a> from nateprewitt/no_char_detection</li>; <li><a href=""https://github.com/psf/requests/commit/555b870eb19d497ddb67042645420083ec8efb02""><code>555b870</code></a> Allow character detection dependencies to be optional in post-packaging steps</li>; <li><a href=""https://github.com/psf/requests/commit/d6dded3f00afcf56a7e866cb0732799045301eb0""><code>d6dded3</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6700"">#6700</a> from franekmagiera/update-redirect-to-invalid-uri-test</li>; <li><a href=""https://github.com/psf/requests/commit/bf24b7d8d17da34be720c19e5978b2d3bf94a53b""><code>bf24b7d</code></a> Use an invalid URI that will not cause httpbin to throw 500</li>; <li><a href=""https://github.com/psf/requests/commit/2d5f54779ad174035c5437b3b3c1146b0eaf60fe""><code>2d5f547</code></a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=""https://redirect.github.com/psf/requests/issues/6688"">#6688</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311""><code>f1bb07d</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:8636,test,test,8636,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['test'],['test']
Testability,f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/scimath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/user_array.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying num,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:32896,test,tests,32896,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"ff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_with_state - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_76649686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_pickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147142.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_98549686147162.pyx; ============================================================================================================== 21 failed, 15 passed, 3233 deselected, 33 warnings in 15.37s ==============================================================================================================; ```. ### Expected Behaviour. Tests should pass with python3.12. ### Your Environment. ```shell; $ python3.12 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) Q",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:26096,Test,TestSESolve,26096,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['Test'],['TestSESolve']
Testability,"fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves. ```; #to test qutip's fidelity routine; import qutip as qu. psi0=qu.Qobj(). i=0; while i<=1:; j=0; while j<=1:; psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; j+=1; i+=1. psi0=psi0.unit() #normalise. print(qu.fidelity(psi0,psi0)); print((psi0.dag()*psi0).norm()**2); print(""\n""). psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state. print(qu.fidelity(psi0,psi0)); print((psi0.dag()*psi0).norm()**2). ```. Output:. ```; 1.00000002107; 1.0. 1.00000003485; 1.0; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361:226,test,test,226,https://qutip.org,https://github.com/qutip/qutip/issues/361,1,['test'],['test']
Testability,"file, os.R_OK):; time.sleep(0.1); codeString = str(""from "" + try_file +; "" import "" + obj_name + '\n' +; ""import_list.append("" + obj_name + "")""); try:; import_code = compile(codeString, '<string>', 'exec'); > exec(import_code, locals()); E ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_46049686147042'. /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:45: ModuleNotFoundError. The above exception was the direct cause of the following exception:. self = <qutip.tests.test_correlation.TestTimeDependence object at 0x7fe9f0e896d0>, dependence_2ls = 'exp(-(t-t_off)**2 / (2 * tp*tp))'. def test_varying_coefficient_hamiltonian_2ls(self, dependence_2ls):; H = [[_2ls_args['H0'], dependence_2ls]]; > assert abs(_2ls_g2_0(H, []) - 0.575) < 1e-2. /usr/lib/python3/dist-packages/qutip/tests/test_correlation.py:167: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /usr/lib/python3/dist-packages/qutip/tests/test_correlation.py:135: in _2ls_g2_0; correlation = qutip.correlation_3op_2t(H, start, times, times, [sp],; /usr/lib/python3/dist-packages/qutip/correlation.py:324: in correlation_3op_2t; return _correlation_2t(H, state0, tlist, taulist,; /usr/lib/python3/dist-packages/qutip/correlation.py:1030: in _correlation_2t; return _correlation_me_2t(H, state0, tlist, taulist,; /usr/lib/python3/dist-packages/qutip/correlation.py:1069: in _correlation_me_2t; rho_t = mesolve(H, rho0, tlist, c_ops, [],; /usr/lib/python3/dist-packages/qutip/mesolve.py:231: in mesolve; ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); /usr/lib/python3/dist-packages/qutip/mesolve.py:287: in _mesolve_QobjEvo; L_td.compile(omp=nthread); /usr/lib/python3/dist-packages/qutip/qobjevo.py:1641: in compile; self.coeff_get, Code, file_ = _compiled_coeffs(; /usr/li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:14566,test,tests,14566,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,fileio tests are failing on windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311:7,test,tests,7,https://qutip.org,https://github.com/qutip/qutip/issues/1311,1,['test'],['tests']
Testability,fix Qobj division unit test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/306:23,test,test,23,https://qutip.org,https://github.com/qutip/qutip/pull/306,1,['test'],['test']
Testability,fix failing circuit test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1658:20,test,test,20,https://qutip.org,https://github.com/qutip/qutip/pull/1658,1,['test'],['test']
Testability,fix seeds in stochastic tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1657:24,test,tests,24,https://qutip.org,https://github.com/qutip/qutip/pull/1657,1,['test'],['tests']
Testability,"format-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/spmatfuncs.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1|; >; > Then, I cloned the qutip/qutip repository, and tried to build a wheel; > with |python setup.py bdist_wheel| under the qutip directory. Which; > gave me the following log:; >; > `running bdist_wheel; > running build; > running config_cc; > unifing config_cc, config, build_clib, build_ext, build commands; > --compiler options; > running config_fc; > unifing config_fc, config, build_clib, build_ext, build commands; > --fcompiler options; > running build_src; > build_src; > building py_modules sources; > building extension ""qutip.cy.spmatfuncs"" sources; > building extension ""qutip.cy.stochastic"" sources; > building extension ""qutip.cy.sparse_utils"" sources; > building extension ""qutip.cy.graph_utils"" sources; > building extension ""qutip.cy.interpolate"" sources; > building extension ""qutip.cy.spmath"" sources; > building extension ""qutip.cy.heom"" sources; > building extension ""qutip.cy.math"" sources; > building extension ""qutip.cy.spconvert"" sources; > building extension ""qutip.cy.ptrace"" sources; > building extension ""qutip.control.cy_grape"" sources; > building data_files sources; > build_src: building npy-pkg config files; > running build_py; > copying qutip/version.py -> build/lib.linux-x86_64-3.5/qutip; > copying build/src.linux-x86_64-3.5/qutip/*config*.py ->; > build/lib.linux-x86_64-3.5/qutip; > running build_e",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:3086,log,log,3086,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['log'],['log']
Testability,"from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Libra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:9203,test,testing,9203,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"from qutip import *; import numpy as np; import matplotlib.pyplot as plt; import qutip.testing as qt. Here is the part of the code that has error:. H = tensor(sigmaz(),sigmaz(),identity(2)) + tensor(identity(2),sigmaz(),sigmaz()) + 0.05 * tensor(sigmax(), sigmax(),sigmax()); psi0 = basis(8, 0); times = np.linspace(0.0, 10.0, 20.0); result = mesolve(H, psi0, times, [], [sigmaz()]). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-752e3e5ccdb6> in <module>(); 4 psi0 = basis(8, 0); 5 times = np.linspace(0.0, 10.0, 20.0); ----> 6 result = mesolve(H, psi0, times, [], [sigmaz()]). /Users/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 223 ; 224 if _safe_mode:; --> 225 _solver_safety_check(H, rho0, c_ops, e_ops, args); 226 ; 227 if progress_bar is None:. /Users/lib/python2.7/site-packages/qutip/solver.pyc in _solver_safety_check(H, state, c_ops, e_ops, args); 795 Hdims = H.dims; 796 Htype = H.type; --> 797 _structure_check(Hdims, Htype, state); 798 # Input H is function; 799 elif isinstance(H, (FunctionType, BuiltinFunctionType)):. /Users/lib/python2.7/site-packages/qutip/solver.pyc in _structure_check(Hdims, Htype, state); 870 if Htype == 'oper':; 871 if Hdims[1] != state.dims[0]:; --> 872 raise Exception('Input operator and ket do not share same structure.'); 873 # Input is super and state is ket; 874 elif Htype == 'super':. Exception: Input operator and ket do not share same structure.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/802:87,test,testing,87,https://qutip.org,https://github.com/qutip/qutip/issues/802,1,['test'],['testing']
Testability,funcs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmatfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/stochastic.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/stochastic.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/cy/src/zspmv.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/cy/src/zspmv.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/control/cy_grape.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/cy_grape.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/tests/Hadamard_params.ini -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/cy/openmp/benchmark.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/cqobjevo_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/omp_sparse_utils.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build/temp.macosx-10.9-x86_64-3.7; creating build/temp.macosx-10.9-x86_64-3.7/qutip; creating build/temp.macosx-10.9-x86_64-3.7/qutip/cy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:22388,test,tests,22388,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"g = str(""from "" + try_file +; "" import "" + obj_name + '\n' +; ""import_list.append("" + obj_name + "")""); try:; import_code = compile(codeString, '<string>', 'exec'); > exec(import_code, locals()); E ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_98549686147162'. /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:45: ModuleNotFoundError. The above exception was the direct cause of the following exception:. self = <qutip.tests.test_sesolve.TestSESolve object at 0x7fe9e7e576e0>. def test_06_4_compare_state_and_unitary_list_str(self):; ""sesolve: compare state and unitary operator evo - list str td""; eps = 0.2 * 2*np.pi; delta = 1.0 * 2*np.pi # atom frequency; w0 = 0.5*eps; w1 = 0.5*delta; H0 = w0*sigmaz(); H1 = w1*sigmax(); w_a = w0; ; td_args = {'w_a':w_a}; H = [H0, [H1, 'cos(w_a*t)']]; ; psi0 = basis(2, 0) # initial state; tlist = np.linspace(0, 20, 200); ; > self.compare_evolution(H, psi0, tlist,; normalize=False, td_args=td_args, tol=5e-5). /usr/lib/python3/dist-packages/qutip/tests/test_sesolve.py:322: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /usr/lib/python3/dist-packages/qutip/tests/test_sesolve.py:223: in compare_evolution; out_s = sesolve(H, psi0, tlist, [sigmax(), sigmay(), sigmaz()],; /usr/lib/python3/dist-packages/qutip/sesolve.py:124: in sesolve; ss = _sesolve_QobjEvo(H, tlist, args, options); /usr/lib/python3/dist-packages/qutip/sesolve.py:155: in _sesolve_QobjEvo; H_td.compile(omp=nthread); /usr/lib/python3/dist-packages/qutip/qobjevo.py:1641: in compile; self.coeff_get, Code, file_ = _compiled_coeffs(; /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:94: in _compiled_coeffs; coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:19742,test,tests,19742,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,g build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_twodim_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_index_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-a,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:36134,test,tests,36134,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,g numpy/core/function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/einsumfunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/umath_tests.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_ufunc_config.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_exceptions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/_type_aliases.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/cversions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; copying numpy/core/code_generators/generate_numpy_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core; creating build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numerictypes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_methods.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarmath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_item_selection.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_machar.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_unicode.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarbuffer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexerrors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_print.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> bu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:15806,test,tests,15806,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,g numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_pocketfft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/test_helper.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; copying numpy/fft/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/fft/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/recfunctions.py ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:32391,test,tests,32391,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,"g time-dependent hamiltonians and collapse operators. It seems that this could be solved by changing one line of the code inside correlatation.py, in def _correlation_me_2t:. from:; H_shifted, c_op * rho * a_op, taulist, c_ops_shifted, . to:; H_shifted, c_op * rho * a_op, taulist + tlist[t_idx], c_ops_shifted,. The accompanying code demonstrating the issue and help finding the issue and solution were provided by M. Pechal. Issue was found in qutip version 4.6.2 and 4.6.3. ### Code to Reproduce the Bug. ```shell; # Qubit evolving only under energy relaxation (with H = 0 and the only collapse operator being qt.destroy(2)).; # The relaxation rate is time-dependent.; #; # A simple calculation shows that <ad(t2).a(t1)> = exp( - ( int_0^t1 Gamma(t) dt + int_0^t2 Gamma(t) dt ) / 2 ). H = 0.0 * qt.identity(2); psi0 = qt.basis(2, 1); tlist = np.linspace(0, 1, 101); def Gamma(t):; return 8.0 * t; cops = [[qt.destroy(2), lambda t, args: np.sqrt(Gamma(t))]]; a = qt.destroy(2); ad = a.dag(). testcorr = qt.correlation_2op_2t(H, psi0, tlist, tlist, cops, ad, a); #testcorrM = qt.correlation_2op_2t_MPAF(H, psi0, tlist, tlist, cops, ad, a). i1 = 20; i2 = 50; print('qt.correlation_2op_2t:'); print('<ad(t2).a(t1)> =',testcorr[i1, i2 - i1]). #print('qt.correlation_2op_2t MPAF:'); #print('<ad(t2).a(t1)> =',testcorrM[i1, i2 - i1]). print('------'); print('""manual"" calculation using mesolve:'); rhom = qt.mesolve(H, psi0, np.linspace(0, tlist[i1], 101), cops).states[-1]; print('<ad(t2).a(t1)> =',(qt.mesolve(H, a*rhom, np.linspace(tlist[i1], tlist[i2], 101), cops).states[-1] * ad).tr()). print('------'); print('theory:'); t1 = tlist[i1]; t2 = tlist[i2]; print('<ad(t2).a(t1)> =', np.exp(-(4.0*t1**2 + 4.0*t2**2)/2)); ```. ### Code Output. ```shell; qt.correlation_2op_2t:; <ad(t2).a(t1)> = (0.7117768902828536+0j); ------; ""manual"" calculation using mesolve:; <ad(t2).a(t1)> = 0.5598976820725802; ------; theory:; <ad(t2).a(t1)> = 0.559898366565402; ```. ### Expected Behaviour. qt.correlation_2op_2",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:1077,test,testcorr,1077,https://qutip.org,https://github.com/qutip/qutip/issues/1808,1,['test'],['testcorr']
Testability,"gcc 4.4 does not support the `-flto` option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6. In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to `setup.py` to enable or disable link time optimization. I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318:470,test,test,470,https://qutip.org,https://github.com/qutip/qutip/pull/318,2,['test'],"['test', 'tested']"
Testability,"generated using `qutip.cite()`; ================================================================================================================================== test session starts ===================================================================================================================================; platform linux -- Python 3.12.1, pytest-7.4.4, pluggy-1.3.0 -- /usr/bin/python3.12; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase(PosixPath('/home/drew/projects/misc/build/.hypothesis/examples')); rootdir: /home/drew/projects/misc/build/qutip; plugins: remotedata-0.4.1, asyncio-0.20.3, filter-subpackage-0.1.2, doctestplus-1.1.0, flaky-3.7.0, arraydiff-0.6.1, xvfb-3.0.0, astropy-0.11.0, mpi-0.6, astropy-header-0.2.2, cov-4.1.0, mock-3.12.0, openfiles-0.5.0, hypothesis-6.92.2; asyncio: mode=Mode.STRICT; collected 3269 items / 3233 deselected / 36 selected . qutip/tests/test_brmesolve_td.py::test_time_dependent_spline_in_c_ops FAILED [ 2%]; qutip/tests/test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split] FAILED [ 5%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string] FAILED [ 8%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:5322,test,tests,5322,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"ges/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit object at 0x12c081640>, method = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:3989,assert,assert,3989,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['assert'],['assert']
Testability,"ges/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/te",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13087,test,test,13087,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ges/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:15789,test,test,15789,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ges/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 7.81e+14); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 8.35e+14); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.03e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; # ; ## ERROR: Failure: ValueError (invalid literal for int() with base 10: '1post0'). Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:14061,test,test,14061,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['test'],['test']
Testability,gg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - Attribute,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51149,test,tests,51149,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ========================================================================= ERRORS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/User",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:2210,test,tests,2210,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"h mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperator).norm(maxiter=1e6) < 1e-5; E assert 313.53468707624677 < 1e-05; E + where 313.53468707624677 = <bound method Qobj.norm of Quantum object: dims = [[[8, 8], [8, 8]], [[8, 8], [8, 8]]], shape = (4096, 4096), type = s..... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1581,test,tests,1581,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['test'],['tests']
Testability,"h`: see https://github.com/scipy/scipy/pull/3751. I suggest we consider dropping most of them, and consequently their surrounding `Cython` code to ease maintainability and reduce code bloat of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1198,test,tests,1198,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['test'],['tests']
Testability,"he initial floquet modes, computing the propagator over one period, then using these to compute at other time, recomputing the propagator up to that time. When the modes at multiple times were needed, we could compute a list of them over one period using `floquet_modes_table`, but at least 2 computations over a period were needed. With the and the `Propagator` memoize capacities added in v5, only one computation of the propagator is required. Also with the table computation of v4, if a mode was not included in the table, the closest one was used. `fmesolve ` and `fsesolve` computed 100 slices over the period. It did not used the values in `tlist` and caused artifacts in the result. With `FloquetBasis`, the mode are always computed at the exact time. . I left the v4's functions with warnings. The construction of the floquet tensor was done using 2 functions: `floquet_master_equation_rates` which returned 4 tensors and `floquet_master_equation_tensor`. I added `floquet_tensor` which computed the tensor in one call and split `floquet_master_equation_rates` in 4 functions, one for each of the outputs. Floquet, like `brmesolve`, need a function for the noise power spectrum. Unlike `brmesolve`, string are not supported, only functions. We should have them match, but supporting string is quite heavy since coefficient are not a great fit. `fsesolve` have been rewritten without the class interface. As an integrator, the floquet method has no advantage since the propagator much be computed using another method. `fmesolve` work similarly to other solver. The `e_ops` are always in the laboratory basis. The result states are also in the laboratory basis. The option `""store_floquet_states""` is used to store the states in the floquet basis in `result.floquet_states`. In v4, there it an option for the environment temperature, but no tests for it. I kept the feature, but it's still untested.; Also all tests for `fmesolve` are either for constant systems or without collapse operator.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2034:2164,test,tests,2164,https://qutip.org,https://github.com/qutip/qutip/pull/2034,2,['test'],['tests']
Testability,"hese should; 72 # probably be moved out to another module.; ---> 74 _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()); 77 def _pauli_basis(nq=1):; 78 # NOTE: This is slow as can be.; 79 # TODO: Make this sparse. CSR format was causing problems for the [idx, :]; 80 # slicing below.; 81 B = zeros((4 ** nq, 4 ** nq), dtype=complex). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:508, in identity(dims); 492 def identity(dims):; 493 """"""Identity operator. Alternative name to :func:`qeye`.; 494; 495 Parameters; (...); 506 Identity operator Qobj.; 507 """"""; --> 508 return qeye(dims). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:488, in qeye(dimensions); 452 """"""; 453 Identity operator.; 454; (...); 485; 486 """"""; 487 size, dimensions = _implicit_tensor_dimensions(dimensions); --> 488 return Qobj(fast_identity(size),; 489 dims=dimensions, isherm=True, isunitary=True). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:389, in fast_identity(N); 387 ptr = np.arange(N+1, dtype=np.int32); 388 ptr[-1] = N; --> 389 return fast_csr_matrix((data,ind,ptr),shape=(N,N)). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:55, in fast_csr_matrix.__init__(self, args, shape, dtype, copy); 53 self.dtype = complex; 54 self.maxprint = 50; ---> 55 self.format = 'csr'. AttributeError: property 'format' of 'fast_csr_matrix' object has no setter; ```. ### Expected Behaviour. I expected to be able to import qutip :) . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.11.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.11.4; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. The environment above was generated with `scipy==1.10.1` (which still worked); I've changed the Scipy version to `1.11.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:2850,test,test-env-scipy-qutip,2850,https://qutip.org,https://github.com/qutip/qutip/issues/2182,1,['test'],['test-env-scipy-qutip']
Testability,"hile importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28483,test,tests,28483,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"his randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1109,test,test-environment,1109,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749,4,"['Assert', 'test']","['AssertionError', 'test-environment', 'tests']"
Testability,"hon Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:1523,log,logger,1523,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['log'],['logger']
Testability,"hon/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:12170,test,test,12170,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"hon3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Boar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5357,test,tests,5357,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"https://github.com/qutip/qutip/blob/2ca20fb829dc67d0ee32498422bad1f8ff852a95/qutip/core/data/permute.pyx#L229-L230. `if n:` ignore it completely and assign the wrong variable... This is the main problem. https://github.com/qutip/qutip/blob/2ca20fb829dc67d0ee32498422bad1f8ff852a95/qutip/core/data/permute.pyx#L265. And here's the offending unchecked multiplication. That test is actually off from what I intended, which was hiding the buggy function call below it. The unchecked 32-bit overflow punched through the test and revealed the problematic function. In worse matrices, this would have actually been a huge segfault - the identity was only safe because it has the same number of elements in each row. ---. That's exciting that someone else is trying it out! I'm glad there are speed-ups. If you've got issues let me know and I can maybe help out with some of the internals (my email's in my github profile). I'm fine to wait to check out a PR if you guys are working on something between you. I still need to find the time to finish off the dispatching system and pull the OpenMP parts back into `dev.major`...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382#issuecomment-728373500:371,test,test,371,https://qutip.org,https://github.com/qutip/qutip/issues/1382#issuecomment-728373500,2,['test'],['test']
Testability,"https://github.com/qutip/qutip/blob/f5149616a4071a273e7e48a63d956836739c4569/qutip/parallel.py#L7. When the latest scipy version is used (1.12.0), QuTiP (4.7.4) cannot be imported since `from scipy import array` is no longer supported in scipy. Code to reproduce the bug: ; `import qutip`. Output:; ```; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); Cell In[1], line 1; ----> 1 import qutip. File ~/anaconda3/envs/test/lib/python3.11/site-packages/qutip/__init__.py:133; 131 # graphics; 132 from qutip.bloch import *; --> 133 from qutip.visualization import *; 134 from qutip.orbital import *; 135 from qutip.bloch3d import *. File ~/anaconda3/envs/test/lib/python3.11/site-packages/qutip/visualization.py:24; 22 from qutip.qobj import Qobj, isket; 23 from qutip.states import ket2dm; ---> 24 from qutip.wigner import wigner; 25 from qutip.tensor import tensor; 26 from qutip.matplotlib_utilities import complex_phase_cmap. File ~/anaconda3/envs/test/lib/python3.11/site-packages/qutip/wigner.py:19; 17 import qutip; 18 from qutip import Qobj, ket2dm, jmat; ---> 19 from qutip.parallel import parfor; 20 from qutip.cy.sparse_utils import _csr_get_diag; 21 from qutip.sparse import eigh. File ~/anaconda3/envs/test/lib/python3.11/site-packages/qutip/parallel.py:7; 1 """"""; 2 This function provides functions for parallel execution of loops and function; 3 mappings, using the builtin Python module multiprocessing.; 4 """"""; 5 __all__ = ['parfor', 'parallel_map', 'serial_map']; ----> 7 from scipy import array; 8 import multiprocessing; 9 from functools import partial. ImportError: cannot import name 'array' from 'scipy' (/Users/konstantin/anaconda3/envs/test/lib/python3.11/site-packages/scipy/__init__.py); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2300:492,test,test,492,https://qutip.org,https://github.com/qutip/qutip/issues/2300,5,['test'],['test']
Testability,"i dont see any problem with changing to . if Object is None: . i tested in a few places and it seems fine, and since it is the preferred way of writing it i guess we should change these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/10#issuecomment-10960905:65,test,tested,65,https://qutip.org,https://github.com/qutip/qutip/issues/10#issuecomment-10960905,1,['test'],['tested']
Testability,"i:; - data = data + np.exp(1j * chi[idx]) * \; + data += np.exp(1j * chi[idx]) * \; zcsr_kron(c.conj(), c); else:; - data = data + zcsr_kron(c.conj(), c); + data += zcsr_kron(c.conj(), c); cdc = cd * c; cdct = cdc.T; - data = data - 0.5 * zcsr_kron(spI, cdc); - data = data - 0.5 * zcsr_kron(cdct, spI); + data -= 0.5 * zcsr_kron(spI, cdc); + data -= 0.5 * zcsr_kron(cdct, spI); ; if not td:; if data_only:; diff --git a/qutip/tests/test_expect.py b/qutip/tests/test_expect.py; index 45568110..17491981 100644; --- a/qutip/tests/test_expect.py; +++ b/qutip/tests/test_expect.py; @@ -120,7 +120,7 @@ def test_equivalent_to_matrix_element(hermitian):; state = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_oper",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:23299,test,tests,23299,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,"ial state must be a ket Qobj.""); ; if not ((len(H.shape) == 2) and (H.shape[0] == H.shape[1])):; raise ValueError(""the Hamiltonian must be 2-dimensional square Qobj.""); ; if not (psi0.dims[0] == H.dims[0]):; > raise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_10_happy_breakdown_e_ops_none[eigenstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:3500,test,tests,3500,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,ial; copying numpy/polynomial/_polybase.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_printing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_classes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ran,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:42187,test,tests,42187,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_interpolate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_control_pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; creating build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/bloch_redfield.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/bench_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; package init file 'qutip/cy/openmp/src/__init__.py' not found (or not a regular file); running egg_info; writing qutip.egg-info/PKG-INFO; writing dependency_links to qutip.egg-info/dependency_links.txt; writing requirements to qutip.egg-info/requires.txt; writing top-level names,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:16733,test,tests,16733,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,ib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x8,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:14328,test,tests,14328,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,ib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:37358,test,tests,37358,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"ib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Fram",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21316,test,test,21316,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"icit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1846,log,logic,1846,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,2,"['log', 'test']","['logic', 'tests']"
Testability,ide_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:37905,test,tests,37905,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"iel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.6; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ========================================================================= ERRORS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _boot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:1621,test,test,1621,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/e",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1220,test,tests,1220,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,1,['test'],['tests']
Testability,"igmax(), qt.sigmay(), qt.sigmaz()]; options = qt.solver.options.SolverResultsOptions(store_states=True). solver = MeSolver(H, options=options); result = solver.run(psi0, t, e_ops=e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); /tmp/ipykernel_9527/298290075.py in <module>; 6 options = qt.solver.options.SolverResultsOptions(store_states=True); 7 ; ----> 8 solver = MeSolver(H, options=options); 9 result = solver.run(psi0, t, e_ops=e_ops). ~/Documents/git/qutip/qutip5-dev/qutip/solver/mesolve.py in __init__(self, H, c_ops, options); 171 rhs += sum(c_op if c_op.issuper else lindblad_dissipator(c_op); 172 for c_op in c_ops); --> 173 super().__init__(rhs, options=options); 174 ; 175 self.stats['solver'] = ""Master Equation Evolution"". ~/Documents/git/qutip/qutip5-dev/qutip/solver/solver_base.py in __init__(self, rhs, options); 55 else:; 56 TypeError(""The rhs must be a QobjEvo""); ---> 57 self.options = options; 58 self.stats = {""preparation time"": 0}; 59 self._state_metadata = {}. ~/Documents/git/qutip/qutip5-dev/qutip/solver/solver_base.py in options(self, new); 248 new = self.optionsclass(**new); 249 elif not isinstance(new, self.optionsclass):; --> 250 raise TypeError(""options must be an instance of"" +; 251 str(self.optionsclass)); 252 self._options = new. TypeError: options must be an instance of<class 'qutip.solver.options.SolverOptions'>; ```. ### Expected Behaviour. I was expecting it work. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+08b5634 # Im using pr 1644; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.24; Matplotlib Version: 3.3.0; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. I am using PR #1644 to test how it works with qutip-tensorflow.; I am also aware that `MeSolver(H, options = {""store_states"" : True})` works fine.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1804:2220,test,test,2220,https://qutip.org,https://github.com/qutip/qutip/issues/1804,1,['test'],['test']
Testability,ild/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_interpolate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_control_pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; creating build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/bloch_redfield.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:16130,test,tests,16130,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,"ilities that are different from their true prefactor in the initial state. The ratio between the sampling frequencies and true prefactors would be weights on the trajectories. This also fixes some things in merging `McResult`s and `NmmcResult`s, and perhaps fixes the target tolerance computation for the ""improved sampling"" option. **Implementation**. A difficulty in the implementation is that the weights depend on the total number of trajectories in different ways. For example, the no-jump trajectory has a fixed weight that never changes, but all other trajectories come with prefactors $(1-p_0) / (N-1)$ where $p_0$ is the probability of the no-jump trajectory, and $N$ the total number of trajectories (including the one no-jump trajectory). For this reason, I separate weights into *absolute weights* (like $p_0$) and *relative weights* (like the others). The average is performed as follows:. $$ \bar\rho = \sum_{T: \text{abs}} w_a(T) w_r(T) \rho(T) + \frac{1}{N_{\text{rel}}} \sum _{T: \text{rel}} w_r(T) \rho(T) $$. where the first sum is over all trajectories T that have absolute weights, and the second sum over all other trajectories. Here, $w_a(T)$ and $w_r(T)$ are the absolute and relative weights, $\rho(T)$ the state associated with a trajectory, and $N_{\text{rel}}$ the number of trajectories that have not been assigned absolute weights. Intuitively, the idea is that absolute weights are for trajectories where the contribution to the full state is known exactly, and the trajectories without absolute weights are the stochastic part. **Things to do**; - [x] Update tests and create new ones; - [x] Update photocurrent to work with weights; - [x] Update target tolerance calculation to work with weights; - [x] Think about how result objects should be added if both contain trajectories with absolute weights; - [x] Double-check that this creates no problems for stochastic solvers; - [x] Towncrier entry. **Related issues or PRs**; https://github.com/qutip/qutip/issues/2235",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2369:2425,test,tests,2425,https://qutip.org,https://github.com/qutip/qutip/pull/2369,1,['test'],['tests']
Testability,ilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51313,test,tests,51313,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"illow/issues/7706"">#7706</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use subprocess with CREATE_NO_WINDOW flag in ImageShow WindowsViewer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7791"">#7791</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving GIF frame that restores to background color, do not fill identical pixels <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7788"">#7788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed reading PNG iCCP compression method <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7823"">#7823</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow writing IFDRational to UNDEFINED tag <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7840"">#7840</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix logged tag name when loading Exif data <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7842"">#7842</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use maximum frame size in IHDR chunk when saving APNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7821"">#7821</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Prevent opening P TGA images without a palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7797"">#7797</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use palette when loading ICO images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7798"">#7798</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use consistent arguments for load_read and load_seek <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7713"">#7713</a> [<a href=""https://github.com/radarhere""><c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:6201,log,logged,6201,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['log'],['logged']
Testability,iltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup PASSED [ 52%]; qutip/tests/test_qobjevo.py::test_QobjEvo_compress PASSED [ 55%]; qutip/tests/test_qobjevo.py::test_QobjEvo_shift PASSED [ 58%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply PASSED [ 61%]; qutip/tests/test_qobjevo.py::test_QobjEvo_apply_decorator PASSED [ 63%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec FAILED [ 66%]; qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat FAILED [ 69%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi FAILED [ 72%]; qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho FAILED [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_def,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:6744,test,tests,6744,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"in `math.factorial` is deprecated as of Python 3.9. Glancing over the rest of the code, I'm fairly sure `math.factorial` is only called on floats formed by (e.g.) `N / 2 + 0.5`, which is guaranteed be an integer for all odd `N` integers, but to be safe I inserted the same test that `math.factorial` will do as well. By the way: depending on how accurate you actually want/need to be with your degeneracy calculations, a common way to deal with these binomial quantities is to work in the logarithmic space --; ```python; def factln(x):; return scipy.special.gammaln(x + 1). def energy_degeneracy(N, m):; return int(np.exp(Decimal(factln(N) - factln(N/2 + m) - factln(N/2 - m)))); ```; This is pretty much guaranteed to be faster, but a little less precise; double-precision floats have ~15 decimal digits of precision compared to the `Decimal` default of 28. You have to be careful that the `np.exp` call doesn't overflow (unless you can use the number in logarithmic space as well), but you can just use a single `Decimal` instance like I did if it really matters to you to have huuuuge numbers output. I suspect it doesn't, since you multiply it by a float right after, which will overflow to `inf`. Timings:; ```python; from math import factorial; from decimal import Decimal; import numpy as np; from scipy.special import gammaln. def degeneracy_all_decimal(N, m):; return int(Decimal(factorial(N)) / (Decimal(factorial(int(N/2+m))) * Decimal(factorial(int(N/2-m))))). def degeneracy_log_then_decimal(N, m):; return int(np.exp(Decimal(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1)))). def degeneracy_log(N, m):; return int(np.exp(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1))); ```; ```python; In [3]: %timeit degeneracy_all_decimal(1000, 0); ...: %timeit degeneracy_log_then_decimal(1000, 0); ...: %timeit degeneracy_log(1000, 0); 831 µs ± 1.91 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each); 31.9 µs ± 190 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each); 4.63 ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1550:983,log,logarithmic,983,https://qutip.org,https://github.com/qutip/qutip/pull/1550,1,['log'],['logarithmic']
Testability,"in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.30s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.23s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.61s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.61s. Est. time left: 00:00:00:06; 52.0%. Run time: 4.99s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.01s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.37s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.74s. Est. time left: 00:00:00:01; Total run time: 5.89s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 89, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.31s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.25s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.65s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.65s. Est. time left: 00:00:00:06; 52.0%. Run time: 5.06s. Est. time left",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:7782,test,test,7782,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['test']
Testability,"in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.46s. Est. time left: 00:00:00:25; 20.0%. Run time: 4.37s. Est. time left: 00:00:00:17; 32.0%. Run time: 5.00s. Est. time left: 00:00:00:10; 40.0%. Run time: 5.01s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.65s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.69s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.31s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.89s. Est. time left: 00:00:00:01; Total run time: 7.03s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 90, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.40s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.32s. Est. time left: 00:00:00:17; 32.0%. Run time: 4.88s. Est. time left: 00:00:00:10; 40.0%. Run time: 4.89s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.45s. Est. time left",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:2984,test,test,2984,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['test'],['test']
Testability,"in_c_ops; FAILED qutip/tests/test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; FAILED qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; FAILED qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; FAILED qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; FAILED qutip/tests/test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; FAILED qutip/tests/test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; FAILED qutip/tests/test_openmp.py::test_openmp_mesolve_td - Exception: Could ...; FAILED qutip/tests/test_propagator.py::testPropHOStrTd - Exception: Could not...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call - Exception: Could not ...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call_args - Exception: Could...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could n...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could n...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Coul...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: Coul...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_with_state - Exception: Coul...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_pickle - Exception: Could no...; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle - Exception: Coul...; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; = 23 failed, 3077 passed, 101 skipped, 68 deselected, 1387 warnings in 1058.36s (0:17:38) =; ```.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:1312,test,tests,1312,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,"increased ``maxiter`` at ``test_driven_cavity_power_gmres()`` to 10000 in tests/test_steadystate.py; resolved mutable default value at ``parallel_map()`` in parallel.py; resolved mutable default value at various places in qobjevo.py; cleaned up now defunct class ``_file_list`` in qobjevo.py (fixes #1354). **Description**; Fixes #1354, increases ``maxiter`` at ``test_driven_cavity_power_gmres()`` to ``10000`` in ``tests/test_steadystate.py``. **Related issues or PRs**; fix #1354. **Changelog**; Increased ``maxiter`` at ``test_driven_cavity_power_gmres()`` to 10000 in tests/test_steadystate.py.; Resolved mutable default value at ``parallel_map()`` in parallel.py.; Resolved mutable default value at various places in qobjevo.py.; Cleaned up now defunct class ``_file_list`` in qobjevo.py (fixes #1354).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1355:74,test,tests,74,https://qutip.org,https://github.com/qutip/qutip/pull/1355,3,['test'],['tests']
Testability,"ine 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 207, in test_04_2_unitary_with_list_func_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); Fi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:13638,test,tests,13638,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['test'],['tests']
Testability,"ine this into a single pull request instead of splitting it up into many smaller ones (but this could be done). The changes in more detail:; - `state_number_enumerate` and `state_index_number` now always return tuples. Before, `state_number_enumerate` returned arrays for `excitations is None` and tuples otherwise, and `state_index_number` returned a list. For `excitations is None`, I realized that a simple call to `itertools.product` is enough, and is about 20x faster for a (relatively big) test case. It would be trivial to keep returning arrays instead of tuples here as before, but this slows the code down (quite significantly, in fact) and, in any case, returning arrays or tuples depending on whether `excitations` is set seems like an inconsistent interface, so I decided to make it consistent (and faster). I checked that the uses in the code base should not be affected. The algorithm used when the number of excitations is restricted is a slightly more elegant version of the one from my previous pull request (#1594), and is faster by another factor of 5 or more for the ""big"" test cases I looked at. ~~It is still recursive, but quite fast, and I did not find an elegant non-recursive algorithm.~~ I came up with an even faster non-recursive algorithm after all. It's arguably a bit less elegant, but I think still readable, and another 50% or so faster than the previous one (see the second commit below).; - `enr_state_dictionaries` now returns a dictionary and a list instead of two dictionaries. Before, `idx2state` was a dictionary with integer keys from 0 to nstates-1, which behaves essentially like a list. However, before Python 3.7, iteration order was not guaranteed to be insertion order (i.e., iterating over the dictionary could give the indices and states in any order, and it seems to me that `enr_thermal_dm`, which did exactly that, was not guaranteed to work).; - `state_number_index` and `state_index_number` now just call `np.ravel_multi_index` and `np.unravel_i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1604:1357,test,test,1357,https://qutip.org,https://github.com/qutip/qutip/pull/1604,1,['test'],['test']
Testability,"infidelity threshold not reached on Windows tests. It is a strange failure, as the assert_almost_equal would seem to be within tolerance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/599:44,test,tests,44,https://qutip.org,https://github.com/qutip/qutip/issues/599,1,['test'],['tests']
Testability,info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - A,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51723,test,tests,51723,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"ing clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release happened, and most of the maintainers took a break for a few weeks. Right now I'm a bit busier with work so my conversion rate has slowed a little. I'll probably be back on it in a week or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:1339,test,tests,1339,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241,2,"['log', 'test']","['log', 'tests']"
Testability,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2288,log,logical,2288,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,7,"['log', 'test']","['logic', 'logical', 'test', 'testing', 'tests']"
Testability,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3290,test,tests,3290,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['test'],['tests']
Testability,ing numpy/lib/arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/_datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; copying numpy/lib/ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib; creating build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_type_check.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_twodim_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__iotools.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_ufunclike.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_index_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arrayterator.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:35663,test,tests,35663,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ing numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler using new_build_clib; building 'npymath' library; compiling C sources; C compiler: clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9; creating build/temp.macosx-,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:46406,test,tests,46406,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"ing tests via `python3 -c ""import qutip.testing; qutip.testing.run()""`; ```; ============================= test session starts ==============================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3.9; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/projects/misc/build/qutip/.pybuild/cpython3_3.9_qutip/build-test/.hypothesis/examples'); rootdir: /home/drew/projects/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:1239,test,tests,1239,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"ing>', 'exec'); exec(import_code, locals()); except (ModuleNotFoundError, ImportError) as e:; time.sleep(0.05); tries += 1; _try_remove(try_file+ext); err = e; if not import_list:; > raise Exception(""Could not convert string to importable function, ""; ""tmpfile:"" + try_file + ext) from err; E Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_98549686147162.pyx. /usr/lib/python3/dist-packages/qutip/qobjevo_codegen.py:52: Exception; ================================================================================================================================ short test summary info =================================================================================================================================; FAILED qutip/tests/test_brmesolve_td.py::test_time_dependent_spline_in_c_ops - ModuleNotFoundError: No module named 'rhs4968610'; FAILED qutip/tests/test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split] - ModuleNotFoundError: No module named 'rhs4968611'; FAILED qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string] - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_46049686147042.pyx; FAILED qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_26849686147052.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_60949686147062.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_57149686147072.pyx; FAILED qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff - Exception: Could not convert string to",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:23152,test,tests,23152,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,ini files in tests will now be copied into dist,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/588:13,test,tests,13,https://qutip.org,https://github.com/qutip/qutip/pull/588,2,['test'],['tests']
Testability,init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_printing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_hermite.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_classes.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; copying numpy/polynomial/tests/test_polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/_pickle.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/setup.py -> build/lib.mac,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:42404,test,tests,42404,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test mo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26504,test,tests,26504,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,inverted test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1110:9,test,test,9,https://qutip.org,https://github.com/qutip/qutip/pull/1110,1,['test'],['test']
Testability,"ionOptions(accept_float=False)); options.append(CompilationOptions(static_types=True)); options.append(CompilationOptions(try_parse=False)); options.append(CompilationOptions(use_cython=False)); coeffs = [coefficient(base, compile_opt=opt) for opt in options]; for coeff in coeffs:; assert coeff(0) == 2+1j; for coeff1, coeff2 in combinations(coeffs, 2):; > assert not isinstance(coeff1, coeff2.__class__); E AssertionError: assert not True; E + where True = isinstance(<qutip.core.cy.coefficient.StrFunctionCoefficient object at 0x7f86f86a7d40>, <class 'qutip.core.cy.coefficient.StrFunctionCoefficient'>); E + where <class 'qutip.core.cy.coefficient.StrFunctionCoefficient'> = <qutip.core.cy.coefficient.StrFunctionCoefficient object at 0x7f86f86a7f00>.__class__. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py:239: AssertionError; __________________________________________________________________________ test_advance_use ___________________________________________________________________________. @pytest.mark.requires_cython; def test_advance_use():; opt = CompilationOptions(recompile=True, extra_import=""""""; from qutip import basis; from qutip.core.data cimport CSR; from qutip.core.data.expect cimport expect_csr; """"""); csr = qutip.num(3).data; coeff = coefficient(""expect_csr(op, op)"",; args={""op"": csr},; args_ctypes={""op"": ""CSR""},; compile_opt=opt); > assert coeff(0) == 5. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py:292:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; qutip/core/cy/coefficient.pyx:126: in qutip.core.cy.coefficient.Coefficient.__call__; ???; qutip/core/cy/coefficient.pyx:346: in qutip.core.cy.coefficient.StrFunctionCoefficient._call; ???; _ _ _ _ _ _ _",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:5503,Assert,AssertionError,5503,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['Assert'],['AssertionError']
Testability,ions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/te,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:38199,test,tests,38199,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"ip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); c_, n_ = qutip.countstat_current_noise(L, [], rhoss=rhoss, J_ops=J_ops); current[n] = c_[0]; noise[n] = n_[0, 0, 0]; ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:1437,assert,assert,1437,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['assert'],['assert']
Testability,ip/cy/spmatfuncs.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmatfuncs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmatfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/spmath.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/stochastic.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; copying qutip/cy/stochastic.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/cy/src/zspmv.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/cy/src/zspmv.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/src; copying qutip/control/cy_grape.cpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/cy_grape.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/tests/Hadamard_params.ini -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/cy/openmp/benchmark.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/cqobjevo_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/omp_sparse_utils.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build/temp.macosx-10.9-x86_64-3.7; creating bui,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:22320,test,tests,22320,https://qutip.org,https://github.com/qutip/qutip/issues/1404,1,['test'],['tests']
Testability,"ip/tests/test_processor.py::TestCircuitProcessor::test_modify_ctrls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:4364,Test,TestCircuitProcessor,4364,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,"['Test', 'test']","['TestCircuitProcessor', 'testMultiLevelSystem']"
Testability,"ipt, other than uninstalling cvxpy to make it run.; I then reinstalled cvxpy with upgrade and then qutip again. This time I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output in block 23 in the new code is significantly different from that in block 215 in the old code.; ```. ### Expected Behaviour. Expected qutip to produce same results on identical codes 3 years apart. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier Galicia, Paul Menczel, and Patrick Hopf.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://gi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:1801,Test,Test,1801,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['Test'],['Test']
Testability,"ir commitment to the QuTiP for the future, e.g., how they would help and support the project in their activity. Emeriti Admin Team members, including previous core contributors, are listed on the QuTiP website (at qutip.org/devs), governance (github.com/qutip/governance) and documentation. **<span style=""text-decoration:underline;"">Decisions</span>**; Each admin team member has a vote in decisions. As much as possible, admins try to take in feedback on changes from the wider community and timely communicate major changes in the software. . **<span style=""text-decoration:underline;"">Communications</span>**; The admin team agrees to keep in touch regularly, through the qutip-admin channel or chosed communication medium, through the repositories’ maintenance, and with regular virtual or in-person meetings. The admin team drafts a report, [once] a year and submits it to the Board to inform it of developments on the project. ### 3. Board; **Members of the Board make sure that the Admin Team and project is well supported financially and logistically.** Thanks to them helping enable the financial and logistics support, through scientific advisory and by keeping an eye on the project, they make the life of the admin team easier. . **<span style=""text-decoration:underline;"">Tasks</span>**; Board members are volunteers that pledge to:. - Meet** [once] **a year to review the development of the project (also online).; - Be consulted for scientific advice by the admins. ; - Help settle conflicts or roadblocks that may arise on the project development. ; - Help review student applications of interns that may volunteer or work on the QuTiP project.; - Try to provide funding for QuTiP development and maintenance.; - Become ambassadors for scientific open source in general and QuTiP in particular.; - Take formal decisions to allocate eventual funds, upon recommendation of the Admin Team. . **<span style=""text-decoration:underline;"">Composition</span>**; Initial board members are inv",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:10557,log,logistically,10557,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['log'],['logistically']
Testability,"is profile 'default' -> database=DirectoryBasedExampleDatabase(PosixPath('/home/drew/projects/misc/build/.hypothesis/examples')); rootdir: /home/drew/projects/misc/build/qutip; plugins: remotedata-0.4.1, asyncio-0.20.3, filter-subpackage-0.1.2, doctestplus-1.1.0, flaky-3.7.0, arraydiff-0.6.1, xvfb-3.0.0, astropy-0.11.0, mpi-0.6, astropy-header-0.2.2, cov-4.1.0, mock-3.12.0, openfiles-0.5.0, hypothesis-6.92.2; asyncio: mode=Mode.STRICT; collected 3269 items / 3233 deselected / 36 selected . qutip/tests/test_brmesolve_td.py::test_time_dependent_spline_in_c_ops FAILED [ 2%]; qutip/tests/test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split] FAILED [ 5%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string] FAILED [ 8%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy] FAILED [ 11%]; qutip/tests/test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[function] PASSED [ 13%]; qutip/tests/test_krylovsolve.py::TestKrylovSolve::test_04_simple_check_states_e_ops_H_sho PASSED [ 16%]; qutip/tests/test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList FAILED [ 19%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff FAILED [ 22%]; qutip/tests/test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff FAILED [ 25%]; qutip/tests/test_openmp.py::test_openmp_mesolve_td FAILED [ 27%]; qutip/tests/test_propagator.py::testPropHOStrTd FAILED [ 30%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call FAILED [ 33%]; qutip/tests/test_qobjevo.py::test_QobjEvo_call_args FAILED [ 36%]; qutip/tests/test_qobjevo.py::test_QobjEvo_step_coeff PASSED [ 38%]; qutip/tests/test_qobjevo.py::test_QobjEvo_copy PASSED [ 41%]; qutip/tests/test_qobjevo.py::test_QobjEvo_to_list PASSED [ 44%]; qutip/tests/test_qobjevo.py::test_QobjEvo_math_arithmetic PASSED [ 47%]; qutip/tests/test_qobjevo.py::test_QobjEvo_unitary PASSED [ 50%]; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:5682,Test,TestTimeDependence,5682,https://qutip.org,https://github.com/qutip/qutip/issues/2293,2,"['Test', 'test']","['TestTimeDependence', 'tests']"
Testability,"is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2119,test,tests,2119,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"ise ValueError(; ""'psi0' and the Hamiltonian must share the same dimension.""; ); E ValueError: 'psi0' and the Hamiltonian must share the same dimension. stage/usr/local/lib/python3.9/site-packages/qutip/krylovsolve.py:453: ValueError. stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_10_happy_breakdown_e_ops_none[eigenstate] ⨯ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:3706,Test,TestKrylovSolve,3706,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"ission corr., c_ops td (fn-list td format) ... ok; correlation: comparing TLS emission corr. (str-list td format) ... ok; correlation: comparing TLS emission corr. (np-list td format) ... ok; correlation: comparing TLS emission corr. (fn-list td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Cython structs : COO to CSR ... ok; Cython structs : sort CSR indices inplace ... ok; Cython structs : COO to CSR inplace (no sort) ... ok; Cython structs : COO to CSR inplace (sorted) ... ok; Cython structs : CSR to COO ... ok; qutip.tests.test_dimensions.test_flatten ... ok; qutip.tests.test_dimensions.test_enumerate_flat ... ok; qutip.tests.test_dimensions.test_deep_remove ... ok; qutip.tests.test_dimensions.test_unflatten ... ok; qutip.tests.test_dimensions.test_dims_idxs_to_tensor_idxs ... ok; qutip.tests.test_dimensions.test_dims_to_tensor_shape ... ok; qutip.tests.test_dimensions.test_type_from_dims ... ok; qutip.tests.test_dimensions.test_collapse ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Excitation-number-restricted state space: thermal density operator (II) ... ok; Entropy: von-Neumann entropy ... ok; Entropy: Linear entropy ... ok; Entropy: Concurrence ... ok; Entropy: Mutual information ... ok; Entropy: Conditional entropy ... ok; Entropy: Entangling power ... ok; expect: operator list and state list ... ok; expe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:6737,test,tests,6737,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['test'],['tests']
Testability,"ist[large dim-normal tlist-[c, c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_08_check_e_ops_mixed_list[small dim-empty tlist-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape =",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4225,test,tests,4225,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,"istests now return False if the object is not a Qobj instead of; raising an exception. In order to avoid a cyclical import qobj.py ->; istests.py -> qobj.py the istests have been moved to qobj.py and are; imported in istests.py for backwards compatability, closes #2. Sorry for the first failed attempt. I should also add some tests before that goes in I suppose. Just wanted to start the discussion about the cyclical import issue",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/4:327,test,tests,327,https://qutip.org,https://github.com/qutip/qutip/pull/4,1,['test'],['tests']
Testability,istutils/tests; copying numpy/distutils/tests/test_system_info.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_mingw32ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_from_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler_intel.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_misc_util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_shell_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_exec_command.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_npy_pkg_config.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler_nagfor.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler_gnu.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/misc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/internals.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/creation.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/dispatch.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/constants.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/ufuncs.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/broadcasting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/doc; copying numpy/doc/b,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:27337,test,tests,27337,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"it of a larger restructure:; - rearrange the repo root to have `/src/qutip` and `/test/qutip` instead of `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package that forces CI failures on its dependents, because it _requires_ the lower packages to move ""fix CI"" way up to the top of their priority list; you can't m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:1076,test,tests,1076,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,2,['test'],"['test', 'tests']"
Testability,"it/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?depe",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4038,Test,Test,4038,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Test'],['Test']
Testability,"it__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:18398,test,tests,18398,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"ite-packages/qutip/tests/test_stochastic_se.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:23884,test,test,23884,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,"ite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:17301,test,testing,17301,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"ite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:25408,test,testing,25408,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"ite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/te",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:9281,test,testing,9281,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,ivate; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler using new_build_clib; building 'npymath' library; compiling C sources; C compiler: clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9; creating build/temp.macosx-11.0-arm64-3.9/numpy; creating build/temp.macosx-11.0-arm64-3.9/numpy/core; creating bui,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:46492,test,tests,46492,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_interaction.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_masked_matrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/laguerre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/_polybase.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polyutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite_e.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/chebyshev.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/polynomial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/legendre.py -> build/lib.macosx-11.0-arm64-3.9/numpy/polynomial; copying numpy/polynomial/hermite,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:40946,test,tests,40946,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"j(), c); else:; - data = data + zcsr_kron(c.conj(), c); + data += zcsr_kron(c.conj(), c); cdc = cd * c; cdct = cdc.T; - data = data - 0.5 * zcsr_kron(spI, cdc); - data = data - 0.5 * zcsr_kron(cdct, spI); + data -= 0.5 * zcsr_kron(spI, cdc); + data -= 0.5 * zcsr_kron(cdct, spI); ; if not td:; if data_only:; diff --git a/qutip/tests/test_expect.py b/qutip/tests/test_expect.py; index 45568110..17491981 100644; --- a/qutip/tests/test_expect.py; +++ b/qutip/tests/test_expect.py; @@ -120,7 +120,7 @@ def test_equivalent_to_matrix_element(hermitian):; state = qutip.rand_ket(dimension, 0.3); op = qutip.rand_herm(dimension, 0.2); if not hermitian:; - op = op + 1j*qutip.rand_herm(dimension, 0.1); + op += 1j * qutip.rand_herm(dimension, 0.1); expected = (state.dag() * op * state).data[0, 0]; assert abs(qutip.expect(op, state) - expected) < 1e-14; ; diff --git a/qutip/tests/test_fileio.py b/qutip/tests/test_fileio.py; index b02e8cb9..db237a41 100644; --- a/qutip/tests/test_fileio.py; +++ b/qutip/tests/test_fileio.py; @@ -22,7 +22,7 @@ class Test_file_data_store_file_data_read:; def case(self, filename, kwargs):; data = 1 - 2*np.random.rand(_dimension, _dimension); if kwargs.get('numtype', 'complex') == 'complex':; - data = data * (0.5*0.5j); + data *= 0.5 * 0.5j; qutip.file_data_store(filename, data, **kwargs); out = qutip.file_data_read(filename); np.testing.assert_allclose(data, out, atol=1e-8); diff --git a/qutip/tests/test_gates.py b/qutip/tests/test_gates.py; index d42ba373..0a24b79a 100644; --- a/qutip/tests/test_gates.py; +++ b/qutip/tests/test_gates.py; @@ -24,7 +24,7 @@ def _remove_global_phase(qobj):; for phase in flat:; if phase != 0:; # Fix the gauge for any global phase.; - flat = flat * np.exp(-1j * np.angle(phase)); + flat *= np.exp(-1j * np.angle(phase)); break; return qutip.Qobj(flat.reshape(qobj.shape), dims=qobj.dims); ; @@ -310,7 +310,7 @@ class Test_expand_operator:; [ 1, -1, 1, -1, -1, 1, -1, 1],; [ 1, 1, -1, -1, -1, -1, 1, 1],; [ 1, -1, -1, 1, -1, 1, 1, -",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:23400,test,tests,23400,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,"j.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11496,test,tests,11496,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['test'],['tests']
Testability,"jEvo_call - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147092.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_call_args - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147102.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_vec - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_mul_mat - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147112.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_psi - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_expect_rho - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_45749686147122.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_with_state - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_76649686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_pickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147132.pyx; FAILED qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_11349686147142.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str - Excepti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:25555,test,tests,25555,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['test'],['tests']
Testability,just testing with simple decaying exponential one gets about 5% or so improvement compared to np functions and no difference with cmath,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/251#issuecomment-61603338:5,test,testing,5,https://qutip.org,https://github.com/qutip/qutip/pull/251#issuecomment-61603338,1,['test'],['testing']
Testability,"k (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:1502,test,test,1502,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,1,['test'],['test']
Testability,"k.; 527 # Adding a prefix make them safe to use.; --> 528 lock = filelock.FileLock(""compile_lock_"" + file_name + "".lock""); 529 try:; 530 lock.acquire(timeout=0). NameError: name 'filelock' is not defined; ```. However, I would expect it to be rare that users call `qutip.coefficient` directly including compilation options. The only indication that something might be wrong then comes from two failing tests, but it is very hard to deduce the actual problem from the pytest output:. ```shell; $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ................................................................................................................F........F..................................... [ 81%]; .......................................s [100%]. ============================================================================== FAILURES ===============================================================================; __________________________________________________________________________ test_CoeffOptions __________________________________________________________________________. @pytest.mark.requires_cython; def test_CoeffOptions():; from itertools import combinations; base = ""1 + 1. + 1j""; options = []; options.append(CompilationOptions(accept_int=True)); options.append(CompilationOptions(accept_float=False)); options.append(CompilationOptions(static_types=True)); options.append(CompilationOptions(try_parse=False)); options.append(CompilationOptions(use_cython=False))",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:3775,test,tests,3775,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['test'],['tests']
Testability,"k; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8871,Test,Test,8871,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Test'],['Test']
Testability,"k; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11189,Test,Test,11189,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Test'],['Test']
Testability,kle.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; copying numpy/random/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random; creating build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_direct.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_extending.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44215,test,tests,44215,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"kum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.0; Scipy Version: 1.7.0; Cython Version: 0.29.23; Matplotlib Version: 3.4.2; Python Version: 3.9.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/homebrew/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; ```. **Additional context**; No sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.cachesize: 3616980992 65536 4194304 0 0 0 0 0 0 0; hw.cpu64bit_capable: 1; hw.cpufamily: 458787763; hw.cpusubfamily: 2; hw.cpusubtype: 2; hw.cputype: 16777228; hw.ephemeral_storage: 0; hw.l1dcachesize: 65536; hw.l1icachesize: 131072; hw.l2cachesize: 4194304; hw.logicalcpu: 8; hw.logicalcpu_max: 8; hw.osenvironment: ; hw.packages: 1; hw.pagesize: 16384; hw.pagesize32: 16384; hw.physicalcpu: 8; hw.physicalcpu_max: 8; hw.serialdebugmode: 0; hw.tbfrequency: 24000000; hw.use_kernelmanagerd: 1; hw.use_recovery_securityd: 0; hw.targettype: J293; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:3610,log,logicalcpu,3610,https://qutip.org,https://github.com/qutip/qutip/issues/1606,1,['log'],['logicalcpu']
Testability,"l Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigen",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1485,log,logger,1485,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,1,['log'],['logger']
Testability,"l tests pass successfully, but overall tests return error code 1, which would be treated as test failure. For instance, running tests via `python3 -c ""import qutip.testing; qutip.testing.run()""`; ```; ============================= test session starts ==============================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3.9; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/projects/misc/build/qutip/.pybuild/cpython3_3.9_qutip/build-test/.hypothesis/examples'); rootdir: /home/drew/projects/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are no",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:1112,test,tests,1112,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"l/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_breakdown_parameters):; ""krylovsolve: check simple at happy breakdowns""; psi0, hz, Jx, Jz = happy_breakdown_parameters; krylov_dim = 12; N = 4; dim = 2**N; H = h_ising_transverse(N, hx=0, hz=hz, Jx=Jx, Jy=0, Jz=Jz); tlist = np.linspace(0, 20, 200); > self.simple_check_states_e_ops(; H, psi0, tlist, krylov_dim=krylov_dim, square_hamiltonian=False; ). stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:457: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py:217: in simple_check_states_e_ops; output = krylovsolve(; stage/usr/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:5113,Test,TestKrylovSolve,5113,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['Test'],['TestKrylovSolve']
Testability,"latform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:2863,test,tested,2863,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['test'],['tested']
Testability,ld/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_assumed_shape.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_common.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_kind.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_array_from_pyobj.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_real.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_size.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; creatin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:31384,test,tests,31384,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ld/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_common.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_kind.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_array_from_pyobj.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_real.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_size.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_callback.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_string.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_quoted_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_parameter.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_semicolon_split.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_compile_function.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_block_docstring.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_integer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_character.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_return_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_crackfortran.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; copying numpy/f2py/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/f2py/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/fft; copying numpy/fft/__init__.py -> build/lib.macosx-11.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:31487,test,tests,31487,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ld/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_io.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/num,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:37170,test,tests,37170,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ld/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_smoke.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_randomstate_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_seed_sequence.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_generator_mt19937_regressions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_random.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; copying numpy/random/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/random/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; copying numpy/testing/print_coercion_tables.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/num,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:44856,test,testing,44856,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['testing']
Testability,ld/lib.macosx-11.0-arm64-3.9/numpy/testing; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/nosetester.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/noseclasses.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/parameterized.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; copying numpy/testing/_private/decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler usin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:45977,test,testing,45977,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,['test'],"['testing', 'tests']"
Testability,"le importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Tra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21271,test,tests,21271,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"le; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_modu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:17129,test,tests,17129,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"le_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:17379,test,testing,17379,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"le_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:25486,test,testing,25486,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"le_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11886,test,testing,11886,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28899,test,testing,28899,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,lg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrix,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:39182,test,tests,39182,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_interpolate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_control_pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; creating build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/bloch_redfield.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; copying qutip/legacy/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/legacy; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/bench_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; package init file 'qutip/cy/openmp/src/__init__.py' not found (or not a regular file); running egg_info; writing qutip.egg-info/PKG-INFO; writing dependency_links to qutip.egg-info/dependency_links.txt; writing requirements to qutip.egg-info/requires.txt; writing top-level names to qutip.egg-info/top_level.txt; reading manifest file 'qutip.egg-info/SOURCES.txt,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:16829,test,tests,16829,https://qutip.org,https://github.com/qutip/qutip/issues/1404,1,['test'],['tests']
Testability,lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_parallel.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobjevo.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cavityqed.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_correlation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superop_reps.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rand.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_floquet.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_ptrace.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_entropy.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_openmp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_processor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_graph.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_gates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_eigenstates.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_dimensions.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_random.py -> build/lib.macosx-10.9-x86_64,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:15530,test,tests,15530,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/cpuinfo.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19548,test,tests,19548,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/cpuinfo.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/msvc9compiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/npy_pkg_config.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/misc_util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/log.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/line_endings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/lib2def,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:20123,test,tests,20123,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['test'],['tests']
Testability,lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_ufunc.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_dtype.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_accuracy.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_getlimits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_einsum.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_longdouble.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_overrides.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_ctors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_multiarray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_memmap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_nditer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_cpu_features.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_protocols.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/unixccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/numpy_distribution.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils; copying numpy/distutils/conv_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distuti,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:19449,test,tests,19449,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,lib.macosx-11.0-arm64-3.9/numpy/testing/_private; creating build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_decorators.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; copying numpy/testing/tests/test_doctesting.py -> build/lib.macosx-11.0-arm64-3.9/numpy/testing/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_warnings.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_matlib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_ctypeslib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_numpy_version.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_reloading.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_public_api.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; copying numpy/tests/test_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/tests; running build_clib; customize UnixCCompiler; customize UnixCCompiler using new_build_clib; building 'npymath' library; compiling C sources; C compiler: clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9; creating build/temp.macosx-11.0-arm64-3.9/numpy; creating build/temp.macosx-11.0-arm64-3.9/numpy/core; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/npymath; creating build/temp.macosx-11.0-arm64-3.9/build; creatin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:46662,test,tests,46662,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6033,test,test,6033,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['test']
Testability,linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - At,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50985,test,tests,50985,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimizat,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2899,Test,TestMESolveSuperInit,2899,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,2,"['Test', 'test']","['TestMESolveSuperInit', 'testMETDDecayAsArray']"
Testability,"list-[c, q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[large dim-empty tlist-[c]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[q]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_06_check_e_ops_callable[large dim-single element tlist] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[small dim-normal tlist-[q]] ✓ 93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_07_check_e_ops_list_single_callable[intermediate dim-single element tlist-[c]] ✓93% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_11_happy_breakdown_e_ops_callable[magnetization subspace state XXZ model] ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_03_simple_check_states_e_ops_H_ising_transverse ✓ 94% █████████▍; stage/usr/local/lib/python3.9/site-packages/qutip/tests/test_krylovsolve.py::TestKrylovSolve.test_05_check_e_ops_none[small dim-normal tlist] ✓ 94% █████████▍. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― TestKrylovSolve.test_9_happy_breakdown_simple[eigenstate] ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. self = <qutip.tests.test_krylovsolve.TestKrylovSolve object at 0xa0f9b8f10>; happy_breakdown_parameters = (Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; [[0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [1.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]; [0.]], 0.5, 0, 1). def test_9_happy_breakdown_simple(self, happy_bre",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190:4419,test,tests,4419,https://qutip.org,https://github.com/qutip/qutip/issues/2190,1,['test'],['tests']
Testability,logarithmic_negativity using wrong logarithm base,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/777:35,log,logarithm,35,https://qutip.org,https://github.com/qutip/qutip/issues/777,1,['log'],['logarithm']
Testability,"looks green!. **Edit**: wait, adding that comment is making it restart the testing... Here's the one that passed https://travis-ci.org/qutip/qutip/builds/19623192",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083074:75,test,testing,75,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083074,1,['test'],['testing']
Testability,"ls PASSED [ 9%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_save_read PASSED [ 18%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_evolution PASSED [ 27%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::test_id_with_T1_T2 PASSED [ 36%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 45%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testSpline PASSED [ 54%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testGetObjevo PASSED [ 63%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testNoise PASSED [ 72%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testMultiLevelSystem PASSED [ 81%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testDrift PASSED [ 90%]; ../../usr/lib/python3/dist-packages/qutip/tests/test_processor.py::TestCircuitProcessor::testChooseSolver PASSED [100%]. ================================================================================================ warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids))",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:4464,test,tests,4464,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['test'],['tests']
Testability,"ly by a sparse matrix, and instead it'll be a Fortran-ordered dense matrix, for which the stack/unstack is a free operation. That's an extremely exciting prospect! I'd love to be able to have internal sparse data for Qobj's that represent Hamiltonians/Liouvillians, but dense data for Qobj's that represent Hilbert space states or Density matrices. In fact, it looks like a significant part of the overhead in the [calculation of the Krotov's pulse update](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/optimize.py#L466) is due to the stacking/unstacking, see [`profile.svg`](https://gist.githubusercontent.com/goerz/34af142b78d7e344417d838bbea78aaf/raw/f3f49104083d59b9612f153d2f0ff652ea6a9f01/profile.svg) in the [gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf#file-profile-svg). In the benchmarking notebook, for the optimization in `In [34]`, that's the extra 6 seconds per iteration (iterations 1-3 should ideally take exactly twice as long as iteration 0, as iteration 0 is a simple forward propagation and all later iterations are one forward and one backward propagations). That's what we have in our Fortran implementation, too: the runtime of the optimization is basically just the runtime of all the internal propagations; calculating the updates should be completely negligible. There's also [shape conversions](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L254-L260) happening in [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) which would be nice to eliminate. Lastly, having dense internal storage for states might actually give the same speedup as we've demonstrated in https://qucontrol.github.io/krotov/v1.2.1/notebooks/09_example_numpy.html for doing Krotov with numpy arrays instead of Qobj's -- potentially even more speedup, in fact, since with nump",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:3870,benchmark,benchmarking,3870,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['benchmark'],['benchmarking']
Testability,"ly their surrounding `Cython` code to ease maintainability and reduce code bloat of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],; [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],; [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]); ```; we get; ```; qutip: [9, 6, 7, 1, 4, 5",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1322,test,tests,1322,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['test'],['tests']
Testability,"m two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:2976,test,test,2976,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['test'],['test']
Testability,m.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; creating build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spmv.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/spsolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; copying qutip/_mkl/utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/_mkl; creating build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_tensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brtools.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spinchain.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_spmath.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mkl.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_basis_transformation.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_td_formats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_noise.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubit_evolution.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_heom_solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_brmesolve_td.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_three_level.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_superoper.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_propagator.py -> bui,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:11613,test,tests,11613,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,m64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalar_methods.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarmath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_item_selection.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_machar.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_unicode.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_arrayprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarbuffer.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexerrors.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_print.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_errstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_records.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarinherit.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_function_base.py -> build/l,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:16769,test,tests,16769,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"m_boost():; M[4, 6] = 1; M[5, [6, 7]] = 1; M[6, 7] = 1; - M = M+M.T; + M += M.T; M = sp.csr_matrix(M, dtype=complex); with pytest.deprecated_call():; perm = reverse_cuthill_mckee(M, 1); @@ -120,7 +120,7 @@ def test_graph_weighted_matching():; A.data = np.ones(a_len); d = np.arange(0, 25) + 2; B = sp.diags(d, offsets=0, format='csc'); - A = A+B; + A += B; perm = np.random.permutation(25); perm2 = np.random.permutation(25); B = sp_permute(A, perm, perm2); diff --git a/qutip/tests/test_mcsolve.py b/qutip/tests/test_mcsolve.py; index f8567d0e..fe3f264c 100644; --- a/qutip/tests/test_mcsolve.py; +++ b/qutip/tests/test_mcsolve.py; @@ -173,7 +173,7 @@ def test_expectation_dtype(options):; a = qutip.tensor(qutip.destroy(focks), qutip.qeye(2)); sm = qutip.tensor(qutip.qeye(focks), qutip.sigmam()); H = 1j*a.dag()*sm + a; - H = H + H.dag(); + H += H.dag(); state = qutip.basis([focks, 2], [0, 1]); times = np.linspace(0, 10, 5); c_ops = [a, sm]; diff --git a/qutip/tests/test_mesolve.py b/qutip/tests/test_mesolve.py; index f17115ec..bc6cce59 100644; --- a/qutip/tests/test_mesolve.py; +++ b/qutip/tests/test_mesolve.py; @@ -238,8 +238,8 @@ class TestJCModelEvolution:; nc_ss, na_ss = self.jc_steadystate(; N, wc, wa, g, kappa, gamma, pump, psi0, use_rwa, tlist); ; - nc_ss = nc_ss * np.ones(np.shape(nc)); - na_ss = na_ss * np.ones(np.shape(na)); + nc_ss *= np.ones(np.shape(nc)); + na_ss *= np.ones(np.shape(na)); ; assert_(abs(nc[-1] - nc_ss[-1]) < 0.005, True); assert_(abs(na[-1] - na_ss[-1]) < 0.005, True); diff --git a/qutip/tests/test_qobj.py b/qutip/tests/test_qobj.py; index 11caa048..c875ef3f 100644; --- a/qutip/tests/test_qobj.py; +++ b/qutip/tests/test_qobj.py; @@ -244,7 +244,7 @@ def test_QobjAddition():; x1 = q + 5; x2 = 5 + q; ; - data = data + np.eye(5) * 5; + data += np.eye(5) * 5; assert np.all(x1.full() == data); assert np.all(x2.full() == data); ; @@ -298,7 +298,7 @@ def test_QobjDivision():; data = _random_not_singular(5); q = Qobj(data); randN = 10 * np.random.random(",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:25746,test,tests,25746,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['test'],['tests']
Testability,ma/extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/testutils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py ->,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:39450,test,tests,39450,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,ma; copying numpy/ma/bench.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/timer_comparison.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; copying numpy/ma/mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma; creating build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_old_ma.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_core.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_subclassing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_extras.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_mrecords.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; copying numpy/ma/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/ma/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; copying numpy/matrixlib/defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib; creating build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_matrix_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_defmatrix.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_interaction.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copying numpy/matrixlib/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/matrixlib/tests; copyin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:39724,test,tests,39724,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qpt.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_enr_state_operator.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qubitcircuit.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_states.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_operators.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_utilities.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_sp_eigs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fileio.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_subsys_apply.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_cy_structs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_partial_transpose.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_pulse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_lattice.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_qobj.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_piqs.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_rhs_reuse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_stochastic_se.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_fastsparse.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/tests; copying qutip/tests/test_mcsolve.py -> build/lib.macosx-10.9-x,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:13977,test,tests,13977,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['test'],['tests']
Testability,macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_half.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_mem_overlap.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_shape_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_errstate.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_records.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarinherit.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_indexing.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_numeric.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_datetime.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test__exceptions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_extint128.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_umath_complex.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/_locales.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_defchararray.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_conversion_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_scalarprint.py -> build/lib.macosx-11.0-arm64-3.9/numpy/core/tests; copying numpy/core/tests/test_abc.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:17629,test,tests,17629,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraysetops.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_function_base.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_arraypad.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_mixins.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_packbits.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test__datasource.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_stride_tricks.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_financial.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_recfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_nanfunctions.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_format.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_histograms.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; copying numpy/lib/tests/test_regression.py -> build/lib.macosx-11.0-arm64-3.9/numpy/lib/tests; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/setup.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; copying numpy/linalg/linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg; creating build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_linalg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_deprecations.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/linalg/tests; copying numpy/linalg/tests/test_build.py -> build/lib.macosx-11.0-arm64-3.9/n,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:37267,test,tests,37267,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"matplotlib 3.4 has begun issuing some new deprecation warnings against some of the stuff we do in `bloch.py`. Simple reproducer from within `ipython --matplotlib`:; ```python; In [1]: import qutip; ...: b = qutip.Bloch(); ...: b.add_vectors([0, 1, 0]); ...: b.render(); ```; produces; ```; /Users/jake/.anaconda3/envs/qutip/lib/python3.9/site-packages/qutip/bloch.py:451: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6. This is consistent with other Axes classes.; self.axes = Axes3D(self.fig, azim=self.view[0], elev=self.view[1]). /Users/jake/.anaconda3/envs/qutip/lib/python3.9/site-packages/qutip/bloch.py:59: MatplotlibDeprecationWarning:; The M attribute was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use self.axes.M instead.; xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, renderer.M); ```. This particular environment had `matplotlib==3.4.1`. The warnings themselves suggest fixes, however some care needs to be taken; I suspect that the additional keyword `auto_add_to_figure` might be new in matplotlib 3.4 (not sure about the `.M` attribute). We want to keep compatibility with at least `matplotlib>=3` (we don't want to picky so it's easy to use QuTiP with other packages), so it might be necessary to include a version test using `packaging.version.parse`. If someone could test whether that's necessary, that'd be great.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1503:1535,test,test,1535,https://qutip.org,https://github.com/qutip/qutip/issues/1503,2,['test'],['test']
Testability,matplotlib have some unit tests that include image comparison using PIL. might be something to look into. http://matplotlib.org/devel/testing.html. but in our case it might be sufficient to have a set of script files that generate test figures that we can inspecct visually to see if something broke?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/12#issuecomment-11232492:26,test,tests,26,https://qutip.org,https://github.com/qutip/qutip/issues/12#issuecomment-11232492,3,['test'],"['test', 'testing', 'tests']"
Testability,"matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indice",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10392,Test,Test,10392,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Test'],['Test']
Testability,"may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],; [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],; [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]); ```; we get; ```; qutip: [9, 6, 7, 1, 4, 5, 2, 0, 3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converted the `matlab` indexing into 0-based), however they both have the same ""bandwidth"" of 5, so I assume they are all equivalent. I don't really know anything about the theory here, and just went with what the `matlab` documentation said: https://uk.mathworks.com/help/matlab/ref/symrcm.html. In commit 0ce36d00 it is clear that the functions i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1670,test,test,1670,https://qutip.org,https://github.com/qutip/qutip/issues/1203,2,['test'],['test']
Testability,"mcsolve tests failing, probably due to states not being averaged",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/37:8,test,tests,8,https://qutip.org,https://github.com/qutip/qutip/issues/37,1,['test'],['tests']
Testability,"me 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/l",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26382,test,testing,26382,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"mesolve returns num_collapse =0, even when I pass collapse operators to it like this ; ``` python; from qutip import *; import numpy as np; import matplotlib.pyplot as plt; from math import *. times = np.linspace(0.0, 10.0, 200); psi0 = tensor(fock(2,0), fock(10, 5)); a = tensor(qeye(2), destroy(10)); sm = tensor(destroy(2), qeye(10)); H = 2 * np.pi * a.dag() * a + 2 * np.pi * sm.dag() * sm + 2 * np.pi * 0.25 * (sm * a.dag() + sm.dag() * a). result = mesolve(H, psi0, times, [np.sqrt(0.1)*a], [a.dag()*a, sm.dag()*sm]); print(""result.num_collapse"",result.num_collapse); # I am getting the no of collapse operators as zero. print(""len(result.expect[0]): {}"".format(len(result.expect[0]))). fig1 = plt.figure(); ax1 = fig1.add_subplot(1, 1, 1). ax1.set_title(""Final evolution""); ax1.set_xlabel(""Time""); ax1.set_ylabel(""P""); ax1.plot(times, result.expect[0], 'b*', linewidth=2); ax1.plot(times, result.expect[1], 'g+', linewidth=2). plt.show(); ``` ; (Some of the code is from @ajgpitch ). PFA the test run of the qutip.testing module as [qutip_testing.pdf](https://github.com/qutip/qutip/files/1865397/qutip_testing.pdf) so that anyone interested could see if there is anything wrong with my installation. Also please let me know if there is any other piece of information that needs to be known. >Computer OS: MacOS 10.13.3 High Sierra. -- ; Thanking You,. Kind regards,. Tejas Shetty. Email ID: tejasshetty.1808@gmail.com",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/846:999,test,test,999,https://qutip.org,https://github.com/qutip/qutip/issues/846,2,['test'],"['test', 'testing']"
Testability,"mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 4.37e+12); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.08e+13); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:5067,Test,Test,5067,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['Test'],['Test']
Testability,"ming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.; * [x] Swap illinois algorithm with a root finder from scipy. --> **Now using <code>scipy.optimize.root_finder</code>**.; * [x] <code>n_iterations</code> become <code>delta_t</code> when <code>optimizer</code> is called. It does not seems to be an integer so isn't <code>delta_t</code> a better name here? --> **Renamed to <code>delta_t</code>.**; * [x] <code>bound_function</code> seems very generic. Same with <code>optimizer</code>. --> **Renamed to <code>_lanczos_error_equation_to_optimize_delta_t</code> and <code>_optimize_lanczos_timestep_size</code>.**; * [x] numpy's array have a <code>dot</code> method that act the same a sparse array's one. This is not needed.; * [x] The <code>dims</code> of the outp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1734,assert,assert,1734,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['assert'],['assert']
Testability,"mitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2190,test,test,2190,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,['test'],"['test', 'testPlot']"
Testability,"mo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic os",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:1433,log,logger,1433,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['log'],['logger']
Testability,"module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Librar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:20070,test,testing,20070,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g., the jump operator. Also, in `development-smesolve-tests`, the equations are already there for example. Block 23 is beautiful, and it could be reproduced in the tutorial. . * Similarly, a user guide entry would really enhance the adoption of these solvers. At a later stage, some more refined example applications could be provided. * Review is still ongoing, I will provide comments on the .py files and other solvers files. Help from other developers is welcome as these are massive changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:3682,test,tests,3682,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['test'],['tests']
Testability,"modyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculatio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10717,Test,Test,10717,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Test'],['Test']
Testability,mpiler/lahey.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/g95.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/mips.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/hpux.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/environment.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/pathf95.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/absoft.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/vast.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_system_info.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_mingw32ccompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_from_template.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler_intel.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_misc_util.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_fcompiler.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_shell_utils.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_exec_command.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/tests; copying numpy/distutils/tests/test_npy_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:26365,test,tests,26365,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['test'],['tests']
Testability,"mplementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4""><code>147c851</code></a> v2.31.0</li>; <li><a href=""https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5""><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>; <li><a href=""https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe""><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=""https://redirect.github.com/psf/requests/issues/6424"">#6424</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149""><code>b639e66</code></a> test on py3.12 (<a href=""https://redirect.github.com/psf/requests/issues/6448"">#6448</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be""><code>d3d5044</code></a> Fixed a small typo (<a href=""https://redirect.github.com/psf/requests/issues/6452"">#6452</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29""><code>2ad18e0</code></a> v2.30.0</li>; <li><a href=""https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773""><code>f2629e9</code></a> Remove strict parameter (<a href=""https://redirect.github.com/psf/requests/issues/6434"">#6434</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:5906,test,test,5906,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['test'],['test']
Testability,"mplex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = True; Qobj data =; [[0. 0.06283185 ... 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0.33835988 0. ]]; c_op_list = [Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = False; Qobj data =; [[0. 0.2236068... 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. ]]]; kwargs = {'method': <900x900 _CustomLinearOperator with dtype=complex128>}, ss_args = {'ILU_MILU': 'smilu_2', 'M': None, 'all_states': False, 'diag_pivot_thresh': None, ...}, key = 'method'; L = Quantum object: dims = [[[30], [30]], [[30], [30]]], shape = (900, 900), type = super, isherm = False; Qobj data =; [[ 0.... +0.j 0. +0.j 0. +0.j ...; 0. +0.j 0. -0.33835988j -1.45 +0.j ]]; n = 30. def build_preconditioner(A, c_op_list=[], *",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:5485,test,tests,5485,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['test'],['tests']
Testability,"mport name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:16471,test,testing,16471,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['testing']
Testability,"mport(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:7276,test,tests,7276,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24150,test,tests,24150,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:32344,test,tests,32344,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11484,test,tests,11484,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26384,test,tests,26384,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:45754,test,tests,45754,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39049,test,tests,39049,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, python 3.6.10-final-0 -----------; Name Stmts Miss Cover; -----------------------------------------------------------------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47989,test,tests,47989,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9994,test,tests,9994,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12975,test,tests,12975,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18936,test,tests,18936,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27130,test,tests,27130,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
Testability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30111,test,tests,30111,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['test'],['tests']
