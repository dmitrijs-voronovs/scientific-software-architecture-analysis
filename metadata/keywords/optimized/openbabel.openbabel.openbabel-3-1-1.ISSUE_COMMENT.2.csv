quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:518,rewrite,rewrite,518,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071,1,['rewrite'],['rewrite']
Modifiability,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:47,config,configuration,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,3,['config'],['configuration']
Modifiability,"@baoilleach I'm inclined to merge this. We can add clear documentation in the installation instructions, but I think for most use, it's preferable to have portable binaries than perfect speed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306:155,portab,portable,155,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306,1,['portab'],['portable']
Modifiability,"@cowsandmilk That is a nice counter example. It's clear that this will cause some bug reports, but there's no way around it apart from flagging it up in the docs, and perhaps also at the end of the configuration (I think Avogadro does a great job of summarising the configuration after running cmake). @jeffjanes: I don't think that's possible. I think we should just optimise for the architecture at build time, with an option to override it (which we flag up in the configuration summary somehow).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983:198,config,configuration,198,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983,3,['config'],['configuration']
Modifiability,"@e-kwsm thanks for such opportunity to fix seeds for reproducibility! However after build this pr I still can't repeat results when call obabel from bash, both putting seed argument in and after setting environment variable, for example for this CC1=CC(CNC2=CC=C(NC3CCC4=CC=C(C5=NNN=N5)C=C43)C=C2NC2=CC=C(F)N=C2F)=NC(C)=N1 mol. I build library with 3 option from [here](https://github.com/openbabel/openbabel/tree/master/scripts/python). Could you please suggest some workaround?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2241#issuecomment-1258460828:215,variab,variable,215,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2241#issuecomment-1258460828,1,['variab'],['variable']
Modifiability,"@fredrikw ; Greetings,; Thanks for the quick reply!; I have exhausted the available 6 conda-package options for linux-64 platforms with the same uninformative error message. (segmentation fault); How do I list all cmake variables to set?. A bit of user level info: I'm using mostly linux (LMDE2) and I have compiled a few chemistry program packages before and I know it is seldom easy. I use Python + numpy but I don't ""speak"" other languages. p.s. I can make a public docker image, which reproduces the problem -- if that helps.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-158945981:220,variab,variables,220,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-158945981,1,['variab'],['variables']
Modifiability,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:758,config,config-settings,758,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905,1,['config'],['config-settings']
Modifiability,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:631,extend,extends,631,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['extend'],['extends']
Modifiability,"@fredrikw Thanks for the explanation and the suggestion to iterate over atoms using Pybel. In fact, your solution helps me a lot, and for the moment is well working. I am checking few examples and it seems all of them are correct. So, thanks for suggest this easy solution to use `SetAromaticPerceived` instead of `AssignAromaticFlags`. ; @nbehrnd Thank you so much for all the explanation and links! Actually, I think that the problem as you said is the different annotation of the single and double bonds. For the moment, the solution of @fredrikw seems to work correctly, if not, I will try to rewrite just using the xyz information. The saturation was done with ChemAxon.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177825212:597,rewrite,rewrite,597,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177825212,1,['rewrite'],['rewrite']
Modifiability,"@ghutchis The inversion of «clockwise» to «anticlockwise» orientation described for stereogenic centres described in the manual for version 3.0.1 ([entry](https://open-babel.readthedocs.io/en/latest/Stereochemistry/stereo.html#modifying-the-stereochemistry)), padded by snippets of code, led me to the assumption openbabel were capable to recognize .and. assign _R_ and _S_ configurations. From your reply, I recognize this was inversion of these priorities doesn't match with the feature suggestion. Thank you for the clarification.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507:374,config,configurations,374,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507,1,['config'],['configurations']
Modifiability,"@ghutchis and @e-kwsm what is the status of this? It would be great to be able to pass in an option to `obabel` giving a seed so that the `--gen3d` option always returns the same geometry. The last commit [here](https://github.com/openbabel/openbabel/pull/2241) gives a workable solution I think, where you would have to set the seed as an environment variable before calling `obabel`, but it hasn't been merged.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-867719590:352,variab,variable,352,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-867719590,1,['variab'],['variable']
Modifiability,"@ghutchis this fixes the infinite loop issue I was seeing when the BABEL_LIBDIR variable was set to something containing no files. You could of course go the other way and change the code to respect the -1 error introduced by the unix variant, but it seemed better to adjust it to return 0 as the windows variant is. I verified the loop then terminates as expected whether files are found or not.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/273#issuecomment-193378975:80,variab,variable,80,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273#issuecomment-193378975,1,['variab'],['variable']
Modifiability,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:280,extend,extend,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,2,['extend'],"['extend', 'extended']"
Modifiability,"@jonathaw PyPi references the unofficial repository / fork of [openbabel-wheel](https://pypi.org/project/openbabel-wheel/). A couple of times, this project was an helpful alternative for me (e.g., for the portable [winpython](https://winpython.github.io/)) when the setup of ""openbabel 3.1.1.1"" ([entry](https://pypi.org/project/openbabel/)) failed. It only requires an adjustment in the `requirements.txt` file (if your project is organized this way), other source code remains the same. (Ensure that the Python virtual environment uses _only_ `openbabel-wheel`, though.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414909989:205,portab,portable,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414909989,1,['portab'],['portable']
Modifiability,"@merkys I just submitted same intermediate `reconstruct.sdf` to RDKit (currently 2020.09.5 for Debian 12/bookworm [testing]):. ```python; import rdkit; from rdkit import Chem. m = Chem.MolFromMolFile(""reconstruct.sdf""); print(Chem.MolToSmiles(m)); ```; This assigns `COC(=O)/C=C1\CN(S(=O)(=O)c2ccc(C)cc2)C\C1=C/c1ccccc1` as SMILES string with (*Z*,*Z*)-configuration. It is not the one COD currently states on the landing page of the entry, but leads to an equivalent representation in e.g., CDK Depict and OpenBabel.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622:353,config,configuration,353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622,1,['config'],['configuration']
Modifiability,"A follow up to this, I was able to compile a conda version of openbabel using `conda install -c conda-forge openbabel` and am trying on running a code using python. I got an error saying following: . ```python; ImportError: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by /home/<user_id>/.conda/envs/auto3D/lib/python3.8/site-packages/openbabel/_openbabel.so); ```. which was solved by declaring the `LD_LIBRARY_PATH` variable pointing to the `env/lib` directory. I feel this seems to be a decent minimal working product to try out. I would revisit the path error which started my initial discussion at a later point. Appreciate your help!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320425502:441,variab,variable,441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320425502,1,['variab'],['variable']
Modifiability,"A virtual environment is supposed to act as a way to start from scratch again, right?. Could I not just nuke my entire python install, deinstall everything babel related, remove the path variables and then install python + my libs (i have a batch file for that) and *then* openbabel-wheel? If I use openbabel-wheel, I no longer need the GUI app right?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522:187,variab,variables,187,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522,1,['variab'],['variables']
Modifiability,"ARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:23296,Config,Configuring,23296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Config'],['Configuring']
Modifiability,"Aaaaah my bad! It's indeed a macro, not a function... > Put all string **literals** in _T() macros. so not variables ^^'. The definition I have is similar to yours:; ```; #define __TEXT(q) L##q; #else; #define __TEXT(q) q; #endif; \\ comment; #define TEXT(q) __TEXT(q); ```. Indeed, in that same article,they say:. > `TCHAR` is #defined as either a `char` or a `wchar_t` depending on whether or not the `UNICODE` macro was defined. And, as you suggest, writing; ```; if(LoadLibrary( (PTCHAR) lib_name.c_str() )); return true;; ```; worked fine for me. However, now I have a doubt when they say:. > Never ever ever C style cast C strings from one type to another. C style casts mask very important compiler errors. Avoid C++ style casts also. Basically if you're getting type errors with your strings -- it's because you're doing something wrong. Don't try to cast around the problem. So this might not be exactly what we want... On the other hand, there is something I do not get... This `openLib()` method is implemented in the same way in both `dlhandler_win32.cpp` and `dlhandler_unix.cpp` when compiled with MinGW (in the latter, it is surrounded by `#ifdef __MINGW32__` ... `#else`). The compile error came only from `dlhandler_unix.cpp`. Is it because of some different `#include`s?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089:107,variab,variables,107,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089,1,['variab'],['variables']
Modifiability,"According to GetChiralStereo in smilesformat.cpp. // NOTE: THIS SECTION IS WRONG. IT'S JUST A COPY OF THE ORIGINAL OPENBABEL; // CODE, AND DOESN'T ACCOUNT FOR THE FACT THAT THE CANONICAL SMILES IS REORDERED.; // NEEDS TO BE REWRITTEN, BUT IN COORDINATION WITH A REWRITE OF CHIRALITY IN; // THE smilesformat.cpp FILE. -- CJ. Hmmm...that would explain it :-) But it should be relatively easy to fix. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794627:262,REWRITE,REWRITE,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794627,1,['REWRITE'],['REWRITE']
Modifiability,"Actually, I decided to stick the version string in at configure time, and not to rely on a call to the C++ at run-time. The reason is that if there *is* a version mismatch, it just will cause an import failure and we will never find out the version of the Python bindings. This way, we will know that piece of the puzzle. From my point of view, I think this is ready for merging.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470696318:54,config,configure,54,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470696318,1,['config'],['configure']
Modifiability,"After reading the docs, I realise that in the Python interface all global variables are stuck into openbabel.cvar somehow, but dir(openbabel.cvar) doesn't work. However, accessing openbabel.cvar.obErrorLog works fine, e.g.:. >>> dir(openbabel.cvar.obErrorLog); ['ClearLog', 'GetAuditMessageCount', 'GetDebugMessageCount', 'GetErrorMessageCou; nt', 'GetInfoMessageCount', 'GetMaxLogEntries', 'GetMessageSummary', 'GetMessage; sOfLevel', 'GetOutputLevel', 'GetOutputStream', 'GetWarningMessageCount', 'SetMa; xLogEntries', 'SetOutputLevel', 'SetOutputStream', 'StartErrorWrap', 'StartLoggi; ng', 'StopErrorWrap', 'StopLogging', 'ThrowError', '__class__', '__del__', '__de; lattr__', '__dict__', '__doc__', '__getattr__', '__getattribute__', '__hash__',; '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',; '__setattr__', '__str__', '__swig_destroy__', '__swig_getmethods__', '__swig_set; methods__', '__weakref__', 'this']; >>> pybel.ob.cvar.obErrorLog.StopLogging(). It's possible to rename cvar to something more catchy - I vote for 'globals' (see section 30.3.3). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169:74,variab,variables,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169,1,['variab'],['variables']
Modifiability,"Also have issues with 2.3.2 as follows:. -- Found PythonInterp: /usr/bin/python (found version ""2.7.3"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (found version ""2.7.3"") ; -- Python bindings will be compiled; -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details. If I remove -DPERL_BINDINGS, configure and build to completion. However, the python related products are not installed correctly - they're in /usr/lib64 instead of the python site directory (which v2.3.1 did correctly with an in-tree build"". If I then include a -DPYTHON_PREFIX=... as per wiki, configure phase gives warning:; ....; -- Configuring done; -- Generating done; CMake Warning:; Manually-specified variables were not used by the project:; PYTHON_PREFIX. The build completes as before with PYTHON_PREFIX ignored, as warned, and python products installed in /usr/lib64 again. NB. compared with v2.3.1, 2.3.2 does not generate open babel.pyc, not openbabel-1.7-py2.7.egg-info. Original comment by: cwilling",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802849:755,config,configure,755,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802849,4,"['Config', 'config', 'variab']","['Configuring', 'configure', 'variables']"
Modifiability,"Are you using the gcc that came with the OS? What is the output of gcc -v?; It looks like a position independent code problem but I've never seen it; happen with a system compiler. Maybe @rathann can comment. On Sat, 11 May 2019, 09:22 Vcald, <notifications@github.com> wrote:. > I have a failure when trying to compile Open Babel 2.4.1 on fedora 30 x64.; > I configure with this command from the created build directory:; > cmake -DRUN_SWIG=yes -DPYTHON_BINDINGS=yes -DBUILD_GUI=yes ..; > Then run make -j4; > Then it fails like this:; > [ 20%] Building CXX object; > src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.o; > [ 21%] Building CXX object; > src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.o; > [ 21%] Building CXX object; > src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.o; > [ 21%] Building CXX object; > src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.o; > [ 21%] Linking CXX shared module ../lib/plugin_forcefields.so; > /usr/bin/ld:; > CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.o(.debug_loc+0x800000001262df):; > reloc against `.text._ZN9OpenBabel12OBForceFieldD0Ev': error 4; > /usr/bin/ld: final link failed: nonrepresentable section on output; > collect2: error: ld returned 1 exit status; > make[2]: *** [src/CMakeFiles/plugin_forcefields.dir/build.make:134:; > lib/plugin_forcefields.so] Error 1; > make[1]: *** [CMakeFiles/Makefile2:1159:; > src/CMakeFiles/plugin_forcefields.dir/all] Error 2; > make: *** [Makefile:141: all] Error 2; >; > Any hint?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1984>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGMPDRDIXKAEFF5CJNDPUZ65ZANCNFSM4HMHTVIA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1984#issuecomment-491495179:360,config,configure,360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1984#issuecomment-491495179,1,['config'],['configure']
Modifiability,"At the least, there should be an option to bundle the plugins into the main; .so, independently of a static build. On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:. On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > ; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; or mute the thread; https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311:54,plugin,plugins,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311,1,['plugin'],['plugins']
Modifiability,"Atoms sorting procedure is implemented in POSCAR plugin (write function). It should be no problem with the function from this point of view. But IMHO it is better to collect symmetric sites in the same place as original one. It will be easy to edit check and edit output file manually. One extra comment about the functionality. In disordered structures, where one atom can be substituted by another atom, two different type of atoms can occupy the same site. Does the code take care about it or not? I looked the code through, but did not find an answer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/319#issuecomment-230299956:49,plugin,plugin,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/319#issuecomment-230299956,1,['plugin'],['plugin']
Modifiability,"BDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1205,Config,Configuration,1205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Config'],['Configuration']
Modifiability,"Better still would be to store the 'vector3' of coordinates from the first atom in a variable, and then call its distSq method to get the squared distance to the vector3 of the second atom. Also, while we are micro-optimising :-), you could replace your std::min with a basic ""if (newdist < mindist_so_far) mindist_so_dar = newdist;"". Using std::min does a comparison and then an assignment. The simpler ""if statement"" only does the assignment sometimes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466:85,variab,variable,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466,1,['variab'],['variable']
Modifiability,"Bug with -f was resolved. It seams, that when -f was 1 or 0, Count variable was set to -1. Assigning 0 to Count explicitly fixed that issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/52#issuecomment-30510814:67,variab,variable,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/52#issuecomment-30510814,1,['variab'],['variable']
Modifiability,"By guessing, I think it should be; -a ""$win_dlhandler"" = ""yes""); instead of ; test ""$win_dlhandler"" = ""yes""). in configure.in. I'm afraid of checking it in though, as I don't have an autobuild toolchain. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369:113,config,configure,113,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369,1,['config'],['configure']
Modifiability,"By syntax, the SMILES string is fine. What the SMILES string describes, however, represents a hurdle for OpenBabel. If you paste the SMILES string into an other structure2picture converter, e.g., [CDK Depict](https://www.simolecule.com/cdkdepict/depict.html), one of the double bonds of the pyrrolidine is resolved as a double bond without explicitly assigned configuration. For me, it looks related to observations about the isomers of 2-butene filed earlier ([here](https://github.com/openbabel/openbabel/issues/2429)). With the information shared by you, I aimed for a replication with a pristine copy of the `.cif` from COD, which was translated into a `.sdf` with cod-tools, and submitted to OpenBabel to assign a SMILES string. ```bash; codcif2sdf ./4021153.cif > reconstruct.sdf; obabel reconstruct.sdf -osmi ; ```. Not anticipated by mine, the result is not; `C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; but; `C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; In other words, the then other double bond is «wavy». While the intermediate `.sdf` follows the v2000 dialect, it may be read by e.g., by [DataWarrior](https://openmolecules.org/datawarrior/index.html); ```bash; datawarrior ./reconstruct.sdf; ```; which promptly identifies both double bonds as (*Z*) configured (which indeed is .true.). No surprise, CDK Depict converts SMILES string; `Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O`; into a structure without a wavy bond. Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing]. ![CDK_depict](https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png). [cod_cif_EZ_issue.zip](https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797:360,config,configuration,360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797,2,['config'],"['configuration', 'configured']"
Modifiability,C:\Users\yanya>obabel; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 2.4.1 -- Mar 29 2017 -- 10:52:57; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information. C:\Users\yanya>obabel -L fingerprints; ECFP0 Extended-Connectivity Fingerprints (ECFPs); ECFP10 Extended-Connectivity Fingerprints (ECFPs); ECFP2 Extended-Connectivity Fingerprints (ECFPs); ECFP4 Extended-Connectivity Fingerprints (ECFPs); ECFP6 Extended-Connectivity Fingerprints (ECFPs); ECFP8 Extended-Connectivity Fingerprints (ECFPs); FP2 Indexes linear fragments up to 7 atoms.; FP3 SMARTS patterns specified in the file patterns.txt; FP4 SMARTS patterns specified in the file SMARTS_InteLigand.txt,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1573#issuecomment-302938793:380,Extend,Extended-Connectivity,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1573#issuecomment-302938793,6,['Extend'],['Extended-Connectivity']
Modifiability,Configuration Manager settings. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781140:0,Config,Configuration,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781140,1,['Config'],['Configuration']
Modifiability,"Configuration now fails. This is the error:. ```bash; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:224 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:266 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. ```. this is with 2.4.1. I tried applying that patch but it makes no difference to this issue. Oh no I was wrong it does build after.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329:0,Config,Configuration,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329,1,['Config'],['Configuration']
Modifiability,"Confirmed. The two SMILES strings can be interconverted by swapping the order of two substituents (the amine and the amide) while changing the @ to @@, and thus they are identical (remember that swapping substituents inverts chirality). The error appears to be introduced in writing the CAN smiles string. The Clockwise or Anticlockwiseness in the original SMILES string should have been converted to an absolute configuration, and then converted back to Clockwise or Anticlockwise in the CAN smiles. Simply retaining the @ or @@ is incorrect as it is dependent on the order of substituents which is different. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626:413,config,configuration,413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626,1,['config'],['configuration']
Modifiability,"Contains input file, plugindefines.txt and the groups I have defined (HF_groups.txt). Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801443:21,plugin,plugindefines,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801443,1,['plugin'],['plugindefines']
Modifiability,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:908,variab,variable,908,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,1,['variab'],['variable']
Modifiability,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:607,variab,variable,607,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470,1,['variab'],['variable']
Modifiability,"Dear Geoff,. The variable ""OBConversion conv;"" is a local function variable. That means, I guess, each time this function is called I got a memory leak? :). If instances of OBConversion class should be accessed via singleton instance, its constructor should not be public. Or please explain, what static instance do you mean. Original comment by: dma_k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880:17,variab,variable,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880,2,['variab'],['variable']
Modifiability,"Did you use --disable-dynamic-modules when running configure?. If so, does it work without disabling dynamic modules?. - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795359:51,config,configure,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795359,1,['config'],['configure']
Modifiability,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:1310,extend,extended,1310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828,1,['extend'],['extended']
Modifiability,"Doh! Snaps run in a sandboxed environment, and don't have permissions unless the creator grants them. I'll have to redo the snap. In the meanwhile you can still pipe stuff through obabel and pipe the output to a file, e.g.; cat tmpfile.cif | openbabel.obabel -icif -opdb > tmpfile.pdb; (I've confirmed this works with your test file). When I've done it, I'll update this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570:20,sandbox,sandboxed,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570,1,['sandbox'],['sandboxed']
Modifiability,"Done. At the moment, i.e. `OB_VERSION < OB_VERSION_CHECK(4, 0, 0)`, the codes still use `OBRandom` and thus are backward compatible (rounding error may occur).; They will be automatically changed to utilize `OBRandomMT` when version 4 is released.; ~Explanations of `OB_RANDOM_SEED` environment variable in man docs are currently commented out.~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2241#issuecomment-1217389426:295,variab,variable,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2241#issuecomment-1217389426,1,['variab'],['variable']
Modifiability,"Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:19073,variab,variable,19073,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"Drat, I was hoping to sneak it in. In my copious free time I will see if I can refactor the code to avoid boost, but the cmake files should be configured so obrms just isn't built if boost isn't available.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174:79,refactor,refactor,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174,2,"['config', 'refactor']","['configured', 'refactor']"
Modifiability,"Everything has compiled without an error, babel.exe can be run, however; it doesn't seem to find any formats available:. The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. See further specific info and options using -H<format-type>, e.g. -Hcml. When I try a specific format:; /opt/bin/babel.exe -Hsmi; Format type: smi was not recognized. I looked throughout /opt directory (which I set as prefix when running configure) I cannot see any of the format files. The size of libopenbabel-3.dll is less than half of what it was when compiled statically with all the formats in it using --disable-dynamic-modules. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376:193,plugin,plugin,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376,2,"['config', 'plugin']","['configure', 'plugin']"
Modifiability,"FWIIW, I am using this `.valgrind_suppressions` file to hide the memory leaks. ```; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_open; ...; }; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_init; ...; }; {; <openbabel read cif molecule>; Memcheck:Leak; match-leak-kinds: definite; ...; fun:*OpenBabel*OBMol*ConnectTheDots*; fun:*OpenBabel*CIFFormat*ReadMolecule*OBBase*Conversion*; ...; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171:117,plugin,plugins,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171,2,['plugin'],['plugins']
Modifiability,"Fair enough. I kind of wish though that we had a way of tying options for ""ops"" a bit closer to the particular ""op"". The current system feels just a bit too flexible. Maybe for OB 3000, we could have --pc:print etc. for all partial charge options.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/307#issuecomment-225023403:157,flexible,flexible,157,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/307#issuecomment-225023403,1,['flexible'],['flexible']
Modifiability,"Fair enough.; On 15 Mar 2016 2:32 p.m., ""Geoff Hutchison"" notifications@github.com; wrote:. > @baoilleach https://github.com/baoilleach I'm inclined to merge this.; > We can add clear documentation in the installation instructions, but I; > think for most use, it's preferable to have portable binaries than perfect; > speed.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub:; > https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242:285,portab,portable,285,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242,1,['portab'],['portable']
Modifiability,"Files/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56271,plugin,plugin,56271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"First, all the credit for the conda binary goes to @rwest and @connie (discussion [here](https://github.com/conda/conda-recipes/pull/310)). All I did was run a more recent git commit through their build script. There's a note [hidden on binstar](https://anaconda.org/patrickfuller/openbabel):. > Tested on Python 2 and 3, Mac and Ubuntu. Requires adding asmeurer and rwest to your ~/.condarc channels. These channels allow the installer to grab the `pkg-config` and `cairo` dependencies. @rwest had to patch directly into openbabel's source to resolve certain dependency paths (the goal was to have _all_ dependencies managed through conda). If you don't use their channels for pulling dependencies, the links are going to be incorrect. For replication's sake, my `~/.condarc` is:. ```; channels:; - defaults; - asmeurer; - rwest; - rmg; - patrickfuller; ```. The binary should work. If it doesn't, my pre-conda workflow used a whole lot of `install_name_tool` commands. ```; install_name_tool -change libpython3.4m.dylib ~/miniconda3/lib/libpython3.4m.dylib ~/miniconda3/lib/python3.4/site-packages/_openbabel.so; for l in xmlformat pubchem cmlreactformat cmlformat cdxmlformat; do install_name_tool -change libxml2.2.dylib ~/miniconda3/lib/libxml2.dylib ~/miniconda3/lib/openbabel/2.3.90/$l.so; done; ```. It's a mess and really not recommended. Let me know if this helps!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248:454,config,config,454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248,1,['config'],['config']
Modifiability,"For a moment, I thought the reformulation. > Instead of an iteration on all single bonds (section [9.2](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html)) how to constrain `confab` to act on a specific bond?. might describe what you aim for. Within reason, the larger the protein and increasing number of flexible bonds, the more this approach could save computational work ahead. Does the reformulation match your intent? (Maybe suitable for a post on https://mattermodeling.stackexchange.com/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2434#issuecomment-976891713:339,flexible,flexible,339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-976891713,1,['flexible'],['flexible']
Modifiability,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:962,config,configuration,962,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890,1,['config'],['configuration']
Modifiability,"From `pip install openbabel` I am getting errors related to not finding openbabel. (On Ubuntu 18.04); ```; ...; Warning: package openbabel-2.0 could not be found by pkg-config.; Guessing Open Babel location:; - include_dirs: ['/home/mh/anaconda3/include/python3.7m', '/usr/local/include/openbabel-2.0']; - library_dirs: ['/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/home/mh/anaconda3/include/python3.7m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; ...; stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'; ; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Failed building wheel for openbabel; ```. Before this, I did `snap install openbabel` and that part works just fine, installing Open Babel 3.0 but I have not been able to install the Python bindings. I also did `sudo apt install swig`, and swig seems to be a dependency. Am I missing other dependencies?. Due to the warning above not finding openbabel-2.0, I did:; `pip install openbabel==3.0.0` which results in; ```Collecting openbabel==3.0.0; ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1); ERROR: No matching distribution found for openbabel==3.0.0; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1843#issuecomment-562604797:169,config,config,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1843#issuecomment-562604797,1,['config'],['config']
Modifiability,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:871,config,configuration,871,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575,1,['config'],['configuration']
Modifiability,"HI Geoff, . We have managed to find a fix for this. It is rather tricky and we have posted the install instructions at. http://pymatgen.org/installation.html#installation-tips-for-optional-libraries. Maybe you could take a look and see if this is the right method. And perhaps you could modify open babel's install to better support Mac OS. . ; Shyue Ping. On Tuesday, September 24, 2013 at 8:29 AM, Geoff Hutchison wrote:. > Sorry for the long delay. For some reason, I'm not getting the bug postings by e-mail. Try installing pkg-config and see if that helps.; > http://www.freedesktop.org/wiki/Software/pkg-config/; > Supplying the path for EIGEN3 should be enough, but if things work with pkg-config, I'll be better able to find the problem. Thanks!; > [bugs:#883] (http://sourceforge.net/p/openbabel/bugs/883/) Can't compile with Eigen on Mac OS X; > Status: open; > Created: Tue Jun 11, 2013 05:07 PM UTC by Shyue Ping Ong; > Last Updated: Thu Jun 27, 2013 12:37 PM UTC; > Owner: nobody ; > I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3.; > However, it seems that eigen3 is not detected at all. When I do ; > import openbabel as ob; > ob.OBAlign ; > I get an AttributeError. Switching back to eigen2 did not work either. ; > Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere.; > SP; > Sent from sourceforge.net (http://sourceforge.net) because you indicated interest in https://sourceforge.net/p/openbabel/bugs/883/; > To unsubscribe from further messages, please visit https://sourceforge.net/auth/subscriptions/. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569:532,config,config,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569,3,['config'],['config']
Modifiability,"Hallo @fredrikw , thank you very much.; I think I got it now. You are right, in conda prompt everything is fine. But I do not get any error message about `fragments.txt` (as you have) anymore...; Also this seems to work:. ```bash; python; >> import openbabel; >> import openbabel.pybel as pybel; >> mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); >> mol.make3D(); ```. It seems that in my IDE Pycharm the BABEL_DATADIR variable gets lost somehow. I could run it with:. ```python; import os; os.environ[""BABEL_DATADIR""] = ""C:\Users\...\anaconda3\envs\...\share\openbabel""; import openbabel; import openbabel.pybel as pybel; try:; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); print(""everything is fine.""); except:; print(""Catched exception""); ```. Just for your information there is also another issue related to this: #2356 ; which could be closed... Last thing:. Did you check the Openbabel GUI, also? I do not know what the error might be here; could be conflict with conda?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386:438,variab,variable,438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386,1,['variab'],['variable']
Modifiability,"Hello,. It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?. Kind regards,; Fredrik",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844:64,variab,variable,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844,1,['variab'],['variable']
Modifiability,"Hello,. When you run the code on windows you get warnings that you cannot open the file space-groups.txt; This is due to conda openbabel not being able to find the datafile folder properly on Windows. The easiest workaround is to set it manually via set BABEL_DATADIR=\path\to\condaenv\share\openbabel before running the code, or set the corresponding environment variable in another way. But it should be fixed in the conda-package in the end...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2409#issuecomment-915940142:364,variab,variable,364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2409#issuecomment-915940142,1,['variab'],['variable']
Modifiability,"Here's the .cpp file from the original bug report:; ```. #include <openbabel/babelconfig.h>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/plugin.h>. using namespace std;; using namespace OpenBabel;. const char *benzenes[] = {. // Normal Kekule form; ""[NO NAME]\n""; "" CHEMW2 04151411042D \n""; ""Created with ChemWriter - http://chemwriter.com\n""; "" 6 6 0 0 0 0 999 V2000\n""; "" -15.8305 -2.0277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -11.5003 -4.5277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -7.1702 -2.0277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -7.1702 2.9723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -11.5003 5.4723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -15.8305 2.9723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" 1 2 2 0 0 0 0\n""; "" 2 3 1 0 0 0 0\n""; "" 3 4 2 0 0 0 0\n""; "" 4 5 1 0 0 0 0\n""; "" 5 6 2 0 0 0 0\n""; "" 6 1 1 0 0 0 0\n""; ""M END\n"",. // Nonstandard aromatic (bond type 4) form; ""[NO NAME]\n""; "" CHEMW2 04151411042D \n""; ""Created with ChemWriter - http://chemwriter.com\n""; "" 6 6 0 0 0 0 999 V2000\n""; "" -15.8305 -2.0277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -11.5003 -4.5277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -7.1702 -2.0277 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -7.1702 2.9723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -11.5003 5.4723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" -15.8305 2.9723 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0\n""; "" 1 2 4 0 0 0 0\n""; "" 2 3 4 0 0 0 0\n""; "" 3 4 4 0 0 0 0\n""; "" 4 5 4 0 0 0 0\n""; "" 5 6 4 0 0 0 0\n""; "" 6 1 4 0 0 0 0\n""; ""M END\n"",. NULL; };. main(int argc, char **argv) {. OBConversion conv;; OBMol mol;; const char **p;. conv.SetInAndOutFormats(""sdf"", ""sdf"");. for (p = benzenes; *p; p++) {; cout << ""\n"";; conv.ReadString(&mol, *p);; FOR_ATOMS_OF_MOL(atom, &mol) {; int idx = atom->GetIdx();; cout << ""atom "" << idx << "": "";; cout << "" impH: "" << atom->ImplicitHydrogenCount() << "", bond orders:"";; FOR_BONDS_OF_ATOM(b, &(*atom)) {; 	int border = b->GetBO();; 	cout << "" "" << border;; }; cout << ""\n"";; }; }; }. ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1300#issuecomment-305090855:178,plugin,plugin,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1300#issuecomment-305090855,1,['plugin'],['plugin']
Modifiability,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:939,flexible,flexible-sidechains,939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983,1,['flexible'],['flexible-sidechains']
Modifiability,"Hi @baoilleach hope you are doing well. Thanks for your interest and offer to help. Is there any section of code in particular that would be good to clean up? From what I remember, most of the remaining TODOs were either in SetLength (and related methods) or file formatters that still calculated geometry from raw vector3's instead of atom/bond distances. I'd be happy to take another look and do some more cleanup, though making Open Babel fully PBC-aware wouldn't be something I could commit to right now. I'm not currently dogfooding the code for research, and implementing PBC the right way might require some larger architectural discussions to see if there's a way to more generically handle coordinates (perhaps an [OBCoord class](https://github.com/openbabel/enhancement-proposals/pull/6#issuecomment-335043397)?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-626159875:768,enhance,enhancement-proposals,768,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-626159875,1,['enhance'],['enhancement-proposals']
Modifiability,"Hi @nbehrnd, thanks so much for trying to figure this out with me. I'm also limited by my rather limited C++knowledge. 😅. I already adapted the requirements file (on my machine PLIP is using OpenBabel 3.1.1 and there is only the one OpenBabel installation), fought my battle with the OpenBabel Python bindings 3.1.1.1 issue and have PLIP and OpenBabel running in a virtual environment.; I might try a reinstallation though. . When you run the command with `-p` in your setup - are you getting `UNL` or `UNK` records?; Earlier you said you are not getting them with `-h` but that option doesn't produce them for me either. Thanks and have a lovely weekend!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698:132,adapt,adapted,132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698,1,['adapt'],['adapted']
Modifiability,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:228,variab,variables,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970,1,['variab'],['variables']
Modifiability,"Hi, Noel!. Did you delete mmcifformat.so file from plugins folder?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1659#issuecomment-338505769:51,plugin,plugins,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1659#issuecomment-338505769,1,['plugin'],['plugins']
Modifiability,"Hi,. My suggestion when working in the conda environment is to use the conda-packages for openbabel that have been supplied by various users. E.g. patrickfuller/openbabel (see below). Otherwise, you really need to make sure that all cmake variables are set correctly to have openbabel compile against the conda python. Kind regards,; Fredrik. [Fredriks-MBP] > anaconda show patrickfuller/openbabel; Using anaconda-server api site https://api.anaconda.org; Name: openbabel; Summary: A chemical toolbox designed to speak the many languages of chemical data; Access: public; Package Types: conda; Versions:; - 2.3.90. To install this package with conda run:; conda install --channel https://conda.anaconda.org/patrickfuller openbabel. > 23 nov. 2015 kl. 09:28 skrev getmolmap notifications@github.com:; > ; > Reproduced both on Intel and AMD pc with LMDE2 in the latest python 3.4 conda environment:; > ; > import pybel; > Segmentation fault; > ; > However, importing opnbabel works fine.; > When I install openbabel and python bindings from packages, it works without problem with the system's python2.7, but not in the conda environments.; > ; > Advice on diagnosis and/or workaround would be appreciated.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/issues/203#issuecomment-158875942.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983:239,variab,variables,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983,1,['variab'],['variables']
Modifiability,"Hm, now the configure fails with the following message:. checking whether the g++-sjlj linker (c:/mingw/mingw32/bin/ld.exe) supports shared libraries... yes; checking dynamic linker characteristics... Win32 ld.exe; checking how to hardcode library paths into programs... immediate; ./configure: line 17409: syntax error near unexpected token `""(c'; ./configure: line 17409: ` $as_echo_n ""(cached) "" >&6'. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367:12,config,configure,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367,3,['config'],['configure']
Modifiability,"Hmmm...I don't have any compile error with MSVC. Though, now that I think of it, that's probably because I'm not using Eigen and am missing these plugins.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/120#issuecomment-97514552:146,plugin,plugins,146,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/120#issuecomment-97514552,1,['plugin'],['plugins']
Modifiability,"How did you install OpenBabel? Do you also have the problem with multiple formats? (run `obabel -L formats` to see which formats you have installed). If the problem is with multiple formats missing, it is most likely a problem with the environment variable [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1722#issuecomment-691937766:248,variab,variable,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1722#issuecomment-691937766,2,['variab'],"['variable', 'variables']"
Modifiability,"I added `#include <openbabel/babelconfig.h>`, but it did not solve the problem.; I checked [config.h.cmake](https://github.com/openbabel/openbabel/blob/master/src/config.h.cmake), but it does not seem to define `HAVE_EIGEN`.; I couldn't figure out how to fix this. As for `LBFGS.h`, I made a pull request.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2098#issuecomment-560689340:92,config,config,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098#issuecomment-560689340,2,['config'],['config']
Modifiability,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:417,variab,variable,417,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755,3,['variab'],"['variable', 'variables']"
Modifiability,"I also realized the given 2D/3D structure from Openbabel matches the local configuration, although ""globally"" the structure generated wasn't consistent with other programs. . I have limited knowledge in solving this issue, but I attempted to use ""unique SMILES"" from ""[Online SMILES Translator and Structure File Generator](https://cactus.nci.nih.gov/translate/)"". It gives the following unique string: ; C\C(=C/Br)C1=CC=C(C=C1)\C(C)=C\Br. Using this will generate the wanted structure:; ![image](https://user-images.githubusercontent.com/22421218/91630210-1d591e00-e995-11ea-8ff1-0c25435834a5.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2276#issuecomment-683244122:75,config,configuration,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2276#issuecomment-683244122,1,['config'],['configuration']
Modifiability,"I also see only 2 molecules converted on 32bit Windows (with the development code). But the problem is data dependent and intermittent. Apparently irrelevant changes during debugging can make the problem go away and the read position in the input file apparently moves erratically. So an over-writing or alignment problem looks probable. The header is binary but its interpretation in C++ makes assumptions about how a C++ struct is laid out - clearly not a good idea. I have in the past written a version with the header in ASCII but did not proceed because correcting another bug seemed to solve the problem. . It seems likely that the bug is a more general I/O on the header and not confined to 64bit systems. I'll try revising the header reading and writing code. In the longer term I would like fastsearch files to be portable binary in Andrew Dalke's FPB format, if it ever comes to fruition. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337:823,portab,portable,823,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337,1,['portab'],['portable']
Modifiability,"I am not sure about the nightly build - and still trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:511,config,configured,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,1,['config'],['configured']
Modifiability,"I am seeing the same test failures, plus a few others, for the 2.3.0 source release of OpenBabel on CentOS 5.5 / i386:. 3 - builder_Test (Failed); 22 - inchiSamples_Test (Failed); 28 - charge-mmff94_Test (Failed); 32 - ffgaff_Test (Failed); 33 - ffghemical_Test (Failed); 35 - ffuff_Test (Failed); 43 - logp_psa_Test (Failed); 53 - pytest_babel (Failed); 54 - pytest_sym (Failed); 55 - pytest_fastsearch (Failed); 56 - pytest_unique (Failed); 57 - pytest_kekule (Failed); 58 - pybindtest_bindings (Failed); 59 - pybindtest__pybel (Failed); 60 - pybindtest_example (Failed). I assume the test numbers differ from the OP's because of different CMake options. Specifically, I configured CMake (version 2.6.4) this way:. JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0 \; /usr/bin/cmake ../openbabel-2.3.0 \; -DCMAKE_INSTALL_PREFIX=/usr \; -DJAVA_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_INCLUDE_PATH=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE \; -DPERL_LIBRARY=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE/libperl.so \; -DPYTHON_BINDINGS=ON -DRUBY_BINDINGS=ON. No OpenBabel binaries, libraries, or environment configuration was yet installed on the build system. This is significant at least because I had to patch a bug in the Ruby bindings' build configuration to build successfully (I will report that bug separately), but it may also affect the tests. I ran ""make"" with no additional options or environment variables, then ""make test"" to produce the test failures. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801:673,config,configured,673,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801,4,"['config', 'variab']","['configuration', 'configured', 'variables']"
Modifiability,"I am using Mac osx 10.9.5. Do you offer a 2.3.2 open babel for mac?; Thanks a lot!. On Tue, Mar 10, 2015 at 5:03 AM, baoilleach notifications@github.com; wrote:. > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Sy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:304,Config,Config,304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Config'],['Config']
Modifiability,"I am using xcode 3.1. Looks like it may be problem with babelconfig.h. There is no mac version of babelconfig.h file provided in the package; what i did was copied babelconfig.h file from windows vc++ directory and uncommented vc++ include, may be i have messed up in this process. In down loads there is no source code download for mac OS and only have dmg. If I have I can build it for iPhone. . I have tried to compile code in mac os 10.5 and got same error as compiling using iphone os 2.2. /Developer/SDKs/MacOSX10.5.sdk/usr/include/c++/4.0.0/i686-apple-darwin9/bits/c++locale.h:72: error: 'snprintf' is not a member of 'std'. Because you have successfully compiled and created dmg, looks like I am missing some configuration settings. I will greatly appreciate it If you can please look into this issue.; Thanks. Ravi Singareddy; http://www.ooftish.com . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372:717,config,configuration,717,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372,1,['config'],['configuration']
Modifiability,"I appreciate your point, but:; 1) I'm not going to merge this without on-list discussion. There has been much debate on this off-and-on for ages, and I've ended up dealing with bug reports and patch requests going both ways. Unless there's public non-GItHub discussion about an enhancement change, someone is bound to get upset.; 2) While I can't immediately find the thread, I remember the point being made that the PDB itself was purifying files to remove any use of multiple CONECT records. Moreover, I believe there were cases of software behaving badly to such files (from Open Babel). My point is - while I like the 'extension', I've had to deal with this debate for ages. I'm not making a change without people having the opportunity to weigh in. If there's consensus (or apathy) to the change, no problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514386361:278,enhance,enhancement,278,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514386361,1,['enhance'],['enhancement']
Modifiability,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:86,plugin,plugins,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['plugin'],['plugins']
Modifiability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:27,plugin,plugins,27,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,1,['plugin'],['plugins']
Modifiability,"I can add a probe radius too, no problem.; On 28 Apr 2015 20:11, ""Geoff Hutchison"" notifications@github.com wrote:. > Looks nice, although I have some questions beyond point clouds.. Many; > people would like solvent-accessible or solvent-excluded surfaces at; > variable probe radii. The ""radius multiplier"" seems like it would be more; > useful from a user perspective as an additive factor (e.g., VdW + 0, +1 +; > 1.5Ang, etc.); > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717:263,variab,variable,263,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717,1,['variab'],['variable']
Modifiability,"I can install `pip install openbabel-wheel` from [here](https://pypi.org/project/openbabel-wheel/) just fine, but when I try to run `pip install openbabel` again, it still gives me the same error. . It looks like the command is unable to either find my openbabel installation, which is in `C:\Program Files\openbabel 3.1.1`, or that it is looking for something in that folder that it needs for the installation procedure it cannot find. . How exactly is SWIG trying to locate your babel install on windows? Is it looking specifically for the location of the obabel.exe? I have no idea what it is looking for, where it is looking for it nor how to edit my installation prompt in such a way that I can provide that info manually if it messes up by looking in the wrong place. Is it checking the PATH variables on windows?. Anyways I installed the wheel using pip but it changes nothing...Is anaconda really the only way? I really dislike anaconda...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1792327048:798,variab,variables,798,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1792327048,1,['variab'],['variables']
Modifiability,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12,config,configuration,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,4,['config'],['configuration']
Modifiability,"I cross-compiled it on x86_64 for armv7l using Void Linux’s package building tool [xbps-src](https://github.com/voidlinux/void-packages). Void Linux cross compiles all packages for armv6l, armv7l, aarch64. So I didn’t target a specific device. There is a problem with the cross-compiled wxWidgets (wx-config returning the cross-build paths when used natively) I tried to fix and ran into this issue when cross-building all packages depending on wxWidgets.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345519265:301,config,config,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345519265,1,['config'],['config']
Modifiability,"I disagree that the depiction lacks an essential detail. If one departs from the Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgra",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:151,config,configuration,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436,1,['config'],['configuration']
Modifiability,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:58,variab,variables,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268,4,['variab'],"['variable', 'variables']"
Modifiability,"I don't really know about MGLTools so I don't know how they add openbabel (but it seems like it's an old version...). If `which obabel` points to the MGLTools version, you could try to use a command like `/home/{user}/miniconda3/bin/obabel` instead, that should force the use of the conda version from the main env or `/home/{user}/miniconda3/envs/{mainenv}/bin/obabel` to use the version in your main virtual environment.; Normally, the activation of the environment should handle this but I suspect that the MGLTools install is doing something to the path variables that makes this automatic path handling fail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301:558,variab,variables,558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301,1,['variab'],['variables']
Modifiability,"I dug a bit deeper. The error appears in the generated OpenBabel3_EXPORTS.cmake. In line 103, it checks whether the targets for maeparser and coordgen are set. They are not, as the coordgen-config.cmake and maeparser-config.cmake, present in /usr/local/lib/cmake, are never searched for or imported.; If I understand correctly, creation of those files happens around line 717 in the top level CMakeLists.txt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979:190,config,config,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979,2,['config'],['config']
Modifiability,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:505,config,configuration,505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,2,['config'],"['configuration', 'configurations']"
Modifiability,"I feel some small pride when this isn't actually the bug. The configure script is fine -- it won't build libinchi. What you want, is not to build the inchiformat code. This is now fixed in the 2.2 branch. It should also be fine with CMake instead of configure. (The folks who wrote the CMakeLists.txt did the right thing from the beginning.). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/801#issuecomment-281793557:62,config,configure,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/801#issuecomment-281793557,2,['config'],['configure']
Modifiability,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:40,config,configure,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['config'],['configure']
Modifiability,"I have compiled openbabel-2.3.0 from source on my linux box (Debian wheezy) following the instructions on you website and can confirm that the molecular coordinates from my g98 file are parsed correctly with 2.3.0. That is, I have compiled openbabel on the exact same computer with the exact same config that was crashing with openbabel 2.3.1. It clearly appears that I uncovered a regression. By the way, you library does exactly what I need with a nice API so that I am very interested in seeing it fixed!. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204:297,config,config,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204,1,['config'],['config']
Modifiability,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:100,config,config,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,2,['config'],['config']
Modifiability,"I have the same problem with version 2.4.1 on Gentoo, reading output from GAMESS-US ver. 11 Nov 2017 (R3). I did some debugging and I found the problem to be in actual part of **gamessformat.cpp** that reads frequencies. Namely in line **515**, before reading reduced mass, it should also read SYMMETRY line:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; Fixed:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // SYMMETRY; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; otherwise lines **549-550** process a blank line instead of an atom - hence the segfault. Patch is attached that fixes the code. Here is a fragment of the GAMESS output where the problem appears:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; > IR INTENSITY: 0.23456 0.34034 0.01209 0.00004 0.00182. The second issue arises at the end of the loop that reads the modes (lines **582-584**):; ```; ifs.getline(buffer, BUFF_SIZE);; tokenize(vs, buffer);; modeCount = vs.size() - 3;; ```; At the end of the modes `buffer` variable contains empty string, so `vs.size()` returns 0. However, `modeCount` is defined as `unsigned int` (in line **544**):; ```; unsigned int modeCount = vs.size() - 3;; ```; therefore line **584** produces a huge positive value instead of -3, and the program does not leave the loop (condition in line **547**), leading to another segfault, which wasn't exposed due to the first one. Again - a fix is proposed in the included patch. [segfault_when_reading_vib.txt](https://github.com/openbabel/openbabel/files/1691481/segfault_when_reading_vib.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531:1169,variab,variable,1169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531,1,['variab'],['variable']
Modifiability,"I have tried everything in this thread and nothing is working. 4 years and counting. How the hell is this still not fixed? Why do I have to install conda just so I can use one single library? Why are the docs not updated to warn prospective users of this at all? . This is getting ridiculous so let's try this one last time:. I have installed openbabel using the 32bit binary from [here](https://github.com/openbabel/openbabel/releases) on Windows 11. I have it in `C:\Program Files (x86)\OpenBabel-3.1.1`. I have ensured that this dir is in my system path and user path variable:. User PATH: C:\Program Files (x86)\OpenBabel-3.1.1; System PATH: C:\Program Files (x86)\OpenBabel-3.1.1; BABEL_DATADIR: C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data. Now I try to install the python key bindungs using PyPI as instructed [here](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html) using `pip install -U openbabel`. That returns the following error traceback:; ```; C:\Users\chris>pip install -U openbabel; Defaulting to user installation because normal site-packages is not writeable; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Installing build dependencies ... done; Getting requirements to build wheel ... done; Preparing metadata (pyproject.toml) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (pyproject.toml) ... error; error: subprocess-exited-with-error. × Building wheel for openbabel (pyproject.toml) did not run successfully.; │ exit code: 1; ╰─> [15 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\Python310\\include', 'C:\\Program Files\\Python310\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\Python310\\libs', 'C:\\Program Files\\Python310', 'C:\\Program Files\\Python310\\PCbuild\\amd64', '/usr/local/lib']; building",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554:571,variab,variable,571,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554,1,['variab'],['variable']
Modifiability,"I keep thinking about this and the difference between the clang and gcc builds. It's nothing to do with the compiler, so it must be something about the linker flags when either the plugins or openbabel.so are being created. I think that is where the real fix should be.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364873741:181,plugin,plugins,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364873741,1,['plugin'],['plugins']
Modifiability,"I released Open Babel 2.0 in 2005, and v3.0 was released in 2019. That's 14 years of API compatibility. One reason I *intentionally* added the version number to the pkg-config file was to signal a strong backwards-incompatible change. One should not just make a simple patch to switch a pkg-config arrangement. My guess is that whenever 4.0 comes out, the 100 projects (or whatever) will similarly need to make updates - and possibly significant ones. I don't have a problem with switching to `openbabel.pc` but frankly you, or any other package maintainer shouldn't just assume that projects will be compatible with another major version change by tinkering with the `pkg-config` or cmake files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415:169,config,config,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415,3,['config'],['config']
Modifiability,"I think I have discovered the problem. File test/CMakeLists.txt includes this command that appears aimed, in part, at controlling the relevant environment variables when the tests are run:. set_tests_properties(${test}_Test PROPERTIES; FAIL_REGULAR_EXPRESSION ""ERROR;FAIL;Test failed""; ENVIRONMENT ""BABEL_LIBDIR=${CMAKE_BINARY_DIR}/lib""; ENVIRONMENT ""BABEL_DATADIR=${CMAKE_SOURCE_DIR}/data""). ""ENVIRONMENT"" is a documented test property in CMake 2.8, but not in CMake 2.6. For what it's worth, the build requirements at http://openbabel.org/docs/2.3.0/Installation/install.html specify CMake 2.4 as a minimum requirement. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802:155,variab,variables,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802,1,['variab'],['variables']
Modifiability,I think adding; obErrorLog = cvar.obErrorLog; to openbabel.py will solve the problem for users. Then dir(openbabel) will show obErrorLog and all will be well. Are there other global variables that should be handled in the same way?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794170:182,variab,variables,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794170,1,['variab'],['variables']
Modifiability,"I think my ""BTW"" is wrong. ""isprint"" is a more portable way to handle what *_ptr<0 is I think trying to do. Original comment by: dalke",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1138#issuecomment-281801100:47,portab,portable,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1138#issuecomment-281801100,1,['portab'],['portable']
Modifiability,"I think, it would be a good idea to follow the patch from CCT, mentioned in the original description. In particular, to define a set of rhombohedral groups:. ```; standard_rhombohedral_space_group_symbols = [; ""R 3 :H"",; ""R 3 :R"",; ""R -3 :H"",; ""R -3 :R"",; ""R 3 2 :H"",; ""R 3 2 :R"",; ""R 3 m :H"",; ""R 3 m :R"",; ""R 3 c :H"",; ""R 3 c :R"",; ""R -3 m :H"",; ""R -3 m :R"",; ""R -3 c :H"",; ""R -3 c :R""]; ```. And if the space group is one of those, than to rewrite R .. :H with H, as you noted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/251#issuecomment-176899997:443,rewrite,rewrite,443,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251#issuecomment-176899997,1,['rewrite'],['rewrite']
Modifiability,I tried to run configure;make without --disable-dynamic-modules; and the result is the same - babel.exe compilation fails at the same exact point... Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795360:15,config,configure,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795360,1,['config'],['configure']
Modifiability,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:229,config,configs,229,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['config'],['configs']
Modifiability,I want to add a reference here to https://github.com/openbabel/enhancement-proposals/pull/3. The code for atom-based spin multiplicity is undergoing some revisions at the moment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/340#issuecomment-311260181:63,enhance,enhancement-proposals,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/340#issuecomment-311260181,1,['enhance'],['enhancement-proposals']
Modifiability,I was (unfortunately) able to pinpoint the regression to 4094c68b87415889150377bd9dc419398ac78d8b which is @chrismorl 's rewrite of the cdx parser. So no easy revert there...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531794823:121,rewrite,rewrite,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531794823,1,['rewrite'],['rewrite']
Modifiability,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:281,plugin,plugins,281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['plugin'],['plugins']
Modifiability,"I was pulling my hair out over this failure, which occurred only with the Clang build (on Linux)...but it's right. It's not loading the plugins that requires this to be set, but ""import _openbabel"" (or it's equivalent) in the openbabel.py. That pulls in the .so file. Still don't understand the underlying reason why, but at least I know where the fix goes now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991:136,plugin,plugins,136,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991,1,['plugin'],['plugins']
Modifiability,"I'd be happy to draft something for the OBChargeModel class. It's something I considered previously to allow parameterization, e.g. of the EEM methods.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/157#issuecomment-97423014:109,parameteriz,parameterization,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157#issuecomment-97423014,1,['parameteriz'],['parameterization']
Modifiability,"I'm afraid that this fix doesn't work on Windows 7. If you look in winnt.h what is __TEXT defined as?. I have:; #define __TEXT(quote) L##quote // r_winnt; #define TEXT(quote) __TEXT(quote) // r_winnt. ...so all TEXT does is stick the letter L in front of the string, which doesn't do anything sensible if it's a variable name.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311641969:312,variab,variable,312,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311641969,1,['variab'],['variable']
Modifiability,"I'm going to mark this as closed at this stage. Based on John's comment, it looks like CMake 2.8 is required for running the tests correctly, otherwise the environment variables need to be set manually. I guess it's more of a documentation problem than a bug. We should bump up our requirements for CMake version perhaps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803:168,variab,variables,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803,1,['variab'],['variables']
Modifiability,"I'm going to suggest MinGW or using automake/configure. If you have problems building either of these, please follow up. I don't think we can support a buggy Cygwin compiler anymore. GCC 3.4 was released 2004-2005. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/811#issuecomment-281793733:45,config,configure,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/811#issuecomment-281793733,1,['config'],['configure']
Modifiability,"I'm in favor. It seems like the OpenSMILES list has adopted the enhancement, and RDKit has also merged.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-340573155:64,enhance,enhancement,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-340573155,1,['enhance'],['enhancement']
Modifiability,"I'm no expert in gdb either, but you need to set a breakpoint on the relevant line before typing `run`. I think it's something like; `break mcdlutil.cpp:2575`; And then you can inspect the variables by doing things like `print i` and step through the program with `next`. `l` will show you the current source line to make sure you are where you think you are in the program.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686:189,variab,variables,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686,1,['variab'],['variables']
Modifiability,"I'm not using pybel at all, but importing pybel fixes my problem of `Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable`. Kind of weird.; ```; from openbabel import openbabel as ob # the original import ; from openbabel import pybel # adding this line fixes my problem; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-2076907385:94,plugin,plugins,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-2076907385,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"I've now been able to work round this issue by setting the required variables manually in my program's CMakeLists.txt:. set(OPENBABEL3_INCLUDE_DIR ""/home/kevin2/software/openbabel/3.1.1/include/openbabel3""); set(OPENBABEL3_LIBRARIES ""/home/kevin2/software/openbabel/3.1.1/lib/libopenbabel.so""). Program now works fine although I unfortunately I loose portability. However it solves the immediate problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2305#issuecomment-735896928:68,variab,variables,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305#issuecomment-735896928,2,"['portab', 'variab']","['portability', 'variables']"
Modifiability,"If OpenBabel choses to adopt to support the `CFG=2` marker in `.mol` / `.sdf` files for alkenes, this equally would affect the assignment of SMILES. At present, a `.sdf` (v3000) file about (*Z*)-butene, (*E*)-butene, and but-2-ene without an explicit assignment of configuration (i.e., three entries) assigns as SMILES; ```; C/C=C/C; C/C=C\C; C/C=C/C; ```; where the last one is anticipated as `CC=CC`. Should InChI trust adopt a license compatible to OpenBabel, working with `CFG=2` would equally influence the assignment of InChI and InChIKey, too. [butene_conformer.zip](https://github.com/openbabel/openbabel/files/7537445/butene_conformer.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660:265,config,configuration,265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660,1,['config'],['configuration']
Modifiability,"If you can figure out how to get the installer to a create soft link from openbabel-3.pc to openbabel.pc, we'll accept a PR. I don't know much about the conventions for pkg-config - are we sure that the correct convention is to leave out the major library version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626932111:173,config,config,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626932111,1,['config'],['config']
Modifiability,"If you use CMake 2.8, and rerun the configure step, ""make test"" should work better now. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353:36,config,configure,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353,1,['config'],['configure']
Modifiability,Importing pybel instantiates an OBConversion and gets the list of formats. I'd presume that any non-trivial 'openbabel' script would trigger the same problem. So it could be that the plugins aren't found. I keep meaning to fix the segfault triggered by no-formats found...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-126202747:183,plugin,plugins,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-126202747,1,['plugin'],['plugins']
Modifiability,"In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/op.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12257,plugin,plugin,12257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"In future, it's best to make separate pull requests for unrelated changes. The plugin fix is long overdue. Maybe Geoff can comment on the other.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/239#issuecomment-159933229:79,plugin,plugin,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/239#issuecomment-159933229,1,['plugin'],['plugin']
Modifiability,"It is hard to change all APIs related to PRNG, so I added `OB_RANDOM_SEED` environment variable (#2241). ```shellsession; $ export OB_RANDOM_SEED=42; $ diff <(obabel -:CCC --gen3D -oxyz) <(obabel -:CCC --gen3D -oxyz); 1 molecule converted; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-644515730:87,variab,variable,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-644515730,1,['variab'],['variable']
Modifiability,"It would depend on how the variables are retained, as far as threading goes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349808243:27,variab,variables,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349808243,1,['variab'],['variables']
Modifiability,It's not apparent from the Jmol documentation how the pngj format is constructed. But looking at the supplied file suggests that it is too dissimilar to the OpenBabel png format to be easily adapted. Instead it should probably be a separate format and I do not know how big the overlap is.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434:191,adapt,adapted,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434,1,['adapt'],['adapted']
Modifiability,"It's the static inclusion of external libraries into the gui executable that's the problem (I think?), not so much shared library build. The variable names in the CMake file are a bit confused.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304996412:141,variab,variable,141,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304996412,1,['variab'],['variable']
Modifiability,"Just checked openbabel.cvar on Linux. It gives the following:. Swig global variables (AliasDataType, resdat, chainsparser, atomtyper, aromtyper, isotab, ttab, etab, ElemNo, ResNo, ElemDesc, Residue, obErrorLog, VZ, VY, VX, VZero). (On Windows, ""print openbabel.cvar"" crashes Python - a SWIG error). Is it worthwhile making any of these additional variables accessible? After all, it's easy for the user to instantiate most of them. This is in contrast to obErrorLog, where it is important to be able to access that specific instance. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171:75,variab,variables,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171,2,['variab'],['variables']
Modifiability,"Just remembered that I left this comment hanging. To finish my thoughts:. Already as part of the kekulization changes the SMILES output has changed. For example, I write out a bond symbol between aromatic atoms if the bond in is a ring and is not itself aromatic. So don't let changing the canonical order hold you back - improving the speed of the canonicalisation would be great. There are some other features of the current approach that would be great to change if you decide to do this (interested in writing an OB Enhancement Proposal?). Regarding John's canonicalisation, he hopes to write this up but nothing is going to happen in the short term - he's busy working on some CIP stuff.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-317710436:520,Enhance,Enhancement,520,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-317710436,1,['Enhance'],['Enhancement']
Modifiability,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:261,config,configure,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857,1,['config'],['configure']
Modifiability,"Logged In: NO . One of the disadvantages of compiling from the HEAD code is that people keep changing it. The errors about _finite are due somebody's changes which necessitates including float.h in mol.h. Revision 2528 and later have this. Do another Update. I not entirely sure what odbccp32.libi is and it is not in the VC2005 Express distribution I have, so I can be of limited help. odbccp32.lib appears in the list of Additional Dependencies in \VC\VCProjectDefaults\CoreWin.vsprops but not in my express version. You could try removing it and restarting Visual Studio (or maybe there is something in your version's IDE to do this), but this may affect some of your other programs. Alternatively, you could add odbccp32.lib to each project's Properties Configuration Properties/Linker/Input/Ignore Specific Library. The other warnings can be ignored. (There are fewer than there were.). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143:758,Config,Configuration,758,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143,1,['Config'],['Configuration']
Modifiability,"Logged In: NO . These 'extra' functions are in the Boost header library, AFAIK. They must be included with GCC4. Could one of the C++ gurus please explain update the Configure and Makefile if Boost is required with GCC3.4.x? Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199:166,Config,Configure,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199,1,['Config'],['Configure']
Modifiability,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:68,plugin,plugin,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=1102637; Originator: YES. I don't know if hardcoding the binary name is a good idea. One can change the binary name via the configure options --program-prefix, --program-suffix or --program-transform-name. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479:149,config,configure,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:183,extend,extendibility,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691,1,['extend'],['extendibility']
Modifiability,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:179,variab,variable,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:313,extend,extended,313,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076,1,['extend'],['extended']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I have added OBCommonFormats to FastSearch's dependencies, which should sort out the build order. The warnings can ignored. Keeping these tidy is a continuing task since not all developers get the same warnings. You probably want to build in Release mode. There was a recent glitch which meant that Debug configurations were being used even when it said Release at the top. I hope this is now corrected. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137:355,config,configurations,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137,1,['config'],['configurations']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I think these molecules are handled correctly if the attached atomtyp.txt replaces that in v2.2.0. The current way of handling valence requires a SMARTS pattern for each configuration, e.g. the one for O+ with a triple bond was missing. There may be other SMARTS patterns needed, so could you try with some more of your exotic molecules? . Chris; File Added: atomtyp.txt. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756:220,config,configuration,220,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756,1,['config'],['configuration']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:323,variab,variable,323,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:108,plugin,plugin,108,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644,2,['plugin'],"['plugin', 'pluginiter']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. In OpenBabel v2.2.0 you can also use:; babel -L formats ; which has an output like:; xml -- General XML format [Read-only]; xyz -- XYZ cartesian coordinates format; yob -- YASARA.org YOB format; zin -- ZINDO input format [Write-only]; which I don't think is too difficult to parse and is almost what you suggest. or ; babel -L formats read; which has the same output (except the bracketed item is omitted) for formats that can be read, and of course similarly for write. babel -L formats verbose or babel -Hall; gives complete information on all formats, including the format-specific options. It would not be less easy to parse however. If you were using the C++ API or the Python or other scripting interface there are other more flexible ways of listing the formats. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016:782,flexible,flexible,782,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016,1,['flexible'],['flexible']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:581,plugin,plugins,581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,2,['plugin'],"['plugindefines', 'plugins']"
Modifiability,Logged In: YES ; user_id=1189615; Originator: NO. The main cause of this seems to be that the fragments.txt data file is not being found.; Setting the Environment Variable BABEL_DATADIR to the installation directory (this is C:\Program Files\OpenBabel-2.2.0 for me) seems to fix the problem. (Use Control Panel/System/Advanced/Environment Variables). What is going on needs further investigation since the current directory does not seem to be what I was expecting. It would probably worth setting the Environment Variable in the installer. This is partly the same problem as bug #2013806 and partly the bug with linear molecules #2014055. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435:163,Variab,Variable,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. Try setting an environment variable BABEL_DATADIR to the directory where OpenBabel was installed, probably, C:\Program Files\OpenBabel-2.2.0 . You can set environment variables in Control Panel/System/Advanced/Environment Variables. Post here again if this doesn't work. . The installer should have set BABEL_DATADIR, and it not doing so has caused other problems too. The installer OpenBabel2.2.0_Windows_Installer2.exe does set it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531:77,variab,variable,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531,3,"['Variab', 'variab']","['Variables', 'variable', 'variables']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: YES. [CH4] now works, but [OH][OH] and c1[nH]ccc1 don't. The OO and the non-standard c1nccc1 are ok. Its difficult for you to find a bug if you can't reproduce it. I can, so I'll urgently look into this further because it is a show-stopper. Previous intermittent bugs were the non-terminated char array in atoi and returning references to local variables. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125:391,variab,variables,391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125,1,['variab'],['variables']
Modifiability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:128,config,configure,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1377149; Originator: NO. OpenBabel 2.2.0 is in my PATH variable, but I still get this error unless fragments.txt is in my current working directory. I've found that a solution is to set the BABEL_DATADIR variable. Sam. Original comment by: sea36",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427:80,variab,variable,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427,2,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:528,config,configure,528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:381,config,configuration,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164,1,['config'],['configuration']
Modifiability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:548,plugin,plugins,548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,1,['plugin'],['plugins']
Modifiability,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:585,extend,extend,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,2,['extend'],"['extend', 'extended']"
Modifiability,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:251,extend,extending,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327,1,['extend'],['extending']
Modifiability,Logged In: YES ; user_id=1871725; Originator: YES. I was able to compile a functioning executable babel.exe under cygwin.; Here are the sequence of steps for 2.1.1:; tar -xzf openbabel-2.1.1.tar.gz; cd openbabel-2.1.1; ./configure; cd src/formats/inchi; make; cd ../../../tools; edit the Makefile to add the following lines ; (output of diff Makefile Makefile.orig):; ############# begin output ########################; 15c15; < formats_objects := $(wildcard ../src/formats/*.o) ../src/formats/inchi/.libs/libinchi.a; ---; > ; 52c52; < babel_DEPENDENCIES = ../src/libopenbabel.la $(formats_objects); ---; > babel_DEPENDENCIES = ../src/libopenbabel.la; 223c223; < babel_LDADD = ../src/libopenbabel.la $(formats_objects); ---; > babel_LDADD = ../src/libopenbabel.la ; ####################### end output ##############; (you will have to repeat the editing for the rest of the executables; if you need more than babel.exe); cd ..; make; make install. Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069:221,config,configure,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprint",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:209,Config,Configuration,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:402,Config,Configuration,402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Errors Remaining:. OBMoreFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific bab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:435,Config,Configuration,435,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Looks like that squashed it. I will continue and try to build; all the other parts. Results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150:193,Config,Configuration,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150,2,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. building OBCommonFormats debug mode; 16 errors; error LNK2001: unresolved external symbol. results:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atomrecord.cpp; mdlformat.cpp; obmolecformat.cpp; opendxformat.cpp; smilesformat.cpp; Generating Code...; Compiling...; APIInterface.cpp; mol2format.cpp; pdbformat.cpp; Generating Code...; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); smilesformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); obmolecformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); opendxformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:200,Config,Configuration,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. did svn update. Build FastSearch. Result:. LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'. log below:. ------ Build started: Project: OBError, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Debug\BuildLog.htm""; OBError - 1 error(s), 0 warning(s); ------ Build started: Project: OBDLL, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:208,Config,Configuration,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,2,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. doing some more tracing,; show include files and; boost/detail/workaround.hpp; is where it starts to go wrong. this file contains info related to; fixes for various compilers. the latest boost provides support; for VC9 (VS2008) but it seems; that it is not configured or; called in the application. (makes sense as the recommended; version is VS2005). hopefully someone with more knowledge; will be able to grok this file; and get it sorted. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160:308,config,configured,308,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160,1,['config'],['configured']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; building OBCommonFormats release mode - success. results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055:173,Config,Configuration,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:155,Config,Configuration,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,3,"['Config', 'plugin']","['Configuration', 'plugin']"
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:140,config,configuration,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,3,"['Config', 'config', 'plugin']","['Configuration', 'configuration', 'plugin']"
Modifiability,"Logged In: YES ; user_id=1933558; Originator: YES. Thanks Chris, that's great.; I had no idea that OB offered this plugin system... perhaps it should be mentioned on the wiki?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959:115,plugin,plugin,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959,1,['plugin'],['plugin']
Modifiability,"Logged In: YES ; user_id=196016; Originator: NO. OK, I think I found the issue. The current code expects a lines ""Variables:"" to seperate the connectivity block from the variables block. So, the following input works for me:. #. water. 0 1; O; H 1 r; H 1 r 2 a; Variables:; r 0.9572; a 104.52. However, this is a bug, as the Gaussian manual says:. ""Variable definitions are separated from the atom position definitions by a blank line or a line like the following:; Variables: "". Furthermore, just putting the variables into the connectivity block like. #. water. 0 1; O; H 1 0.9572; H 1 0.9572 2 104.52. should work as well (at least Gaussian accepts it as input), however the gzmat format does not assign coordinates in this case either. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681:114,Variab,Variables,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681,6,"['Variab', 'variab']","['Variable', 'Variables', 'variables']"
Modifiability,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:403,portab,portable,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087,1,['portab'],['portable']
Modifiability,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:255,adapt,adapting,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761,1,['adapt'],['adapting']
Modifiability,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:78,variab,variables,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:124,variab,variables,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:47,enhance,enhance,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815,1,['enhance'],['enhance']
Modifiability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:394,evolve,evolved,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542,1,['evolve'],['evolved']
Modifiability,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:166,extend,extend,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242,1,['extend'],['extend']
Modifiability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:120,config,config,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,3,['config'],['config']
Modifiability,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:88,variab,variable,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:116,variab,variables,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:123,flexible,flexible,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501,1,['flexible'],['flexible']
Modifiability,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:276,adapt,adaptation,276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498,1,['adapt'],['adaptation']
Modifiability,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:126,config,configure,126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174,3,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:111,config,configure,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:136,plugin,plugin,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:119,config,configure,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:137,plugin,plugins,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['plugin'],['plugins']
Modifiability,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:153,plugin,plugins,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645,2,"['evolve', 'plugin']","['evolve', 'plugins']"
Modifiability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:775,config,configure,775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:140,Config,Configuration,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:78,variab,variables,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:549,config,configure,549,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:73,plugin,plugins,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,3,"['config', 'plugin']","['configuration', 'plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:140,config,config,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908,1,['config'],['config']
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:96,plugin,plugin,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,1,['plugin'],['plugin']
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:169,config,configuration,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393,1,['config'],['configuration']
Modifiability,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:163,config,configured,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265,2,['config'],['configured']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. Attaching configure from David. checking for libxml - version >= 2.6.5... yes (version 2.6.16). Hmmm...so it does have XML. Can I suggest that you download the latest snapshot (""Get latest beta release (01-Mar-08)"" on the install page) and see whether the issue has been resolved since the release of 2.1.1?; File Added: configure.out. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833:59,config,configure,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. I assumed you looked at script/Makefile.in for the build instructions. In fact, the Ruby related lines in Makefile.in deviate from what you have done. To compile the SWIG extensions yourself, you should run configure as follows:; ./configure --enable-maintainer-mode. Then running make in the scripts directory should build the Ruby extension automatically. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978:256,config,configure,256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I've just spent an hour or two trying to figure out this problem myself, and it has also caused several bug reports to date. I suggest sorting this out in configure by adding some extra tests. Here is what I suggest:; (0) The user optionally sets BOOSTDIR. (1) If BOOSTDIR is defined, then add ""-DUSE_BOOST"" to DEFS, and ""-I$(BOOSTDIR)"" to INCLUDES. (2) configure should then try to compile a test program involving ""tr1/whatever"". If it succeeds, it sets a flag HAS_BOOSTLIKE_HEADERS. Otherwise, it prints a warning message saying ""It looks like you don't have the Boost headers so the following formats will not be compiled: chemdrawcdx, etc.. This is probably because you are using GCC3.x and don't have Boost installed. For more information, see http://openbabel.sf.net/Install (Source Code)"". (3) If HAS_BOOSTLIKE_HEADERS is not defined, don't compile any format that relies on the existence of Boost-like headers. (4) Update the documentation appropriately. I will do 4, and I can test 1-->3. (By the way, I note that although ./configure --includedir=whatever correctly sets includedir in the Makefile, the value of includedir does not seem to be incorporated into $INCLUDES.). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200:235,config,configure,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200,3,['config'],['configure']
Modifiability,Logged In: YES ; user_id=850620; Originator: NO. Regarding the line:. cml...........FAILED tests 1-6. This indicates that you may not have compiled with CML support. Can you pipe the output of configure into a file and attach it to this bug report. This will let us know whether you are compiling with CML support or not. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831:193,config,configure,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. These snapshots don't contain the SWIG wrappers. You need to generate them yourself, with ./configure --enable-maintainer-mode (requires recent version of SWIG). I'm marking this bug as closed (pending). (For a related bug, see 1881688). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413:141,config,configure,141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413,1,['config'],['configure']
Modifiability,"Looks like a good idea. One thing that's been requested to add an OBOp plugin to set the RNG seed (e.g., #1934) - would you be willing to add that too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2241#issuecomment-633694665:71,plugin,plugin,71,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2241#issuecomment-633694665,1,['plugin'],['plugin']
Modifiability,"Looks nice, although I have some questions beyond point clouds.. Many people would like solvent-accessible or solvent-excluded surfaces at variable probe radii. The ""radius multiplier"" seems like it would be more useful from a user perspective as an additive factor (e.g., VdW + 0, +1 + 1.5Ang, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062:139,variab,variable,139,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062,1,['variab'],['variable']
Modifiability,"Make sure that your server has the LD_LIBRARY_PATH set correctly. Otherwise, it cannot find shared modules. I think this is a user configuration problem on your server. I'd be happy to debug this on the openbabel-discuss list, but if it works fine from the shell, it's not an Open Babel bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/827#issuecomment-281793985:131,config,configuration,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/827#issuecomment-281793985,1,['config'],['configuration']
Modifiability,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1522,plugin,plugin,1522,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,"Maybe I am wrong, my speculation however is you would like to define by yourself which program should display the .svg generated Openbabel when running the GUI. I think the developers' choice for a web browser like Firefox was that these programs capable to display the .svg as an image rather than a text typically already are installed. Running Linux Debian 11 bullseye (branch testing) comprising both OpenBabel (version 3.1.0) as well as the graphical editor [Inkscape](https://inkscape.org/) (version 1.0.2) I use successfully the «display only» program of the later, `inkview` to inspect a single .svg by. `inkview example.svg &`. or to browse through a collection of .svg in a folder by. `inkview *.svg &`. As mentioned earlier [here](https://gitlab.com/inkscape/inbox/-/issues/3712#note_422339579), this works well for .svg generated by RDKit, but equally for .svg by OpenBabel. (For comparison, I attach reference data by both below.) Thus, if running `obgui` in Linux, I would welcome if it were possible to set a pointer like `/usr/bin/inkview %s` when instructing OpenBabel about which viewer to use. There are other programs to display .svg visually, too. Examples include [irfanview](https://www.irfanview.com/) if extended by the optional plugin; or [Xnview](https://www.xnview.com/en/xnviewmp/), and `display` of [ImageMagick](https://imagemagick.org/script/index.php). However, these often rasterize the display of the image; by consequence, the benefits scaling a vector image (crisp representation) may be lost. [RDKit_example_svg.zip](https://github.com/openbabel/openbabel/files/6056583/RDKit_example_svg.zip); [babel_test.zip](https://github.com/openbabel/openbabel/files/6056584/babel_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625:1229,extend,extended,1229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625,2,"['extend', 'plugin']","['extended', 'plugin']"
Modifiability,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:1038,flexible,flexible,1038,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870,1,['flexible'],['flexible']
Modifiability,My preference is to keep the tests independent files rather than an archive. Otherwise it will be a pain for people to modify/extend the test sets - every small change will require updating the tarball.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846:126,extend,extend,126,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846,1,['extend'],['extend']
Modifiability,"No, normally it works. You just need to make sure that the BABEL_DATADIR environmental variable is set correctly. How you do that depends on your installation method, see e.g. https://openbabel.org/docs/Installation/install.html#troubleshooting-build-problems",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2356#issuecomment-2413353256:87,variab,variable,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2356#issuecomment-2413353256,1,['variab'],['variable']
Modifiability,"No, not at present. Several people tried, but the current code would need a good rewrite. There are some ideas on a ""bridge"" from Open Babel to OpenMM, which has support for custom forces. It would certainly take some coding work. BTW, the general mailing list is openbabel-discuss @ lists.sourceforge.net and there's a developer list at openbabel-devel @ lists.sourceforge.net",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2174#issuecomment-612967014:81,rewrite,rewrite,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2174#issuecomment-612967014,1,['rewrite'],['rewrite']
Modifiability,"No, the goal is that the openbabel cmake target doesn't depend on things it doesn't use. libopenbabel itself (not talking about libmaeparser) doesn't use boost, so it shouldn't link to it. And if it did, then the dependency must be declared in the cmake config file, otherwise the boost:: targets can't be resolved.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625318661:254,config,config,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625318661,1,['config'],['config']
Modifiability,"Noel, thank you for the link.; I tried setting CFLAGS to ""-DLIBXML_STATIC"" but it did not make any difference. ; Perhaps it should be a system-wide environment variable and not the one in MSYS shell?. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797711:160,variab,variable,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797711,1,['variab'],['variable']
Modifiability,"OK, what's your proposed fix - a special case for ""R .. :H"" space groups to rewrite to ""H"" instead?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/251#issuecomment-176896402:76,rewrite,rewrite,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251#issuecomment-176896402,1,['rewrite'],['rewrite']
Modifiability,"OP was @adalke, but I think I can answer for this one. When I did the rewrite you referenced, I had forgotten this bug report, but in the course of rewriting I did accidentally fix it. ```; >>> pybel.readstring(""smi"", ""C\vC"").molwt; ==============================; *** Open Babel Error in OpenBabel::OBSmilesParser::ParseSimple; SMILES string contains a character '♂' which is invalid; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Tools\openbabel\baoilleach\scripts\python\pybel.py"", line 209, in rea; dstring; string, format)); OSError: Failed to convert 'C♂C' to format 'smi'; ```; Thanks for the poke.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1138#issuecomment-383410862:70,rewrite,rewrite,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1138#issuecomment-383410862,1,['rewrite'],['rewrite']
Modifiability,"Okay, this isn't a valid fix. There is no simple fix. If the istream belongs to the user, you have no way of knowing if it has been deallocated or not by the time you get to the OBConversion destructor (if they were both declared as local variables, for instance, and go out of scope at the same time). It it is still valid, then the rdbuf needs to be replaced before deallocating pLineEndBuf. It is no longer valid, you can't do this. The correct solution is to install all filtering on top of the user provided stream. This could be done relatively easily as a general framework that would apply to the zlib filters (which I'm guessing, from looking at the code, also leak memory). I'd be willing to take the time to implement this, but would be much more enthusiastic about it if I could use the boost iostreams libraries. Is this acceptable?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122:239,variab,variables,239,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122,1,['variab'],['variables']
Modifiability,"On Mon, Apr 27, 2015 at 10:20:36AM -0700, M J Harvey wrote:. > Hi,; > ; > I'd like to add a new format type - could anyone give me - or; > point me to - instructions for doing this please? I'm at sea; > with Cmake. You can look in Git history for previous examples, e.g. [1]. From; that you could see that you need to add the name of your plugin; to src/formats/CMakeLists.txt and src/formats/formats.cmake, but; all other changes are in C++ files. There is an old wiki article on the general topic [2]. Reinis. [1] https://github.com/openbabel/openbabel/pull/113/files; [2] http://openbabel.org/wiki/HowTo:Add_A_New_File_Format",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/155#issuecomment-96753460:339,plugin,plugin,339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/155#issuecomment-96753460,1,['plugin'],['plugin']
Modifiability,"On occasion, I sometimes embark a route like. ```bash; obabel -:""c1ccncc1"" -can | obabel -ismi -h --gen2d -osdf | obabel; -isdf --gen3d -osdf; ```; for «difficult» cases. Because, the more conformational flexible; (number of one may rotate) a molecule is, especially with stereogenic; centres, the more computational demanding the provision of /a/; conformation by OpenBabel is. For a rigid molecule like pyridine; above, this has no benefit. I do not possess a one-fits-all scale; to anticipate ahead of time when this extended route is necessary. Note, by documentation (incl. a reference to an open-access; publication), `--gen3d` is only one out of five levels to provide you; /one/ starting conformation. And though it does not aim to compete; with protein folding programs, OpenBabel's `--conformer` flag allows; you to generate conformers, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212:204,flexible,flexible,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212,2,"['extend', 'flexible']","['extended', 'flexible']"
Modifiability,"On pc Debian x86-64 with master sources updated today, I don't reproduce this.; After having tuning a bit the script (fix typos and added a variable), I had the all the 12792 molecules.; Could you give it a new try with a more recent Openbabel version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/351#issuecomment-388574481:140,variab,variable,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/351#issuecomment-388574481,1,['variab'],['variable']
Modifiability,"Open Babel relies on the BABEL_DATADIR variable to find the data files. The install/uninstall scripts add/remove this variable. Can you try starting over, by uninstalling all of the Open Babels? Then look at your environment variables (just type ""set"" at a *new* command prompt) to see whether the value of BABEL_DATADIR is set. Then install OB2.4.1 and type set again (at a *new* command prompt).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635#issuecomment-338206518:39,variab,variable,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635#issuecomment-338206518,3,['variab'],"['variable', 'variables']"
Modifiability,"Or try EIGEN2 instead. I think both are supported, but the CMAKE; environment variable is different. On Fri, 22 Feb 2019 at 13:49, David Hall <notifications@github.com> wrote:. > It appears the root error is:; >; > 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; > 8701>(compiler file 'msc1.cpp', line 1411); > 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; > 8721>Please choose the Technical Support command on the Visual C++; > 8731> Help menu, or open the Technical Support help file for more information; > 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; >; > I'm not sure much can be done when the error message is that the compiler; > cannot handle the file.; >; > The best advice is probably to just have it target python 3.5-3.7 and drop; > python 2.7 support, which will cause condo-forge to use Visual Studio 14.0; > (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGQWf1XGtO8-yDR2XrEPV_BHKUEoxks5vP_VwgaJpZM4bJldO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459:78,variab,variable,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459,1,['variab'],['variable']
Modifiability,"Our usual approach is not to add things to the standard namespace but to have a level of indirection. That is, have a variable ISNAN which we use in the code, and assign a value to it at the top, either std::isnan or your templated definition.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1586#issuecomment-307401225:118,variab,variable,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1586#issuecomment-307401225,1,['variab'],['variable']
Modifiability,"Over time, the C++ language has evolved and parts of the language that were experimental have become part of the core. The shared_ptr is one of those parts. The fix for newer compilers should be in the more recent Open Babel releases. Unfortunately, community support is only for the current release 2.4.x. The community does not have the resources to backport changes/fixes to older versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1837#issuecomment-390140320:32,evolve,evolved,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1837#issuecomment-390140320,1,['evolve'],['evolved']
Modifiability,"PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; u",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5602,variab,variables,5602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['variab'],['variables']
Modifiability,Patch for 2.3.2 perl_bindings configuration. Original comment by: cwilling,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219#issuecomment-281802898:30,config,configuration,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219#issuecomment-281802898,1,['config'],['configuration']
Modifiability,Patch using export to set variables. Original comment by: @jiahao,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800039:26,variab,variables,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800039,1,['variab'],['variables']
Modifiability,"Perhaps we could compile both versions of Tanimoto, and then at run time when it opens a fs file, make a dummy __builtin_popcount call and trap the illegal instruction signal (if it is trappable) and change a function pointer to use the other version. Of course trying to do that in a portable way would also be problematic. Another the issue is that the ""emulated"" __builtin_popcount you get when lacking the -mpopcnt flag is probably better than the fallback which openbabel uses. So we would need to improve that fall-back method as well, or some systems would end up worse off. . Unless we put the two Tanimoto functions in different compilation modules, and compiled one with -mpopcnt and one without that, but with identical source code. This is rapidly getting over my head. Does anyone know of other examples of packaged software that has dealt with this issue? I haven't been able to find any.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105808981:285,portab,portable,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105808981,1,['portab'],['portable']
Modifiability,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:0,Plugin,Plugins,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716,1,['Plugin'],['Plugins']
Modifiability,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:40,extend,extend,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['extend'],['extend']
Modifiability,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:35,rewrite,rewrite,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,1,['rewrite'],['rewrite']
Modifiability,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:406,variab,variables,406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489,1,['variab'],['variables']
Modifiability,"Related to above, I received the same ValueError after installing openbabel/pybel Python bindings using an unofficial .whl from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel) on a Windows (11) machine (Python 3.9; pip install openbabel did not work). The apparent reason for the pybel ValueError was that after installing openbabel 3.1.1 on Windows (GUI version), there is an environment variable *BABEL_DATADIR* set under the Windows environment variables. Deleting or renaming that variable entry solved the ""ValueError: smi is not a recognised Open Babel format"" issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1898#issuecomment-1660952014:452,variab,variable,452,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1898#issuecomment-1660952014,3,['variab'],"['variable', 'variables']"
Modifiability,"Reverted + put changes into a new commit, mainly because of the `openbabel-python.cpp` bloat. > Can you revert the portion of the PEP-compliance commit to return the docstrings for outformats, informats, etc.? Docstrings are part of the documentation. Done, but I've never seen this pattern before. I'm curious to learn more - is SWIG recognizing variable docstrings?. > Is your idea that the JS files be installed beside pybel.py?. Yes, I put them in a `js` folder. They could instead be linked to a remote URL, but then 3D rendering would be dependent on an internet connection. > The toggle could be done as RDKit does, just have a pybel global attribute with a default value which the user can assign to, e.g. pybel.ipython_whatever = True. Done. It's `pybel.ipython_3d`, and it defaults to False. I think 2D is more useful than 3D in common use cases. ![screenshot from 2013-12-09 09 09 34](https://f.cloud.github.com/assets/1449833/1706053/d2ebffa4-60e8-11e3-9526-be9603b1cc19.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558:347,variab,variable,347,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558,1,['variab'],['variable']
Modifiability,"Run ./configure; and run make which created libopenbabel.dylib. It is working for mac os and need to work it for iPhone os. I do not think it is cross compiled for iPhone. Open Babel uses Boost and libxml2. In order to build for iPhone, I need to flatten out all library file and rebuild for them in iPhone OS. Let me dig little more into this . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794374:6,config,configure,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794374,1,['config'],['configure']
Modifiability,"Run ./configure; make That will properly build libopenbabel.dylib on Mac (or, presumably cross-compile for iPhone). Don't copy the babelconfig.h file from Windows -- Windows is not a POSIX-compliant operating system, so there are many workarounds. iPhone and Mac are UNIX-based systems and everything will be smooth. A quick Google search for configure script iPhone gave me these links:; http://pseudogreen.org/blog/iphone/; http://pseudogreen.org/bzr/sandbox/iphone/build_for_iphoneos. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373:6,config,configure,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373,3,"['config', 'sandbox']","['configure', 'sandbox']"
Modifiability,"Running . ```shell; obabel ATP.cdx -O convert.cdxml; ```. with obabel 3.1.1 and subsequent copy-paste into [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) via Structure -> Load .cdxml *somewhat* improves the situation: phosphates are now negatively charged. Good. Except that the absolute values are not reasonable:. ![ChemDraw_samplepage](https://user-images.githubusercontent.com/60490931/190347730-cdcc62d4-93d5-4438-a65a-9a5a15bff01a.png). What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx? Or, do you use an other program which exports in this format (e.g., [chemdoodle](https://www.chemdoodle.com/), or [Marvin Sketcher](https://marvinjs-demo.chemaxon.com/latest/examples/demo.html) to mention just two. Note the red rectangles (furanose cycle) indicate a potential problem how the stereochemistry was defined; in ChemDraw, there are wedges (varying width), and bold single bonds (constant width) as separate buttons to click. (For better portability across OSes and different programs, I prefer .cdxml over Chemdraw's binary .cdx format; the file size is a bit bigger but often this is no issue.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814:1018,portab,portability,1018,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814,1,['portab'],['portability']
Modifiability,"Shameless plug here, but flexible docking is a lot easier with gnina (you can directly specify what residues you want to be flexible without having to setup separate files):; https://github.com/gnina/gnina?tab=readme-ov-file#usage",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654:25,flexible,flexible,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654,2,['flexible'],['flexible']
Modifiability,"Since OpenBabel is written in C++, I really doubt that there would be an impact. The parts that are written in python are wrappers and hence limited to the variable types in C++. I also have problem seeing where such large numbers would be of use in cheminformatics.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485:156,variab,variable,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485,1,['variab'],['variable']
Modifiability,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:925,config,config,925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,1,['config'],['config']
Modifiability,Sorry for the delay - this one got buried over the summer.; Is the environment variable BABEL_DATADIR set? It seems like the install can't find the files for force field optimization. If you use .localopt() does the geometry change?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729:79,variab,variable,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729,1,['variab'],['variable']
Modifiability,"Sorry for the long delay. For some reason, I'm not getting the bug postings by e-mail. Try installing pkg-config and see if that helps. http://www.freedesktop.org/wiki/Software/pkg-config/. Supplying the path for EIGEN3 should be enough, but if things work with pkg-config, I'll be better able to find the problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803567:106,config,config,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803567,3,['config'],['config']
Modifiability,"Sorry it's taking me a while to respond. Could energyToKcal be implemented instead of a set of consts in the header file (e.g. ""const double JOULE_TO_CAL = whatever"")? This wouldn't need any API changes though we could expose it if useful. We have something similar for DEG_TO_RAD I think. The nice thing about a const is that the IDE will fill in the name of the variable, though I guess a function taking an enum would do the same. I'll do the necessary work for extract_thermochemistry tomorrow. Hopefully I can send you a pull request directly, and then you get to hassle me about my patch! :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407:364,variab,variable,364,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407,1,['variab'],['variable']
Modifiability,"Sure,. several errors about undeclared variables, like:. [ 82%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; In file included from /usr/include/wx-2.8/wx/window.h:23,; from /usr/include/wx-2.8/wx/generic/splitter.h:15,; from /usr/include/wx-2.8/wx/splitter.h:44,; from /home/bioinfp/jang/sumpf/openbabel/openbabel-2.3.1/src/GUI/./stdwx.h:29,; from /home/bioinfp/jang/sumpf/openbabel/openbabel-2.3.1/src/GUI/OBGUI.cpp:20:; /usr/include/wx-2.8/wx/cursor.h: In constructor ‘wxBusyCursorSuspender::wxBusyCursorSuspender()’:; /usr/include/wx-2.8/wx/cursor.h:65: error: ‘wxIsBusy’ was not declared in this scope. Full error:; http://paste.pocoo.org/show/tYo8uwvHZPlCOCna9EVg/. That was obviously due to some missing include file, although I did not find a compiler error like ""could not find file..."". Original comment by: gurke111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1145#issuecomment-281801191:39,variab,variables,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1145#issuecomment-281801191,1,['variab'],['variables']
Modifiability,Sure. I re-based the patch. The other EEM patch also addressed the segfault but fixed it by changing the loop variable to an integer. This patch now fixes all warnings due to signedness.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/241#issuecomment-169414562:110,variab,variable,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241#issuecomment-169414562,1,['variab'],['variable']
Modifiability,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:95,evolve,evolved,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909,1,['evolve'],['evolved']
Modifiability,"Thanks @ghutchis and @dkoes that's really helpful. I was struggling to find some of these attributes. I actually have another question regarding chirality, it seems that the methods `IsPositiveStereo()` and `IsNegativeStereo()` are not supported in OpenBabel == 3.x. I'm looking in `ob.OBStereoFacade(obmol).GetTetrahedralStereo.GetConfig().winding` but this always seems to be 1, even when I pass in a SMILE string that is in a different orientation (i.e. should return 2 if its anticlockwise -> see [here](http://openbabel.org/api/3.0/structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7)). Am I doing something wrong? See code snippet below. ```; num_tetra = 0; mol = pybel.readstring(""smi"", ""F/C=C/C[C@@H](Cl)Br""). m = mol.OBMol. facade = ob.OBStereoFacade(m). for atom in ob.OBMolAtomIter(m):; mid = atom.GetId(); if facade.HasTetrahedralStereo(mid):; tetra = facade.GetTetrahedralStereo(mid); print(tetra.GetConfig().winding) # this always prints 1, even if I rewrite the SMILES string; if tetra.IsSpecified():; num_tetra += 1; ```. > The place to look is in https://github.com/openbabel/openbabel/blob/master/src/formats/pdbformat.cpp, specifically, `parseAtomRecord`. If it isn't parsed from a PDB, then there isn't a standard place to store the information. Surprisingly, it doesn't look like the temperature factor is retained, but the occupancy is stored as a data attribute. It would be great if you submitted a pull request that also stored the temperature. Yes I noticed that temperature factor isn't stored so I'd be happy to submit a PR for that. I'm currently under the pump with university and my project but I will make myself a note to submit a PR once I have some free time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025:981,rewrite,rewrite,981,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025,1,['rewrite'],['rewrite']
Modifiability,"Thanks for the report. Incidently, the _ang<->_tor problem had been reported and fixed yesterday already, but I have committed your fix for negative dihedral variable references to the 2.2 branch. cheers,. Michael. PS: If possible, send unified diffs (diff -u on Unix computers) in the future, and maybe attach them. That makes them slightly easier to apply. PPS: A fellow TUM scientist!. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/896#issuecomment-281795321:158,variab,variable,158,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/896#issuecomment-281795321,1,['variab'],['variable']
Modifiability,"Thanks! So, I guess OB loads libraries or plugins on the fly. 0) Out curiosity, do you know that library is loaded in the process? is it some internal library to OB?. 1) does it make sense to load libraries on the fly and each time a Read operation is performed? . 2) I deduce that this is done in every instance of `OBConversion`, so it is better to recycle them?. I wonder these because it may not be unheard of that a program opens a few hundred thousand files (or streams), that could amount to several gigabytes of leaked memory.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271:42,plugin,plugins,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271,1,['plugin'],['plugins']
Modifiability,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:144,plugin,plugins,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,2,['plugin'],['plugins']
Modifiability,"That's right. But it's only needed for plug-in load, and can be turned off afterwards. Maybe the bindings should instantiate an OBConversion object to force plugin loading, and then turn it off.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834:39,plug-in,plug-in,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834,2,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,The EIGEN2 problem is fixed in r4356. I used an easier way to pass the environment variable. I did not pass any custom CFLAGS in though. Has this caused you some problems? (I'm wary of applying fixes for issues that have not yey been reported as problems.). Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800042:83,variab,variable,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800042,1,['variab'],['variable']
Modifiability,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:29,layers,layers,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,"['layers', 'portab']","['layers', 'portable']"
Modifiability,"The apparently latest API's documentation [on-line](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CppAPI.html) of OpenBabel (OpenBabel's main index [here](https://open-babel.readthedocs.io/en/latest/index.html)) equally does so, as well as the hyperlinks in chapter 11.1 of the then generated .pdf ahead of the description relevant to e.g., C++ and Python. It is worth noting chapter 11.8 «Updating to Open Babel 3.0 from 2.x» starts by. > «Open Babel 3.0 breaks the API in a number of cases, and introduces some new behavior behind-the-scenes. These; changes were necessary to fix some long standing issues impacting chemical accuracy as well as performance.; Here we describe the main changes, and how to change existing code to adapt.». At present, the .pdf was created on June 14, 2020, possibly to reflect about OpenBabel 3.0.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389:743,adapt,adapt,743,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389,1,['adapt'],['adapt']
Modifiability,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:205,plugin,plugin,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,2,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,The attached patch to xml.cpp prevents the crash. I'll commit it to the development code if no side effects come to light. (The xml code is unpleasantly complex.). The problem was that the extended OBConversion object needed for XML formats was reused without being updated with the new output stream. . Chris; File Added: xml.diff. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794025:189,extend,extended,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794025,1,['extend'],['extended']
Modifiability,The attribute is not effective unless `-std=c++17` is supplied. Actually there are many unused variables.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2075#issuecomment-552222160:95,variab,variables,95,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2075#issuecomment-552222160,1,['variab'],['variables']
Modifiability,"The choices here set the scene for other API additions/removals. Are you saying that it's okay to extend the API to add more readable functions that duplicate existing functionality (and may lead to less efficient code)?. If you are set on this, please at least consider making the name consistent with the existing Get/Set function; i.e. Has/IsAtomicNum rather than IsElement. Regarding the elements, again why must we add duplicates? What problem is this solving? We shouldn't just make changes because ""I think that would be useful"". Either go completely with symbols, or go completely with IUPAC English names. If it turns out that we need both, we can add them down the line. But we can't remove them if we push them out, just in case.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358222612:98,extend,extend,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358222612,1,['extend'],['extend']
Modifiability,"The function should probably return the atom charges, just like calcfp(), calcdesc() and so forth. Apart from this, you should probably add a list of charge models like for the other plugins at the start of the file.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32341433:183,plugin,plugins,183,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32341433,1,['plugin'],['plugins']
Modifiability,"The incomplete reading problem reported by Noel was that ALL_READS_BINARY had not been set by CMake build. (It is now done in the code.) Without it, seekg() gave incorrect results with UNIX file endings under MSVC. In revision 3556 in the trunk code the binary read and write of header variables in fs files are done separately, to avoid the possibility that a struct is laid out differently on other platforms. Maybe this will cure the problem on Linux 64 bit systems? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339:286,variab,variables,286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339,1,['variab'],['variables']
Modifiability,"The install instructions are correct. The build system for 2.2.2 is ./configure, make. The build system for 2.3 will be cmake. I'm marking this bug as pending. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/915#issuecomment-281795501:70,config,configure,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/915#issuecomment-281795501,1,['config'],['configure']
Modifiability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:73,variab,variables,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,1,['variab'],['variables']
Modifiability,"The latest version is 2.3.1? I installed 2.3.1. ; Could you send me a link?. Yujie Tian. > On Mar 10, 2015, at 5:03 AM, baoilleach notifications@github.com wrote:; > ; > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:310,Config,Config,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Config'],['Config']
Modifiability,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:329,variab,variable,329,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476,4,['variab'],['variable']
Modifiability,The problem is that MinGW always disabled dynamic modules in configure. I'm making a new configure script... Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795362:61,config,configure,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795362,2,['config'],['configure']
Modifiability,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:232,extend,extending,232,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,1,['extend'],['extending']
Modifiability,"The solution is much simpler than I've anticipated. There is `SWIG_PYTHON_2_UNICODE` variable that has to be defined to [support unicode in Python 2.x](http://www.swig.org/Doc3.0/Python.html). Although swig has to be at least 3.0.8 to work, which is the case for Anaconda - we should be fine. There shouldn't be any downside to this resolution for earlier versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870:85,variab,variable,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870,1,['variab'],['variable']
Modifiability,"The stereo objects are correctly updated (with OBStereo::ImplicitRef) when the hydrogens are removed. However, the InChI format did not handle this correctly. The first 2 examples are actually a special case. The molecules are not stereogenic because there are two implicit neighbors. These should be (explicitly) ignored, similarly how C\[C@](C)(C)C would be handled. For tetrahedral stereochemistry the inchi format could only handle implicit refs if these were the first or second atom in the smiles string. This was easily extended to the general case. Fix with regression tests (pull request created): https://github.com/timvdm/openbabel/tree/issue2111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357:527,extend,extended,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357,1,['extend'],['extended']
Modifiability,The variable-length array bites again!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517913006:4,variab,variable-length,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517913006,1,['variab'],['variable-length']
Modifiability,The whole point of the switch statement is to be super fast. Adding function calls to tolower() makes no sense. The switch statement is automatically generated and can be adapted to handle every case. But I thought we agree that tolower() would be called by the XYZ format rather than put in here.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2338#issuecomment-805056504:171,adapt,adapted,171,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2338#issuecomment-805056504,1,['adapt'],['adapted']
Modifiability,"Then there's examples with 3 nitrogens in the ring. Similar story. To make matters more complicated, it's the extended PI system that's important. See for example http://www.daylight.com/daycgi/depict?4f3d63316e636e63325b6e485d5b6e485d63633132 where the pyrimidinone does not have a H on either N, but everything is balanced out by the fused ring (as far as I can tell). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794887:110,extend,extended,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794887,1,['extend'],['extended']
Modifiability,"There are a few example about how to use the OpenBabel Module here: https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonDoc.html. Taking the SMILES example and adapting for .mol2, try using the following as a starting point:; ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""mol2""). mol = openbabel.OBMol(); obConversion.ReadString(mol, ""C1=CC=CS1""); mol.AddHydrogens(); openbabel.OBBuilder().Build(mol) # To get coordinates. # If you just want the string; mol2string = obConversion.WriteString(mol). # To save as a .mol2 file; obConversion.WriteFile(mol, ""out.mol2""); ```. Alternatively, you can use the `pybel` module, which is somewhat simplified:; ```python; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C1=CC=CS1""); mol.addh(); mol.make3D(); mol.write(""mol2"", ""out.mol2""); ```. However, I believe it is much simpler to call the `obabel` executable:; ```sh; obabel -:""C1=CC=CS1"" --gen3D -O out.mol2; ```; which can be called from Python via:; ```python; import os; os.system(""obabel -:\""C1=CC=CS1\"" --gen3D -O out.mol2""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811:172,adapt,adapting,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811,1,['adapt'],['adapting']
Modifiability,"There is a live ebuild in science overlay, you can install latest development version using that. Though there is a bug currently which prevents installation of Python bindings for the live version because of the issue with sandbox, which I don't know how to resolve (have reported it on bugzilla).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484:224,sandbox,sandbox,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484,1,['sandbox'],['sandbox']
Modifiability,There's no BABEL_DATADIR environment variable after clean 2.4.1 installation. I also can't seem to find the data directory that would be comparable to %USERPROFILE%\AppData\Roaming\OpenBabel-2.3.2\data after the 2.3 installation.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635#issuecomment-363459298:37,variab,variable,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635#issuecomment-363459298,1,['variab'],['variable']
Modifiability,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:93,variab,variable,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385,2,['variab'],['variable']
Modifiability,"This is a bug when babel is used on the command-line . The sizing of the table works ok in the GUI and with the alternative command-line interface obabel (see the example below). The development code now has a fix for babel, but it requires the use of --rows and --cols instead of xr and -xc (and --px instead of -xp). With babel the options are shared with other formats, which causes conflicts when they take different numbers of parameters (as here). obabel is more flexible because it does not need to be told the number of parameters. This, and its greater protection against mistakingly overwriting input files, make it the command-line interface of choice. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1047#issuecomment-281797830:469,flexible,flexible,469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1047#issuecomment-281797830,1,['flexible'],['flexible']
Modifiability,"This is an instance of a long-standing difficulty which arises because the query is either SMARTS or is converted into SMARTS.; Converting search1.mol and search2.mol is to SMILES and gives; c1c2c(ccc1)nc[nH]2; OC(=O)OC(OC(=O)C)C; When used as SMARTS, they do not match target.mol because; in the first, the explicit H is not present and; in the second, the terminal C is aliphatic rather than aromatic. ; 	; c1c2c(ccc1)ncn2 and; OC(=O)OC(OC(=O)[#6])C; do match. So there is no bug when the query is in the -s option (or the GUI) and it would be a pity to degrade the interpretation of the parameter in -s option to something less than SMARTS. On the other hand, this is not what many people expect, particularly if they provided the query as a molecule. I'm currently working on an extended -s option which can also take a filename. The molecule in the file is matched in a more relaxed way (with Tim's new isomorphism code). With this, the queries, search1.mol and search2.mol, now match target.mol. I'll commit to the development code when I've sorted out the interaction with fastsearch. Maybe the new isomorphism code could be used in tigress?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/998#issuecomment-281796899:783,extend,extended,783,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/998#issuecomment-281796899,1,['extend'],['extended']
Modifiability,"This is certainly a bug (we need more testcases) but while it is true that the original code did handle ""CL"" and ""Chlorine"" among other synonyms, I decided during the rewrite that the GetAtomicNum should just contain the atomic symbol 'Cl'. This function should do one job and do it well. In other words, I'd prefer not to change a core function for the sake of a particular format, and instead just lower-case the 2nd letter before lookup.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974:167,rewrite,rewrite,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974,1,['rewrite'],['rewrite']
Modifiability,"This is fixed in the 2.2.x branch, revision 2831 or later. I've address missing ""Variables"" line as well as z-matrices with embedded numbers (and no variables). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793682:81,Variab,Variables,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793682,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"This is not a bug. The Open Babel install should be configured using CMake parameters, not at the ""make"" stage. See the installation instructions. If you want to discuss this in more detail, for example if you feel that our approach does not allow you to do something in particular, please send an email to the dev list and people can weigh in on this. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1075#issuecomment-281799997:52,config,configured,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075#issuecomment-281799997,1,['config'],['configured']
Modifiability,"This is now fixed in svn. However, you are still not able to optimize your molecule because there are three deuterium atoms present. AFAIK you can safly remove the M ISO line in the file without affecting the results. (atom mass is not used in parameterization/optimization). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954:244,parameteriz,parameterization,244,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954,1,['parameteriz'],['parameterization']
Modifiability,This isn't a bug - the correct variable names are documented. You need to specify the location with EIGEN3_INCLUDE_DIR.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1918#issuecomment-453948396:31,variab,variable,31,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1918#issuecomment-453948396,1,['variab'],['variable']
Modifiability,"This isn't a bug. SMILES are limited to 32,767 characters, and the attached file contains a SMILES with over 200,000 characters. If this is something you need, you should re-file this as an enhancement request. I will open a different bug for this issue: SMILES are truncated to 32,767 characters without warning, which will produce either an incorrect error message or the wrong molecule. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1180#issuecomment-281801806:190,enhance,enhancement,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1180#issuecomment-281801806,1,['enhance'],['enhancement']
Modifiability,"This isn't a problem with trunk, although the file exposes another bug:. #0 0x0000000100195610 in OpenBabel::OBTetrahedralStereo::IsValid (this=0x0) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:114; #1 0x0000000100195877 in OpenBabel::OBTetrahedralStereo::GetConfig (this=0x0, winding=OpenBabel::OBStereo::Clockwise, view=OpenBabel::OBStereo::ViewFrom) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:152; #2 0x00000001001a66f4 in OpenBabel::OBStereoFacade::InitMaps (this=0x7fff5fbfb210) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:84; #3 0x00000001001a6c22 in OpenBabel::OBStereoFacade::EnsureInit (this=0x7fff5fbfb210) at stereo.h:404; #4 0x000000010131fa81 in OpenBabel::OBStereoFacade::HasTetrahedralStereo (this=0x7fff5fbfb210, atomId=48) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:44; #5 0x0000000101227130 in OpenBabel::OBGraphSym::BreakChiralTies (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:541; #6 0x0000000101228805 in OpenBabel::OBGraphSym::ExtendInvariants (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1003; #7 0x0000000101229435 in OpenBabel::OBGraphSym::CalculateSymmetry (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1058; #8 0x000000010122988c in OpenBabel::OBGraphSym::GetSymmetry (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1094. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794:1110,Extend,ExtendInvariants,1110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794,1,['Extend'],['ExtendInvariants']
Modifiability,"This issue will be closed, but not for failing to create a 3D structure *at all*. I retract the issue because I don't possess enough insight how OpenBabel and RDKit's guess the spatial arrangement of the atoms if a SMILES string is the sole input at hand. If the structures are read by Jmol, and if the later is requested to assign the absolute configuration (apparently, taking into account for the non-bonded electron pair on nitrogen then assigned priority `0`) then the two programs offer an output Jmol eventually assigns as either (*R*), or (*S*) about N. ![ezgif com-gif-maker](https://user-images.githubusercontent.com/19709084/124796016-35e47e00-df40-11eb-9b66-3ccc1aab40dc.gif). For the interested, the archive below documents the steps and files leading to the animation shown. [close_wegdes.zip](https://github.com/openbabel/openbabel/files/6778775/close_wegdes.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408:345,config,configuration,345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408,1,['config'],['configuration']
Modifiability,"This looks like a false positive to me, but it's harmless. I don't see how, if atom->GetIdx() is uninitialized, assigning it to a variable is going to initialize it. As I said, it's harmless, so assuming the builds pass, I'm fine with merging.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350020279:130,variab,variable,130,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350020279,1,['variab'],['variable']
Modifiability,"This works:; obabel molecules.sdf -O new.png -opng2 -m; producing new1.png, new2.png, etc. On Windows, this also works:; obabel molecules.sdf -O new*.png -opng2. The new --split option has the same problem as -m. The trouble is that PNGFormat is not quite a normal format because it has been adapted from a different purpose. PNG2Format is a normal format, so outputting to it does what is expected. I'll look to see if I can do something to make the more obvious command line work as expected. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1156#issuecomment-281801403:292,adapt,adapted,292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1156#issuecomment-281801403,1,['adapt'],['adapted']
Modifiability,Travis use Swig 2.0.x ([log](https://travis-ci.org/openbabel/openbabel/jobs/145775600#L254)) and all tests pass. Defining arbitrary variable should not mess with anything (unless it is not meant for anything else). I may try building OB with Swig 3.0.7 which is just before that feature was used if you think it will help.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055:132,variab,variable,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055,1,['variab'],['variable']
Modifiability,"Try a more recent version of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake W",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:126,Config,Config,126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Config'],['Config']
Modifiability,"Ultimately I think the solution is to rewrite that format to avoid this dependency. But in the meanwhile, looks like a reasonable fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853:38,rewrite,rewrite,38,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853,1,['rewrite'],['rewrite']
Modifiability,"Unable to recall if you or an other leading developer of openbabel attended the virtual meeting «InChI Days 2022» in April by [InChI trust](https://www.inchi-trust.org/) or/and are subscriber to the (low traffic) public [discussion board](https://sourceforge.net/p/inchi/mailman/inchi-discuss/), I would like to draw your attention to their [technical meeting](https://www.inchi-trust.org/june-2022-technical-sessions) June 17--19 in Cambridge UK. Again, virtual attendance of the event is possible. . While the meeting wants to focus on ""progress toward adding extended stereochemistry and tautomers"", on Friday, Gerd Blanke chairs one session to clarify if ongoing work is going to be named InChI 1.07 (or 2.0).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101:562,extend,extended,562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101,1,['extend'],['extended']
Modifiability,"Usually it's good to have one feature or fix per pull request.; On 24 Mar 2016 10:53 p.m., ""arkose"" notifications@github.com wrote:. > The main improvement is getting rid of the hard-coded path by using the; > already-existing variable.; > ; > (Also introduces the possibility of the include install path to something; > else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for; > looking through and editing the CMakeLists.txt file, I wanted the option to; > install headers to ~/include/openbabel/ instead of; > ; > ## ~/include/openbabel-2.0/openbabel/, for example.); > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/openbabel/openbabel/pull/287; > Commit Summary; > - CMakeLists.txt fix for wrongly hard-coded path; > ; > File Changes; > - _M_ CMakeLists.txt; > https://github.com/openbabel/openbabel/pull/287/files#diff-0 (6); > ; > Patch Links:; > - https://github.com/openbabel/openbabel/pull/287.patch; > - https://github.com/openbabel/openbabel/pull/287.diff; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/287",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/287#issuecomment-201225319:227,variab,variable,227,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287#issuecomment-201225319,1,['variab'],['variable']
Modifiability,"We can blame CMake, but we still need to sort it out at our end. Hopefully we can do this. The other problem is building the GUI. You need wxWidgets 2.8, but you don't have this. Configure CMake with ""-DBUILD_GUI=OFF"" to stop building the GUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800651:179,Config,Configure,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800651,1,['Config'],['Configure']
Modifiability,"We should remove this format, as it duplicates smi and I did not update it; in the implicit H rewrite. On Sat, 14 Apr 2018, 12:16 Julien Nabet, <notifications@github.com> wrote:. > With master sources updated today, I could retrieve a bt:; > Error: attempt to subscript container with out-of-bounds index 2147483647,; > but container only holds 24 elements.; >; > Objects involved in the operation:; > sequence ""this"" @ 0x0x7fffffffc910 {; > type = std::__debug::vector<int, std::allocator >;; > }; >; > Program received signal SIGABRT, Aborted.; > __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > 51 ../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; > (gdb) bt; > #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > #1 <https://github.com/openbabel/openbabel/pull/1> 0x00007ffff7a54231 in; > __GI_abort () at abort.c:79; > #2 <https://github.com/openbabel/openbabel/pull/2> 0x00007ffff667e4d5 in; > ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; > #3 <https://github.com/openbabel/openbabel/pull/3> 0x00007ffff730d5d9 in; > std::__debug::vector<int, std::allocator >::operator[]; > (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; > #4 <https://github.com/openbabel/openbabel/pull/4> 0x00007fffe8282bbd in; > OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0,; > chirality=Smiley::AntiClockwise,; > chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at; > /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; > #5 <https://github.com/openbabel/openbabel/pull/5> 0x00007fffe8286e39 in; > Smiley::ParserOpenBabel::OpenBabelCallback::processStereochemistry; > (this=0x7fffffffc7b0); > at /home/julien/projects/openbabel/src/formats/smiley.h:2656; > #6 <https://github.com/openbabel/openbabel/pull/6> 0x00007fffe828475f in; > Smiley::ParserOpenBabel::OpenBabelCallback::parse (this=0x7fffffffc7b0,; > str=""[C@H]1(C@@HO)O\tInositol_trisphosphate"") at;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184:94,rewrite,rewrite,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184,1,['rewrite'],['rewrite']
Modifiability,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:1251,variab,variables,1251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586,1,['variab'],['variables']
Modifiability,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:182,plugin,plugins,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,1,['plugin'],['plugins']
Modifiability,"Well, it still had to be done. Thanks. On Mon, 16 Sep 2019, 15:11 fredrikw, <notifications@github.com> wrote:. > I was (unfortunately) able to pinpoint the regression to 4094c68; > <https://github.com/openbabel/openbabel/commit/4094c68b87415889150377bd9dc419398ac78d8b>; > which is @chrismorl <https://github.com/chrismorl> 's rewrite of the cdx; > parser. So no easy revert there...; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2021?email_source=notifications&email_token=AAALCGPGQUFCQXTD6WTSVCTQJ6HXZA5CNFSM4ISQVHSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6ZIXBY#issuecomment-531794823>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGMVTZJZZFRHXQCDCC3QJ6HXZANCNFSM4ISQVHSA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531828265:327,rewrite,rewrite,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531828265,1,['rewrite'],['rewrite']
Modifiability,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:723,variab,variables,723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,1,['variab'],['variables']
Modifiability,"What version of CMake are you using? The CMakeLists.txt file definitely sets up environment variables for ""make test"", so I'm curious if you have an older version of CMake or something. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792:92,variab,variables,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792,1,['variab'],['variables']
Modifiability,"What version of Cmake are you using? Also, can you paste (or attach) the entire CMake configuration output. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800642:86,config,configuration,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800642,1,['config'],['configuration']
Modifiability,"When the Linux one is installed, the plugins alone take up almost 120MB. Do the Windows and OSX conda packages include the underlying library or are they just the Python parts?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251137685:37,plugin,plugins,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251137685,1,['plugin'],['plugins']
Modifiability,Which platform are you on?. Which environment variable did you set in particular so that it worked?. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797790:46,variab,variable,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797790,1,['variab'],['variable']
Modifiability,"Which version of Open Babel 3.0.0 exactly did you install? The 32-bit or 64-bit? If you used the default installation directory, it will be ""Program Files"" for 64-bit and ""Program Files (x86)"" for 32-bit. Is the Open Babel 3.0 installation folder on the PATH? From Python you can check this with ""import sys; print(sys.path)"". If not, add it to the front of your Windows environment variable (google ""how to change path""), and restart VS Code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2129#issuecomment-586917409:383,variab,variable,383,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2129#issuecomment-586917409,1,['variab'],['variable']
Modifiability,"While you're in there, it would be great if you could take a look at warnings in the file. There are a number of unused variables for example, as well as signed/unsigned comparisons. I'll paste mine in here, but your version is likely different (build with -DCMAKE_CXX_FLAGS=""-W -Wall""):; ```; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:489:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:58",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:120,variab,variables,120,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,1,['variab'],['variables']
Modifiability,Why not just re-upload a newer 3.1.0? It think there might be more problems downstream if we change the variable names between 3.1.0 and 3.1.1.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2190#issuecomment-625101453:104,variab,variable,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2190#issuecomment-625101453,1,['variab'],['variable']
Modifiability,"Works for me. What operating system, and what the cmake configure command?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800640:56,config,configure,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800640,1,['config'],['configure']
Modifiability,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:552,variab,variable,552,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,1,['variab'],['variable']
Modifiability,"Yes I think this is expected behavior too, we normally use the convention of plural for external variables, i.e. the library might be defined in OpenBabel3_LIBRARY, but the variable for the public interface would be OpenBabel3_LIBARIES which may have more things added in the future. Same with _INCLUDE_DIR being internal often, and INCLUDE_DIRS being external - may be the same, but the plural normally defines the interface to use from the outside.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-556334570:97,variab,variables,97,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-556334570,2,['variab'],"['variable', 'variables']"
Modifiability,"Yes, I think flavors of aromaticity should be a separate enhancement discussion to get the API right. I'll take a look at the pull request this weekend. Thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329499075:57,enhance,enhancement,57,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329499075,1,['enhance'],['enhancement']
Modifiability,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:150,plugin,plugin,150,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,1,['plugin'],['plugin']
Modifiability,"You don't need to use either boost or libxml2. These are optional and discovered while running ./configure. If you don't have these libraries, alternatives will be used -- although XML file formats will not be supported if libxml2 is not available. Take a look at the script I linked to. It will run the configure script to cross-compile for iPhone. I don't think this is a bug and will close this report. If you have questions, please post to the openbabel-discuss mailing list. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794376:97,config,configure,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794376,2,['config'],['configure']
Modifiability,"You have two down bonds coming off atom 4. What's the origin of the Smiles; string?. On Fri, 12 Nov 2021, 17:31 nbehrnd, ***@***.***> wrote:. > By syntax, the SMILES string is fine. What the SMILES string describes,; > however, represents a hurdle for OpenBabel.; >; > If you paste the SMILES string into an other structure2picture converter,; > e.g., CDK Depict <https://www.simolecule.com/cdkdepict/depict.html>, one; > of the double bonds of the pyrrolidine is resolved as a double bond without; > explicitly assigned configuration. For me, it looks related to observations; > about the isomers of 2-butene filed earlier (here; > <https://github.com/openbabel/openbabel/issues/2429>).; >; > With the information shared by you, I aimed for a replication with a; > pristine copy of the .cif from COD, which was translated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:521,config,configuration,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['config'],['configuration']
Modifiability,"[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1428,variab,variable,1428,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/d",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:28771,plugin,plugin,28771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13561,variab,variable,13561,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11269,variab,variable,11269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"```gen3D``` plugin should erase randomness, and rewrite them with new values it generates. Why does it keep random coordinates?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466929373:12,plugin,plugin,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466929373,2,"['plugin', 'rewrite']","['plugin', 'rewrite']"
Modifiability,"arning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1723,config,configuration,1723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['config'],['configuration']
Modifiability,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:66838,plugin,plugin,66838,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:67862,plugin,plugin,67862,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"arting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to conve",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1081,plugin,plugin,1081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['plugin'],['plugin']
Modifiability,"atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\B",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3506,Config,Configuration,3506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['Config'],['Configuration']
Modifiability,"babel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:53697,plugin,plugin,53697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"babel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:16117,plugin,plugin,16117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"babel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64994,plugin,plugin,64994,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"bel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:2375,variab,variable,2375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"bel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57996,plugin,plugin,57996,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,bel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > openbabel-python.i:233: Error: Unable to find 'openbabel/math/transform3d.h'; > openbabel-python.i:234: Error: Unable to find 'openbabel/math/spacegroup.h'; > openbabel-python.i:238: Error: Unable to find 'openbabel/base.h'; > openbabel-python.i:240: Error: Unable to find 'openbabel/generic.h'; > openbabel-python.i:241: Error: Unable to find 'openbabel/griddata.h'; > openbabel-python.i:243: Error: Unable to find 'openbabel/chains.h'; > openbabel-python.i:244: Error: Unable to find 'openbabel/typer.h'; > openbabel-python.i:252: Error: Unable to find 'openbabel/plugin.h'; > openbabel-python.i:257: Error: Unable to find 'openbabel/oberror.h'; > openbabel-python.i:258: Error: Unable to find 'openbabel/format.h'; > openbabel-python.i:259: Error: Unable to find 'openbabel/obconversion.h'; > openbabel-python.i:260: Error: Unable to find 'openbabel/residue.h'; > openbabel-python.i:261: Error: Unable to find 'openbabel/internalcoord.h'; > openbabel-python.i:262: Error: Unable to find 'openbabel/atom.h'; > openbabel-python.i:263: Error: Unable to find 'openbabel/bond.h'; > openbabel-python.i:264: Error: Unable to find 'openbabel/reaction.h'; > openbabel-python.i:282: Error: Unable to find 'openbabel/mol.h'; > openbabel-python.i:289: Error: Unable to find 'openbabel/ring.h'; > openbabel-python.i:290: Error: Unable to find 'openbabel/parsmart.h'; > openbabel-python.i:291: Error: Unable to find 'openbabel/alias.h'; > openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'; > openbabel-python.i:294: Error: Unable to find 'op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:3134,plugin,plugin,3134,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,2,['plugin'],['plugin']
Modifiability,"bel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: dec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71278,plugin,plugin,71278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"berformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_pt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11792,Config,Configuration,11792,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bondtyper.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/builder.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:2460,plugin,plugin,2460,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"cceeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchifor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3926,Config,Configuration,3926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"ce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7311,variab,variable,7311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['variab'],['variable']
Modifiability,"charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71735,plugin,plugin,71735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"clude/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12885,plugin,plugin,12885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"cmake defines OpenBabel3_FOUND itself if all checks insinde the config file pass, yes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2205#issuecomment-625389493:64,config,config,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2205#issuecomment-625389493,1,['config'],['config']
Modifiability,"cmake version 2.6-patch 4, on Centos 5.3 (2.6.18-164.el5), 64-bit. The environment variables set are those in the INSTALL file:. >Environment Variables; >==================; >Open Babel uses a few environment variables to find things at; >runtime. If Open Babel is installed to the location specified at; >compile time, none of these variables need to be set. >BABEL_LIBDIR - the location of Open Babel format plugins; >BABEL_DATADIR - the location of the data files. Since the standard way to build packages is to run:; make; make test; make install. the programs are not installed to the final destination yet, so it seems that the environment variables need to be set. I set them to the ""data"" and ""src/plugins"" directories under the source root. Original comment by: argenta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794:83,variab,variables,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794,7,"['Variab', 'plugin', 'variab']","['Variables', 'plugins', 'variables']"
Modifiability,"cmake; cmake version 2.6-patch 0. cmake -DCMAKE_INSTALL_PREFIX=/home/henritzi/build/openbabel -DEIGEN2_INLCUDE_DIR=/home/henritzi/Eigen2/ ~/src/openbabel; -- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Could NOT find Eigen2; -- Cairo found. PNG output will be supported.; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. I don't know how to fix th PKG message but it is only a warning same with Eigen2 i tried to specif it's location with the; -DEIGEN2_INLCUDE_DIR=/home/henritzi/Eigen2/ option yet the same message; I use debian ; cat /proc/version; Linux version 2.6.26-2-amd64 (Debian 2.6.26-26lenny2) (dannf@debian.org) (gcc version 4.1.3 20080704 (prerelease) (Debian 4.1.2-25)) #1 SMP Tue Jan 25 05:59:43 UTC 2011. Thanks in advance. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800643:592,Config,Configuring,592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800643,1,['Config'],['Configuring']
Modifiability,"code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3074,Config,Configuration,3074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,configure.out. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780834:0,config,configure,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780834,1,['config'],['configure']
Modifiability,"cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::AddConformer()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:55: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:80: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1042:18: warning: unused variable 'attempts' [-Wunused-variable]; unsigned int attempts = 0;. ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:3923,variab,variable,3923,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1582,extend,extended,1582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['extend'],"['extended', 'extended-smiles-and-smarts-cxsmiles-and-cxsmarts']"
Modifiability,"deprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/optransform.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:59125,plugin,plugin,59125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"distro = built from source; All dev packages are present, I assure you. I was able to manually rewrite the CMakeLists.txt and the generated flags.cmake and link.txt to force it to build obgui.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780#issuecomment-366430589:95,rewrite,rewrite,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780#issuecomment-366430589,1,['rewrite'],['rewrite']
Modifiability,"dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72201,plugin,plugin,72201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"e Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\Bu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2996,Config,Configuration,2996,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1496,extend,extend,1496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['extend'],['extend']
Modifiability,"e/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicano.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicans.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichiisot.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichilnct.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimak2.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/in",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:76104,plugin,plugin,76104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"e/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75638,plugin,plugin,75638,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"el/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/changecell.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:48771,plugin,plugin,48771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"el/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBER",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:60129,plugin,plugin,60129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/canonical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:46918,plugin,plugin,46918,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openb",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:50834,plugin,plugin,50834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"erseConfGen(double, unsigned int, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:444:77: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = plus<double>; _Tp = double]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 444 | transform(_energies.begin(), _energies.end(), _energies.begin(), bind2nd(std::plus<double>(), energy_offset));; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:172:5: note: declared here; 172 | bind2nd(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:38:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/distgeom.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/depict/depict.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/depict/svgpainter.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:22034,plugin,plugin,22034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"es produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7267,variab,variable,7267,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"figuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:1022,plugin,plugin,1022,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"find it below, I have added Bq case in the switch block). regards. Enguerran Vanquelef. #!/usr/bin/tclsh. set path [pwd]; puts $path; set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :; for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""nom du fichier en cours : [file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]]_opt.xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; 0 {set tab(nom,$i) ""Bq""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; set ligne [gets $log_courant]; incr i; }; puts $fichxyz ""[expr $i-1]""; puts $fichxyz ""[file tail $nom_fich_log]""; for {set m 1} {$m<$i} {incr m} {; puts $fichxyz ""$tab(nom,$m)\t[format %+8.6f $tab(X,$m)]\t[format %+8.6f $tab(Y,$m)]\t[format %+8.6f $tab(Z,$m)]""; }; }; close $fichxyz; close $log_courant; #I must unset all variables. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649:2281,variab,variables,2281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649,1,['variab'],['variables']
Modifiability,"g I have been doing. I'm running the same smi-sdf-can roundtrip test from `test/testdistgeom.py` on a large dataset (eMolecules SMILES database, only considering chiral molecules). So far, **17670 molecules** have been processed **without any segfaults or wrong stereochemistry**. There is only a minor cosmetic issue which should be fixed I think. For some structures, the number of iterations in `OBDistanceGeometry` is not enough to generate a valid structure. This results in a warning message:; ```; ==============================; *** Open Babel Warning in AddConformer; Distance Geometry failed.; ```; The full roundtrip still produces the correct geometry since we now have an additional loop in Gen3D. However, seeing this message is confusing if the whole process actually worked. Ideally, `AddConformer()` would return a boolean to indicate success. This would change the API/ABI. Some possible workarounds:; 1. Increase the number of iterations (currently equal to the number of atoms).; 2. Add function and member variable (in `OBDistanceGeometryPrivate`) to silence this message.; 3. Remove message and add function to check succes/failure. For the 17670 molecules, there were only 7 such cases. These are listed below together with the number of times OBDistanceGeometry failed. ```; O\C=C1\CCCCC1=O 1 iteration failed; C[C@H]1CCC\C=C\[C@@H]2C[C@H](O)C[C@H]2[C@H](O)\C=C\C(=O)O1 5 iterations failed; Cl\C=C\Cl 1 iteration failed; CO[C@H]1[C@H](O)CC(=O)O[C@H](C)C\C=C\C=C\[C@H](OC2CCC(C(C)O2)N(C)C)[C@H](C)C[C@H](CC=O)[C@@H]1OC1OC(C)C(OC2CC(C)(O)C(O)C(C)O2)C(C1O)N(C)C 3 iterations failed; C\C1=C/CC(C)(C)\C=C\C\C(C)=C\CC1 1 iteration failed; CCO\C=C\CC 1 iteration failed; CO[C@H]1[C@@H](CC(=O)O[C@H](C)C\C=C\C=C\[C@H](O)[C@H](C)C[C@H](CC=O)[C@@H]1O[C@@H]1O[C@H](C)[C@@H](O[C@H]2C[C@@](C)(O)[C@@H](OC(=O)CC(C)C)[C@H](C)O2)[C@@H]([C@H]1O)N(C)C)OC(C)=O 5 iterations failed; ```; In any case, it might be a good idea to have a minimum number of iterations to handle these small molecules.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981:1084,variab,variable,1084,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981,1,['variab'],['variable']
Modifiability,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Linking CXX shared module ../../lib/inchiformat.so; [ 35%] Built target inchiformat; Consolidate compiler generated dependencies of target asciiformat; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/asciiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/asciiformat.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:18:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:96936,plugin,plugin,96936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:49800,plugin,plugin,49800,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,grep -r isfinite .; ```; ./build-sys/include/openbabel/babelconfig.h: #define isfinite _finite; ./src/config.h.cmaker: #define isfinite _finite; ./src/obutil.cpp: if (!isfinite(vic[k]->_tor)); ./src/forcefield.cpp: if (!isfinite(theta)); ./src/forcefield.cpp: if (!isfinite(currentE)); ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (!isfinite(atom->GetX())); ./src/forcefield.cpp: if (!isfinite(atom->GetY())); ./src/forcefield.cpp: if (!isfinite(atom->GetZ())); ./src/forcefields/forcefielduff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefielduff.cpp: if (IsNearZero(dotAbbcBccd) || !isfinite(tor)) { // stop any NaN or infinity; ./src/forcefields/forcefielduff.cpp:	 if (!isfinite(angle)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(angle)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(angle)); ./src/mol.cpp: if (isfinite(v.x()) || isfinite(v.y()) || isfinite(v.z())) {; ./src/depict/svgpainter,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066:102,config,config,102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066,1,['config'],['config']
Modifiability,"h file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chemkinformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cdxmlformat.cpp; Generating Code...; Build log was sa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:12365,Config,Configuration,12365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"harges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Res",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70812,plugin,plugin,70812,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17677,variab,variable,17677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['variab'],['variable']
Modifiability,"ic std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | str",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69055,plugin,plugin,69055,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opisomorph.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.h:15,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:63102,plugin,plugin,63102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"idine is resolved as a double bond without; > explicitly assigned configuration. For me, it looks related to observations; > about the isomers of 2-butene filed earlier (here; > <https://github.com/openbabel/openbabel/issues/2429>).; >; > With the information shared by you, I aimed for a replication with a; > pristine copy of the .cif from COD, which was translated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png>; >; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLXPMPSRSODXRI7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:1471,config,configured,1471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['config'],['configured']
Modifiability,"ile: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Relea",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5336,Config,Configuration,5336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"iles/inchi.dir/inchi_dll_main.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/runichi.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/sha2.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/strutil.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/util.c.o; [ 33%] Linking C shared library ../../../lib/libinchi.so; [ 33%] Built target inchi; Consolidate compiler generated dependencies of target smilesformat; [ 33%] Building CXX object src/formats/CMakeFiles/smilesformat.dir/smilesformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp: In member function ‘bool OpenBabel::OBMol2Cansmi::GetSmilesElement(OpenBabel::OBCanSmiNode*, std::vector<OpenBabel::OBAtom*>&, std::vector<unsigned int>&, std::string&)’:; /home/icamps/Temp/o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:80296,plugin,plugin,80296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"inary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcef",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:40737,plugin,plugin,40737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75109,plugin,plugin,75109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74643,plugin,plugin,74643,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"inite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Debug\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2606,Config,Configuration,2606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,2,['Config'],['Configuration']
Modifiability,"ions]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/fingerecfp.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:37227,plugin,plugin,37227,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1250,portab,portable,1250,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['portab'],['portable']
Modifiability,"l_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:4006,plugin,plugin,4006,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lass _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/bond.h:31,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/query.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:13475,plugin,plugin,13475,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"les/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57089,plugin,plugin,57089,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"libcoordgen and libmaeparser are configured to require boost (although it looks like only maeparser links in a library - boost_iostream). If I remember correctly, there was some discussion about this at the time and the consensus (but not unanimous opinion) was including boost dependencies for extra features that are not required is okay. What is the goal? To build without boost?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625308309:33,config,configured,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625308309,1,['config'],['configured']
Modifiability,"ll in; > ./.local/lib/python3.6/site-packages (from eden==0.2) (0.2.7.1); > Requirement already satisfied: esmre in; > /usr/local/lib/python2.7/dist-packages (from eden==0.2) (0.3.1); > Collecting openbabel (from eden==0.2); > Downloading; > https://mirrors.aliyun.com/pypi/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; > (74kB); > ###############################################################; >; > so it downloads openbabel and try to install it, errors:; > ###############################################################; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /usr/bin/python3 -u -c ""import setuptools,; > tokenize;*file*='/tmp/pip-install-vokwsrny/openbabel/setup.py';f=getattr(tokenize,; > 'open', open)(*file*);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, *file*, 'exec'))"" bdist_wheel -d; > /tmp/pip-wheel-4bdr_2wn --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > - include_dirs: ['/usr/include/python3.6m',; > '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar; > -I/usr/include/python3.6m -I/usr/local/include/openbabel-2.0 -o; > openbabel-python_wrap.cpp openbabel-python.i; > unable to execute 'swig': No such file or directory; > ################################################################; >; > I'm using python2, OS is Ubuntu18.04; > when I install openbabel by myself, I set the environment in ~/.bashrc:; > #################################################################; > export PATH=/usr/local/bin:$PATH; > export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib; > export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH; > #################################",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891:1584,config,config,1584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891,1,['config'],['config']
Modifiability,"lude/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Linking CXX shared module ../lib/plugin_descriptors.so; [ 18%] Built target plugin_descriptors; Consolidate compiler generated dependencies of target plugin_fingerprints; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger2.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:36079,plugin,plugin,36079,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lude/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74120,plugin,plugin,74120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lude/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73654,plugin,plugin,73654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"monFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1935,Config,Configuration,1935,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"mp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:55534,plugin,plugin,55534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"mpare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:2023,variab,variable,2023,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"mplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/atom.h:30,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp: In constructor ‘OpenBabel::OBDiversePoses::OBDiversePoses(const OpenBabel::OBMol&, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:134:66: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = less<double>; _Tp = double]’ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:19472,plugin,plugin,19472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"n: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skippe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1430,Config,Configuration,1430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"nbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7481,plugin,plugin,7481,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"nd unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::T",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1564,variab,variable,1564,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"ndler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73128,plugin,plugin,73128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2306,config,config,2306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,"['Config', 'config']","['Configuring', 'config']"
Modifiability,"nloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17541,variab,variable,17541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"nly objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete for",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1258,variab,variable,1258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['variab'],['variable']
Modifiability,"oilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable];",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1700,variab,variable,1700,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"on = equal_to<long unsigned int>; _Tp = long unsigned int]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 3005 | const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_implicitRef = std::bind1st (equal_to<OBStereo::Ref>(), (OBStereo::Ref) OBStereo::ImplicitRef);; | ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:136:5: note: declared here; 136 | bind1st(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/facade.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/gen3dstereohelper.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:27564,plugin,plugin,27564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/groupcontrib.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:33:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/filters.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/filters.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::bin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:31172,plugin,plugin,31172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3333,config,configure,3333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['config'],['configure']
Modifiability,"openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:18:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addinindex.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, cl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:44940,plugin,plugin,44940,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/sort.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:61769,plugin,plugin,61769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:65814,plugin,plugin,65814,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ort_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6677,variab,variable,6677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"ouble' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Bu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:1968,Config,Configuration,1968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"ownloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20453,variab,variable,20453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"p<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11204,Config,Configuration,11204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"penbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_funct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64100,plugin,plugin,64100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"piling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; unichemformat.cpp; turbomoleformat.cpp; tinkerformat.cpp; shelxformat.cpp; qchemformat.cpp; PQSformat.cpp; pcmodelformat.cpp; nwchemformat.cpp; msmsformat.cpp; msiformat.cpp; mpqcformat.cpp; mpdformat.cpp; mopacformat.cpp; moldenformat.cpp; mmodformat.cpp; Generating Code...; Compiling...; mmcifformat.cpp; jaguarformat.cpp; hinformat.cpp; gromos96",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5908,Config,Configuration,5908,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14625,variab,variable,14625,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:12175,variab,variable,12175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"ps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/inchidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:33030,plugin,plugin,33030,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"put); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8977,variab,variable,8977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"rg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/conformersearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:18437,plugin,plugin,18437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"rror: SWIG failed. Is Open Babel installed?; > You may need to manually specify the location of Open Babel include and library directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; > Failed building wheel for openbabel; > Running setup.py clean for openbabel; > Failed to build openbabel; > Installing collected packages: openbabel; > Running setup.py install for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" install --record /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-2iizw9um-record/install-record.txt --single-version-externally-managed --compile:; > running install; > running build_ext; > Open Babel location automatically determined by pkg-config:; > - include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > openbabel-python.i:233: Error: Unable to find 'openbabel/mat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:6753,config,config,6753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['config'],['config']
Modifiability,"ry directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; >; > I have done: brew install swig, but the errors still exist.; > Could you please let me know how to solve this?; > Thank you.; > Paul; > The detailed errors from pip install openbabel is:; > Paulin@Paulins-MBP:~$ pip install openbabel; > Collecting openbabel; > Using cached openbabel-2.4.1.tar.gz; > Building wheels for collected packages: openbabel; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" bdist_wheel -d /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/tmpwh85q9mepip-wheel- --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > • include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > • library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:1663,config,config,1663,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['config'],['config']
Modifiability,"s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Buil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2516,Config,Configuration,2516,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"s/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72662,plugin,plugin,72662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"s/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/kekulize.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/locale.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/matrix.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mcdlutil.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7947,plugin,plugin,7947,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"scripts/perl/Makefile.PL tries to do exactly that. Can you find out if the OBJ_DIR environment variable isn't set when cmake runs the ""perl Makefile.PL"" command?. Also, your summary mentions Python and Ruby. What about these?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797227:95,variab,variable,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797227,1,['variab'],['variable']
Modifiability,"se as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1787,config,configurations,1787,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,1,['config'],['configurations']
Modifiability,"sr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/ring.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotamer.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotor.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/spectrophore.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tautomer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:26:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:15150,plugin,plugin,15150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"sr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 19%] Built target plugin_fingerprints; Consolidate compiler generated dependencies of target plugin_forcefields; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:39641,plugin,plugin,39641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/mcdlutil.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/molchrg.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/obconversion.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:48:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/fstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:37:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obfunctions.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obutil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:10190,plugin,plugin,10190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_forcefields.so; [ 19%] Built target plugin_forcefields; Consolidate compiler generated dependencies of target plugin_ops; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addfilename.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:42990,plugin,plugin,42990,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldmmff94.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:41825,plugin,plugin,41825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations];",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:6634,plugin,plugin,6634,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3540,plugin,plugin,3540,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4391,variab,variable,4391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"te, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:4809,Config,Configuration,4809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1528,extend,extend,1528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,1,['extend'],['extend']
Modifiability,"th[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::AddConformer()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->Get",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:2298,variab,variable,2298,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"tor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creati",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2420,Config,Configuration,2420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"tput); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:23526,Config,Configuring,23526,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Config'],['Configuring']
Modifiability,"trLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/elements.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/fingerprint.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:5772,plugin,plugin,5772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9725,variab,variable,9725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"ude/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result>",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69893,plugin,plugin,69893,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mol2format.so; [ 33%] Built target mol2format; Consolidate compiler generated dependencies of target pdbformat; [ 33%] Building CXX object src/formats/CMakeFiles/pdbformat.dir/pdbformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp: In member function ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:684:58",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:88651,plugin,plugin,88651,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 2 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1863,Config,Configuration,1863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Config'],['Configuration']
Modifiability,"warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/fillUC.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:51857,plugin,plugin,51857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"wnloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16319,variab,variable,16319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"your speculations seems to be correct , As you mentioned, strcasecmp is a POSIX function, and its usage on Windows may cause compilation issues. either we can make changes to local build by adding something similar to following lines of code in plugin.h; ```; struct OBERROR CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; return strcasecmp(p1, p2) < 0;; #endif; }; };; ```; this should work since _srticmp is a valid function under Microsoft Visual C++ or else you can add a custom function; ```; #include <cctype>. struct CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; while (*p1 && *p2) {; char ch1 = std::toupper(static_cast<unsigned char>(*p1));; char ch2 = std::toupper(static_cast<unsigned char>(*p2));. if (ch1 < ch2) return true;; if (ch1 > ch2) return false;. ++p1;; ++p2;; }. return *p1 < *p2;; #endif; }; };. ```. please verify and correct me if I am wrong , @ghutchis , @chris9672",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684:245,plugin,plugin,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684,1,['plugin'],['plugin']
Modifiability,"| struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descr",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:29929,plugin,plugin,29929,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Performance," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:2002,perform,perform,2002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159,1,['perform'],['perform']
Performance," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1769,load,load,1769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,3,"['load', 'optimiz']","['load', 'optimization']"
Performance," : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; </pre>. And here's my /proc/meminfo:. <pre>; MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unstable: 0 kB; Bounce: 0 kB; WritebackTmp: 0 kB; CommitLimit: 4066748 kB; Committed_AS: 9573052 kB; VmallocTotal: 34359738367 kB; VmallocUsed: 134508 kB; VmallocChunk: 34359595004 kB; HardwareCorrupted: 0 kB; AnonHugePages: 0 kB; HugePages_Total: 0; HugePages_Free: 0; HugePages_Rsvd: 0; HugePages_Surp: 0; Hugepagesize: 2048 kB; DirectMap4k: 7632896 kB; DirectMap2M: 714752 kB; </pre>. Let me know if any other sort of information might be helpful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:10273,Cache,Cached,10273,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['Cache'],['Cached']
Performance," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1132,cache,cache,1132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cache']
Performance," an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz int",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1655,perform,perform,1655,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['perform'],['perform']
Performance," binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56193,load,loader,56193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance," deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56643,load,loader,56643,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance,"""-DCMAKE_BUILD_TYPE=RELEASE"" will fix it. It turns out that the g++ build; does not default to ""RELEASE"", but instead to the build that includes debug; information, hence the humungous files. I think this is a mistake and will; send a pull request. Also, the Release build should use ""-O3"" unless we; know there is a problem with this.; - Noel. On 5 October 2016 at 07:02, Noel O'Boyle baoilleach@gmail.com wrote:. > At the least, there should be an option to bundle the plugins into the; > main .so, independently of a static build.; > ; > On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:; > ; > On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <; > notifications@github.com; > ; > > wrote:; > > ; > > It's the binary obabel and other tools + python parts. I can see that all; > > format files are linked in windows to one (if I remember correctly) and; > > they seam to be highly redundant on Linux. The same (i.e small size) is; > > on; > > OSX. Just review the libraries in my conda packages here; > > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > > ; > > OSX are ~10 times smaller than Linux counterparts.; > > ; > > I think it's a linker problem which might be overcome by GCC (?).; > ; > It would be nice to fix this on Linux (although I don't know how to). I; > don't care so much about the size, but the process startup time of obabel; > can be pretty bad as it loads all those files.; > ; > Cheers,; > ; > Jeff; > ; > —; > You are receiving this because you commented.; > ; > Reply to this email directly, view it on GitHub; > https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997:1422,load,loads,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997,1,['load'],['loads']
Performance,"""Exploded"" optimization after 46 steps. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327:11,optimiz,optimization,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327,1,['optimiz'],['optimization']
Performance,(Crossposting is a bad idea.). The problem is that openbabel.py sets the DL loader flag. Try:; import sys; flags = sys.getdlopenflags(); import pybel; sys.setdlopenflags(flags); import scipy.linalg. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802929:76,load,loader,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802929,1,['load'],['loader']
Performance,"-- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Could NOT find Eigen2; -- checking for module 'cairo'; -- found cairo, version 1.6.4; -- Found Cairo: /usr/lib/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python2.5; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:1879,Perform,Performing,1879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Perform'],['Performing']
Performance,/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a4000-2b0db55a5000 rw-p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a5000-2b0db55ab000 r-xp 00000000 f,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:20102,cache,cacheformat,20102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,"007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at remote 0x7ffff6759f38>; res = <type at remote 0x7ffff7d76220>; ty = 0x7ffff66613a0 <_swigt__p_std__tr1__shared_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3402,optimiz,optimized,3402,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.smi --gen3d -O converged3d.sdf; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (/home/USER/Desktop/ZINC001094026363.sdf); with Atom Ids as follows: 13; Warning: Stereochemistry is wrong, using the distance geometry method instead; ...; ```. So, it likely is time to get in touch with the database's curators about this very entry.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2966,load,load,2966,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['load'],['load']
Performance,"27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> from openbabel import openbabel as ob; > Traceback (most recent call last):; > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; > return importlib.import_module(mname); > File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; > return _bootstrap._gcd_import(name[level:], package, level); > File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; > File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; > File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; > ModuleNotFoundError: No module named 'openbabel._openbabel'; >; > During handling of the above exception, another exception occurred:; >; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; > from . import openbabel; > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; > _openbabel = swig_import_helper(); > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; > return importlib.import_module('_openbabel'); > File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; > return _bootstrap._gcd_import(name[level:], package, level); > ImportError: DLL load failed: Impossibile trovare il modulo specificato.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2122?email_source=notifications&email_token=AAALCGMWINFRNNXNNEUCKYTRAQYUJA5CNFSM4KOH5L7KYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IKE5UAA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLQFRO2FG4KQ4LJGYDRAQYUJANCNFSM4KOH5L7A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122#issuecomment-580760948:2573,load,load,2573,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122#issuecomment-580760948,1,['load'],['load']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:6597,cache,cache,6597,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:6614,cache,cache,6614,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:4735,cache,cache,4735,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:5666,cache,cache,5666,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:7528,cache,cache,7528,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:8459,cache,cache,8459,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:4752,cache,cache,4752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:5683,cache,cache,5683,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:7545,cache,cache,7545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:8476,cache,cache,8476,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. ---. And here's my /proc/meminfo:. ---. MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unst",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:9390,cache,cache,9390,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; </pre>. And here's my /proc/meminfo:. <pre>; MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:9407,cache,cache,9407,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:3804,cache,cache,3804,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:3821,cache,cache,3821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at remote 0x7ffff6759f38>; res = <type at remote 0x7ffff7d76220>; ty = 0x7ffff66613a0 <_swigt__p_std__tr1__shared_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1988,optimiz,optimized,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:1410; #9 0x00000000004043cf in main (argc=<value optimized out>, argv=0x7fffffffe5a8) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/tools/babel.cpp:347. Line 742 of gaussformat.cpp is:. 742	 betaSymmetries.push_back(symmetries[i]);. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:1300,optimiz,optimized,1300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,7,['optimiz'],['optimized']
Performance,":23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56105,load,loader,56105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance,"<s>If GCC is older than 5 or clang than 3.6, short circuit evaluation does not seem to be performed, namely compilation of the following fails:; ```cpp; #if defined(__has_cpp_attribute) && __has_cpp_attribute(deprecated) >= 201309L; ```. Are such old compilers still supported?</s>. The conditionals are updated in terms of portability.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2002#issuecomment-534408311:90,perform,performed,90,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2002#issuecomment-534408311,1,['perform'],['performed']
Performance,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:219,perform,perform,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635,1,['perform'],['perform']
Performance,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:876,cache,cache,876,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,2,['cache'],['cache']
Performance,"> Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. Sorry, I didn't understand this. The change; ```; - if(LoadLibrary( lib_name.c_str() )); + if(LoadLibrary( (PTCHAR) lib_name.c_str() )); ```; did work on my machine. > Can you try the following change and see whether the build completes for you too?; > ; > ```; > --- a/CMakeLists.txt; > +++ b/CMakeLists.txt; > @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); > CACHE STRING ""Binary build output directory""); > endif(); > if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); > - if(UNIX); > + if(UNIX OR MINGW); > set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; > CACHE STRING ""Library build output directory""); > else() # This is preferable on WIndows for example - bin = lib directory.; > ```. The new `cmake` with the change from `if(UNIX)` to `if(UNIX OR MINGW)`, keeping the original `dlhandler_unix.cpp`, does not prevent the subsequent compilation error to occur. It still tries to compile `dlhandler_unix.cpp` without success.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404:169,Load,LoadLibrary,169,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404,4,"['CACHE', 'Load']","['CACHE', 'LoadLibrary']"
Performance,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:349,load,load,349,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694,1,['load'],['load']
Performance,"> I don't know why there's a segfault - obviously that shouldn't happen. If you use these from the command-line do they work?. Seems to work okay from the command line (2.4.1) using the following command:. ```; obabel AF.pdb -O conformers.sdf --conformer --nconf 10 --children 5 --mutability 5 --convergence 10 --score minenergy --writeconformers; ```. This works using both the minenergy and energy scores. There might be something wrong with the way I've set up the search in the Python script. Curiously the segfault only happens _after_ the search. The scoring function seems to work fine during the search (for instance, OBMinimizingEnergyConformerScore takes longer than OBEnergyConformerScore). > Hey Travis. Just to note that there is no need to write to a file first. Just use `mol = pybel.readstring(""pdb"", AF).OBMol`.; > ; > With the code as presented, you need to check the return value of ReadFile. It may have failed for example, and still be an empty molecule. Unfortunately, not all functions behave themselves when given an empty molecule. Can you check this, and see if it's okay?. Hi Noel,. Thanks for the tip! I haven't spent much time with the Pybel module because I couldn't see an easy way to run a conformational search on a Pybel mol, and reading the molecules in from PDB is analogous to what I'm doing in my own code. I'm already performing a check with my systems of interest (verifying the number of atoms in the OBMol) - I just left it out in this example for clarity.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2066#issuecomment-547063996:1357,perform,performing,1357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2066#issuecomment-547063996,1,['perform'],['performing']
Performance,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:825,cache,cache,825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793,1,['cache'],['cache']
Performance,"> I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay).; > ; > If you can't see any alternative, is it okay if I take a look?. Sure it's OK - please feel free to look. I am an old user of Openbabel, but this is my first participation in the project. I already have code that solves the issue without copying (should I post another pull request for it, or how should it be handled to show it to you? It is very minimalistic change, two lines from master branch). After a match (it seems to work in the cases that I tested), I just check whether atom idx in match is not higher than count of atoms in the starting molecule. Only H atoms from SMARTS have higher idx, so I ignore them and it seems to work. I am however unsure it will work all the time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741:134,perform,performance,134,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741,1,['perform'],['performance']
Performance,"> IMHO, I think it's time to drop Python2:; > https://python3statement.org. I am in favor of making python3 the default (although concurrent builds of 2 and 3 is probably the most user friendly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558816335:130,concurren,concurrent,130,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558816335,1,['concurren'],['concurrent']
Performance,"> Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). We've tried to use `const` where possible. Since the library is built up of lots of legacy code, there's only so much you can do... > What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. Yes, exactly. On my Mac, I currently have 125, comprising 120+MB of formats. IIRC, charges, forcefields, etc. are compiled together. There's been talk about ""load-on-demand"" but it just hasn't been implemented. > Ah, ok, so it is not purely a problem with `dl_open` then?. There's no leak with `dl_open`. As mentioned above, that's a valgrind thing. Valgrind can't easily deal with `dl_open`. I'd suggest trying LeakSanitizer instead. > `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Sure. Try `OBConversion::Read()` if you like, e.g.; https://github.com/openbabel/openbabel/blob/master/tools/obenergy.cpp. It may be easier if you have questions to post to the mailing lists.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876:521,load,loaded,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876,2,['load'],"['load-on-demand', 'loaded']"
Performance,"> The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). In addition, openbabel reports if the task was achieved, and informs you if the selected force field is not suitable for the task ahead. Compare the successful interaction with UFF. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz; 1 molecule converted; ```. with one calling MMFF94, or MMFF94s. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94 -O test2.xyz; Could not setup force field.; 0 molecules converted; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94s -O test2.xyz; Could not setup force field.; 0 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626:99,optimiz,optimizing,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626,1,['optimiz'],['optimizing']
Performance,"@DreamMemory001 No, I can't say much about the distance geometry method OpenBabel uses. For what I want, its results fit my needs though there are other programs around (maybe [RDKit](http://rdkit.org/) is one alternative, but it depends on your project and setup). To illustrate further the suggested approach on a one-molecule batch, on occasion, instead of a SMILES to 3d mol conversion with an intermediate 2d structure *like*. ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol -h --gen3d -omol; ```. I run . ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol --minimize --noh -omol | obabel -imol -h --gen3d -omol; ```. instead. Then, the force field optimization processes the flat 2d structure in absence of hydrogen atoms; this became possible thanks to this [PR](https://github.com/openbabel/openbabel/pull/2184) by Geoffrey Hutchison. Eventually (last pipe), explicit hydrogens (-h) complete the 3D molecular structure (to contrast with implicit ones, flag -d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905:667,optimiz,optimization,667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905,1,['optimiz'],['optimization']
Performance,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:217,perform,perform,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096,1,['perform'],['perform']
Performance,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:164,perform,perform,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071,2,['perform'],['perform']
Performance,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:667,load,load,667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['load'],['load']
Performance,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:344,Load,Load,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394,1,['Load'],['Load']
Performance,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:27,tune,tune,27,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699,1,['tune'],['tune']
Performance,"@WardLT - not sure how you're planning on doing conformer optimization, but send me an e-mail. We've been working on an efficient Bayesian toolkit - and yes, it uses OBMol.SetTorsion().",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783407993:58,optimiz,optimization,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783407993,1,['optimiz'],['optimization']
Performance,"@baoilleach - please see example below. The only trick to let MOPAC calculate multiple molecules in a single file, is to separate multiple molecules by an empty line CR/LF. . @ghutchis - thank you, its great to read something like this, especially for people bit outside the field like me. MMFF94 is just so embedded in the minds, and DFT on 1000 molecules is still too far away, but PM7 runs literally in seconds, so really doable (besides all the conversion issues). For docking one could also use PM6-D3H4 which is a bit more accurate and maybe COSMO if needed. The general workflow I use is; 1) SMILES to 3D SDF (add H and generate MMFF94 low energy conformer); 2) 3D SDF to XYZ (XYZ needed for input in other tools or DFT calculations); 3) XYZ to MOPAC cartesian (need to add MOPAC keywords and single CR/LF separator); 4) MOPAC ARC/OUT to optimized SDF (needed for pipeline and additional handling). Now one can process 100k molecules in a single file and then parse the output like; IP, HOMO, LUMO, COSMO volume, pkA and other values. Best would be of course; to have all the calculated properties added as SDF fields but that is another story.; (One could use the https://cactus.nci.nih.gov/SDF_toolkit/ to add or remove properties). **Example MOPAC input file with three molecules:** ; ````; PM7 OPT XYZ; Methane. C 1.05860 1 -0.08080 1 -0.00520 1; H 2.15080 1 -0.08080 1 -0.00520 1; H 0.69460 1 -1.10850 1 -0.07110 1; H 0.69460 1 0.49010 1 -0.86220 1; H 0.69460 1 0.37590 1 0.91770 1. PM7 OPT XYZ; Formaldehyde. C 1.10270 1 -0.08080 1 -0.00520 1; O 2.32730 1 -0.08080 1 -0.00520 1; H 0.51500 1 -1.01080 1 -0.06480 1; H 0.51500 1 0.84910 1 0.05450 1. PM7 OPT XYZ; Water. O 1.04450 1 -0.06090 1 -0.00390 1; H 2.01240 1 -0.10720 1 -0.00690 1; H 0.76570 1 -0.98700 1 -0.06330 1; ````. The MOPAC output is a *.arc (small) and *.out (large) MOPAC output file.; When using the OpenBabel GUI only the last molecule in the *.out is converted; Attached are the example files from SMI to SDF to XYZ to ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1789#issuecomment-371225929:845,optimiz,optimized,845,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1789#issuecomment-371225929,1,['optimiz'],['optimized']
Performance,"@baoilleach, thanks for the explanation. Inserting `del inchi.data['inchi']` returns something more reasonable. I think this is not actually an issue, as long as the user is aware that they are responsible for deleting the cache (which is not the case currently). So maybe raising a warning when the user modifies a molecule with a cached InChI would be enough?. > On a separate note, can I ask why you are reading an InChI?. I maintain some wrappers for the workflow management system Galaxy which are based on OpenBabel functionality, including a 'remove counterions' tool (deployed here: https://cheminformatics.usegalaxy.eu/?tool_id=openbabel_remIons) and we received a user bug report about this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-711917444:223,cache,cache,223,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-711917444,2,['cache'],"['cache', 'cached']"
Performance,@e-kwsm - this seems to be an intermittent error - likely due to floating point optimization.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2229#issuecomment-629653769:80,optimiz,optimization,80,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2229#issuecomment-629653769,1,['optimiz'],['optimization']
Performance,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:858,cache,cache,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905,5,['cache'],"['cache', 'cache-dir', 'cached']"
Performance,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:889,perform,performs,889,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['perform'],['performs']
Performance,"@ghutchis , as promised, I am attaching two RPM spec files. `openbabel.spec` is the one I am using to build my RPMs, whereas `openbabel-ci.spec` is a modified version intended for use in a CI role. The most significant difference between the two is that the latter does not designate any patches (which I haven't provided anyway), since I imagine that it would be used to test the actual contents of the repository at various points. There is more that could be done to tune and trim the -ci spec for the role I imagine for it, but I think it would be better to base further changes on what you *actually* need instead of on what I guess you might need. [openbabel.spec.txt](https://github.com/openbabel/openbabel/files/4650857/openbabel.spec.txt); [openbabel-ci.spec.txt](https://github.com/openbabel/openbabel/files/4650858/openbabel-ci.spec.txt). ("".txt"" was appended to the file names to persuade GitHub to accept them.). If you would prefer to receive one or both of these in the form of a PR, then I would be happy to oblige -- just give me the details of what you want, where.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110:470,tune,tune,470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110,1,['tune'],['tune']
Performance,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:75,perform,performance,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['perform'],['performance']
Performance,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:603,optimiz,optimization,603,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975,4,['optimiz'],['optimization']
Performance,"@johnmay unfortunately I do not know how SMARTS matching is implemented - need this to discuss efficiency vs SMILES matching. It is a deeper layer of OpenBabel that makes this job. I guess that some extra work is needed in your approach to cope with stereochemistry and isotopes. Here I wrote a test for alias feature, and also removed copy construction of OBMol in AliasData::AddAliases, just checking if atom exists. Appreciate team members to take a look when you have time. @baoilleach BTW just figured out that. > bool OBSmartsPattern::Match(OBMol &mol,bool single). makes a copy of OBMol to add hydrogens. This function is called for each and every SMARTS in the alias table from superatom.txt. So probably performance was not that badly hit by my original commit. If we add hydrogens once and mark molecule as hydrogenated, it might in fact have improved performance of aliasing by a factor of N where N is number of SMARTS ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028:713,perform,performance,713,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028,2,['perform'],['performance']
Performance,"@kalinni In an instance of Linux Debian 13/trixie with openbabel 3.1.1., I run the addition of hydrogens by. ```shell; $ obabel 3lcs.pdb -h -O obabel_with_hydrogens.pdb; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Based on this, perhaps some ligands, or chains are a bit deformed to ""fit"" into Open Babel's patterns to recognize them well. This deformation could be by mere distance, or/and geometry. I then run grep, but didn't find any `UNL`, nor `UNK`. ```shell; $ grep UNL ./obabel_with_hydrogens.pdb -c; 0; $ grep UNK ./obabel_with_hydrogens.pdb -c; 0; ```. An alternative approach could be to use [Jmol](http://wiki.jmol.org/index.php/Main_Page), to load the initial .pdb, and (File -> Console) to enter the following commands there (confirmed by enter):. ```; calculate hydrogens;; write ""Jmol_with_hydrogens.pdb"";; ```. for a new .pdb file. This equally didn't have a `UNK` or `UNL`. ```shell; $ grep UNK Jmol_with_hydrogens.pdb -c; 0; $ grep UNL Jmol_with_hydrogens.pdb -c; 0; ```. but a different processing program might provide a .pdb different enough to continue the work. (Contrasting to the input, lattice parameters are missing, though.). [Jmol_with_hydrogens.pdb.txt](https://github.com/openbabel/openbabel/files/14438094/Jmol_with_hydrogens.pdb.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287:801,load,load,801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287,1,['load'],['load']
Performance,"@lpravda This is still the case in `3.1.1.1`. In my case, both PDB and mmcif file formats report 1170 atoms (so far so good) but after calling `addh()`, the molecule loaded from the PDB reports 2457 atoms while the molecule loaded from mmcif reports (still) 1170 atoms.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1872#issuecomment-688886366:166,load,loaded,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1872#issuecomment-688886366,2,['load'],['loaded']
Performance,"@mainguyenanhvu There is too little information shared by you, i.e. what is; the input structure you provide to OpenBabel to replicate your observation?; Is the warning ""can not correct stereochemistry"" equally issued while; converting your input SMILES into a canonical one (`-ocan`)? Did you stay; with the default force field (MMFF94), or tried an other one implemented? Are; all atoms of your input structures covered by the force field? Did you you; test `--gen3d` with optional `--fast` or `--fastest` (computationally more; affordable, because it leaves out some of the default optimization which could; be still reasonable in your workflow)?. The identification of a reasonable conformer from scratch can already be; demanding for small non-protein molecules (just because today's Nobel prizes; for chemistry). If there only is one particular structure / only a few, a; bypass can be the generation of a flat 2D sdf. ```; obabel -:""c1ccncc1"" --gen2d -h -O 2dstructure.sdf; ```. with OpenBabel which then is read -- explicitly as a 2D structure -- e.g. by; Jmol for a minimization to 3D from the program's console. ```; load ""2dstructure.sdf"" filter ""2D"";; ```. Or right away from a SMILES string itself, e.g. ```; load ""$c1ccncc1"" filter ""2D""; ```. (A call by `java -jar Jmol.jar -h` shows that Jmol can be launched from the; CLI, process data without a GUI, act according to a script to digest batches; of models, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223:585,optimiz,optimization,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223,3,"['load', 'optimiz']","['load', 'optimization']"
Performance,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:1203,optimiz,optimized,1203,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938,1,['optimiz'],['optimized']
Performance,"@nilanjana1996 The thought passed my mind to superimpose two data files about one structure in Jmol. In its own input (file -> console), I entered. ```; load files ""emem1.pdbqt"" ""em1.sdf""; select 1.1; color lightgreen; model 0; ```. Differences in atomic positions appear to be small:. ![superposition](https://github.com/user-attachments/assets/a2f1bd71-77fc-42c6-abf0-39006d22600e). ----. With `select 1.1`, the first model of the first input file is selected to eventual alter its coloring (`color cpk` would revert it to the original scheme). Subsequent `model 0` displays both models simultaneously; since there are two models in the working memory, one can toggle to one or the other by `model 1` and `model 2`, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203:153,load,load,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203,1,['load'],['load']
Performance,"Aaaaah my bad! It's indeed a macro, not a function... > Put all string **literals** in _T() macros. so not variables ^^'. The definition I have is similar to yours:; ```; #define __TEXT(q) L##q; #else; #define __TEXT(q) q; #endif; \\ comment; #define TEXT(q) __TEXT(q); ```. Indeed, in that same article,they say:. > `TCHAR` is #defined as either a `char` or a `wchar_t` depending on whether or not the `UNICODE` macro was defined. And, as you suggest, writing; ```; if(LoadLibrary( (PTCHAR) lib_name.c_str() )); return true;; ```; worked fine for me. However, now I have a doubt when they say:. > Never ever ever C style cast C strings from one type to another. C style casts mask very important compiler errors. Avoid C++ style casts also. Basically if you're getting type errors with your strings -- it's because you're doing something wrong. Don't try to cast around the problem. So this might not be exactly what we want... On the other hand, there is something I do not get... This `openLib()` method is implemented in the same way in both `dlhandler_win32.cpp` and `dlhandler_unix.cpp` when compiled with MinGW (in the latter, it is surrounded by `#ifdef __MINGW32__` ... `#else`). The compile error came only from `dlhandler_unix.cpp`. Is it because of some different `#include`s?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089:470,Load,LoadLibrary,470,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089,1,['Load'],['LoadLibrary']
Performance,"About 002RPD.log from andersbiceps, this one does not have the ""nosym"" keyword and includes a ""standard orientation"" block. However, it does not include the second one the code is looking for, maybe because it is a single-point calculation?. As noted in #3495545, this will trash the ifs object and the subsequent rewind (ifs.seekg(0)) will have no effect, resulting in an empty outgoing molecule. I suggest fixing that by checking for the line ""Normal termination of Gaussian"" which is usually the last line and breaking out of the while loop then (so the rewind can still take effect). About the cclib test case - this one seems to crash while pushing back orbital data, I get the segfault here:. #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742. 742	 betaSymmetries.push_back(symmetries[i]);. Noel, can you confirm that? It looks like a different bug to me. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259:761,optimiz,optimized,761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259,3,['optimiz'],['optimized']
Performance,"Actually - maybe there's one or two more options that could be cached. Could you leave this here for the moment, and I might push another commit later this week...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349904317:63,cache,cached,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349904317,1,['cache'],['cached']
Performance,"Actually, it probably makes more sense to merge this, and do the optimization separately.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374846662:65,optimiz,optimization,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374846662,1,['optimiz'],['optimization']
Performance,"Aha. The latest revision should use the win32 loader, rather than dlhandler_unix.cpp. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795365:46,load,loader,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795365,1,['load'],['loader']
Performance,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:296,optimiz,optimization,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,5,['optimiz'],"['optimization', 'optimize']"
Performance,Also the problem with `RTLD_GLOBAL` is that it messes up some other Python libraries which do not anticipate `RTLD_GLOBAL`. Prime example is L-BFGS-B from scipy which segfaults when loaded after OB.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277709962:182,load,loaded,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277709962,1,['load'],['loaded']
Performance,"Another piece of the puzzle: As zou may already have noticed, the original files I reported the problem for are 'special', i.e. the compounds contained therein are actually different structures for the same sum formula. Now, just out of curiosity, I re-ran the test with two completely unrelated compounds (vanilin and morphine). And what can I say? The programs perform as they should, i.e. the results do not differ if the calculations are performed on the individual MOL files or an SD file containing both compounds. Maybe this hints you in the correct direction. Original comment by: timoreiss",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643:363,perform,perform,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643,2,['perform'],"['perform', 'performed']"
Performance,"Are you saying that you can build the entirety of Open Babel, and for example, run the test (via ""make tests"") after the LoadLibrary change? I also had to do the second step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261:121,Load,LoadLibrary,121,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261,1,['Load'],['LoadLibrary']
Performance,"As a comment, because it does not aim to solve the issue for Open Babel:. File `example_bad.cif` contains a syntax error because of the missing closing `'`. Note, from the perspective of the syntax of a `.cif` file, there is no need to enclose each of the symmetry equivalent positions by a `'`. However, if you choose to use an opening `'`, you need a closing `'`, too. You may submit any `.cif` to an checker like [checkcif](https://checkcif.iucr.org/) -- doing so for this file (here you need to choose option `Validation of CIF only (no structure factors)`) will both identify the problem as well as its location (line 36). Side notes:; - The _original_ `.cif` from the COD ([card #1011063](http://crystallography.net/cod/1011063.html)) does not use the single quotation marks and a conversion with obabel (3.1.0) works just fine. The same for its sibling entry, [COD 1011024](http://crystallography.net/cod/1011024.html) about ice III.; - One of the references of the `.cif` syntax is IUCr's dedicated [web site](https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax).; - Assuming `example_bad.cif` is the result of an (automated ?) edit of a `.cif` from a database like the [COD](http://crystallography.net/cod/index.php): the checkcif service relies in large part on [Platon](https://www.platonsoft.nl/platon/) and its [validation routines](https://www.platonsoft.nl/platon/pl000601.html). It is possible to install Platon locally, and subsequently perform the checks on a batch of `.cif` files, too.; - Consider updates. If you like to continue with Ubuntu LTS, either change from the old point release of Ubuntu 18.04.1 (Jul 2018) to the current 18.04.4 (Feb 2020), or mark [August 6th](https://wiki.ubuntu.com/FocalFossa/ReleaseSchedule) for an install of the next LTS with the point release 2020.1. The later would at least substitute Open Babel 2.3.2 (first released 2012) by release 3.0 (fall 2019).; Or, compile Open Babel from the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804:1463,perform,perform,1463,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804,1,['perform'],['perform']
Performance,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:1448,optimiz,optimization,1448,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181,2,['optimiz'],['optimization']
Performance,"As mentioned by @nbehrnd we use a set of ring fragments first. I'd guess that `c1cc2c(=O)[nH]cnc2cc1F` isn't in the list, so it uses some heuristics. Not quite sure on why it generates that particular geometry, but as a workaround, the ""best"" option gives a bit more MMFF94 optimization. The `dg` option is something of an implementation of RDKit's distance geometry methods.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602:274,optimiz,optimization,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602,1,['optimiz'],['optimization']
Performance,"At present it is impossible to change the forcefield from MMFF94, so we cannot perform obconformer on some systems, e.g., borane. In this PR I simply add forcefield as the last argument—use it if passed, otherwise defaulted to MMFF94.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604:79,perform,perform,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604,1,['perform'],['perform']
Performance,"At the least, there should be an option to bundle the plugins into the main; .so, independently of a static build. On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:. On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > ; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; or mute the thread; https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311:944,load,loads,944,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311,1,['load'],['loads']
Performance,"Atom (this=0x0, i=@0x7fffe8695720); at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; 683 __normal_iterator(const _Iterator& __i) : _M_current(__i) { } ; Missing separate debuginfos, use: debuginfo-install ImageMagick.x86_64 bzip2.x86_64 e2fsprogs.x86_64 expat.x86_64 fontconfig.x86_64 freetype.x86_64 gcc.x86_64 glibc.x86_64 lcms.x86_64 libICE.x86_64 libSM.x86_64 libX11.x86_64 libXau.x86_64 libXdmcp.x86_64 libXext.x86_64 libXt.x86_64 libjpeg.x86_64 libtiff.x86_64 libxcb.x86_64 libxml2.x86_64 netpbm.x86_64 zlib.x86_64 ; (gdb) bt ; #0 OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720) ; at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; #1 0x00007fcbe00aa891 in OpenBabel::OBMol::GetBond ( ; this=<value optimized out>, bgn=0x0, end=0x1eaea30) ; at /work3/igor/openbabel-2-2-x/src/mol.cpp:865 ; #2 0x00007fcbda4ac4fd in OpenBabel::OBMol2Cansmi::GetCisTransBondSymbol ( ; this=0x7fffe86962a0, bond=0x1eb21d0, node=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:3235 ; #3 0x00007fcbda4b33a6 in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb36e0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4188 ; #4 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85150, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; ---Type <return> to continue, or q <return> to quit--- ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:1218,optimiz,optimized,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"BTW, how exactly are you finding these problem cases? If we could monitor our performance on the dataset with time we could ensure we don't cause regressions.... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1078#issuecomment-281800064:78,perform,performance,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1078#issuecomment-281800064,1,['perform'],['performance']
Performance,"Both OpenBabel and JDK are 64 bits. And, the 32 bit dll cannot be loaded into 64 bit java.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397340163:66,load,loaded,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397340163,1,['load'],['loaded']
Performance,"C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; #7 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85ca0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; ---Type <return> to continue, or q <return> to quit--- ; #8 0x00007fcbda4b3829 in OpenBabel::OBMol2Cansmi::CreateFragCansmiString ( ; this=0x7fffe86962a0, mol=@0x1e401a0, frag_atoms=@0x7fffe869e840, ; isomeric=<value optimized out>, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("") ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4353 ; #9 0x00007fcbda4b455c in OpenBabel::CreateCansmiString ( ; mol=@0x7fffe869f330, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, iso=true, pConv=0x0) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4574 ; #10 0x00007fcbda4b6403 in OpenBabel::SMIBaseFormat::WriteMolecule ( ; this=<value optimized out>, pOb=<value optimized out>, ; pConv=0x7fffe869f640) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4644 ; #11 0x00007fcbe00c275c in OpenBabel::OBConversion::Write ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, pos=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/obconversion.cpp:809 ; #12 0x00007fcbe00c4c73 in OpenBabel::OBConversion::WriteString ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, trimWhitespace=true) ; at /work3/igor/openbabel-2-2-x/src/obconversion.cpp:832 . Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:4286,optimiz,optimized,4286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,3,['optimiz'],['optimized']
Performance,"Can you try the following change and see whether the build completes for you too?; ```; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); CACHE STRING ""Binary build output directory""); endif(); if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); - if(UNIX); + if(UNIX OR MINGW); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; CACHE STRING ""Library build output directory""); else() # This is preferable on WIndows for example - bin = lib directory.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311908309:190,CACHE,CACHE,190,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311908309,2,['CACHE'],['CACHE']
Performance,"Configuration now fails. This is the error:. ```bash; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:224 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:266 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. ```. this is with 2.4.1. I tried applying that patch but it makes no difference to this issue. Oh no I was wrong it does build after.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329:57,Perform,Performing,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329,4,['Perform'],['Performing']
Performance,"Does it still occur with the dev version?. On Thu, 24 Jan 2019 at 01:53, Ben Bucior <notifications@github.com> wrote:. > I encounter similar issues with N-heterocycles in my own work, so it would; > be awesome if we could resolve this.; >; > One thing I've noticed in #1360; > <https://github.com/openbabel/openbabel/issues/1360> and this example is; > that you get the 2.3.2 result if you comment out the line [#7D2R][#6D3^2][#7D2]; > 0 1 2 1 2 1 in data/bondtyp.txt. I haven't been able to get down to the; > root cause yet, but my suspicion is some sort of race condition where it's; > typing two double bonds next to each other. (Different input files can give; > different SMILES); >; > @baoilleach <https://github.com/baoilleach> Any ideas? @ehfassio; > <https://github.com/ehfassio> has some nice, detailed analysis in #1925; > <https://github.com/openbabel/openbabel/issues/1925> as well; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGTddbZjN4Hu5rht5EWEdF2IiyN9Tks5vGRIugaJpZM4Z_3o7>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457276700:560,race condition,race condition,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457276700,1,['race condition'],['race condition']
Performance,"Everything has compiled without an error, babel.exe can be run, however; it doesn't seem to find any formats available:. The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. See further specific info and options using -H<format-type>, e.g. -Hcml. When I try a specific format:; /opt/bin/babel.exe -Hsmi; Format type: smi was not recognized. I looked throughout /opt directory (which I set as prefix when running configure) I cannot see any of the format files. The size of libopenbabel-3.dll is less than half of what it was when compiled statically with all the formats in it using --disable-dynamic-modules. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376:240,load,loaded,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376,2,['load'],"['loaded', 'loaders']"
Performance,"Example usage; ```; find_package( OpenBabel3 REQUIRED ); include_directories( ${OpenBabel3_INCLUDE_DIRS}); add_executable(myapp ${SOURCES}); target_link_libraries(myapp ${OpenBabel3_LIBRARIES}); ```. If I was less intimidated by cmake, I would also attempt to implement concurrent building of python2 and python3 bindings...; And if I had more time I'd fix the maeparser build issue that has crept into master.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558809977:270,concurren,concurrent,270,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558809977,1,['concurren'],['concurrent']
Performance,"FWIIW, I am using this `.valgrind_suppressions` file to hide the memory leaks. ```; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_open; ...; }; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_init; ...; }; {; <openbabel read cif molecule>; Memcheck:Leak; match-leak-kinds: definite; ...; fun:*OpenBabel*OBMol*ConnectTheDots*; fun:*OpenBabel*CIFFormat*ReadMolecule*OBBase*Conversion*; ...; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171:106,load,loading,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171,2,['load'],['loading']
Performance,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:52,optimiz,optimization,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038,1,['optimiz'],['optimization']
Performance,"For 6af03f145631d1b1661ef52651996cb842d2b2e4, an input is not always normalizable and exception is thrown (#2088). For 80468c421d43b376f0424d564925eee2d74c44bc, the default release type is [`Release`](https://github.com/openbabel/openbabel/blob/c25172429fe8f0e074efae77380b5ba76b08f1a6/CMakeLists.txt#L438-L440) and `NDEBUG` is defined (e.g. [L444](https://github.com/openbabel/openbabel/blob/c25172429fe8f0e074efae77380b5ba76b08f1a6/CMakeLists.txt#L444)), therefore performance is not harmed.; For `vector3::operator[]`, probably `switch` with `default` would be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557851420:467,perform,performance,467,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557851420,1,['perform'],['performance']
Performance,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:911,perform,performs,911,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890,1,['perform'],['performs']
Performance,"Have you been doing any performance testing ([g]perf, profiling, sampling, etc.). It would be interesting to see where the hot-spots are in the unit tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516:24,perform,performance,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516,1,['perform'],['performance']
Performance,"Hello,; A) Yes, you should expect that fingerprints MAY change. While the OpenBabel code is rather stable, there might always be a bug fixed or a change made that affects some part of the underlying molecule data structure and hence the fingerprint. In general, it is always best to be consistent to one version of the chemoinformatics software.; B) They should not be sensitive to the --genxD options.; C) I don't really follow the change to InChI here, but the InChI generation should not be sensitive to how the molecule is loaded (unless it comes from an underspecified format such as pdb where guessing of the bond system might lead to different molecules percieved). Normalizing through InChI might be a good option but there are a lot of things to consider before deciding on a normalization scheme.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271:527,load,loaded,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271,1,['load'],['loaded']
Performance,"Hi @fredrikw , thanks for the hint regarding `otool -l`. Interestingly, I wasn't able to find any `LC_RPATH` commands in the dylib images, even if `otool -L` shows that libs are linked with `@rpath` definition. In my case this affects libcairo, which is linked as `@rpath/./libcairo.2.dylib`. Of course, without an `@rpath` defined the lib can't be found and hence not loaded (leading to loss of functionality, for which I actually wanted to create another issue). Does this qualify as a bug in the build/linking process?. I guess a user wanting to compile openbabel with python bindings from source on OSX, using non-system python (like anaconda), now only has the option to manually fix library paths using `otool -L`. I wonder whether it's possible to do this during the build process. For example, if e.g. `-DPYTHON_LIBRARY` or `-DCAIRO_LIBRARY` are set, the linker could be instructed to use the provided path name instead of the install_name to link the library (maybe after checking if the install_name is valid). Alternatively, one could post-process the various libraries using `install_name_tool` to fix the path of dynamically linked objects. Clearly, the first option is more elegant.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037:369,load,loaded,369,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037,1,['load'],['loaded']
Performance,"Hi @fredrikw . It seems the issue has been resolved. This time, I performed energy minimization on the combined SDF file and then split it into separate SDF files in next step. . Subsequently, I used the ""--gen3D"" flag while converting the individual SDF files to PDBQT, which successfully generated the 3D structures. Therefore, I believe the problem is now solved, and I'm closing the issue. Thank you for your assistance.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322:66,perform,performed,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322,1,['perform'],['performed']
Performance,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:715,tune,tune,715,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725,1,['tune'],['tune']
Performance,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:146,Load,LoadFragments,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728,1,['Load'],['LoadFragments']
Performance,"Hi, thank you very much for your help. I am just starting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:627,load,load,627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,2,"['load', 'perform']","['load', 'performed']"
Performance,"Hi,. Have you installed OpenBabel? Can you run it from the command line?. Kind regards,; Fredrik. Med vänliga hälsningar,; Fredrik. On 24 aug. 2017 05:41 +0200, Paulin <notifications@github.com>, wrote:; > Hi Dr. Noel,; > I use the latest version of Mac (10.12.6) and python 3.6. I tried the following two methods to install openbabel-2.4.1:; >; > 1. pip install openbabel; > 2. python setup.py install; > Both shows the following errors:; > Error: SWIG failed. Is Open Babel installed?; > You may need to manually specify the location of Open Babel include and library directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; >; > I have done: brew install swig, but the errors still exist.; > Could you please let me know how to solve this?; > Thank you.; > Paul; > The detailed errors from pip install openbabel is:; > Paulin@Paulins-MBP:~$ pip install openbabel; > Collecting openbabel; > Using cached openbabel-2.4.1.tar.gz; > Building wheels for collected packages: openbabel; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" bdist_wheel -d /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/tmpwh85q9mepip-wheel- --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > • include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > • library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:977,cache,cached,977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['cache'],['cached']
Performance,"Hi,. This is the perfect solution! Yes, please send the patch. Is there a planned date for release of 3.0?. Thanks a lot!. Regards,; Johan Westin. From: Geoff Hutchison [mailto:notifications@github.com]; Sent: den 17 april 2018 23:01; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Westin, Johan <Johan.Westin@astrazeneca.com>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] Differences in atom coordinates loading CIF using version 2.3.2 and 2.4.1 (#1726). I can confirm that it's the wrapping call. I'm going to revert that behavior by adding a flag to wrap if requested - but the default will be to use the unwrapped coordinates. Do you want a copy of the patch? It'll go into development (3.0) but not 2.4.x. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/1726#issuecomment-382144569>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAyD7nZJZdbf5-Tpv4ozlngznLao757nks5tplgpgaJpZM4RAQGy>. ________________________________. Confidentiality Notice: This message is private and may contain confidential and proprietary information. If you have received this message in error, please notify us and remove it from your system and note that you must not copy, distribute or take any action in reliance on it. Any unauthorized use or disclosure of the contents of this message is not permitted and may be unlawful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659:444,load,loading,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659,1,['load'],['loading']
Performance,Hi; I am loading gcc version 7.2.0 but still with CMake Openbabel selects gcc version 4.7.2 (Debian 4.7.2-5). Can that be the cause of error and I need to ensure gcc 7.2.0 is being taken for compilation?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848:9,load,loading,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848,1,['load'],['loading']
Performance,"Hm, now the configure fails with the following message:. checking whether the g++-sjlj linker (c:/mingw/mingw32/bin/ld.exe) supports shared libraries... yes; checking dynamic linker characteristics... Win32 ld.exe; checking how to hardcode library paths into programs... immediate; ./configure: line 17409: syntax error near unexpected token `""(c'; ./configure: line 17409: ` $as_echo_n ""(cached) "" >&6'. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367:389,cache,cached,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367,1,['cache'],['cached']
Performance,"I already tried subsequent reads. Like:; 	String fileName = ""mol.xyz"";; 	conversion.ReadFile(mol1, fileName);; 	conversion.ReadFile(mol2, fileName);; where mol1 and mol2 are OBMol objects. After performing this code they both contain the same molecule even though the file contains two totally different ones. I tried the same with the ReadString() method with the same result. And the method Read() is unfortunately unusable as it takes a SWIGTYPE_p_std__istream as a parameter (or is there some way to map this SWIGTYPE to java InputStream?).; I tried all this with version 2.3.0. Original comment by: joannakocot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1079#issuecomment-281800077:195,perform,performing,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1079#issuecomment-281800077,1,['perform'],['performing']
Performance,I am loading two modules : cmake/3.19.7 and gcc/7.2.0,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416:5,load,loading,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416,1,['load'],['loading']
Performance,"I am using the Perl bindings with version 3.1.1 and only see crashes with gen3d. But, when I do the FF optimization that gen3D does (according to the source code), I do not have problems. To me it seems to be a problem with the stereochemistry checks. Since I start with connectivity only, stereochemistry does not matter. ; I am on Debian Linux, latest version, openbabel installed from source as there are no up-to-date packages.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2108#issuecomment-638535425:103,optimiz,optimization,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2108#issuecomment-638535425,1,['optimiz'],['optimization']
Performance,"I am using xcode 3.1. Looks like it may be problem with babelconfig.h. There is no mac version of babelconfig.h file provided in the package; what i did was copied babelconfig.h file from windows vc++ directory and uncommented vc++ include, may be i have messed up in this process. In down loads there is no source code download for mac OS and only have dmg. If I have I can build it for iPhone. . I have tried to compile code in mac os 10.5 and got same error as compiling using iphone os 2.2. /Developer/SDKs/MacOSX10.5.sdk/usr/include/c++/4.0.0/i686-apple-darwin9/bits/c++locale.h:72: error: 'snprintf' is not a member of 'std'. Because you have successfully compiled and created dmg, looks like I am missing some configuration settings. I will greatly appreciate it If you can please look into this issue.; Thanks. Ravi Singareddy; http://www.ooftish.com . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372:290,load,loads,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372,1,['load'],['loads']
Performance,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:76,load,loads,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['load'],['loads']
Performance,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:316,load,load,316,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,4,"['Load', 'load', 'optimiz']","['Load', 'load', 'loadmodels', 'optimize']"
Performance,"I currently use mol2 files for pickling in [my project](https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480). It work fairly correct, and quite fast. Although it's not the ideal solution. The problem with code in mychem, which i have just noticed is that it doesn't store 3D information at all, which means that it would need lots of improvement. . Back to mol2-pickling, or in fact any other format. I can port the code to pybel so it can pickle it out of the box, but:; - that's Python only solution (I don't need C serialization); - is mol2 really the one to store molecules (atom typing as usual); i've benchamrked it vs sdf and mol2 was way faster;. It's easy and straightforward, and most probably we'd end up creating another file format. I didn't see it that way, but from this perspective it seams so. You might be right that the bottleneck is the kekulization and other checks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847:853,bottleneck,bottleneck,853,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847,1,['bottleneck'],['bottleneck']
Performance,"I don't have strong feelings about this, I just think it would be good to break as little existing code as possible and `from openbabel import openbabel` also just looks a little bit weird. But if we do go that route, here's a cool trick to keep `import openbabel` working also, but emit a warning:. #### openbabel/\_\_init\_\_.py. ```; import sys; import warnings; from . import openbabel. _thismodule = sys.modules[__name__]. class ObProxy(object):; def __getattr__(self, name):; if hasattr(_thismodule, name):; return getattr(_thismodule, name); elif hasattr(openbabel, name):; warnings.warn('""import openbabel"" is deprecated, instead use ""from openbabel import openbabel""'); return getattr(openbabel, name); else:; raise AttributeError. sys.modules[__name__] = ObProxy(); ```. It's a bit of a hack, but [""occasionally used and recommended"" according to BDFL](https://mail.python.org/pipermail/python-ideas/2012-May/014969.html). (Alas, in Python 3.7 this is much easier, as you can just define `__getattr__` on a module to customise the behaviour and skip the whole proxy class). There may also be a way of doing this by adding a custom finder/loader to `sys.meta_path` as described in [PEP302](https://www.python.org/dev/peps/pep-0302/) and [PEP451](https://www.python.org/dev/peps/pep-0451/) (this is how [`six.moves`](https://pythonhosted.org/six/#module-six.moves) works) but that looks really overly complex to me and in the end might be equally hack-ish...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470085051:1148,load,loader,1148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470085051,1,['load'],['loader']
Performance,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:625,Load,LoadFragments,625,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147,1,['Load'],['LoadFragments']
Performance,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:245,load,load,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,1,['load'],['load']
Performance,"I encounter similar issues with N-heterocycles in my own work, so it would be awesome if we could resolve this. One thing I've noticed in #1360 and this example is that you get the 2.3.2 result if you comment out the line `[#7D2R][#6D3^2][#7D2] 0 1 2 1 2 1` in data/bondtyp.txt. I haven't been able to get down to the root cause yet, but my suspicion is some sort of race condition where it's typing two double bonds next to each other. (Different input files can give different SMILES). @baoilleach Any ideas? @ehfassio has some nice, detailed analysis in #1925 as well",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564:367,race condition,race condition,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564,1,['race condition'],['race condition']
Performance,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:647,load,load,647,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['load'],['load']
Performance,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:771,perform,performance,771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['perform'],['performance']
Performance,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:545,cache,cache,545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572,2,['cache'],['cache']
Performance,"I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. ```shell; (common) C:\Users\Liu.D.H>pip install -U openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Using cached https://pypi.tuna.tsinghua.edu.cn/packages/9d/3f/f08f5d1422d74ed0e1e612870b343bfcc26313bdf9efec9165c3ea4b3ae2/openbabel-3.1.1.1.tar.gz (82 kB); Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Command errored out with exit status 1:; command: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' bdist_wheel -d 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-wheel-k092nuj6'; cwd: C:\Users\Liu.D.H\AppData\Local\Temp\pip-install-ngq7bdyo\openbabel\; Complete output (15 lines):; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:287,cache,cached,287,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,1,['cache'],['cached']
Performance,"I just notice the same road block: . $ obsym bz.xyz ; Point Group: Segmentation fault. in Linux Debian bullseye / sid running apt-based openbabel 3.1.0 (Jan 6, 2021). The following is not a solution which modifies openbabel (possibly related to [this](https://github.com/openbabel/openbabel/issues/2282)). But, if there is no need for batch wise processing model data, [Jmol](http://jmol.sourceforge.net/) equally may provide at least parts of this information, too. Load the model (from the program's own CLI, this is e.g. `load 'benzene.pdb';`). Then, if you may afford this, deselect the hydrogens (`select !_H;`) from the scrutiny, followed by `draw pointgroup;`: this will yield both the attributed point group D6h printed in the CLI and the simultaneous display of the molecule including the identified symmetry elements. ![benzene_loop](https://user-images.githubusercontent.com/19709084/108079768-13bc9300-7067-11eb-9af8-f346df6cb3ad.gif). A longer way ([reference](https://chemapps.stolaf.edu/jmol/docs/)) may be to call `calculate pointgroup;` because this allows you to list the symmetry elements (`show pointgroups;`) and to pick e.g., by `draw pointgroup C3;` only the C3 axis for additional display.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2286#issuecomment-779906609:467,Load,Load,467,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286#issuecomment-779906609,2,"['Load', 'load']","['Load', 'load']"
Performance,"I misunderstood the meaning of `SetChiralityPerceived()`. I intended to set chirality based on the current 3D structure instead of cached one, but it was opposite. I replaced it to `StereoFrom3D()`, but the test still fails. Maybe SMILES generation is not dependent on these settings?. In addition to distance geometry related test failures, there are many tests failing. I'm not sure rebase was successful. Closing this pull request and branching from the current master may make problem easier. https://github.com/openbabel/openbabel/blob/2f51910df2aebbfd1258a2c1100d50a3e1ec7d9e/src/distgeom.cpp#L915",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978:131,cache,cached,131,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978,1,['cache'],['cached']
Performance,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:93,load,load,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202,1,['load'],['load']
Performance,"I read your lines in the tune of «nice that Jmol is able to; contribute to a solution, but it does so only via a GUI». If this interpretation were correct, my reply to this is /no/. With; e.g, flags `-ions`, especially the GUI-less JmolData.jar (equally; distributed in the Jmol archive) may run from the CLI in large; batches from the CLI. All you need is to identify the commands necessary and write a script; .spt (there is an interactive Jmol script documentation; here, you; only need to gravitate around the keywords `load` for file input and; `write` for the subsequent export. The script editor [Jmol.jar GUI,; File -> Script Editor] eases to compose them and probe their action,; too.). Later use the script from the CLI in the pattern of . java -jar Jmol.jar -ions water_script.spt. where `water_script.spt` may contain for-loops, if-clauses, arrays,; etc. Just look for e.g., «JmolData.jar apparently doesn't report; InChI back to CLI» in the Jmol user list archive back in February; 2022 when I faced an automation problem Robert Hanson knew how to; address the Jmol way. This command may be called from bash, Python,; AWK, etc. Root entry: https://sourceforge.net/p/jmol/mailman/message/37610564/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839:25,tune,tune,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839,2,"['load', 'tune']","['load', 'tune']"
Performance,"I reproduced this on my mac (OpenBabel 2.4.1, OSX 10.12.1). It crashes when I try to convert Acetonitrile.nwo to *.xyz on the first try. Here's the crash report:. ```; Crashed Thread: 0 Dispatch queue: com.apple.main-thread. Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: EXC_I386_GPFLT; Exception Note: EXC_CORPSE_NOTIFY. Termination Signal: Segmentation fault: 11; Termination Reason: Namespace SIGNAL, Code 0xb; Terminating Process: exc handler [0]. Application Specific Information:; Performing @selector(controlAction:) from sender wxNSButton 0x7fc171b049e0. Thread 0 Crashed:: Dispatch queue: com.apple.main-thread; 0 libopenbabel.5.dylib 	0x000000010367922e OpenBabel::OBMol::AddBond(int, int, int, int, int) + 120; 1 libopenbabel.5.dylib 	0x000000010367fc40 OpenBabel::OBMol::ConnectTheDots() + 1296; 2 nwchemformat.so 	0x00000001088da9b5 OpenBabel::NWChemOutputFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) + 1023; 3 libopenbabel.5.dylib 	0x00000001036c616d OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) + 1669; 4 libopenbabel.5.dylib 	0x00000001036880cc OpenBabel::OBConversion::Convert() + 316; 5 libopenbabel.5.dylib 	0x0000000103687cc4 OpenBabel::OBConversion::Convert(std::__1::basic_istream<char, std::__1::char_traits<char> >*, std::__1::basic_ostream<char, std::__1::char_traits<char> >*) + 218; 6 libopenbabel.5.dylib 	0x000000010368b0fd OpenBabel::OBConversion::FullConvert(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) + 305",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:195,queue,queue,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,3,"['Perform', 'queue']","['Performing', 'queue']"
Performance,"I see the same behavior when writing to different files on the same file system:; ```sh; $ \; > echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t1.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi & \; > echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t2.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi &; [1] 2434610; [2] 2434612; Initial conformer does not pass filter!; Initial conformer does not pass filter!; rivendell merzky ~ [master *] $ Initial conformer count: 0; 100000 attempts, 0 duplicates, 100000 failed filter. =====> Starting conformers search with a Genetic Algorithm <=====; Perform elitist generation replacement with mutation only; Mutation probability: 0.2; Will stop after 5 generations without improvement. Generation #1 0; Generation #2 0; Generation #3 0; Generation #4 0; Generation #5 0; Generation #6 0; GetConformers:; Initial conformer count: 0; 100000 attempts, 0 duplicates, 100000 failed filter. =====> Starting conformers search with a Genetic Algorithm <=====; Perform elitist generation replacement with mutation only; Mutation probability: 0.2; Will stop after 5 generations without improvement. Generation #1 0; Generation #2 0; Generation #3 0; Generation #4 0; Generation #5 0; Generation #6 0; GetConformers:. $ sleep 10; $ ps; $ ps; PID TTY TIME CMD; 2433843 pts/0 00:00:00 bash; 2434610 pts/0 00:00:18 obabel; 2434612 pts/0 00:00:18 obabel; 2434795 pts/0 00:00:00 ps. $ top -n 1 | grep obabel; 2434612 merzky 20 0 127440 28808 16216 R 435,3 0,1 7:17.42 obabel ; 2434610 merzky 20 0 127432 28624 16032 R 370,6 0,1 7:18.93 obabel; ```. Are you able to reproduce that problem?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663413290:616,Perform,Perform,616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663413290,2,['Perform'],['Perform']
Performance,"I think I found the problem. I installed two version of Openbabel in my computer. I had change the value of $BABEL_DATADIR to new version, but I forgot to change the value in $Path. The OBDotNet.dll was trying to load the openbabel_csharp.dll from the 2.4.1 directory which still calls the method using the old name. The problem was solved by changing the openbabel related value in $Path. Thanks for the help !!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-547015082:213,load,load,213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-547015082,1,['load'],['load']
Performance,"I think it should be possible to run ldd in Linux to get the dynamic libraries used for a .so so you could run `ldd _openbabel.so` and see what it's linked against and compare to your python binary.; Looking back in the thread I would also get back to Noel's comment on pybel vs. openbabel loading. If you can import openbabel but not pybel, try to instantiate an obconversion object and then load some formats to see if that is what is actually causing the segfault. In that case, all this linkage work probably won't help...; My final pease of advise for earlier posts would be that if `otool -L` shows entries with `@rpath/...` it can be an idea to check what `otool -l` shows as explained in http://stackoverflow.com/a/12522096/328879",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159555065:290,load,loading,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159555065,2,['load'],"['load', 'loading']"
Performance,I think this is an installation bug. Can you use the pybel localopt() method to do force field optimizations? I'm seeing a pattern that suggests the data files aren't found correctly on Windows.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643#issuecomment-354306973:95,optimiz,optimizations,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643#issuecomment-354306973,1,['optimiz'],['optimizations']
Performance,"I think you outline a need for a fast search ""server"" tool. Basically, you'd load the index and then be able to send searches to it. There's probably some minimal syntax with a ""reload"" to reload the index and ""terminate"" to quit the process. It can be much simpler than obabel because it's single-purpose.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469:77,load,load,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469,1,['load'],['load']
Performance,"I tried both `break mcdlutil.cpp:2575` and `break src/mcdlutil.cpp:2575`, but every time I get; ```; No source file named mcdlutil.cpp.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (mcdlutil.cpp:2575) pending.; ```; And then doing `run` just proceeds until the end of the program, and I get the same output as without the breakpoint. I guess I will need to look through some tutorial on gdb usage.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698:186,load,load,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698,1,['load'],['load']
Performance,"I understood that the point of serialization in MyChem is to speed up; reading or writing, e.g. by avoiding perception. I think that adding this; to the core API would be interesting. But using pickling or serialisation; using an existing format doesn't help with this. On 7 March 2016 at 14:01, Maciej Wójcikowski notifications@github.com; wrote:. > I currently use mol2 files for pickling in my project; > https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480. It; > work fairly correct, and quite fast. Although it's not the ideal solution.; > The problem with code in mychem, which i have just noticed is that it; > doesn't store 3D information at all, which means that it would need lots of; > improvement.; > ; > Back to mol2-pickling, or in fact any other format. I can port the code to; > pybel so it can pickle it out of the box, but:; > - that's Python only solution (I don't need C serialization); > - is mol2 really the one to store molecules (atom typing as usual);; > i've benchamrked it vs sdf and mol2 was way faster;; > ; > It's easy and straightforward, and most probably we'd end up creating; > another file format. I didn't see it that way, but from this perspective it; > seams so. You might be right that the bottleneck is the kekulization and; > other checks.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985:1243,bottleneck,bottleneck,1243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985,1,['bottleneck'],['bottleneck']
Performance,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:270,load,loading,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['load'],['loading']
Performance,"I was pulling my hair out over this failure, which occurred only with the Clang build (on Linux)...but it's right. It's not loading the plugins that requires this to be set, but ""import _openbabel"" (or it's equivalent) in the openbabel.py. That pulls in the .so file. Still don't understand the underlying reason why, but at least I know where the fix goes now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991:124,load,loading,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991,1,['load'],['loading']
Performance,"I will move the square root tomorrow. I considered leaving it out from the beginning, but I guessed that there are seldom molecules with no bonds and more than a few atoms in them so that the loop won't be called that much... Do you think that the distance calculations should be changed and cached as well? (Instead of calling `atom->GetX() - atom2->GetX()` twice) I'm not enough of a C++-programmer to tell what level of optimization is best. Regarding #1317, I think that the actual error mentioned there (; ```; *** Open Babel Error in SVGFormat; Molecule needs 2D coordinates to display in SVGformat; ```; ) has been fixed for a while (at least I don't see it when I run the example code on a version from before my changes) but with this change you will also get a good looking image instead of ; ![test_1317](https://cloud.githubusercontent.com/assets/86855/26757270/50fd24fe-48b7-11e7-8fa5-92c6b5d119ab.png); :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306003536:292,cache,cached,292,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306003536,2,"['cache', 'optimiz']","['cached', 'optimization']"
Performance,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1542,Optimiz,OptimizeNative,1542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389,1,['Optimiz'],['OptimizeNative']
Performance,"I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay). If you can't see any alternative, is it okay if I take a look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339:132,perform,performance,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339,1,['perform'],['performance']
Performance,"I'm definitely game to add something like this, but it'd be great if it:; a) used the existing input formats (e.g., as an output option); b) built on top of the limited read-keywords/model implemented in Gaussian and GAMESS output formats. Please feel free to e-mail the list and I'd be happy to give pointers. I think a lot of people would like this, particularly the support for constrained optimizations.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/169#issuecomment-98802213:393,optimiz,optimizations,393,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169#issuecomment-98802213,1,['optimiz'],['optimizations']
Performance,"I'm fine to merge this, but the AppVeyor (Visual C++) build must be fixed:. ```; C:\openbabel\src\ops\conformer.cpp(98): error C2440: 'initializing' : cannot convert from 'std::basic_istream<char,std::char_traits<char>>' to 'bool' [C:\openbabel\build\src\plugin_ops.vcxproj]; No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; C:\openbabel\src\ops\conformer.cpp(125) : see reference to function template instantiation 'bool OpenBabel::getValue<int>(const std::string &,T &)' being compiled; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/343#issuecomment-264619441:331,perform,perform,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/343#issuecomment-264619441,1,['perform'],['perform']
Performance,"I'm going to close this. We're not going to remove native optimizations, but they're not the default - for this reason.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625398690:58,optimiz,optimizations,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625398690,1,['optimiz'],['optimizations']
Performance,"I'm guessing this is a smaller example and you're using `obabel` in a pipe to some other process. I'm also guessing the following works:; `echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t1.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi`. I guess my question is whether there's a subtle race condition with `stdout` -- if you write to files rather than redirect with `>` do you see the same hang?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663286521:300,race condition,race condition,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663286521,1,['race condition'],['race condition']
Performance,"I'm having a bit of trouble, the current suggested comments don't offer me a solution. The only one I haven't tried is Conda because I don't want to have to install another Python package manager. . * I have python installed and on PATH (3.11.0); * I have pip installed and did an upgrade to be sure; * I have SWIG installed and on path; * I have OpenBabel installed and on path. When running `pip install openbabel` it attempts to compile openbabel and fails to find the header files, then asks if maybe I haven't installed these files:. ```; pip install -U openbabel; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because it does not have a 'pyproject.toml' and the 'wheel' package is not installed. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/8559; Running setup.py install for openbabel ... error; error: subprocess-exited-with-error. × Running setup.py install for openbabel did not run successfully.; │ exit code: 1; ╰─> [67 lines of output]; running install; C:\Users\bryab\AppData\Local\Programs\Python\Python311\Lib\site-packages\setuptools\command\install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\include', 'C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\libs', 'C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\bryab\\AppData\\Local\\",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197:598,cache,cached,598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197,1,['cache'],['cached']
Performance,"I've been testing this version for loading CIF files and converting them to PDB, seems to work well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481:35,load,loading,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481,1,['load'],['loading']
Performance,"If you get the full output with `valgrind --leak-check=full --show-leak-kinds=all ./a.out`, the memory leak can be traced to `dlopen()`. ```; ==16456== 43,464 bytes in 148 blocks are still reachable in loss record 17 of 18; ==16456== at 0x483DD99: calloc (vg_replace_malloc.c:762); ==16456== by 0x40133CA: _dl_check_map_versions (dl-version.c:274); ==16456== by 0x401623C: dl_open_worker (dl-open.c:577); ==16456== by 0x4F338B7: _dl_catch_exception (dl-error-skeleton.c:208); ==16456== by 0x4015749: _dl_open (dl-open.c:837); ==16456== by 0x4FC334B: dlopen_doit (dlopen.c:66); ==16456== by 0x4F338B7: _dl_catch_exception (dl-error-skeleton.c:208); ==16456== by 0x4F33982: _dl_catch_error (dl-error-skeleton.c:227); ==16456== by 0x4FC3B58: _dlerror_run (dlerror.c:170); ==16456== by 0x4FC33D9: dlopen@@GLIBC_2.2.5 (dlopen.c:87); ==16456== by 0x4A31CDB: DLHandler::openLib(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/lib/libopenbabel.so.7.0.0); ==16456== by 0x49D5F4F: OpenBabel::OBPlugin::LoadAllPlugins() (in /usr/local/lib/libopenbabel.so.7.0.0); ```. It seems as if there are long-standing bugs with using `valgrind` and `dlopen` together. https://stackoverflow.com/questions/1542457/memory-leak-reported-by-valgrind-in-dlopen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847975441:1047,Load,LoadAllPlugins,1047,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847975441,1,['Load'],['LoadAllPlugins']
Performance,"In #1979 I partly replaced `babel` with `obabel` in man files, but there is still `babel.1`, which [is loaded by `obabel.1`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/doc/obabel.1#L1).; Similarly there is no `doc/obabel.html` but `doc/babel.html`, to which other files (e.g. `obchiral.html`) link.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1976#issuecomment-487071282:103,load,loaded,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1976#issuecomment-487071282,1,['load'],['loaded']
Performance,"In #2044 I performed [`clang-tidy --fix --checks=-*,modernize-use-nullptr`](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2208#issuecomment-625606991:11,perform,performed,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2208#issuecomment-625606991,1,['perform'],['performed']
Performance,"In this update:. - Swapped the default ""master"" versions with the last released versions of maeparser and coordgen.; - Made the version strings cached, so that the versions can be overriden from the `cmake` compile line (`-DMAEPARSER_VERSION=...`).; - GitHub does one kind of dumb thing with the releases: while non-release tags like ""master"" are unpacked into directories like ""[project]-[tag]"" (e.g. ""maeparser-master""), the release tags are named like ""v[x].[y].[z]"", but when they are unpacked, the directories are called ""project-[x].[y].[z]"" (dropping the ""v""), so we need to account for that when in the path to the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552490233:144,cache,cached,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552490233,1,['cache'],['cached']
Performance,Interesting; if I write. `OBMol molA;`; `OBMol molB;`. no additional memory is leaked:. `==22754== definitely lost: 85424 bytes in 1998 blocks`. However if I write. `OBMol molA;`; `OBMol molB = molA;`. I get that there is more memory leaked:. `==23673== definitely lost: 89768 bytes in 2004 blocks`. So there does seem to be a memory leak that can increase when assignment is performed. This seems to occur with each assignment call; if I write. `OBMol molA;`; `OBMol molB = molA;`; `molB = molA;`. I get additional leaked memory:. `==24594== definitely lost: 90008 bytes in 2008 blocks`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1583#issuecomment-305363297:376,perform,performed,376,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1583#issuecomment-305363297,1,['perform'],['performed']
Performance,Is there any way to get the optimized cartesian coordinates instead of the initial?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-453299550:28,optimiz,optimized,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-453299550,1,['optimiz'],['optimized']
Performance,"It does not use MMFF94 because of the selenium and silicon. The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). Since you're saving to XYZ format, Avogadro has to re-perceive the bonds .. and in this case, since there isn't a ring fragment with the selenium, it's pretty weird. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O gen3d.sdf --gen3d`. <img width=""465"" alt=""Screenshot 2023-04-13 at 10 18 35 AM"" src=""https://user-images.githubusercontent.com/41128/231788665-44c192c8-40be-4b87-bfcb-abee45f0017a.png"">. If instead, I add ""best"" to the `--gen3d` it's much cleaner:. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O best.sdf --gen3d best`. <img width=""525"" alt=""Screenshot 2023-04-13 at 10 18 53 AM"" src=""https://user-images.githubusercontent.com/41128/231788909-2052a4b5-6abf-45ea-b66e-3bfba45aa773.png"">. In principal, the `gen3d` would be better if there were some selenium fragments or fallback to the thiophenes, but for your purposes, it's probably easier to just supply `--gen3d best` which will also do some conformer searching.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362:157,optimiz,optimizing,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362,1,['optimiz'],['optimizing']
Performance,"Just FYI, I was asking Roger about this. According to http://libcxx.llvm.org/, libc++ applies the ""short string"" optimization, which involves placing the string itself into the vector (if it's smaller than a pointer to a string) rather than just a pointer to the string. On resizing, this will cause the c_str() to be moved. I asked him how we could have detected this and he thought that running it through valgrind should have flagged this up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448:113,optimiz,optimization,113,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448,1,['optimiz'],['optimization']
Performance,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:54,perform,perform,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"Let me explain (but not excuse) what's happening here. We have some code to short circuit InChI to InChIKey conversion. Basically on reading an InChI (and only an InChI), the InChI is stored as an attribute of the molecule. Any subsequent requests for the InChI just use this stored value rather than recalculating it. Without this short circuit, the conversion would be done by reading an InChI into an OBMol, converting the OBMol into an InChI and then subsequently into an InChIKey. The problem is that this might give a different result (as reading an InChI doesn't always sufficiently preserve the original structure). Modifying the molecule in-between clearly invalidates the InChI, but we don't have a mechanism internally to intercept modifications, so this is left to the user. If you ""print(inchi.data)"" you will see the offending data item. Deleting this (""del inchi.data['inchi']"") removes the cached value. In general I don't like automagic stuff like this, as it breaks code in complicated and unexpected ways. We could give up on accurate InChI->InChIKey conversion, or only cache the value if the user specifies an option. On a separate note, can I ask why you are reading an InChI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403:906,cache,cached,906,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403,2,['cache'],"['cache', 'cached']"
Performance,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:1119,Load,LoadFragments,1119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:1126,Load,LoadFragments,1126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . Hello, I'm working on a tcl script which will translate le Log file to xyz file. Another path is an option in Gaussian : Punch=(coord) will copy in a text files optimized coordinates in atomic units, which is easier to translate in .xyz file than a log file.; I will inform you... thanks. Enguerran Vanquelef. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647:177,optimiz,optimized,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647,1,['optimiz'],['optimized']
Performance,"Logged In: NO . Hi,; maybe this is due the error reported before (fragment.txt missing). ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Tobias. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428:167,Load,LoadFragments,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:91,load,loads,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,2,['load'],['loads']
Performance,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:93,queue,queue,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073,1,['queue'],['queue']
Performance,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:125,load,loading,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,2,['load'],['loading']
Performance,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:44,load,loaded,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703,1,['load'],['loaded']
Performance,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:847,optimiz,optimizations,847,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477,1,['optimiz'],['optimizations']
Performance,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:347,optimiz,optimization,347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:135,load,loading,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:519,queue,queue,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,2,"['optimiz', 'queue']","['optimization', 'queue']"
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:657,cache,cacheformat,657,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['cache'],['cacheformat']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. problems loading the file,; this one should be good. File Added: OBMoreFormats revision 2588 include files.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162:60,load,loading,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:416,load,loader,416,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['load'],['loader']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:744,load,loader,744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['load'],['loader']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. updated all svn files revision 2600, log file OpenBabelOBF revision 2600-1.txt attached. ..\Debug/OBDLLD.dll : fatal error LNK1120: 3 unresolved externals. lots of:. obiter.h(330) : warning C4800:... ..\Debug/OBDESCD.obf : fatal error LNK1120: 3 unresolved externals. ..\Debug/OBFPRTD.obf : fatal error LNK1120: 3 unresolved externals. this one still exists:. cifformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/obiter.h(330) : warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning); C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with... File Added: OpenBabelOBF revision 2600-1.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172:563,perform,performance,563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:194,optimiz,optimization,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:584,perform,performed,584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,1,['perform'],['performed']
Performance,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:229,optimiz,optimization,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:147,perform,performance,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:200,optimiz,optimization,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:125,load,loading,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:137,load,loaded,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551,1,['load'],['loaded']
Performance,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:146,load,loading,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:168,perform,perform,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458,1,['perform'],['perform']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:146,perform,performance,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:338,perform,perform,338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,1,['perform'],['perform']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:164,load,load,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162,2,"['load', 'perform']","['load', 'performed']"
Performance,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:763,optimiz,optimization,763,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:92,perform,performance,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:262,optimiz,optimizer,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539,1,['optimiz'],['optimizer']
Performance,"Logged In: YES ; user_id=573515; Originator: NO. Here are the numbers from readelf (.toc1 size, all numbers in hexadecimal, the maximum is 0x10000=65536 bytes = 0x2000=8192 entries per compilation unit):; * Python:; obcore: 8a68; obconversion: 2be8; obtemplate: 2ad0; (This is only a total of 0xe120? I also applied your SWIG flag optimizations for Python, so maybe that's where the bytes were saved? In any case, we're far away from the maximum now for each of those.); * Perl: eb50; (This one is getting dangerously close to the maximum, though this is with the old SWIG flags from beta 5.); * Ruby: c170. We aren't currently building the Java and C# bindings, so I don't have numbers for those. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574:331,optimiz,optimizations,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574,1,['optimiz'],['optimizations']
Performance,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:85,load,loaded,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,2,['load'],"['loaded', 'loads']"
Performance,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:346,Load,LoadFormatFiles,346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,8,"['Load', 'load']","['LoadFormatFiles', 'load']"
Performance,"Nope, in fact I can even do. ```; System.loadLibrary(""openbabel_java"");. OBConversion conversion = new OBConversion();; OBOp gen3d = OBOp.FindType(""gen3d"");; OBMol mol = new OBMol();. System.out.println(gen3d.WorksWith(mol));; ; conversion.SetInFormat(""smi"");; conversion.ReadString(mol, ""CC"");. gen3d.Do(mol);. conversion.SetOutFormat(""mol"");; System.out.println(conversion.WriteString(mol));; ```. (notice the extra call to println) and the output is. `true`. and intermediately in the error stream. `Java Result: -1073740791`. so it's crashing the JVM pretty good. Something's going pretty wrong with the JNI interface because I would expect some JVM error, if not an Exception, to be thrown.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397266263:41,load,loadLibrary,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397266263,1,['load'],['loadLibrary']
Performance,"On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387:754,load,loads,754,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,1,['load'],['loads']
Performance,"On futher contemplation, it appears that openbabel at first thinks the adjacent ring to the triazole is also aromatic, which I don't believe is true. This occurs when loading the SDF. . ```; >>> sulfur, = [a for a in M1.atoms if a.atomicnum==16]; >>> print sulfur.OBAtom.IsAromatic(); True; ```. You'll notice the output smiles incorrectly shows lower-case aromatic notation on the thiazole ring.; ```; >>> M1.write('smi'); Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1 2185720; ```. Original comment by: matt-matlock",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-281805009:167,load,loading,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-281805009,1,['load'],['loading']
Performance,"PHP bindings work. I'll think about adding testing procedure, although it will be a bit complicated. Since PHP5.3+ it doesn't allow loading of dynamic extensions, and location of php.ini differs from distro to distro.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618:132,load,loading,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618,1,['load'],['loading']
Performance,"Respectfully, I don't understand how it's a bug in **our** code if it passes in some CPUs, or without `-march=native`. To me, that sounds like a weird GCC optimizer flag.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-612054377:155,optimiz,optimizer,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-612054377,1,['optimiz'],['optimizer']
Performance,"Running . ```shell; obabel ATP.cdx -O convert.cdxml; ```. with obabel 3.1.1 and subsequent copy-paste into [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) via Structure -> Load .cdxml *somewhat* improves the situation: phosphates are now negatively charged. Good. Except that the absolute values are not reasonable:. ![ChemDraw_samplepage](https://user-images.githubusercontent.com/60490931/190347730-cdcc62d4-93d5-4438-a65a-9a5a15bff01a.png). What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx? Or, do you use an other program which exports in this format (e.g., [chemdoodle](https://www.chemdoodle.com/), or [Marvin Sketcher](https://marvinjs-demo.chemaxon.com/latest/examples/demo.html) to mention just two. Note the red rectangles (furanose cycle) indicate a potential problem how the stereochemistry was defined; in ChemDraw, there are wedges (varying width), and bold single bonds (constant width) as separate buttons to click. (For better portability across OSes and different programs, I prefer .cdxml over Chemdraw's binary .cdx format; the file size is a bit bigger but often this is no issue.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814:214,Load,Load,214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814,1,['Load'],['Load']
Performance,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:491,cache,cache,491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,1,['cache'],['cache']
Performance,Sorry for the delay - this one got buried over the summer.; Is the environment variable BABEL_DATADIR set? It seems like the install can't find the files for force field optimization. If you use .localopt() does the geometry change?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729:170,optimiz,optimization,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729,1,['optimiz'],['optimization']
Performance,"Sounds like you might be right.; On 14 Mar 2016 2:44 p.m., ""Marcus D. Hanwell"" notifications@github.com; wrote:. > I spent quite a bit of time debugging obabel on the Mac, and was seeing; > issues with an illegal instruction pretty early on as obabel started up.; > This was a pretty difficult one to debug as everything worked fine on the; > build machine, but I got a very generic error 14 on my laptop when trying; > to use the packaged obabel, in the end I found the answer through searching; > on Google and seeing a similar issue for Docker.; > ; > CMake and the upstream compilers don't enable this by default as the; > binaries can be quite specific for the GPU you are building on. In this; > case it was a pretty new Mac Pro, and trying to run them on an older; > Macbook Pro laptop. The comments seem incorrect too, as they have little to; > do with cross compiling and more to do with optimizations for the specific; > CPU on the build machine.; > ; > I think adding a section on optimization, and advising to turn this on; > there would be great (with a big warning about the binaries being quite CPU; > dependent at that stage) would be great, but please consider turning this; > off by default to avoid having others spend time debugging strange run time; > errors.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/279.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512:897,optimiz,optimizations,897,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512,2,['optimiz'],"['optimization', 'optimizations']"
Performance,Still buggy in openbabel 3.1.1 with ORCA 5.0.1 output files (tested under Windows 10). Trying to force continuation after errors or specifying the number of structures (= number of optimization steps in the output) have no effects.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144:181,optimiz,optimization,181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144,1,['optimiz'],['optimization']
Performance,"Strange. Could this be platform-dependent somehow? My setup is Windows 10 / Python 3.6.5 (64-bit) / pip 10.0.1, and I have seen this on two other Windows machines as well. Installing uses the following wheel:. ```; C:\>pip install openbabel; Collecting openbabel; Using cached https://files.pythonhosted.org/packages/b1/be/7d35e887a7b6c79aa6e658cddcf32430cea202bfe7301deff7addfee05e1/openbabel-2.4.1-cp36-cp36m-win_amd64.whl; Installing collected packages: openbabel; Successfully installed openbabel; ```; ; And subsequently pip freeze says. `openbabel-python==2.4.1`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1843#issuecomment-394240631:270,cache,cached,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1843#issuecomment-394240631,1,['cache'],['cached']
Performance,"Sure! . JDK: 1.8.0_73 (JRE from JDK); OS: Windows 10. I do not directly need SWIG - I am using the OpenBabel binaries for windows, version 2.4.1. I load both the native library and the jar from that same OpenBabel installation, of course. I am developing inside Netbeans, but just in case I compiled/run the code directly with the java tools directly from the prompt, and it fails anyway.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397301882:148,load,load,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397301882,1,['load'],['load']
Performance,"Thank you @fredrikw, @nbehrnd for the suggestions. Performing an energy minimization on the generated 3d coordinates solved the issue by creating updated coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239:51,Perform,Performing,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239,1,['Perform'],['Performing']
Performance,"Thank you SF, it cropped most of my description after complaining the attached file was too large :(. Here goes:. Reading ; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. with gaussformat results in a segfault:. #0 0x00007ffff6fcadd8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:877,optimiz,optimized,877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,3,['optimiz'],['optimized']
Performance,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:30,cache,cache,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:461,Multi-thread,Multi-threaded,461,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309,2,"['Multi-thread', 'concurren']","['Multi-threaded', 'concurrency']"
Performance,"Thank you, Chris! I have written up php scripts (as I'm just playing around with an idea currently, just quick and dirty) that circumnavigate this problem, but of course they come at a performance penalty. I'll be looking forward to your amendment of this behaviour.; Thanks again!. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/969#issuecomment-281796391:185,perform,performance,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/969#issuecomment-281796391,1,['perform'],['performance']
Performance,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:169,Perform,Performance,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778,1,['Perform'],['Performance']
Performance,"Thanks for comment! Actually part of problems are described [different ECFP2 values for the same molecule](https://github.com/openbabel/openbabel/issues/1557#issue-218369553) here. Thats the actual reason why I could not recreate a fingerprint.; I also tested different BigEndian to LowEndian conversions. For whom it may interest, I came to to this code:. `; private void LoadFingerprint(); {; Func<uint, uint> Big2Little = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; Array.Reverse(bytes, 0, bytes.Length);; return BitConverter.ToUInt32(bytes, 0);; };; Func<uint, uint> Big2Little2 = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; return (uint)((bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3]);; };; Func<uint, uint> Big2Little3 = (uint x) =>; {; return (x & 0x000000FF) << 24 |; (x & 0x0000FF00) << 8 |; (x & 0x00FF0000) >> 8 |; (x & 0xFF000000) >> 24;; };. bool isLittleEndian = BitConverter.IsLittleEndian;; const string formatter = ""{0,10}\t{1,10}\t{2,10}\t{3,10}\t{4,10}\t{5,10}""; ;; Debug.WriteLine(formatter, ""i"", ""file"", ""cmp"", ""B2L cmp"", ""parsed"", ""B2L parsed"");; Debug.WriteLine(formatter, Enumerable.Range(1, 6).Select(x => ""--------"").ToArray());. //Debug.WriteLine(""{0:X8}"", big2litte1);. string KeggSmiles = ""[C@H]1(n2c3c(nc2)c(ncn3)N)[C@@H]([C@@H]([C@H](O1)COP(=O)(OP(=O)(OC[C@H]1O[C@H]([C@@H]([C@@H]1O)O)N1C=C(CC=C1)C(=O)N)O)O)O)OP(=O)(O)O"";; string KeggECFP2 = @""f5137cdc f5137cdc f08b4928 e9e5be3f e9e5be3f e9e5be3f ; e99821a1 dfe49bdf dfe49bdf d6e0861f d6e0861f cef9a4bc ; cb69fe08 c885380c c6d3b3eb c38b3152 c38b3152 c36fb784 ; be842c9d bdb9a034 bd1c43c3 ac8924de ab904d16 aa139040 ; a795d505 9ce64676 96ad281d 7ef444f9 7ef444f9 7ef444f9 ; 7ef444f9 7be0ee02 79e96c34 782c4b73 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 69a2560a 69a2560a 69a2560a 69a2560a 636f8f6a 5faf488d ; 5faf488d 5faf488d 5d2209c6 5a9bc9d5 5888721b 5645f44d ; 54125a1f 53362b63 5299f401 4e8b69b6 4c4118f4 4b1ef6fb ; 4a7b5d42 4a7b5d42 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:373,Load,LoadFingerprint,373,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Load'],['LoadFingerprint']
Performance,"Thanks for looking into this Tim. My own feeling is that there are two separate issues here:. 1. Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up.; 2. Should RemoveHydrogens() suppress hydrogens involved in cis/trans stereo? I think the answer to this is no. One of the invariants of the toolkit should be that suppressing and expanding hydrogens should not change any information. Note that (1) and (2) are separate issues. I've changed the SMILES reader so that stereo perception is optional (""-aS""). By default, stereo is just read directly from the SMILES (same behaviour as OEChem and CDK, at least). This improves performance when reading SMILES, and preserves stereo present in the input even where our stereoperception would remove it:; ```; $ obabel -:""C[C@](C)(C)C"" -osmi; C[C@](C)(C)C	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396:808,perform,performance,808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396,1,['perform'],['performance']
Performance,"Thanks for the hint to use `echo` to pipe a SMILES string to OpenBabel. So far, I used a syntax like. `obabel -:""c1ccccc1"" --gen3d -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:763,optimiz,optimization,763,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['optimiz'],['optimization']
Performance,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:1257,optimiz,optimization,1257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306,3,"['optimiz', 'tune']","['optimization', 'tune']"
Performance,"Thanks! So, I guess OB loads libraries or plugins on the fly. 0) Out curiosity, do you know that library is loaded in the process? is it some internal library to OB?. 1) does it make sense to load libraries on the fly and each time a Read operation is performed? . 2) I deduce that this is done in every instance of `OBConversion`, so it is better to recycle them?. I wonder these because it may not be unheard of that a program opens a few hundred thousand files (or streams), that could amount to several gigabytes of leaked memory.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271:23,load,loads,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271,4,"['load', 'perform']","['load', 'loaded', 'loads', 'performed']"
Performance,Thanks! This most recent commit should have fixed the build error. Shall I close this now or after you performed the merge?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/343#issuecomment-265154505:103,perform,performed,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/343#issuecomment-265154505,1,['perform'],['performed']
Performance,"Thanks, @ghutchis !. I am looking to use openbabel to manipulate the torsion angles as part of a conformer optimization program. . My original thought was to manipulate the internal coordinates directly but, after looking at `OBMol.SetTorsion`, the routes you suggest would probably work better. It both provides a Python-friendly interface and avoids other issues around dealing with the internal coordinates directly (e.g., making sure to rotate neighboring atoms correctly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056:107,optimiz,optimization,107,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056,1,['optimiz'],['optimization']
Performance,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:119,load,loader,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,2,['load'],"['load', 'loader']"
Performance,"That's great - thanks for checking. The OBConformerSearch stuff is all available now (just checked with the OB231 release on Windows). The README is completely out of date. I'll probably just delete it and update the main docs, as we can only maintain one set of docs. Regarding the LD_LIBRARY_PATH, other options are available: http://www.chilkatsoft.com/java-loadLibrary-MacOSX.asp. I haven't tested these though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548:361,load,loadLibrary-MacOSX,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548,1,['load'],['loadLibrary-MacOSX']
Performance,"That's right. But it's only needed for plug-in load, and can be turned off afterwards. Maybe the bindings should instantiate an OBConversion object to force plugin loading, and then turn it off.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834:47,load,load,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834,2,['load'],"['load', 'loading']"
Performance,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1066,load,load,1066,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,"['cache', 'load']","['cache', 'load']"
Performance,"The Stacktrace I obtain in gdb is . run -i smi ../problem.smi -o inchi -; Starting program: ./openbabel-2.3.0/build/bin/babel -i smi ../problem.smi -o inchi -; ==============================; *** Open Babel Error in SetConfig; OBCisTransStereo::SetConfig : found 5 reference ids, should be 4. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::InChIFormat::WriteMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at ./openbabel-2.3.0/src/formats/inchiformat.cpp:415; 415	 unsigned long start = refs[0];; (gdb) where; #0 OpenBabel::InChIFormat::WriteMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at ./openbabel-2.3.0/src/formats/inchiformat.cpp:415; #1 0x00007ffff77cb0c6 in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl (pConv=0x7fffffffe100, pFormat=0x7fffeeebf4a0); at ./openbabel-2.3.0/src/obmolecformat.cpp:181; #2 0x00007ffff77723a6 in OpenBabel::OBConversion::Convert (this=0x7fffffffe100); at ./openbabel-2.3.0/src/obconversion.cpp:545; #3 0x00007ffff7772b29 in OpenBabel::OBConversion::Convert (this=0x7fffffffe100, is=0x7fffffffd910, os=0x6074c0); at ./openbabel-2.3.0/src/obconversion.cpp:418; #4 0x00007ffff7778a94 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, ; OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at ./openbabel-2.3.0/src/obconversion.cpp:1378; #5 0x00000000004042af in main (argc=<value optimized out>, argv=0x7fffffffe418); at ./openbabel-2.3.0/tools/babel.cpp:347. Yours,; Steffen. Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1057#issuecomment-281797921:398,optimiz,optimized,398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1057#issuecomment-281797921,11,['optimiz'],['optimized']
Performance,"The apparently latest API's documentation [on-line](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CppAPI.html) of OpenBabel (OpenBabel's main index [here](https://open-babel.readthedocs.io/en/latest/index.html)) equally does so, as well as the hyperlinks in chapter 11.1 of the then generated .pdf ahead of the description relevant to e.g., C++ and Python. It is worth noting chapter 11.8 «Updating to Open Babel 3.0 from 2.x» starts by. > «Open Babel 3.0 breaks the API in a number of cases, and introduces some new behavior behind-the-scenes. These; changes were necessary to fix some long standing issues impacting chemical accuracy as well as performance.; Here we describe the main changes, and how to change existing code to adapt.». At present, the .pdf was created on June 14, 2020, possibly to reflect about OpenBabel 3.0.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389:659,perform,performance,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389,1,['perform'],['performance']
Performance,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:809,perform,perform,809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101,1,['perform'],['perform']
Performance,"The changes to FastSearchFormat I've just made in r3474 in the trunk code go some way to making it do what ruchemist is expecting. . Because an ordinary SMARTS match is one of the stages in FastSearch, it can never do more than an ordinary SMARTS query. It is less versatile because the string (the -s parameter) has currently to be SMILES. The changes allow it to have two additional SMARTS-like features. Atoms written in the form [#6] match both aromatic and non-aromatic atoms, whereas c and C each match only one of these. But the default fingerprint (FP2) indexes using bond orders, so for a bond that can be single or aromatic it necessary to specify it as ~ . In the example 2, the query; Nc1nc(C)c(C)n1 will match only 3 molecules in the dataset, because it specifes non-aromatic N and C.; [#7]c1nc([#6])c(C)n1 matches 4 molecules, but to get all six matches use; [#7]~c1nc([#6])c(C)n1 where the bond that may or may not be part of an aromatic ring has been specified as such. This only works from the -s parameter, and not with a molecule from a file (-S option). The ~ bond is implemented by doing two fastsearches and combining the results. If there were two ~ in a query it would be 4, and with 3 ~ it would be 8. It therefore takes time and produces a lot of duplicate matches which have to be removed, so performance with large datasets will be affected. Nevertheless, this is a workable solution for some cases, but it needs some careful thought in writing the query string. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795560:1320,perform,performance,1320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795560,1,['perform'],['performance']
Performance,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:182,perform,perform,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034,1,['perform'],['perform']
Performance,"The issue seems to be an invalid fragment in the `data/rigid-fragments.txt` file. The structure in this bug report contains the fragment `OC1COCC1`. The fragment coordinates for this are all zero:; ```; OC1COCC1; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; ```; When the OBBuilder class tries to connect such fragments the coordinates become NaN. This happens because the code tries to find a directional vector for the bond connecting this fragment to other parts. In this process the vector (0, 0, 0) is normalized which results in (NaN, NaN, NaN). Updating the `data/rigid-fragments.txt` file should fix this. In total, there are 12 fragments such fragments in the file:; ```; CC1=CC2=N3C1=Cc1cc(c4n1*13N3=C(C=c5n1c(=C2)cc5C)C(=CC3=C4)C)C; CC1=CC2=Cc3n4*56N2=C1C=c1cc(c(=CC2=N6C(=Cc4cc3C)C=C2C)n51)C; C1=CC2=N3C1=Cc1ccc4n1*13N3=C(C=CC3=C4)C=c3n1c(=C2)cc3; C=C1CCCC2(C1CCC2)C; OC1CC(=CC(C1)(C)C)C; OC1C(O)COCC1O; O=C1NC2C(N1)CSC2; OC1COCC1O; O=C1ccC(=O)N1; OC1COCC1; C1=CC=C[NH2]=C1; [O-]*(=O)(=O)[O-]; ```. Detecting this in `OBBuilder::LoadFragments()` and throwing an error would also make it easier to debug this in the future. Agree?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646:1122,Load,LoadFragments,1122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646,1,['Load'],['LoadFragments']
Performance,"The perception/assignment of bond orders for the xzy2mol conversion likely is based on geometry and distances (see, e.g. southern pyrrole in comparison with the three other ones in your illustration). Possibly other routines do so, too. The one e.g., by the Jensen group, [xyz2mol](https://github.com/jensengroup/xyz2mol), which by 2018 was written for «molecules containing the following elements: H, B, C-F, Si-Cl, Br, and I.» ([blog post](https://proteinsandwavefunctions.blogspot.com/2018/01/xyz2mol-converting-xyz-file-to-rdkit.html)). Jensen provided additional insight about its function in his talk at RDKit UGM 2020 (3:21 mm:ss onward, [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo)). You may edit the connection table in the .mol file manually (below the atomic coordinates); here, atoms are listed (integers by appearance in the model, count starts with 1) as well as the assigned bond order. For a molecule (still) this small, you may consider a visual edit, e.g., in [Jmol](http://jmol.sourceforge.net/)'s model kit as well, and save the newly written model in a separate file. See the animation below for how an edit may proceed:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/141300231-ab2b2f6a-151e-49f8-a154-eee25faaba61.gif). (By the way, hydrogen atoms are missing in the model.) . [data.zip](https://github.com/openbabel/openbabel/files/7520504/data.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541:1173,optimiz,optimize,1173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541,1,['optimiz'],['optimize']
Performance,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:590,load,load,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893,2,['load'],['load']
Performance,The version installed by **Debian** should be **2.3.2**. `apt-cache show libopenbabel4` shows:. Package: libopenbabel4; Source: openbabel (2.3.2+dfsg-1); Version: 2.3.2+dfsg-1+b1; Installed-Size: 11264; Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Architecture: amd64. Original comment by: biohuang,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1290#issuecomment-281804042:62,cache,cache,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290#issuecomment-281804042,1,['cache'],['cache']
Performance,"There aren't two function calls and I think you underestimate what an optimizing compiler is capable of, especially considering these are short functions defined in the header file and will be automatically inlined. I really don't think there is any efficiency issue unless your compiler sucks. There are issues in using the enum, but it gives the option of type checking element types. However, I agree that atomic numbers need to continue to be represented as ints so users can create non-physical atoms, so there will be a disconnect somewhere. I believe this enables more readable, less bug-prone code, but the effect is slight so I won't advocate for it any more.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357684889:70,optimiz,optimizing,70,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357684889,1,['optimiz'],['optimizing']
Performance,"These are the MMFF94 atom types. The definitions can be found on the; internet (http://www.psc.edu/general/software/packages/charmm/tutorial/mackerell/mmffsymb.par); or in the original MMFF94 paper part I. Another quick way to get these types and an associated charge is to run. $obenergy -ff MMFF94 mymol.mol2. This will print out all the atom types and charges for your molecule. Note: in version 2.2.0, the probe atom is placed at position (0.0,; 0.0, 0.0) before calculating the grid size. This results in very large; grids (and bad performance) when your molecule is off-center. You can; either center the molecule first, or use svn trunk where this ""bug""; has been fixed. The trunk version also prints out the progress which; can be useful for large molecules. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/824#issuecomment-281793945:537,perform,performance,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/824#issuecomment-281793945,1,['perform'],['performance']
Performance,"This can actually be closed -- we'll be using Eigen2, which is also now highly tuned and vectorized... :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741:79,tune,tuned,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741,1,['tune'],['tuned']
Performance,"This is now fixed in svn. However, you are still not able to optimize your molecule because there are three deuterium atoms present. AFAIK you can safly remove the M ISO line in the file without affecting the results. (atom mass is not used in parameterization/optimization). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954:61,optimiz,optimize,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954,2,['optimiz'],"['optimization', 'optimize']"
Performance,"This should be possible and I will have a look at this. A quick look at the code shows that both the algorithm (use orbits of the permutation group) and performance can be improved (e.g. using a small vector optimization for inner loops, avoid dynamic allocated memory in general).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120:153,perform,performance,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"To emphasize, you've indicated that tests pass without `-march=native` and also pass on other chipsets. That seems like a weird optimizer / compiler bug, not a fault in Open Babel. AFAIK, there's no chipset-dependent code in our codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317:128,optimiz,optimizer,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317,1,['optimiz'],['optimizer']
Performance,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:666,Load,LoadFragments,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586,1,['Load'],['LoadFragments']
Performance,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:170,load,loading,170,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,2,"['cache', 'load']","['cache', 'loading']"
Performance,"What do you want to do *after* the sort? Try this:. - option A) is an edit in place, in the file. You need a good text editor. In Emacs, jump the block of interest (`C-s`, followed by the criterion e.g. `BOND ANGLES`), mark the block by `M-h` and run `M-x sort-lines`. After that, you however have to put back `BOND ANGLES` to lead this block because an explicit empty space (here leading a column) has a higher priority in this sort, than `B` of string `BOND ANGLES`.; ; If you prefer vim, jump to the block by `/BOND ANGLES/`. Advance one additional line (`j`) to the first line of the array. Enter the visual mode (`v`), mark all to the end of this block (`}`) and run the command `:sort`. In case you didn't advance the single line before entering the visual mode and marked the whole paragraph (including the line `BOND ANGLES`), you now have to copy and yank this line up to the beginning of this block -- similar to Emacs.; There equally is `gvim` (vim with some GUI added); here you can mark the region of interest with your mouse before running the command `:sort`. - option B), your interest is only this very block in an eventually separate file. After manual extraction of the region of interest, perform a natural sort. In Linux, you can run `sort -n input.txt` with a result you can redirect into a new file. (The natural sort puts the string `BOND ANGLES` ahead of the array.). In Linux, csplit allows you to skip the manual search and copy prior to the sort, too. A minimal working example is. ```shell; csplit CCB-CH2CN_1.txt '/^BOND ANGLES$/' -s '/^$/' -f out; ```. to indicate the file to process, the pattern at the start of the paragraph of interest separated from the next one by an empty line (hence `-s '/^$/'`). And to store the output into files `out`. It then is file `out01` which is about the block `BOND ANGLES` you can submit to the sort.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703:1209,perform,perform,1209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703,1,['perform'],['perform']
Performance,"With Open Babel as currently provided in Linux Debian 10 (release 3.1.0), I copy-pasted you test data into `IN.smi` and run the instruction you mention, i.e., `obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest`. Contrary to your report, I did not observe any error report at all. I then read the `.sdf` in an old instance of Jmol (14.6.4_2016.11.05), the viewer recognized the presence of four models. It was possible to display them one by one (on Jmol's console, this requires an input in pattern of `load ""OUT.sdf"" 1`) and the geometries do not look terribly skewed either. Equally, there was no problem to import the `.sdf`import into [DataWarrior](http://openmolecules.org/datawarrior/index.html) (version 5.2.1, 2020) to write a `.dwar` file either. It looks like the problem does not occur (any more) in a (more) recent version of Open Babel. [3D_generation.zip](https://github.com/openbabel/openbabel/files/5673497/3D_generation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924:513,load,load,513,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924,1,['load'],['load']
Performance,"With openbabel 3.1.0 as provided in Linux Debian 11 / bullseye (branch testing) and your .pdb I performed the default protonation, i.e. `obabel -ipdb ligand_1.pdb -h -opdb add_h.pdb`. The newly written .pdb lists all atoms including the label `4CO`, too. Contrasting to the original file submitted, the new .pdb has an additional trailing column about the atom type. For most of the protonation suggested, chemically speaking (number of protons added, spatial arrangement vs. C, N, O), the results look plausible. The protonation of the phosphates _may_ be different. In the export of the protonated structure as .svg, the P=O in the terminal monophosphate is represented differently, than the P=O in the diphosphates. Possibly this is influenced on the P-O bond lengths determined. For a test, I reduced the information available in the .pdb about the protonated ligand to a SMILES string and let the structure recreate; the then displayed structure recreated from the SMILES does look plausible. Maybe this result already is good enough for your work. Maybe further evidence about the protonation at the terminal phosphate is important for you -- I don't know? Attached below, a .zip archive about the processing of the data so far. [ligand_1_revision.zip](https://github.com/openbabel/openbabel/files/6055089/ligand_1_revision.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422:96,perform,performed,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422,1,['perform'],['performed']
Performance,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:206,load,load,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,3,"['load', 'optimiz', 'perform']","['load', 'optimization', 'performed']"
Performance,"Yes, I am getting the error even though I have loaded gcc module. Any help would be really appreciated. 'Thread_local' related problem I looked through all possible resources but could not find any solution in regards to this openbabel install.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490:47,load,loaded,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490,1,['load'],['loaded']
Performance,"Yes, I haven't done much cleaning up or optimizing, because it's still working only ~75% of the time. Not bad, but not good either.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354879765:40,optimiz,optimizing,40,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354879765,1,['optimiz'],['optimizing']
Performance,"Yes, as of commit a345105b28173eb7da14ecd1e5beebe94140c6d7 this bug also occurs with the git master. I confirmed the crash under strace to make sure it was loading the latest built-from-source shared libraries rather than the version packaged by Ubuntu. I built this software under Ubuntu 14.04 64 bit. This is how I built it:. ```; sudo apt-get install swig. mkdir -p /opt/science/openbabel/src; cd /opt/science/openbabel/src; wget http://bitbucket.org/eigen/eigen/get/3.2.4.tar.bz2; tar xjvf 3.2.4.tar.bz2; git clone https://github.com/openbabel/openbabel.git; cd openbabel; mkdir build; cd build. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/science/openbabel -DEIGEN3_INCLUDE_DIR=/opt/science/openbabel/src/eigen-eigen-10219c95fe65; make -j 4; make test; make install; ```. All tests passed when I ran make test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284:156,load,loading,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284,1,['load'],['loading']
Performance,"Yes, same error... `UNICODE` must be defined somewhere else by default. I just don't know where.; Command:; `C:\OpenBabel\build>mingw32-make -j4`; Display:; ```; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.obj; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp: In static member function 'static bool DLHandler::openLib(const string&)':; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp:155:36: error: cannot convert 'const char*' to 'LPCWSTR {aka const wchar_t*}' for argument '1' to 'HINSTANCE__* LoadLibraryW(LPCWSTR)'; if(LoadLibrary(lib_name.c_str())); ^; src\CMakeFiles\openbabel.dir\build.make:1312: recipe for target 'src/CMakeFiles/openbabel.dir/dlhandler_unix.obj' failed; mingw32-make[2]: *** [src/CMakeFiles/openbabel.dir/dlhandler_unix.obj] Error 1; mingw32-make[2]: *** Waiting for unfinished jobs....; CMakeFiles\Makefile2:1078: recipe for target 'src/CMakeFiles/openbabel.dir/all' failed; mingw32-make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; Makefile:139: recipe for target 'all' failed; mingw32-make: *** [all] Error 2; ```; Same thing if I retry without `-j4`. By googling a bit around, I found a few discussions regarding the (apparently recurrent) issue:; - https://stackoverflow.com/questions/1791578/how-do-i-convert-a-char-string-to-a-wchar-t-string; - https://stackoverflow.com/questions/14370982/converting-const-char-to-lpctstr-for-createdirectory; - and some similar others... By looking at the declaration in `winbase.h`:; ```; #ifdef UNICODE; : : :; #define LoadLibrary LoadLibraryW; : : :; #else; : : :; #define LoadLibrary LoadLibraryA; ```; and the source code in `dlhandler_unix.cpp`:; ```; #ifdef __MINGW32__; bool DLHandler :: openLib(const string& lib_name); {; if(LoadLibrary(lib_name.c_str())); return true;. unsigned long err = GetLastError();; return false;; }; #else; ...; ```; an idea could be whether to explicitely call `LoadLibraryA` or convert `lib_name.c_str()` to a `LPCWSTR` aka `const wchar_t*`. I tried the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206:531,Load,LoadLibraryW,531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206,2,['Load'],"['LoadLibrary', 'LoadLibraryW']"
Performance,"Yes, sorry for the short commit infos!; Now after an optimization run every geometry step will be read into the displacement structure to be able to visualize the optimisation steps and the energy changes in future.; Small bugfix to read the IR-spectra correct from orca outputfiles that have a wrong syntax structure when some numbers are to high.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/306#issuecomment-223514487:53,optimiz,optimization,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/306#issuecomment-223514487,1,['optimiz'],['optimization']
Performance,"Yes. It looks like the problem is on Matplotlib, I just changed; ""from PIL import Image"" to ""import Image"" in matplotlib/backend_bases.py; following the recommendation from this blog post:; http://jaredforsyth.com/blog/2010/apr/28/accessinit-hash-collision-3-both-1-and-1/#the-solution; and I can load pybel and matplotlib together now. It also looks like Matplotlib loads PIL ""the wrong way"" in other modules, should I report it to them?. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148:297,load,load,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148,2,['load'],"['load', 'loads']"
Performance,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:93,load,loadallplugins,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,2,['load'],"['load', 'loadallplugins']"
Performance,"You could try something like helgrind:; http://valgrind.org/docs/manual/hg-manual.html; You'd need to write a multi-threaded program that exercised all the relevant code though. Really, any global state that isn't read-only is highly suspect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206462495:110,multi-thread,multi-threaded,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206462495,1,['multi-thread'],['multi-threaded']
Performance,You may want to perform `inkscape 1.svg --export-eps=1.eps`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2251#issuecomment-646415344:16,perform,perform,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2251#issuecomment-646415344,1,['perform'],['perform']
Performance,"You need to check the return value of the earlier API calls. My guess is; that some are false. On Wed, 13 Jun 2018, 15:36 niohiki, <notifications@github.com> wrote:. > I am using OpenBabel 2.4.1. I am using the Java wrapper to transform; > SMILES to MOL. The following code crashes the JVM, without an Error.; >; > `public class OBTest {; >; > public static void main(String[] args) {; > System.loadLibrary(""openbabel_java"");; >; > OBConversion conversion = new OBConversion();; > OBOp gen = OBOp.FindType(""gen3d"");; > OBMol mol = new OBMol();; >; > conversion.SetInFormat(""smi"");; > conversion.ReadString(mol, ""CC"");; >; > gen.Do(mol);; >; > conversion.SetOutFormat(""mol"");; > System.out.println(conversion.WriteString(mol));; > }; >; > }`; >; > The problematic line is; >; > gen.Do(mol);; >; > If it is removed, or if gen2d is used in; >; > OBOp gen = OBOp.FindType(""gen2d"");; >; > the code works correctly. I have repeated the same steps on the GUI and; > the command line, and it works perfectly.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1854>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVA4199oscKlwNKtdoLXgRPOwboTks5t8SNzgaJpZM4UmU48>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397069178:395,load,loadLibrary,395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397069178,1,['load'],['loadLibrary']
Performance,You're either not linking to the right `libopenbabel` from your compile. What does `otool -L /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so` report?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520:119,Cache,Caches,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520,1,['Cache'],['Caches']
Performance,"Your illustration above shows a completely different molecule (e.g., a bromine atom, thiazole ring). Aside from this, and I admit, likely to be too slow for the conversion of batches of SMILES into `.sdf` (or other formats), I found [Jmol](http://jmol.sourceforge.net/) may be of help for such a conversion, provided the computer may reach to a server at [cactus.nci.nih.gov](https://cactus.nci.nih.gov/):. + launch the program; + similar to reading from a file, issue a command in pattern of `load smiles ""c1ccccn1"";` in Jmol's console; + wait a sec (depends a bit on the internet connection); + as usual, the tentative 3D structure may be stored permanently, e.g., by `write ""pyridine.sdf"";` / minimized by the MMFF forcefield implementation in Jmol's toolkit. Actually, the example below suggests, this already is possible for quite some time:. ![Jmol](https://user-images.githubusercontent.com/19709084/115271360-c7580700-a12c-11eb-8330-6392855cfd34.png). (Lack of dedicated volunteers with good knowledge of Java, JavaScript, and Linux contributes to the cause why Linux Debian 11 / bullseye still keeps this old, but known-to-work version in its repositories. The conversion shown still is possible, e.g. with the less old Jmol 14.31.32 released February 2021.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-822618254:494,load,load,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-822618254,1,['load'],['load']
Performance,"Your request to openbabel `--gen3d` launches a minimization to identify one optimum (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:912,optimiz,optimization,912,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,1,['optimiz'],['optimization']
Performance,"Your sample file is not valid. The _atom_site_label field must be unique. I see 6 times the ""Li"" label while we should have ""Li1"" to ""Li6"" (or so, they just need to be different). The same for C, H, and O. I agree that babl should not crash, but don't expect that this file will be loaded without errors. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800789:282,load,loaded,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800789,1,['load'],['loaded']
Performance,"__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48>, 'sre_compile': <module at remote 0x7ffff68f1050>, 'builtins': <module at remote 0x7ffff7fe4440>, 'zipimport': <module at remote 0x7ffff6c42680>; , 'sys': <module at remote 0x7ffff7ff2d88>, 'locale': <module at remote 0x7ffff68b23f8>, 'os.path': <module at remote 0x7ffff6c1aea8>, 'genericpath': ; <module at remote 0x7ffff6c227e8>, '_frozen_importlib': <module at remote 0x7ffff6c71290>, '_collections': <module at remote 0x7ffff6bd77a0>, 'codecs'; : <module at remote 0x7ffff6c4b200>, 'marshal': <module at remote 0x7ffff6c2d440>, 'posixpath': <module at remote 0x7ffff6c1aea8>, 'stat': <module at ; remote 0x7ffff6c1a4d0>, 'import",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:5175,optimiz,optimized,5175,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"`1e1q_protein.mol2` is downloaded from http://bioinfo-pharma.u-strasbg.fr/scPDB/EXPORTENTRY=PROT=1e1q_4. With Open Babel 2.4.1 provided by [Debian's apt](https://packages.debian.org/buster/openbabel), performing `obabel 1e1q_protein.mol2 -oxyz` raises SEGV.; With Open Babel 3 built from f84536d804b4e2b530daf8831f264ea72a5cedf0, the command prints; ```; ==============================; *** Open Babel Warning in ReadMolecule; Failed to kekulize aromatic bonds in MOL2 file (title is 1e1q_ADP_4_protein); ```; to stderr but is successful. So is `openbabel.pybel`. Perhaps this has been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2014#issuecomment-548755505:201,perform,performing,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014#issuecomment-548755505,1,['perform'],['performing']
Performance,`switch` is used; I hope performance is not worsen.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557852712:25,perform,performance,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557852712,1,['perform'],['performance']
Performance,abel/2.2.99/cmlreactformat.so. 2b0db4768000-2b0db4968000 ---p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4968000-2b0db4969000 rw-p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 000080,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:19888,cache,cacheformat,19888,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,"abel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : . decorated name length exceeded, name was truncated; with; [; . _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped =========",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:10723,cache,cacheformat,10723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['cache'],['cacheformat']
Performance,"arting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to conve",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1011,load,loaded,1011,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['load'],['loaded']
Performance,"available.; #1 0x00007ffff62ab9aa in std::tr1::_Sp_deleter<OpenBabel::OBMol>::operator() (this=0x6b5998, __p=0x81ec40); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:285; No locals.; #2 0x00007ffff62a5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at rem",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1777,optimiz,optimized,1777,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"c conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1709,load,load,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,"credits"" or ""license"" for more information.; >>> import openbabel as ob; >>> t = ob.OBMol(); >>> t += ob.OBMol(); >>> t += ob.OBMol(); Segmentation fault; ```. This is backtrace:. ```; #0 0x00000000006b5350 in ?? (); No symbol table info available.; #1 0x00007ffff62ab9aa in std::tr1::_Sp_deleter<OpenBabel::OBMol>::operator() (this=0x6b5998, __p=0x81ec40); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:285; No locals.; #2 0x00007ffff62a5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1531,optimiz,optimized,1531,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1271,cache,cached,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cached']
Performance,"dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4548,optimiz,optimized,4548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"dule at remote 0x7ffff68f1050>, 'builtins': <module at remote 0x7ffff7fe4440>, 'zipimport': <module at remote 0x7ffff6c42680>; , 'sys': <module at remote 0x7ffff7ff2d88>, 'locale': <module at remote 0x7ffff68b23f8>, 'os.path': <module at remote 0x7ffff6c1aea8>, 'genericpath': ; <module at remote 0x7ffff6c227e8>, '_frozen_importlib': <module at remote 0x7ffff6c71290>, '_collections': <module at remote 0x7ffff6bd77a0>, 'codecs'; : <module at remote 0x7ffff6c4b200>, 'marshal': <module at remote 0x7ffff6c2d440>, 'posixpath': <module at remote 0x7ffff6c1aea8>, 'stat': <module at ; remote 0x7ffff6c1a4d0>, 'importlib._bootstrap': <module at remote 0x7ffff6c71290>, 'token': <module at remote 0x7ffff66ddf80>, 'importlib.mach...(trun; cated); #16 0x00007ffff7a9305d in Py_Finalize () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/pythonrun.c:534; interp = 0x6045e0; tstate = 0x6b5350; #17 0x00007ffff7aa80e3 in Py_Main (argc=argc@entry=3, argv=argv@entry=0x603010); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Modules/main.c:773; c = <optimized out>; sts = 0; command = 0x6043f0 L""\x653ed0""; filename = 0x0; module = 0x0; fp = 0x7ffff77484e0 <_IO_2_1_stdin_>; p = <optimized out>; skipfirstline = <optimized out>; stdin_is_interactive = 1; help = <optimized out>; version = <optimized out>; saw_unbuffered_flag = <optimized out>; cf = {cf_flags = 0}; target_script_name = <optimized out>; #18 0x0000000000400e00 in main (argc=3, argv=<optimized out>) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Modules/python.c:81; argv_copy = 0x603010; argv_copy2 = 0x603040; i = <optimized out>; res = <optimized out>; oldloc = 0x603070 ""lv_LV.UTF-8""; process_name = 0x0; ```. SWIG generated wrapper code is really hard to follow, but it fails in openbabel-python.cpp:_wrap_delete_OBMol() calling delete smartarg1. The issue is that it doesn't fail there every time so it might be some bad interaction between shared_ptr and SWIG and Python. Any ideas?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:6687,optimiz,optimized,6687,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,10,['optimiz'],['optimized']
Performance,"e Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgrade of the operating system (Debian 12/bookworm) and openbabel (version 3.1.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:1418,load,load,1418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436,1,['load'],['load']
Performance,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1421,optimiz,optimized,1421,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,enbabel/2.2.99/cmlreactformat.so. 2b0db4968000-2b0db4969000 rw-p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a4000-2b0db55a5000 rw-p 00008000,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:19995,cache,cacheformat,19995,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,"er above?* (Please see edit). Regarding the version being old, I understand, will try to compile from the latest, this is the version that Ubuntu has in its repositories by the way. **EDIT:**. I think I see what the problem is here, that was not the best part of the graph to demonstrate the ""problem"" with. Granted, some bonds are described ""asymmetrically"" (so, the information exists only in one way but not the other, as implied by `OBBond`). But in addition to this, the molecule appears to be fragmented because it is indeed missing some bonds. Here is a better part of that map I am showing earlier:. <img src=""https://user-images.githubusercontent.com/1336337/78693890-c3778f00-78f3-11ea-958f-b22d060f1f2d.png"" width=""512""/>. Notice 82:(H->Nam->C3->C2->O), 83:(H->Nam->C3->C2->O), **84:(H->Nam->C3->C3->C3->...)**. That has been skipped indeed but that is not the whole picture because it has ""fragments"", which are all put on the side (because they are interpreted as subgraphs) and they look like this:. <img src=""https://user-images.githubusercontent.com/1336337/78694834-274e8780-78f5-11ea-81e5-270f3ccb412d.png"" width=""350""/>. All of these are fragments that **""match""** the location of my odd results. The reason there are so many hydrogens here is because I have first called `.addh()`. That function, finds a nitrogen that does not appear to be bonded with anything (the N3 of residue 85) and adds 3 hydrogens around it. It is easy to overcome the assymetric reporting of bonds as I now first build a Networkx graph that has `OBAtom` at its nodes and `OBBond` at its edges and then perform search on **that** graph. I am not sure how easy it would be to overcome this lack of bonds though. . All I can think of at the moment is check if NCCO are grouped under a residue but the residue's subgraph is disconnected. If it is disconnected, then......it would take some guessing as to where these bonds must be added. Unless there is a systematic way to infer which bonds are missing (?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498:3111,perform,perform,3111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498,1,['perform'],['perform']
Performance,"formats/smilesformat.cpp:4197 ; #6 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb3730, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; #7 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85ca0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; ---Type <return> to continue, or q <return> to quit--- ; #8 0x00007fcbda4b3829 in OpenBabel::OBMol2Cansmi::CreateFragCansmiString ( ; this=0x7fffe86962a0, mol=@0x1e401a0, frag_atoms=@0x7fffe869e840, ; isomeric=<value optimized out>, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("") ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4353 ; #9 0x00007fcbda4b455c in OpenBabel::CreateCansmiString ( ; mol=@0x7fffe869f330, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, iso=true, pConv=0x0) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4574 ; #10 0x00007fcbda4b6403 in OpenBabel::SMIBaseFormat::WriteMolecule ( ; this=<value optimized out>, pOb=<value optimized out>, ; pConv=0x7fffe869f640) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4644 ; #11 0x00007fcbe00c275c in OpenBabel::OBConversion::Write ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, pos=<value optimized out>) ; at /work3/igor/openbabel-2-2-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:3667,optimiz,optimized,3667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"ghtly build - and still trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ has changed since). Origi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:908,load,loader,908,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,2,['load'],['loader']
Performance,"ild>mingw32-make -j4`; Display:; ```; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.obj; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp: In static member function 'static bool DLHandler::openLib(const string&)':; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp:155:36: error: cannot convert 'const char*' to 'LPCWSTR {aka const wchar_t*}' for argument '1' to 'HINSTANCE__* LoadLibraryW(LPCWSTR)'; if(LoadLibrary(lib_name.c_str())); ^; src\CMakeFiles\openbabel.dir\build.make:1312: recipe for target 'src/CMakeFiles/openbabel.dir/dlhandler_unix.obj' failed; mingw32-make[2]: *** [src/CMakeFiles/openbabel.dir/dlhandler_unix.obj] Error 1; mingw32-make[2]: *** Waiting for unfinished jobs....; CMakeFiles\Makefile2:1078: recipe for target 'src/CMakeFiles/openbabel.dir/all' failed; mingw32-make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; Makefile:139: recipe for target 'all' failed; mingw32-make: *** [all] Error 2; ```; Same thing if I retry without `-j4`. By googling a bit around, I found a few discussions regarding the (apparently recurrent) issue:; - https://stackoverflow.com/questions/1791578/how-do-i-convert-a-char-string-to-a-wchar-t-string; - https://stackoverflow.com/questions/14370982/converting-const-char-to-lpctstr-for-createdirectory; - and some similar others... By looking at the declaration in `winbase.h`:; ```; #ifdef UNICODE; : : :; #define LoadLibrary LoadLibraryW; : : :; #else; : : :; #define LoadLibrary LoadLibraryA; ```; and the source code in `dlhandler_unix.cpp`:; ```; #ifdef __MINGW32__; bool DLHandler :: openLib(const string& lib_name); {; if(LoadLibrary(lib_name.c_str())); return true;. unsigned long err = GetLastError();; return false;; }; #else; ...; ```; an idea could be whether to explicitely call `LoadLibraryA` or convert `lib_name.c_str()` to a `LPCWSTR` aka `const wchar_t*`. I tried the first option and the compilation succeeded. Now, I can't be sure this won't give problems in the future (I guess not...?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206:1531,Load,LoadLibrary,1531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206,6,['Load'],"['LoadLibrary', 'LoadLibraryA', 'LoadLibraryW']"
Performance,"ile was too large :(. Here goes:. Reading ; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. with gaussformat results in a segfault:. #0 0x00007ffff6fcadd8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:1410; #9 0x00000000004043cf in main (argc=<value ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:1059,optimiz,optimized,1059,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,3,['optimiz'],['optimized']
Performance,"is working. 4 years and counting. How the hell is this still not fixed? Why do I have to install conda just so I can use one single library? Why are the docs not updated to warn prospective users of this at all? . This is getting ridiculous so let's try this one last time:. I have installed openbabel using the 32bit binary from [here](https://github.com/openbabel/openbabel/releases) on Windows 11. I have it in `C:\Program Files (x86)\OpenBabel-3.1.1`. I have ensured that this dir is in my system path and user path variable:. User PATH: C:\Program Files (x86)\OpenBabel-3.1.1; System PATH: C:\Program Files (x86)\OpenBabel-3.1.1; BABEL_DATADIR: C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data. Now I try to install the python key bindungs using PyPI as instructed [here](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html) using `pip install -U openbabel`. That returns the following error traceback:; ```; C:\Users\chris>pip install -U openbabel; Defaulting to user installation because normal site-packages is not writeable; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Installing build dependencies ... done; Getting requirements to build wheel ... done; Preparing metadata (pyproject.toml) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (pyproject.toml) ... error; error: subprocess-exited-with-error. × Building wheel for openbabel (pyproject.toml) did not run successfully.; │ exit code: 1; ╰─> [15 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\Python310\\include', 'C:\\Program Files\\Python310\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\Python310\\libs', 'C:\\Program Files\\Python310', 'C:\\Program Files\\Python310\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554:1141,cache,cached,1141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554,1,['cache'],['cached']
Performance,"it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't dir",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1176,optimiz,optimization,1176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['optimiz'],['optimization']
Performance,"ll trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ has changed since). Original comment by: htl10",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:1458,load,loader,1458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,1,['load'],['loader']
Performance,"ndows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2046,load,load,2046,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2181,Perform,Performing,2181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,['Perform'],['Performing']
Performance,"ned in the top right / top left ""biographic box"" (depending; if your script runs from left to right, or right to left). + With this dictionary in hand, check if your input SMILES structures; may be fully described by this reference. A potential pitfall is; how these amino acids are described in terms of a charge; (protonated / neuter amino group) in your reference SMILES about; individual amino acids / in the SMILES string. + Identify if / how OpenBabel / rdkit may linearly ""digest"" the; SMILES string, similar to reading the primary protein structure; about the consecution of amino acids only, and iteratively state; the single letter (FASTA) code. (A dictionary-based string; substitution would be more efficient and easier to maintain than; 20+ subsequent if-clauses.) This is based for on RDKit's; capability to identify structure pattern; Jan Jensen's beginner's; tutorial [1] showcases this for using Python in Jupyter notebook; about individual amino acids. I speculate OpenBabel is not competitive to folding algorithms; specifically designed to work on large proteins because the underlying; implementation of MMFF is a force field for / about small molecules; with a few degrees of freedom only. With what I retain from chem /; bio at grammar school, I equally assume one approach a protein folding; algorithm possibly probes is to start folding the protein right from; the moment when two amino acids form a dipeptide. To await the long; sequence to be synthesized completely and then to form the; secondary / tertiary / quaternary structure would be computationally; much more demanding (optimizing all degrees of freedom at once);; equally, proteins curl up right after leaving the ribosome / entering; the cytoplasm for a better state (energy wise). Stackexchange «matter modelling»,[2] while still in beta phase,; already allows to label questions with the tag «protein-folding», too. [1] https://www.youtube.com/watch?v=ERvUf_lNopo; [2] https://mattermodeling.stackexchange.com/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-823837877:2121,optimiz,optimizing,2121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-823837877,1,['optimiz'],['optimizing']
Performance,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1550,load,load,1550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['load'],['load']
Performance,"orm of C6H6. The result will be a neuter, uncharged molecule. I speculate this is behind the switch `Add hydrogens (make explicit)` if engaging the GUI of OpenBabel. The toggle `-p` adds protons to a structure deemed suitable for a certain pH value. Note: If not specified further, by an explicit number, `p` corresponds to a pH of 7.4 ([reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=protonate), search section «If you want to add hydrogens appropriate for pH7.4 when doing the conversion the command would be:»). Assuming the basicity of the cyclic amine in your ligand to be somewhere in the range between triethylamine and morpholine, I would be fine if `-p` protonates the amine to yield an ammonium. However, check your input structure about the terminal sulfonic acid. It can't be a group attached to an alkyl chain _and simultaneously_ thrice protonated. What is the origin of your .pdb? With all three S-O distances equal to 1.47 Angstrom, the picture is _more likely_ you started with a deprotonated molecule in first place, than R-SO3H which formally distinguishes between two instances of S=O [shorter bond length between S and O), and one of S-O-H [longer bond length between S and O]. (Compare with the example about p-TsOH, attached below.). Addition: OpenBabel is _one_ popular engine to perform protonations. You may benchmark it in comparison with others in terms of accuracy and rate of processing, e.g. [Dimorphite](https://durrantlab.pitt.edu/dimorphite-dl/), equally from Pitsburgh, which may be used to screen multiple sites potentially subject to protonation in an adjustable range of pH value. If one submits the (still questionable) SMILES string about the above ligand as `OCCN1CCN(CCS(O)(O)O)CC1`, dimorphite-dl suggests the three species ; `OCCN1CC[NH+](CCS(O)(O)O)CC1`	; `OCC[NH+]1CC[NH+](CCS(O)(O)O)CC1`; `OCC[NH+]1CCN(CCS(O)(O)O)CC1`. [test_pTsOH.zip](https://github.com/openbabel/openbabel/files/6074985/test_pTsOH.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896:1654,perform,perform,1654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896,1,['perform'],['perform']
Performance,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1161,perform,performs,1161,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,1,['perform'],['performs']
Performance,"other problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1056,cache,cache-dir,1056,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cache-dir']
Performance,"portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4090,optimiz,optimized,4090,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"r/all] Error 2; make: **\* [all] Error 2. ---. Very strange that it's building elsewhere, it doesn't seem like the kind of bug that would be system dependent. I'm not sure if it will help, but I'll give some system information:. ---. $ uname --operating-system --kernel-release --kernel-name; Linux 3.2.0-98-generic GNU/Linux; $ uname --kernel-version; #138-Ubuntu SMP Mon Jan 11 12:33:01 UTC 2016; $ uname --machine --processor --hardware-platform; x86_64 x86_64 x86_64. ---. Here's my /proc/cpuinfo:. ---. processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:2873,cache,cache,2873,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1936,perform,perform,1936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['perform'],['perform']
Performance,"red_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__pac",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3666,optimiz,optimized,3666,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"ror 2; make: *** [all] Error 2; </pre>. Very strange that it's building elsewhere, it doesn't seem like the kind of bug that would be system dependent. I'm not sure if it will help, but I'll give some system information:. <pre>; $ uname --operating-system --kernel-release --kernel-name; Linux 3.2.0-98-generic GNU/Linux; $ uname --kernel-version; #138-Ubuntu SMP Mon Jan 11 12:33:01 UTC 2016; $ uname --machine --processor --hardware-platform; x86_64 x86_64 x86_64; </pre>. Here's my /proc/cpuinfo:. <pre>; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:2890,cache,cache,2890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"s are contained within that; install. I used conda-forge to install openbabel v3.1.0 and subsequently; pybel. The error output I sent was from Windows v2004 and I sent that one; because MACOS just said ""segmentation fault"". I figured the Windows output; was a little more useful. Both were generated from the same script. Both; scripts included:; from openbabel import openbabel; from openbabel import pybel; However, there is information I didn't include. These errors come about; after compiling with pyinstaller but the program works before compiling. I; didn't include this information originally because I can reproduce the; errors with the interpreter and simple code. Best,; Mike. On Thu, Apr 15, 2021 at 9:29 PM schluta ***@***.***> wrote:. > I'm guessing that being on mac you installed with homebrew. If that is not; > the case ignore the rest of this.; >; > If so you need to make sure your anaconda python knows about the package.; > You can make your python aware of the other package with something like; > below. You should amend the path below for where homebrew installs packages; > for you. Note that where the packages get symlinked to is fine, like below; > for me.; >; > I want to stress that it is not really recommended to use packages across; > separate python installs. At the very least you should make sure that the; > versions of python are the same.; >; > import syssys.path.append('/usr/local/lib/python3.9/site-packages')from openbabel import openbabelfrom openbabel import pybel; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2357#issuecomment-820843139>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AOVMFGOKTVPSMSDX5MCKQSDTI6HILANCNFSM43AM3UFA>; > .; >. -- ; ______________________________; Dr. Michael McCarthy; Biomedical Scientist,; Henry M. Jackson Foundation at; 711th Human Performance Wing,; RHBBA, Bioanalytics",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882:2081,Perform,Performance,2081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882,1,['Perform'],['Performance']
Performance,"ss sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. ---. And here's my /proc/meminfo:. ---. MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unstable: 0 kB; Bounce: 0 kB; WritebackTmp: 0 kB; CommitLimit: 4066748 kB; Committed_AS: 9573052 kB; VmallocTotal: 34359738367 kB; VmallocUsed: 134508 kB; VmallocChunk: 34359595004 kB; HardwareCorrupted: 0 kB; AnonHugePages: 0 kB; HugePages_Total: 0; HugePages_Free: 0; HugePages_Rsvd: 0; HugePages_Surp: 0; Hugepagesize: 2048 kB; DirectMap4k: 7632896 kB; DirectMap2M: 714752 kB. ---. Let me know if any other sort of information might be helpful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:10251,Cache,Cached,10251,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['Cache'],['Cached']
Performance,t.so cmlformat.so gausszmatformat.so nulformat.so rinchiformat.so; acesformat.so cmlreactformat.so ghemicalformat.so nwchemformat.so rsmiformat.so; acrformat.so cofformat.so groformat.so opendxformat.so rxnformat.so; adfformat.so confabreport.so gromos96format.so orcaformat.so shelxformat.so; alchemyformat.so copyformat.so gulpformat.so outformat.so siestaformat.so; amberformat.so crkformat.so hinformat.so painterformat.so smilesformat.so; aoforceformat.so crystal09format.so inchiformat.so pcmodelformat.so smileyformat.so; APIInterface.so CSRformat.so jaguarformat.so pdbformat.so stlformat.so; asciiformat.so cssrformat.so lmpdatformat.so pdbqtformat.so svgformat.so; balstformat.so daltonformat.so lpmdformat.so plugin_charges.so textformat.so; bgfformat.so dlpolyformat.so maeformat.so plugin_descriptors.so thermoformat.so; boxformat.so dmolformat.so MCDLformat.so plugin_fingerprints.so tinkerformat.so; cacaoformat.so exyzformat.so mdffformat.so plugin_forcefields.so titleformat.so; cacheformat.so fastaformat.so mdlformat.so plugin_ops.so turbomoleformat.so; carformat.so fastsearchformat.so mmcifformat.so png2format.so unichemformat.so; castepformat.so fchkformat.so mmodformat.so pngformat.so vaspformat.so; cccformat.so featformat.so MNAformat.so pointcloudformat.so viewmolformat.so; cdxmlformat.so fhformat.so mol2format.so posformat.so wlnformat.so; chem3dformat.so fhiaimsformat.so moldenformat.so povrayformat.so xedformat.so; chemdoodlejsonformat.so fingerprintformat.so molproformat.so pqrformat.so xmlformat.so; chemdrawcdx.so fpsformat.so molreport.so PQSformat.so xsfformat.so; chemdrawct.so freefracformat.so mopacformat.so pubchemjsonformat.so xyzformat.so; chemicaljsonformat.so gamessformat.so mpdformat.so pubchem.so yasaraformat.so; chemkinformat.so gamessukformat.so mpqcformat.so pwscfformat.so zindoformat.so; chemtoolformat.so gausscubeformat.so msiformat.so qchemformat.so; cifformat.so gaussformat.so msmsformat.so reportformat.so; werner@X10DAi:~$ ls /usr/loc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905:1133,cache,cacheformat,1133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905,1,['cache'],['cacheformat']
Performance,"tformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting PDB file (not MOO this time) to PDBQT-file, the charges are all total flat zero..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:1887,optimiz,optimize,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455,1,['optimiz'],['optimize']
Performance,"tl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1624,load,load,1624,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,update:; - Use random distance matrix for initialization; - Optimize coordinates in 4D; - Use BFGS implemented in ~~[CppOptimizationLibrary](https://github.com/PatWie/CppNumericalSolvers)~~ [LBFGS++](https://github.com/yixuan/LBFGSpp/); - Introduce new error function instead of swapping atoms. I want to discuss where to put `cppoptlib` directory.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-502964047:60,Optimiz,Optimize,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-502964047,1,['Optimiz'],['Optimize']
Performance,"ure if it's related or not, but I'm getting segmentation faults now with 2-2-x branch svn snapshot:. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720); at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; 683 __normal_iterator(const _Iterator& __i) : _M_current(__i) { } ; Missing separate debuginfos, use: debuginfo-install ImageMagick.x86_64 bzip2.x86_64 e2fsprogs.x86_64 expat.x86_64 fontconfig.x86_64 freetype.x86_64 gcc.x86_64 glibc.x86_64 lcms.x86_64 libICE.x86_64 libSM.x86_64 libX11.x86_64 libXau.x86_64 libXdmcp.x86_64 libXext.x86_64 libXt.x86_64 libjpeg.x86_64 libtiff.x86_64 libxcb.x86_64 libxml2.x86_64 netpbm.x86_64 zlib.x86_64 ; (gdb) bt ; #0 OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720) ; at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; #1 0x00007fcbe00aa891 in OpenBabel::OBMol::GetBond ( ; this=<value optimized out>, bgn=0x0, end=0x1eaea30) ; at /work3/igor/openbabel-2-2-x/src/mol.cpp:865 ; #2 0x00007fcbda4ac4fd in OpenBabel::OBMol2Cansmi::GetCisTransBondSymbol ( ; this=0x7fffe86962a0, bond=0x1eb21d0, node=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:3235 ; #3 0x00007fcbda4b33a6 in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb36e0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4188 ; #4 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85150, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:1002,optimiz,optimized,1002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1338,load,load,1338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['load'],['load']
Safety," -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72939; > 1 molecule converted. + formiate, following your suggestion with an intermediate SMILES string adjusted, with one proton o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:1194,safe,safer,1194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['safe'],['safer']
Safety," In the latter case, you need to do this before building open babel and you probably need to redo it after conda python is updated. In the former case, you need to change this everytime you compile open babel. Unfortunately, I don’t know enough of the linking process in Linux to tell what the corresponding workflow would be for getmolmap... Kind regards,; Fredrik. > 24 nov. 2015 kl. 22:27 skrev Michael Schmuker notifications@github.com:; > ; > Chiming in here because I've run in this issue today too. I reported a similar issue in the old sourceforge issue tracker a while ago (which was probably already abandoned by then): https://sourceforge.net/p/openbabel/bugs/916/ https://sourceforge.net/p/openbabel/bugs/916/ .; > ; > I was trying to compile openbabel from source on OSX, using the anaconda python distribution to link against. I used the cmake options -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=~/anaconda/include/python2.7/ -DPYTHON_LIBRARY=~/anaconda/lib/libpython2.7.dylib; > ; > Importing pybel results in; > ; > Fatal Python error: PyThreadState_Get: no current thread; > Abort trap: 6; > Running otool -L _openbabel.so shows that libpython2.7.dylib is linked without any prefixed path.; > The problem can be fixed using install_name_tool -change libpython2.7.dylib /Users/micha/anaconda/lib/libpython2.7.dylib, i.e. providing the full path to the anaconda libpython.; > ; > I reproduced this problem today on a fresh checkout of openbabel. BTW, installing openbabel from @patrickfuller https://github.com/patrickfuller 's conda channel also results in a segfault (which is why I resorted to compiling from source in the first place).; > ; > Is there a way to have cmake instruct the linker to use the full path of libpython2.7.dylib as provided on the command line? This would greatly facilitate compiling pybel from source on OSX.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159500475:1765,Abort,Abort,1765,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159500475,1,['Abort'],['Abort']
Safety," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:2738,safe,safe,2738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['safe'],['safe']
Safety,"""-DCMAKE_BUILD_TYPE=RELEASE"" will fix it. It turns out that the g++ build; does not default to ""RELEASE"", but instead to the build that includes debug; information, hence the humungous files. I think this is a mistake and will; send a pull request. Also, the Release build should use ""-O3"" unless we; know there is a problem with this.; - Noel. On 5 October 2016 at 07:02, Noel O'Boyle baoilleach@gmail.com wrote:. > At the least, there should be an option to bundle the plugins into the; > main .so, independently of a static build.; > ; > On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:; > ; > On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <; > notifications@github.com; > ; > > wrote:; > > ; > > It's the binary obabel and other tools + python parts. I can see that all; > > format files are linked in windows to one (if I remember correctly) and; > > they seam to be highly redundant on Linux. The same (i.e small size) is; > > on; > > OSX. Just review the libraries in my conda packages here; > > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > > ; > > OSX are ~10 times smaller than Linux counterparts.; > > ; > > I think it's a linker problem which might be overcome by GCC (?).; > ; > It would be nice to fix this on Linux (although I don't know how to). I; > don't care so much about the size, but the process startup time of obabel; > can be pretty bad as it loads all those files.; > ; > Cheers,; > ; > Jeff; > ; > —; > You are receiving this because you commented.; > ; > Reply to this email directly, view it on GitHub; > https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997:905,redund,redundant,905,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997,1,['redund'],['redundant']
Safety,"""git grep -n 'std::string'|wc -l"" on Openbabel root directory gives 2686; Any idea how to proceed incrementally without breaking the build?. Not related but to simplify mem management+to avoid mem leaks in case of exceptions+just to avoid mem leak errors from SWIG it could be useful to use unique_ptr but it needs C++11. Any roadmap to use C++11 on Openbabel?; I'm not unique_ptr expert and I know that some cases may need shared_ptr which is much more difficult to use for a C++ beginner like me.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202:187,avoid,avoid,187,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202,2,['avoid'],['avoid']
Safety,"(Note to self: add to docs). # Add a small number of tests; 1. For each test you want to add, add a new switch statement target (the ""test ID"") at the bottom of regressions.cpp. To avoid merge problems it may be a good idea to choose test IDs in a particular unique range, e.g. values starting at 6200, rather than the next available integer.; 2. The switch statement should call a function that actually carries out the test. Appropriate code is described below.; 3. Edit the line starting with ""set (regression_parts"" in :file:`tests/CMakeLists.txt` to include your new test target integers.; 4. Rebuild the project. Now it should be possible to run your test directly with ""testrunner regression NN"" where NN is the test ID. It should also be run automatically by ""make test"". # Test code. Need to write this up. For the moment, check out existing tests. You can use OB_ASSERT, or printf(""Fail\n""), to fail a test. The best tests fail without the patch, and pass afterwards. Even better tests will cover a larger range of behaviour to ensure that it keeps working.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473:181,avoid,avoid,181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473,1,['avoid'],['avoid']
Safety,)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(angle)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(angle)); ./src/mol.cpp: if (isfinite(v.x()) || isfinite(v.y()) || isfinite(v.z())) {; ./src/depict/svgpainter.cpp:#define isfinite _finite; ./src/depict/svgpainter.cpp: if (!isfinite(opacity)); ./src/builder.cpp: if (!isfinite(newbond.x()) || !isfinite(newbond.y())); ./src/formats/pointcloudformat.cpp: if( !isfinite(probe_radius) || probe_radius < 0. ) { probe_radius = 0.; }; ./src/formats/pointcloudformat.cpp: if( isfinite(d) && d>0. ) { radius_mult_list.push_back( d ); }; ./src/formats/pointcloudformat.cpp: if( isfinite(d) && d>0. ) { density_list.push_back( d ); }; ./src/formats/stlformat.cpp: if( !isfinite(probe_radius) || probe_radius < 0. ) { probe_radius = 0.; }; ./src/formats/stlformat.cpp: if( !isfinite(scale_factor) || scale_factor < 0. ) { scale_factor = 0.; }; ./tools/obenergy.cpp: if (!isfinite(energy)) {; ```; It is used a lot. But I think it can be safely removed because by C99 standard it shoul be defined in math.h; https://en.cppreference.com/w/c/numeric/math/isfinite,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066:2768,safe,safely,2768,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066,1,['safe'],['safely']
Safety,"86s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dnotifications%26email_token%3DAAR3Z7V4NMS3XHAQBSZZSWLQSZXGXA5CNFSM4I27UV4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDUAV6Q%23issuecomment-552078074&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=lOxC%2B1UXZU3nS5d60G0W8VwTOW4HMOcFUQvfwcQRH%2FI%3D&reserved=0>, or unsubscribe<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAAR3Z7SRPFXHUWDHTYJ6FS3QSZXGXANCNFSM4I27UV4A&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633081111&sdata=EZOsbJInx0lMUyvnZ1THTF4lRBV9GlkcHkbSLocnodg%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:2364,safe,safelinks,2364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,2,['safe'],['safelinks']
Safety,"<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:1480,safe,safelinks,1480,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['safe'],['safelinks']
Safety,"<float> x;; > vector<float> y;; > vector<float> z;; > };; >; > // Convert custom molecule to OBMol; > void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); > {; > mol.Clear();; >; > // map of residues; > map<int,OpenBabel::OBResidue*> reslist;; >; > mol.BeginModify();; >; > for(int i=0;i<sel.element.size();++i){; >; > // Create new atom in this mol; > auto oba = mol.NewAtom();; >; > oba->SetAtomicNum(sel.element[i]);; > oba->SetPartialCharge(sel.charge[i]);; > oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);; >; > // Create new residue if needed; > if(reslist.count(sel.resid[i])==0){; > OpenBabel::OBResidue* obr = mol.NewResidue();; > obr->SetNum(sel.resid[i]);; > obr->SetChain(sel.chain[i]);; > reslist[sel.resid[i]] = obr;; > }; >; > reslist[sel.resid[i]]->AddAtom(oba);; > reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; > }; >; > mol.ConnectTheDots();; > // Guess bond orders and aromaticity; > mol.PerceiveBondOrders();; >; > mol.EndModify();; >; > // Need to avoid recomputing partial charges on output; > mol.SetPartialChargesPerceived();; > }; >; > int main(int argc, char** argv); > {; > OpenBabel::OBMol src,sample1,sample2;; > // Read source molecule; > OpenBabel::OBConversion conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; > mymol.element = {6, 6, 6, 6, 6, 6};; > mymol.charge = {0, 0, 0, 0, 0, 0};; > mymol.resid = {1, 1, 1, 1, 1, 1};; > mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; > mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; > mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; > mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; > // CreateOBMol; > to_obmol(mymol,sample2);; >; > // Work with babel molecule; > OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:1546,avoid,avoid,1546,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,1,['avoid'],['avoid']
Safety,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:240,recover,recovery,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635,5,['recover'],['recovery']
Safety,"> Can you give me a use case or example file for this one?. Check this file out: http://www.crystallography.net/cod/cif/1/01/00/1010022.cif; When running, the result is (one of the paths to get NULL from SpaceGroup::Find):; `Unknown space group error, please file a bug report.`. The reason is a weird group name: `Hermann-Mauguin symmetry space group R -3 m HR`; With the patch, we get nice P1 file (since the transformations are correct [which is not always the case]). > would this be able to pull out the molecule when the CIF ""wraps"" it around the unit cell?. Not sure what you mean. I would guess it means that you have coordinates outside the unit cell:; `C1 1.2 -1.2 1.2`; which can be translated back to:; `C1 0.2 -0.2 0.2`. Looking into fillUC code it says:. ```; // Now loop over all symmetry operations, and generate symmetric atoms one at a time; // Avoid creating overlapping atoms (duplicate), and bring back atoms within the unit cell; ```. So the answer seems, yes. Let me know if you have any more questions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/261#issuecomment-183400926:863,Avoid,Avoid,863,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/261#issuecomment-183400926,1,['Avoid'],['Avoid']
Safety,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:30,detect,detect,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,1,['detect'],['detect']
Safety,"> From the release notes of 3.0.0:; > ; > > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster.; > ; > It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect. can the warning be silenced?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505:211,safe,safe,211,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505,1,['safe'],['safe']
Safety,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:1153,abort,aborted,1153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694,1,['abort'],['aborted']
Safety,"> If you get the full output with `valgrind --leak-check=full --show-leak-kinds=all ./a.out`, the memory leak can be traced to `dlopen()`. @mquevill That is right, the errors that valgrind reports are related to `dl_open`. ; This also happens if I switch to `OBConversion::Read` as @ghutchis suggested. (lost 2592 Bytes). ```c++; #include<openbabel/atom.h>; #include<openbabel/mol.h>; #include<openbabel/generic.h>; #include<openbabel/obconversion.h>; int main(){; 	OpenBabel::OBMol mol;; 	{; 		std::ifstream ifs{""../al108.cif""};; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.Read(&mol, &ifs);; 	}; }; ```. @ghutchis also recommended to switch to LeakSantizer (clang's). In that case, the same number of bytes is lost (2592 bytes) but now it is `ConnectTheDots` what is blamed (maybe this in turn calls `dl_open`, I don't know). ```; =================================================================; ==333638==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 2592 byte(s) in 1 object(s) allocated from:; #0 0x4c43bd in operator new[](unsigned long) (/home/correaa/prj/al108/build/al108+0x4c43bd); #1 0x7f94f507e51e in OpenBabel::OBMol::ConnectTheDots() (/lib/x86_64-linux-gnu/libopenbabel.so.6+0x13251e). SUMMARY: AddressSanitizer: 2592 byte(s) leaked in 1 allocation(s).; ```. Thank you very much for all your help.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848398973:959,detect,detected,959,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848398973,1,['detect'],['detected']
Safety,"> Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). We've tried to use `const` where possible. Since the library is built up of lots of legacy code, there's only so much you can do... > What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. Yes, exactly. On my Mac, I currently have 125, comprising 120+MB of formats. IIRC, charges, forcefields, etc. are compiled together. There's been talk about ""load-on-demand"" but it just hasn't been implemented. > Ah, ok, so it is not purely a problem with `dl_open` then?. There's no leak with `dl_open`. As mentioned above, that's a valgrind thing. Valgrind can't easily deal with `dl_open`. I'd suggest trying LeakSanitizer instead. > `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Sure. Try `OBConversion::Read()` if you like, e.g.; https://github.com/openbabel/openbabel/blob/master/tools/obenergy.cpp. It may be easier if you have questions to post to the mailing lists.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876:112,avoid,avoid,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876,1,['avoid'],['avoid']
Safety,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1246,Abort,Aborted,1246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834,1,['Abort'],['Aborted']
Safety,"> Try to replicate the following; > ; > ```shell; > $ obabel -:""c1ccccc1"" -O aromatic.cml -A; > 1 molecule converted; > $ obabel aromatic.cml -ocan; > c1ccccc1	; > 1 molecule converted; > ```; > ; > as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). Thanks for the tips on the redundancies in the command. I ran the commands as you said, and that works, but the aromatic.cml created does not write bond orders as aromatic, it writes the Kekule form. ; [aromatic.txt](https://github.com/openbabel/openbabel/files/13417932/aromatic.txt). Changing the -A flag in your prompt to -xA writes the bonds as aromatic and I still see the issue described. ```; $ obabel -:""c1ccccc1"" -O aromatic.cml -xA; 1 molecule converted; $ obabel aromatic.cml -ocan; [CH]1[CH][CH][CH][CH][CH]1; 1 molecule converted; ```. Also for the comment on version, we are currently using the most recent 3.1.1, but I noticed the error we see in 3.1.1 isn't seen in 2.4.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753:299,redund,redundancies,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753,1,['redund'],['redundancies']
Safety,"> Why are there RDKit related files in there?. I intended to do a comparison in protonation predictions between the toolkits so we could at least have tests for the unambiguous cases, but haven't been able to find the time to do so.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590:92,predict,predictions,92,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590,1,['predict'],['predictions']
Safety,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:242,Detect,Detect,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857,2,"['Detect', 'detect']","['Detect', 'detect-chemistry-problems']"
Safety,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:238,recover,recovery,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096,5,['recover'],['recovery']
Safety,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:595,detect,detection,595,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['detect'],['detection']
Safety,"@baoilleach - while Turbomole or other parsers should explicitly handle that, I also think that the detection of symbols should handle all cases. There are *many* non-standard files out there with CA = Ca or ""c"" instead of C. Policy has always been to ""accept reasonable files"" and ""write standard-compliant"". So yes, IMHO this is a bug, to accept additional symbols (D, T in particular) as well as case-insensitive comparisons.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2063#issuecomment-552118982:100,detect,detection,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2063#issuecomment-552118982,1,['detect'],['detection']
Safety,@cowsandmilk - I'm fine to bump to 2.8.10. That seems like a safe level for a bit.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624#issuecomment-326721809:61,safe,safe,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624#issuecomment-326721809,1,['safe'],['safe']
Safety,"@dkoes re pybel (about openbabel) which _is not_ PyBEL (about biological networks): You were looking for the section [Updating to Open Babel 3.0 from 2.x](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/migration.html), were sub section _Python module_ states:. > ""In OB 3.x, both openbabel.py and pybel.py live within the openbabel module; ```python; # OB 2.x; import openbabel as ob; import pybel. # OB 3.0; from openbabel import openbabel as ob; from openbabel import pybel; ```; > While more verbose, the new arrangement is in line with standard practice and helps avoid conflict with a different Python project, PyBEL.""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803:579,avoid,avoid,579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803,1,['avoid'],['avoid']
Safety,"@e-kwsm Thank you for your work. I will take a look. @baoilleach I understand that randomness should be removed. I would like to work on it, but I don't have a good idea about how to avoid using random numbers. For example, this procedure adds random offset to avoid planting atoms at the same place. How can I give a good offset which is deterministic but (almost) always different? ; https://github.com/openbabel/openbabel/blob/4709b0752109db593f1bee6298ef3bfa718d260d/src/builder.cpp#L1290. Another problem is how to realize trial and error without random numbers like this:; https://github.com/openbabel/openbabel/blob/4709b0752109db593f1bee6298ef3bfa718d260d/src/builder.cpp#L315. I would like to know your idea about how to avoid using random numbers in these situations.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-634012612:183,avoid,avoid,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-634012612,3,['avoid'],['avoid']
Safety,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:1506,Predict,Predicted,1506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941,2,['Predict'],['Predicted']
Safety,"@husakm Can you share a specific example? The assignment of bonds in a .cif file is not mandatory (let alone *bond order*), and accounting for molecules on *special positions* (where symmetry operators of the unit cell [most frequently a centre of inversion, a mirror plane, a proper axis of rotation]) allow a *crystallographic motif* to be smaller than the whole molecule described can be difficult. With varying success to recover a molecule as such from a .cif file, you could resort to GUIs established in the field e.g., CCDC's Mercury (already in the [community edition](https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/)), [Jmol](https://wiki.jmol.org/index.php/Main_Page), [Avogadro](https://github.com/OpenChemistry/avogadroapp). If you have a stack of files to process, an automated conversion into a .mol/.sdf file (or/then further processed to yield an .xyz) could be an option, too. Examples include `codcif2sdf` of the [cod-tools](https://wiki.crystallography.net/cod-tools/), a Jmol script, or Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) extension to RDKit. As mentioned by Jensen himself ([talk at the RDKit user meeting 2020](https://www.youtube.com/watch?v=HD6IpXMVKeo), link to a youtube recording), organometallic structures are more difficult in assigning bonds and bond order.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875:426,recover,recover,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875,1,['recover'],['recover']
Safety,"@nbehrnd @fredrikw ; Thanks for your reply.; * I have update the version of openbabel 3.1.1, but the result is not fit. In the document 3.0.0, I find the openbabel provide a new method base on paper ""Fast, efficient fragment-based coordinate generation for Open Babel"". But i can not find the how to use it.; * ""The nitrogen and sulphur on the lower right of my image being without hydrogens."" In this question, i want to explain that because i need to genereate the molecules base on this scaffold. It is the scaffold. In my project, i predict the atomic number and the coordinate to identify a molecule, so i need .xyz file to save my result and the point where without hydrogens is the point that need to add other side chain. ; * I also use the rdkit (ETKDG), it is result is also not fit.; * Now, i use the dataset named QM9, the origin paper shows the idea of utilize smiles to get 3D coordinate. It looks like diffcult to achieve it, but i also try to recurrence it all the time. And the all .xyz file in QM9 can convert .xyz to smiles rightly by openabel. So you have some other ideas in it? Thank you very much. Openbabel is a fantastic tool, i also hope it can become better and better. . ![image](https://user-images.githubusercontent.com/32425458/172571487-7ec24cd3-8e74-4f95-8621-568d14c13ae8.png). * @nbehrnd Ok , i will try it by Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol), Thank you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888:537,predict,predict,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888,1,['predict'],['predict']
Safety,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:96,safe,safer,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675,1,['safe'],['safer']
Safety,A nice example of why we should avoid duplicate functions. Could you change the signature to take const char and then it's good to merge.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302864300:32,avoid,avoid,32,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302864300,1,['avoid'],['avoid']
Safety,"Aaaaah my bad! It's indeed a macro, not a function... > Put all string **literals** in _T() macros. so not variables ^^'. The definition I have is similar to yours:; ```; #define __TEXT(q) L##q; #else; #define __TEXT(q) q; #endif; \\ comment; #define TEXT(q) __TEXT(q); ```. Indeed, in that same article,they say:. > `TCHAR` is #defined as either a `char` or a `wchar_t` depending on whether or not the `UNICODE` macro was defined. And, as you suggest, writing; ```; if(LoadLibrary( (PTCHAR) lib_name.c_str() )); return true;; ```; worked fine for me. However, now I have a doubt when they say:. > Never ever ever C style cast C strings from one type to another. C style casts mask very important compiler errors. Avoid C++ style casts also. Basically if you're getting type errors with your strings -- it's because you're doing something wrong. Don't try to cast around the problem. So this might not be exactly what we want... On the other hand, there is something I do not get... This `openLib()` method is implemented in the same way in both `dlhandler_win32.cpp` and `dlhandler_unix.cpp` when compiled with MinGW (in the latter, it is surrounded by `#ifdef __MINGW32__` ... `#else`). The compile error came only from `dlhandler_unix.cpp`. Is it because of some different `#include`s?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089:714,Avoid,Avoid,714,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089,1,['Avoid'],['Avoid']
Safety,"Aha! ; 1. The InChI format Is adding each bond twice, once from A->B and once from B->A.; 2. This wouldn't have been a problem except that the logic in AddBond was not adding up. It was adding virtual bonds in this case instead of just returning false immediately. I've avoided adding the bond twice in 1, and solved the logic in 2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306:270,avoid,avoided,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306,1,['avoid'],['avoided']
Safety,"As a workaround, could I simply remove the faulty rigid fragments from the rigid-fragments.txt files and get a working (albeit slower) OpenBabel installation?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Geoff Hutchison <notifications@github.com>; Sent: Wednesday, March 25, 2020 3:16:21 PM; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Van Dam, Hubertus <hvandam@bnl.gov>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HUXXSDRYBF3LRQG2MTRJJKALANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103:590,detect,detect,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103,1,['detect'],['detect']
Safety,"At the least, there should be an option to bundle the plugins into the main; .so, independently of a static build. On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:. On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > ; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; or mute the thread; https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311:455,redund,redundant,455,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311,1,['redund'],['redundant']
Safety,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:542,safe,safe,542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422,1,['safe'],['safe']
Safety,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:709,avoid,avoided,709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840,1,['avoid'],['avoided']
Safety,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:88,detect,detection,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['detect'],['detection']
Safety,"Can we do a ""git rebase"" to collapse this into one (or two) commits? Try ""git rebase -i"" for interactive rebasing:; https://help.github.com/articles/interactive-rebase. At the very least, I'd love to get rid of all these redundant ""merge branch master"" commits. They're key in your development, but merging this as-is will create a lot of unneeded commits in master. If you're confused, let me know and I can do the git-fu. Thanks -- it looks really cool!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42#issuecomment-29436854:221,redund,redundant,221,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42#issuecomment-29436854,1,['redund'],['redundant']
Safety,Can you revise the patch to detect for '-' in the next character?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184349664:28,detect,detect,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184349664,1,['detect'],['detect']
Safety,"Chiming in here because I've run in this issue today too. I reported a similar issue in the old sourceforge issue tracker a while ago (which was probably already abandoned by then): https://sourceforge.net/p/openbabel/bugs/916/ . I was trying to compile openbabel from source on OSX, using the anaconda python distribution to link against. I used the cmake options `-DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=~/anaconda/include/python2.7/ -DPYTHON_LIBRARY=~/anaconda/lib/libpython2.7.dylib` . Importing pybel results in . ```; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6; ```. Running `otool -L _openbabel.so` shows that `libpython2.7.dylib` is linked without any prefixed path.; The problem can be fixed using `install_name_tool -change libpython2.7.dylib /Users/micha/anaconda/lib/libpython2.7.dylib`, i.e. providing the full path to the anaconda libpython. I reproduced this problem today on a fresh checkout of openbabel. BTW, installing openbabel from @patrickfuller 's conda channel also results in a segfault (which is why I resorted to compiling from source in the first place). Is there a way to have cmake instruct the linker to use the full path of `libpython2.7.dylib` as provided on the command line? This would greatly facilitate compiling pybel from source on OSX.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936:598,Abort,Abort,598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936,1,['Abort'],['Abort']
Safety,Confirmed as a bug with aromaticity detection.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042#issuecomment-305694135:36,detect,detection,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042#issuecomment-305694135,1,['detect'],['detection']
Safety,Confirmed as a problem with aromaticity detection.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1132#issuecomment-305695284:40,detect,detection,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1132#issuecomment-305695284,1,['detect'],['detection']
Safety,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:45,timeout,timeout,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['timeout'],['timeout']
Safety,"Drat, I was hoping to sneak it in. In my copious free time I will see if I can refactor the code to avoid boost, but the cmake files should be configured so obrms just isn't built if boost isn't available.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174:100,avoid,avoid,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174,1,['avoid'],['avoid']
Safety,"Every addition to std::vector in the bindings creates a lot of boilerplate; code and so I've avoided needlessly adding methods where a duplicate; exists. From what you say, this is also the case here. From a user; perspective, the other method should be excluded from the bindings; explicitly to avoid confusion. On 24 March 2017 at 11:24, Daniel Hogan <notifications@github.com> wrote:. > FindChildren. It seems to be overloaded with one version supporting an; > integer vector and the other supporting a vector of atom pointers. I wanted; > to use the latter version, but found there was no way to create a vector of; > Atoms. I did some digging to figure out why and found the above code that; > curiously omits OBAtom and OBAtom * from std::vector template bindings.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1551#issuecomment-288997835>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGdjeZN9hw1XqnSLbuXmZb55Ig9gtks5ro6fagaJpZM4MnkTO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1551#issuecomment-289003303:93,avoid,avoided,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1551#issuecomment-289003303,2,['avoid'],"['avoid', 'avoided']"
Safety,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1445,safe,safer,1445,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243,1,['safe'],['safer']
Safety,"Fair enough - it's a deliberate choice. In that case, I don't think we should change it now. I do favour prohibition however - IMO, anything that risks overwriting the input file should require an additional switch, e.g. --force or something. What about the case where you have a single input file and the same single output file, and it is a multimolecule format? Am I right in saying that this must always be an error?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797493:146,risk,risks,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797493,1,['risk'],['risks']
Safety,"Fix confirmed for Open Babel revision 4692 using Ubuntu 11.10 with SWIG 2.0.4 and Oracle JDK 1.6.0_29. If LD_LIBRARY_PATH includes the directory containing libopenbabel_java.so and libopenbabel.so, it is not necessary to use the LD_PRELOAD trick. Of course it would be very nice to avoid the LD_LIBRARY_PATH change also. There is still an error in scripts/java/README. It refers to openbabel_java.cpp, but it should refer to openbabel-java.cpp. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800541:282,avoid,avoid,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800541,1,['avoid'],['avoid']
Safety,"From the release notes of 3.0.0:. > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster. It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601:196,safe,safe,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601,1,['safe'],['safe']
Safety,Got it. It's the short-circuiting of the InChI generation that's causing the problem. Looks like the solution is to avoid this short-circuit if any options are specified to the writer. Will check in some code as soon as possible.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-94251842:116,avoid,avoid,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-94251842,1,['avoid'],['avoid']
Safety,"HI Geoff, . We have managed to find a fix for this. It is rather tricky and we have posted the install instructions at. http://pymatgen.org/installation.html#installation-tips-for-optional-libraries. Maybe you could take a look and see if this is the right method. And perhaps you could modify open babel's install to better support Mac OS. . ; Shyue Ping. On Tuesday, September 24, 2013 at 8:29 AM, Geoff Hutchison wrote:. > Sorry for the long delay. For some reason, I'm not getting the bug postings by e-mail. Try installing pkg-config and see if that helps.; > http://www.freedesktop.org/wiki/Software/pkg-config/; > Supplying the path for EIGEN3 should be enough, but if things work with pkg-config, I'll be better able to find the problem. Thanks!; > [bugs:#883] (http://sourceforge.net/p/openbabel/bugs/883/) Can't compile with Eigen on Mac OS X; > Status: open; > Created: Tue Jun 11, 2013 05:07 PM UTC by Shyue Ping Ong; > Last Updated: Thu Jun 27, 2013 12:37 PM UTC; > Owner: nobody ; > I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3.; > However, it seems that eigen3 is not detected at all. When I do ; > import openbabel as ob; > ob.OBAlign ; > I get an AttributeError. Switching back to eigen2 did not work either. ; > Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere.; > SP; > Sent from sourceforge.net (http://sourceforge.net) because you indicated interest in https://sourceforge.net/p/openbabel/bugs/883/; > To unsubscribe from further messages, please visit https://sourceforge.net/auth/subscriptions/. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569:1406,detect,detected,1406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569,1,['detect'],['detected']
Safety,"Hello, it definitely has been a while. I still find similar SWIG warnings on my Python codes (using the package from conda: `openbabel 3.1.1 py37h200e996_1 conda-forge`).; @baoilleach mentioned in #1340 that the problem is that some methods should not be used directly. However, I'm struggling to find which methods I should use in some cases.; For example, if I want to iterate over the atoms bonded to an OBAtom, what is the proper way of doing it in Python?; Currently, I'm using something similar to:. ```python; bondIterator = atom.BeginBonds(); nbrAtom = atom.BeginNbrAtom(bondIterator); connectedAtoms = []; connectedAtoms.append(nbrAtom); for i in range(2):; nbrAtom = atom.NextNbrAtom(bondIterator); connectedAtoms.append(nbrAtom); ```. However, I get:; ```; swig/python detected a memory leak of type 'OpenBabel::OBBondIterator *', no destructor found.; ```. How should I iterate over the bonded atoms in this case?. Best,; Henrique",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960:780,detect,detected,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960,1,['detect'],['detected']
Safety,"Here are some tests, using this script:. ``` python; import pybel; import os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:548,detect,detection,548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,1,['detect'],['detection']
Safety,"Here's the backtrace on Linux. #0 0x00000036d4c30265 in raise () from /lib64/libc.so.6; #1 0x00000036d4c31d10 in abort () from /lib64/libc.so.6; #2 0x00000036d4c6a99b in __libc_message () from /lib64/libc.so.6; #3 0x00000036d4c729d6 in free () from /lib64/libc.so.6; #4 0x00002afc16aea38c in FreeINCHI (out=0x7fff00f24ec0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/libinchi/inchi_dll.c:112; #5 0x00002afc16aea414 in FreeStdINCHI (out=0x7fff00f24ec0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/libinchi/inchi_dll.c:126; #6 0x00002afc16d44410 in OpenBabel::InChIFormat::WriteMolecule (; this=0x2afc16f5f9c0, pOb=0xda86370, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/inchiformat.cpp:575; #7 0x00002afc16d444d8 in OpenBabel::InChIKeyFormat::WriteMolecule (; this=0x2afc16f5fa40, pOb=0xda86370, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/inchiformat.cpp:811; #8 0x00002afc1645e7f9 in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl (; pConv=0x7fff00f26ab0, pFormat=0x2afc16f5fa40); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obmolecformat.cpp:182; #9 0x00002afc16773cb1 in OpenBabel::OBMoleculeFormat::WriteChemObject (; this=0x2afc16f5fa40, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/include/openbabel/obmolecformat.h:118; #10 0x00002afc163eba97 in OpenBabel::OBConversion::Convert (; this=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obconversion.cpp:525; #11 0x00002afc163ebd43 in OpenBabel::OBConversion::Convert (; this=0x7fff00f26ab0, is=0x0, os=0x0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obconversion.cpp:398; #12 0x00002afc163ed283 in OpenBabel::OBConversion::FullConvert (; this=0x7fff00f26ab0, FileList=std::vector of length 0, capacity 0,; OutputFileName="""", OutputFileList=std::vector of length 0, capacity 0); at /home/bcri/noboyle/too",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1137#issuecomment-281801080:113,abort,abort,113,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1137#issuecomment-281801080,1,['abort'],['abort']
Safety,"Here's the new docs regarding residue information. Hopefully it's not too confusing:. > Residue information is preserved if the original OBMol is marked as having; > its residues perceived. If this is not desired, either call; > OBMol::UnsetChainsPerceived() in advance on the original OBMol to avoid copying; > the residues (and then reset it afterwards), or else call it on the new OBMol so; > that residue information will be reperceived (when requested). Oops - I've just noticed that there is no UnsetChainsPerceived(). I'm not very keen on these convenience functions - three (Set/Unset/Has) for each bit of a flag. Anyway, let's assume that an UnsetChainsPerceived() will magically appear in the near future via a PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811#issuecomment-379360409:295,avoid,avoid,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811#issuecomment-379360409,1,['avoid'],['avoid']
Safety,"Hey Geoff. Let me know what you think about this. It is basic, but it serves my own personal needs with it. In the ""out"" format, once ""ADF"" is detected, it now also detects the specific kind of ADF output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1793#issuecomment-373864723:143,detect,detected,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1793#issuecomment-373864723,2,['detect'],"['detected', 'detects']"
Safety,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:494,safe,safely,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970,1,['safe'],['safely']
Safety,"Hi Noel,; The number of hydrogens in the SMILES should match the chemical formula in the second layer of the InChI, so for example, the last case (InChI=1/O/q-2) has chemical formula O and should not have any hydrogens...I think the SMILES should be [O-2] ( http://inchis.chemspider.com/Record.aspx?id=164400 ). (By the way, if you weren't aware of them, a couple of useful online tools for working with InChIs are: http://inchis.chemspider.com/Resolver.aspx and http://cactus.nci.nih.gov/chemical/structure .) In any case, this may be fixed in the latest versions of OpenBabel (I've been working with 2.2.0/2.2.1 to avoid Standard InChIs). In particular, I'm wondering if the fix for Issue 2794908 ( https://sourceforge.net/tracker/index.php?func=detail&aid=2794908&group_id=40728&atid=428740 ) addressed this. Thanks,; Greg. Original comment by: gmagoon",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793763:617,avoid,avoid,617,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793763,1,['avoid'],['avoid']
Safety,"Hi again Noel,. I must change my last remark: your ""hack"" avoiding the SER problem has some issue. Not straightforward to say why, though. To generate the bug, follow your advice: take a peptide ending with a SERINE, get the smiles string, turn it into a PDB without -d or --gen3d, then into a 3D PDB.; As you said, the file ""looks"" fine, and so does the structure. However, there must be something wrong somewhere, I'd say angles or distances, because when I prepare such generated PDB files for docking (prepare_ligand4.py, from the MGL tools kit), the output PDBQT structure is missing bonds. Mainly backbone ones, but the weirdest thing is that aromatic cycles are not generated flat (REALLY not flat, in some cases). This bug is 100% repeatable with OpenBabel 2.3.1 that I'm using. All the peptides generated through those two step PDB have the same issue, while the ones directly generated through the classic -d --gen3d from the smiles string seem to generate correct PDBQT files so far, with the MGL tools kit. . Interestingly, I found that OpenBabel 2.3.0 occasionally generated PDB files bahaving the same way, even when generated in a single -d --gen3d step. There might have been a fix made to the one-step (smiles -> 3D PDB) generation, that wasn't applied to the (no coordinate PDB -> 3D PDB) conversion. Anyway, this two-step conversion idea was worth trying, while waiting for the bug to be fixed, so thanks. I'll wait for the bug fix now. I hope Geoff's work is going well on that part!; Cheers. Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801289:58,avoid,avoiding,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801289,1,['avoid'],['avoiding']
Safety,"Hi again,. Found the following in src/formats/mmcifformat.cpp: ; .....; .....; pmol->SetData(pCell);; if (use_fract); {; for (OBAtomIterator atom_x = pmol->BeginAtoms(), atom_y = pmol->EndAtoms(); atom_x != atom_y; ++ atom_x); {; OBAtom * atom = (* atom_x);; atom->SetVector(pCell->FractionalToCartesian(; pCell->WrapFractionalCoordinate(atom->GetVector())));; }; }; }; .....; ..... where the WrapFractionalCoordinate call is was causing the issue for me. Is it possible to avoid the wrapping if using the _atom_site_Cartn_? labels in the CIF instead?. Wonder,; Johan Westin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-352011042:474,avoid,avoid,474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-352011042,1,['avoid'],['avoid']
Safety,Hi have added the safeguard on trunk with revision 5008. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802260:18,safe,safeguard,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802260,1,['safe'],['safeguard']
Safety,"Hi there!. I don't think it's so much a question on errors in the search routines, more a problem with how the searches in FastSearch files are working and the query smiles. The problem is that in SMILES/SMARTS C and c are different atoms, so they won't match. When using SMARTS, a possible way to solve this is to use [#6] instead of C and [#7] instead of N, so that the first Query would be [#6]c2ccc1ncc([#6])c([#7])c1c2. This would probably give the expected match if used like (untested); babel -s""[#6]c2ccc1ncc([#6])c([#7])c1c2"" example-1.sdf -osmi; The same is true for the second example. The ""unexpected"" hits in example 3 are due to the aromaticity detection. If you look at your query you haven't said anything on where the different bonds are located, only the atoms and that match all your hits.; Unfortunately, when using FastSearch files, you can't use SMARTS-based queries, the query needs to be proper SMILES and then I don't know how you could specify your queries to get the wanted result. Original comment by: @fredrikw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795554:659,detect,detection,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795554,1,['detect'],['detection']
Safety,"Hi, thank you very much for your help. I am just starting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:303,avoid,avoid,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['avoid'],['avoid']
Safety,"Hi,; What do you mean with ""how is the edge predicted""? Is it the layout you are asking about? In general, an xyz-file will have coordinates in it, so how did you create the image? How would you like it to look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721:44,predict,predicted,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721,1,['predict'],['predicted']
Safety,"I agree that pdb is not the ideal file format for storing that kind of information.; However in this project we are dealing with a lot of pdb structures and their ligands. This prevents us from editing the files manually and is why we posted in the first place. So if possible we would like to avoid the manual editing of the ligands. We were just wondering, how much effort it was to modify openBabel such that it recognises this type of moiety. The C=N bond is perfectly flat and the bond distance (130pm) hints at a double bond, too. The software package MOE detects this successfully, but optimally we would like to stay within the openBabel framework. - best regards, Juergen. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795291:294,avoid,avoid,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795291,2,"['avoid', 'detect']","['avoid', 'detects']"
Safety,"I can address as example la teobromine:; ![image](https://user-images.githubusercontent.com/335108/44854747-b3082880-ac69-11e8-9d55-e86c49bcd581.png); Updated CDK, RDkit, or Openbabel works on a Daylight-like model so it finds 10 aromatic bonds e 2 aromatic rings while basic model like implemented in prediction software Vega-cdk1.4.9 (https://www.vegahub.eu/) - , in padel-cdk 1.4.15 (http://www.yapcwsoft.com/dd/padeldescriptor/)- and like basic option in marvinsketch) reads only 5 aromatic bonds. Of course this is related to the lack of update of several software, but sometimes you need to use also old software for your work.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417322469:302,predict,prediction,302,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417322469,1,['predict'],['prediction']
Safety,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:124,recover,recover,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,1,['recover'],['recover']
Safety,"I confirm that it works this way :). However do you plan to fix the bug itself in the near future? In other words, when and how could I be informed that fixed and stable code is available?. In the mean time, I don't mind designing a special-case in my pipeline, but it would make life much simpler to consider those peptides like any other... . In the meantime, thanks for this little ""hack"" avoiding the problem :). Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285:392,avoid,avoiding,392,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285,1,['avoid'],['avoiding']
Safety,I created a pull request for the code that checks for these kind of fragments. This should make it easier to detect similar issues in the future.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-606766212:109,detect,detect,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-606766212,1,['detect'],['detect']
Safety,"I found the origin of the bug... there was a missing BeginModify() in CIFFormat::ReadMolecule()... Sorry, this should have been detected a long time ago (a bit strange since EndModify() was called once too many and there is a check for this ??). This is corrected in svn trunk. Could you chek & close the bug ?. Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800796:128,detect,detected,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800796,1,['detect'],['detected']
Safety,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:91,redund,redundant,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['redund'],['redundant']
Safety,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:316,detect,detection,316,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,1,['detect'],['detection']
Safety,"I intended to use canonical SMILES for checking input and predicted chirality as the latest commit. It worked in my local environment, but it didn't in Travis CI. I'm investigating why. I will prepare some cases where the judgement of DG and canonical SMILES does not match.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-528056695:58,predict,predicted,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-528056695,1,['predict'],['predicted']
Safety,I just created a pull request #1755 to fix this problem. I think it's the conflict behavior between ifs.peek() and ifs.tellg(). I rewrote the tail blank line removing codes to avoid the use of ifs.peek().,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1569#issuecomment-357570690:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1569#issuecomment-357570690,1,['avoid'],['avoid']
Safety,"I like the concept, but I'd really like to avoid adding Boost just for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481754257:43,avoid,avoid,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481754257,1,['avoid'],['avoid']
Safety,"I think I know the problem, but am currently unavailable to verify. Essentially the 2d layout code has hard-coded a max number of atoms and bonds, and it segfaults if you go above this. If you are compiling the code yourself, you can workaround by increasing the limit in lines 40 and 41. In the medium term, the code should be rewritten to avoid the need for setting these maxima. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1196#issuecomment-281802073:341,avoid,avoid,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1196#issuecomment-281802073,1,['avoid'],['avoid']
Safety,"I think it was borked when someone changed the static compiles. I use the normal build path, so I didn't detect this. Probably worth setting up some buildbots.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/159#issuecomment-97513740:105,detect,detect,105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/159#issuecomment-97513740,1,['detect'],['detect']
Safety,I think it's safe to remove those 4 lines. Do you want to submit the PR?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462118370:13,safe,safe,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462118370,1,['safe'],['safe']
Safety,"I think that the ultimate reason for the regression is that if you delete a bond coming off an aromatic ring (as in this code), you now need to increment the hydrogen count of the two atoms, whereas previously the hydrogen count was ""floating"" i.e. considered to adjust automatically. The fix seems fine - I just want to do something first. The second edit you've made should be unnecessary if I ""fix"" OBMol.Separate(). If the original Mol had its aromaticity perceived, then the Separate components should be returned as having their aromaticity perceived too. Aromaticity perception takes a little while so we should avoid it if possible. So let me do that first, and get back here..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374140816:619,avoid,avoid,619,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374140816,1,['avoid'],['avoid']
Safety,"I think this is a question for one of our Conda experts. It may be that pyqt5 is bundling its own cairo, instead of using the one from condaforge (or maybe Open Babel is doing this). The whole point of a package management system like Conda is to avoid these types of problems.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2133#issuecomment-593073466:247,avoid,avoid,247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133#issuecomment-593073466,1,['avoid'],['avoid']
Safety,"I think this is the expected behaviour. We detect amino acid monomers and apparently nucleic acids too. These are PDB atom names. If you'd like us to add an option to force ""UNL"", that could be done though.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1767#issuecomment-373997867:43,detect,detect,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1767#issuecomment-373997867,1,['detect'],['detect']
Safety,"I tried installing through conda bundle. Installation is successful but when I call the package. It gives the following error in my MAC. Fatal Python error: PyThreadState_Get: no current thread; /Users/Sriram/anaconda/bin/python.app: line 3: 20610 Abort trap: 6 /Users/Sriram/anaconda/python.app/Contents/MacOS/python ""$@"" . on Linux-64 bit computer. My ipython window crashes with ""Illegal Instruction"" message",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/288#issuecomment-202986133:248,Abort,Abort,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288#issuecomment-202986133,1,['Abort'],['Abort']
Safety,"I understood that the point of serialization in MyChem is to speed up; reading or writing, e.g. by avoiding perception. I think that adding this; to the core API would be interesting. But using pickling or serialisation; using an existing format doesn't help with this. On 7 March 2016 at 14:01, Maciej Wójcikowski notifications@github.com; wrote:. > I currently use mol2 files for pickling in my project; > https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480. It; > work fairly correct, and quite fast. Although it's not the ideal solution.; > The problem with code in mychem, which i have just noticed is that it; > doesn't store 3D information at all, which means that it would need lots of; > improvement.; > ; > Back to mol2-pickling, or in fact any other format. I can port the code to; > pybel so it can pickle it out of the box, but:; > - that's Python only solution (I don't need C serialization); > - is mol2 really the one to store molecules (atom typing as usual);; > i've benchamrked it vs sdf and mol2 was way faster;; > ; > It's easy and straightforward, and most probably we'd end up creating; > another file format. I didn't see it that way, but from this perspective it; > seams so. You might be right that the bottleneck is the kekulization and; > other checks.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985:99,avoid,avoiding,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985,1,['avoid'],['avoiding']
Safety,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:216,safe,safe,216,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,3,['safe'],['safe']
Safety,"I'm totally fine avoiding the stringstream. I'm not so sure about making it optional.; - Regular SMILES - is the canonical atom order useful? The atoms won't be in that order; - Canonical SMILES - is the overhead that high now? As @mwojcikowski indicates, it would be useful for many reasons.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348257372:17,avoid,avoiding,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348257372,1,['avoid'],['avoiding']
Safety,I've added some more safety logic. Should be fixed now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063:21,safe,safety,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063,1,['safe'],['safety']
Safety,"I've been looking at this issue for a while, and I didn't find any cases with strings. ; If people follows the standards of the format, it should be safe to go for a signed int.... but, it's the PDB, after all, so I wouldn't be surprised if somebody would feel the urge to put unicode characters in there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371677480:149,safe,safe,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371677480,1,['safe'],['safe']
Safety,"If `-pthread` compilation flag is required, the file should be; ```diff; --- a/src/CMakeLists.txt; +++ b/src/CMakeLists.txt; @@ -253,13 +253,9 @@ target_link_libraries(openbabel ${libs}); if(Boost_FOUND AND (BUILD_SHARED OR BUILD_MIXED)); include_directories(${Boost_INCLUDE_DIRS}); target_link_libraries(openbabel ${Boost_LIBRARIES} ); + set(THREADS_PREFER_PTHREAD_FLAG ON); find_package(Threads REQUIRED); - if(THREADS_HAVE_PTHREAD_ARG); - target_compile_options(PUBLIC openbabel ""-pthread""); - endif(); - if(CMAKE_THREAD_LIBS_INIT); - target_link_libraries(openbabel ""${CMAKE_THREAD_LIBS_INIT}""); - endif(); + target_link_libraries(openbabel Threads::Threads); endif(); ; set_target_properties(openbabel PROPERTIES; ```. `THREADS_HAVE_PTHREAD_ARG` is INTERNAL and thus should be avoided. https://gitlab.kitware.com/cmake/cmake/-/blob/v3.7.0/Modules/FindThreads.cmake#L217-219",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2201#issuecomment-625024285:782,avoid,avoided,782,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2201#issuecomment-625024285,1,['avoid'],['avoided']
Safety,"If you can, it's best to avoid this problem by writing to a string instead of disk. You can just imagine people running the tests with ""sudo"" and creating all sorts of permissions problems. Could you describe the problem exactly - maybe I can help...?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152:25,avoid,avoid,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152,1,['avoid'],['avoid']
Safety,"If you do this, it should be available through the C++ api and not just via; SWIG. IMO, the perceived need for a serialization is because reading from SMILES; is so slow. I think that speeding up SMILES reading (e.g. avoiding; kekulization and symmetry perception) would be a better win for OB, but; this requires some architectural changes.; - Noel. On 7 March 2016 at 12:46, Maciej Wójcikowski notifications@github.com; wrote:. > This is a major functionality which in my mind is missing from OpenBabel.; > The code is already included in mychem; > https://github.com/mychem/mychem-code/blob/master/src/serialization.cpp; > by @Pansanel https://github.com/Pansanel under GPL2. It's the MySQL; > cartridge for OB. The missing part is the swig definition of **getstate**; > and **setstate** which is fairly straightforward (via StackOverflow; > http://stackoverflow.com/a/19798903). But until anyone devotes their; > time into doing this, I'd like to discuss the idea. What do you think?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193250557:217,avoid,avoiding,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193250557,1,['avoid'],['avoiding']
Safety,"If you don't know how many hydrogens there should be on each atom, here are some lines taken from the pdbformat.cpp. Otherwise, use OBAtom::SetImplicitHCount(num) to avoid guessing.; ```; #include <openbabel/obfunctions.h>; // Guess how many hydrogens are present on each atom based on typical valencies; FOR_ATOMS_OF_MOL(matom, mol); OBAtomAssignTypicalImplicitHydrogens(&*matom);; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420767825:166,avoid,avoid,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420767825,1,['avoid'],['avoid']
Safety,"If you're doing this, you may want to remove the FindSSSR() calls in the aromaticity detection -- it needs the same breadth-first analysis. That's PR#1663779 - Carbon fragments (nanotubes, diamondoid) convert VERY slowly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795770:85,detect,detection,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795770,1,['detect'],['detection']
Safety,"Is ``%(NNN)`` notation standard or is proposed for addition? As per OpenSMILES, it is possible to reuse already used bond IDs, what avoids the problem, unless one needs to have >99 open rings at time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339592193:132,avoid,avoids,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339592193,1,['avoid'],['avoids']
Safety,"Isn't folding a one way function as hash is? You may loose some data during; folding and there is no way to recover that. ----; Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2017-10-09 14:12 GMT+02:00 John Mayfield <notifications@github.com>:. > Yep, the use of 'folding' to a larger a size is for example with MACCS116; > doesn't fit nicely in 32 or 64 bit words which one would typically use for; > popcount.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1654#issuecomment-335139826>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACN8jSXPD85UREjkhmbiiA3kMGvx3Nphks5sqg3FgaJpZM4PtubR>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583:108,recover,recover,108,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583,1,['recover'],['recover']
Safety,"It builds fine under OSX 10.6.8. I have no info wrt 10.7.x. I rolled back from 10.8 to 10.6.8 to recover functionality, but would like (at some point) to be able to go forward to 10.8. Original comment by: do0gie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1202#issuecomment-281802171:97,recover,recover,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202#issuecomment-281802171,1,['recover'],['recover']
Safety,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:336,timeout,timeouts,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,1,['timeout'],['timeouts']
Safety,"It may be that the example file is in C:\Program Files (x86)\OpenBabel-2.3.1\examples folder, which needs administrator privileges for writing in Windows 7. The default save path is the input path. I guess the problem may be similar under Linux. Future Windows releases will try avoid a new OpenBabel user coming across this difficulty. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1183#issuecomment-281801836:279,avoid,avoid,279,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1183#issuecomment-281801836,1,['avoid'],['avoid']
Safety,"It might be better to %ignore the element constants with swig and add them; natively in python, etc. It's slow crossing over to C++ for these. This; will also avoid the need for a rename maybe. On 17 Jan 2018 16:49, ""David Koes"" <notifications@github.com> wrote:. > The goal here is to map the API name to how people think. ""Is this atom a; > carbon"" vs ""does this class have an atomic number field equal to a; > predefined constant"". I'm also trying to ease the transition from the; > helper methods to a more general method. Along with this, people think of; > elements using both the names and the symbols, hence the reason to provide; > both.; >; > Personally, I think usefulness is a valuable trait in an API.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1754#issuecomment-358367165>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGcC4H8hvfgM_xRBkcj-f9_mXt69Qks5tLiSmgaJpZM4Rd0JU>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358745208:159,avoid,avoid,159,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358745208,1,['avoid'],['avoid']
Safety,It's the binary obabel and other tools + python parts. I can see that all format files are linked in windows to one (if I remember correctly) and they seam to be highly redundant on Linux. The same (i.e small size) is on OSX. Just review the libraries in my conda packages [here](https://anaconda.org/mwojcikowski/openbabel/files). *format.so files on OSX are ~10 times smaller than Linux counterparts. I think it's a linker problem which might be overcome by GCC (?).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251384538:169,redund,redundant,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251384538,1,['redund'],['redundant']
Safety,"Just FYI, I was asking Roger about this. According to http://libcxx.llvm.org/, libc++ applies the ""short string"" optimization, which involves placing the string itself into the vector (if it's smaller than a pointer to a string) rather than just a pointer to the string. On resizing, this will cause the c_str() to be moved. I asked him how we could have detected this and he thought that running it through valgrind should have flagged this up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448:355,detect,detected,355,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448,1,['detect'],['detected']
Safety,"Just reran the timings. Locally, based on master + AvoidSSSR, IsOption takes 3.8%. With this change, it's 2.0%, with 0.6% from BuildCanonTree, 0.3% from WriteMolecule, and 0.3% from CreateCansmiString. One thing to think about is whether we could speed up IsOption itself, e.g. think about what sort of std::map we use, or whether to use a map at all for single letter boolean options. If you have no issues, I think for the moment that I'm happy with this PR as it is, and leave the more complicated issue of retaining state for another day.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349895870:51,Avoid,AvoidSSSR,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349895870,1,['Avoid'],['AvoidSSSR']
Safety,"Just to add my 2c to the discussion on atom typing. My recommendation would be to avoid SMARTS and do the atom typing in code. It will be faster, but I think also clearer and less prone to errors. You can find examples of both approaches in the Open Babel codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015:82,avoid,avoid,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015,1,['avoid'],['avoid']
Safety,"Just to clarify first, the string is the SMILES output order rather than the canonical atom order. Even where it is a regular SMILES, the output order may not be the order of the atoms in the molecule. I don't see the downside to making it optional. It avoids (a) the string generation, (b) the original vector generation (though this PR doesn't address that), (c) a minor slowdown in GetData() due to the additional entry, (d) the memory footprint of the OBPairData(). Sure, it might not be much, but why do it at all? Once you start looking at larger molecules, these are going to add up and I would expect that they will affect the size of the biggest molecule we can handle.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348500421:253,avoid,avoids,253,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348500421,1,['avoid'],['avoids']
Safety,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:71,avoid,avoid,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550,1,['avoid'],['avoid']
Safety,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:410,avoid,avoided,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138,1,['avoid'],['avoided']
Safety,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:297,avoid,avoid,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058,1,['avoid'],['avoid']
Safety,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:48,detect,detection,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:438,safe,safe,438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569,1,['safe'],['safe']
Safety,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:404,avoid,avoids,404,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558,1,['avoid'],['avoids']
Safety,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:196,detect,detect,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,1,['detect'],['detect']
Safety,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:66,detect,detection,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:219,avoid,avoid,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:1283,predict,prediction,1283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,1,['predict'],['prediction']
Safety,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:381,predict,prediction,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054,1,['predict'],['prediction']
Safety,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:153,safe,safely,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655,1,['safe'],['safely']
Safety,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:337,redund,redundant,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245,1,['redund'],['redundant']
Safety,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:413,safe,safely,413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571,1,['safe'],['safely']
Safety,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:166,redund,redundant,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,1,['redund'],['redundant']
Safety,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:112,avoid,avoid,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:146,recover,recovers,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506,1,['recover'],['recovers']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. Excellent. I'm going to mark this bug as closed. If Debian has an issue, I hope they will open a new bug. To be safe, can you tell me if any other bindings are still close to causing compile problems?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570:160,safe,safe,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570,1,['safe'],['safe']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1663779. We call SSSR too frequently, and these calls are extremely slow and costly on fullerene-type structures. Ring and aromaticity perception need to avoid SSSR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827:237,avoid,avoid,237,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:341,detect,detection,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:326,safe,safer,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879,1,['safe'],['safer']
Safety,"Logged In: YES ; user_id=573515; Originator: NO. I can't speak for Debian and their m68k timeout problem, but ppc64 builds fine now (I backported the patch from SVN to b5):; http://koji.fedoraproject.org/koji/buildinfo?buildID=51921. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569:89,timeout,timeout,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569,1,['timeout'],['timeout']
Safety,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:174,abort,abort,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,1,['abort'],['abort']
Safety,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:440,safe,safe,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320,1,['safe'],['safe']
Safety,"Mac OS X uses Unix line endings, since ~2001. I think we're safe.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1706#issuecomment-347042525:60,safe,safe,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1706#issuecomment-347042525,1,['safe'],['safe']
Safety,"Nothing wrong with six, per se. We avoid adding dependencies unless; necessary. On Sun, 5 Apr 2020, 12:15 Maksim Rakitin, <notifications@github.com> wrote:. > Why is six a problem? It properly takes care of the py2->py3 transition,; > is available for all platforms on PyPI and conda.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2157#issuecomment-609399897>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGNKEZRXKSMNTC6HR2LRLBR3ZANCNFSM4L4LAHWQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609406193:35,avoid,avoid,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609406193,1,['avoid'],['avoid']
Safety,"OBAtomAtomIter. Iterator over the atoms of an OBAtom. On Thu, 14 Oct 2021, 22:20 Henrique Musseli Cezar, ***@***.***>; wrote:. > Hello, it definitely has been a while.; >; > I still find similar SWIG warnings on my Python codes.; > @baoilleach <https://github.com/baoilleach> mentioned on #1340; > <https://github.com/openbabel/openbabel/issues/1340> that the problem is; > that some methods should not be used directly.; >; > However, I'm struggling to find which methods I should use in some cases.; > For example, if I want to iterate over the atoms bonded to an OBAtom, what; > is the proper way of doing it in Python?; > Currently, I'm using something similar to:; >; > bondIterator = atom.BeginBonds(); > nbrAtom = atom.BeginNbrAtom(bondIterator); > connectedAtoms = []; > connectedAtoms.append(nbrAtom); > for i in range(2):; > nbrAtom = atom.NextNbrAtom(bondIterator); > connectedAtoms.append(nbrAtom); >; > However, I get:; >; > swig/python detected a memory leak of type 'OpenBabel::OBBondIterator *', no destructor found.; >; > How should I iterate over the bonded atoms in this case?; >; > Best,; > Henrique; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLTFRM5LVIJ6O5ERXTUG5CSZANCNFSM4BIEHN6Q>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/190#issuecomment-944033542:950,detect,detected,950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190#issuecomment-944033542,1,['detect'],['detected']
Safety,"OK, so that is not an option then. The only remaining viable option that I can see is to create a new manipulator class that contains all the functionality (in a consistent way) whilst leaving the current API unchanged. Access to the functionality already part of OBMol could be realized via wrapper methods in the new class. That way, the current API remains fully intact while avoiding an arbitrary separation of functionality. One might add a ""warning"" (possibly in comment-form) to the manipulation methods that are currently part of OBMol to tell the users not to use them anymore if it can be avoided. Obviously, whether or not to introduce such a warning is not for me to decide. Also, I did not mean that SetDihedralAngle should replace SetTorsion, but rather that it be provided as an alternative to SetTorsion as the latter is a bit awkward to use via the language bindings, IMHO. It could be provided within the new class if that route is taken.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716:379,avoid,avoiding,379,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716,2,['avoid'],"['avoided', 'avoiding']"
Safety,"Okay, I tried out something new. I noticed that the top part of CMakeLists.txt and formats.cmake are almost identical. To avoid having people re-write the formats that they add into both (and consequently avoid the problem of people forgetting to do so), I copied over the top portion of CMakeLists.txt to formats.cmake, and now static and dynamic builds both include formats.cmake. There were different instructions for shared vs static builds for only a few formats. For Inchi, I just wrapped the part that was in the shared build with a ""if(BUILD_SHARED)"" and the static part in the ""elseif(WITH_STATIC_INCHI)"" section. For LIBXML2, they were identical, so I just made sure that it runs when the proper conditions are set. For GenBankFormat, that one was only built statically (this is because it uses a function from the fasta format, and it can't build dynamically because it doesn't link to it). So I just wrapped it in ""if(NOT BUILD_SHARED)"". What do you think?. I tested this for both dynamic and shared builds, and I was able to convert formats just fine with the resulting obabel executables (I tried cml, inchi, and xyz for both).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270:122,avoid,avoid,122,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270,2,['avoid'],['avoid']
Safety,"On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387:269,redund,redundant,269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,1,['redund'],['redundant']
Safety,"One more comment -- discussion with friends suggested ~ 14 carbons at the max for aromatic detection. Any longer than that and it's not aromatic, even with the 4n+2 electron rule. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795771:91,detect,detection,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795771,1,['detect'],['detection']
Safety,"One more comment:; Can any of the suggested tools detect, the fragment is iont ?; I need to make the whole procedure automatic ...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606:50,detect,detect,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606,1,['detect'],['detect']
Safety,"One more idea with this. Instead of containing imolecule.min.js with openbabel itself, we could install from the internet when the function is first used. Basically:. ```; if not installed:; get from openbabel/imolecule; cp imolecule.min.js notebook_install_directory; ```. It avoids the mess of having to figure out where to put this file, and still enables local usage after at least one remote use. If this is a better idea, I can revert `pybel/__init__.py` to `pybel.py`, delete `imolecule.min.js`, and change the pybel logic to accommodate this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652:277,avoid,avoids,277,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652,1,['avoid'],['avoids']
Safety,"OpenBabel's format conversion options (cf. section 3.2) include `-p` for a protonation in function to a user-defined pH value. As such, the safer approach is to use the complete syntax, i.e. a pattern like `-p 1` (equivalent for pH = 1), `-p 7` (equivalent for pH = 7), etc. According to section 3.3 (examples) of the current documentation, the bare `-p` implicitly assumes a pH value of 7.4 ([online reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Cross-checking with the [NIH PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html), the does the SMILES string shown by you . `CN1C[C@@\H](Nc2nc3ccn(C)c3c(=O)n2C)C[C@@\H](c2ccccc2)C1`. yields an unusual structure representation of the stereogenic centres:. ![sketcher](https://user-images.githubusercontent.com/19709084/115306687-b7095180-a157-11eb-874f-89116c60f753.png). Check if the SMILES string. `CN4C[C@H](NC2=NC1=C([N](C=C1)C)C(=O)N2C)C[C@H](C3=CC=CC=C3)C4`. represents the correct diastereoisomer of your trarget structure:. ![sketcher_b](https://user-images.githubusercontent.com/19709084/115306969-17988e80-a158-11eb-92e8-86f922e3fbb0.png). (Perhaps a typo, but the recommended call of OpenBabel from the CLI is initiated by `obabel`; `openbabel.obabel` will not work.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-822807646:140,safe,safer,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-822807646,1,['safe'],['safer']
Safety,"Or if a specific format needs to handle uppercase, e.g. xyz, it should; handle it itself. IMO, this function should focus on converting atomic; symbols (Ca, not ca or CA), and avoid the particulars of parsing various; file formats. On Sat, 20 Mar 2021, 18:27 Geoff Hutchison, ***@***.***>; wrote:. > I think we should be a bit cautious considering PDB parsing and others; > sometimes have weird atom naming (e.g., CA != calcium).; >; > I suggested to @dlf57 <https://github.com/dlf57> that we target common,; > unambiguous cases (e.g., CL = Cl, BR = Br, etc.); >; > I'm open to debate about enabling all upper-case two-letter parsing. For; > example is CA *always* calcium?; >; > I suppose we can go for it and target the bug reports that come later.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2333#issuecomment-803439746>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMOFO3VSFNCZY6BMSTTETSJJANCNFSM4ZC3WLVQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803550378:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803550378,1,['avoid'],['avoid']
Safety,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:506,detect,detect,506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['detect'],['detect']
Safety,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:126,avoid,avoid,126,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,1,['avoid'],['avoid']
Safety,"Regarding the original question, we shouldn't be using random number generators in 3D coordinate generation (outside the distance geometry). There is no need for them, and they should be removed. In 3.0 I removed OBRandom from the public API so that this change could be made more easily, and to avoid future uses of random numbers. PRs accepted to fix this problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-633867031:296,avoid,avoid,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-633867031,1,['avoid'],['avoid']
Safety,"SMILES format does not include the information of 3D coordinates, so we must predict them. The coordinates should be different in the *end* of the coordinate generation, but they are unknown in the beginning. Random offset is used in this prediction and we had problems without random numbers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466927661:77,predict,predict,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466927661,2,['predict'],"['predict', 'prediction']"
Safety,"See my pull request for a proposal for this. The charge mapping file is passed as a suffix to the partial charge method name:. `babel --partialcharge fromfile:mapping.txt ...`. The alternative seemed to be to add a top-level GENOPTIONS flag, and I wanted to avoid polluting that namespace unnecessarily. Comments?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/157#issuecomment-97882210:258,avoid,avoid,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157#issuecomment-97882210,1,['avoid'],['avoid']
Safety,"Seriously, I'm not sure why anyone would want to do that. Why would you want to re-parse the same string repeatedly?. But what you're doing later is just bad code. You're parsing a molecule that Python probably treats as a temporary. Then you grab an atom reference. That's still probably a temporary. Then you put that into a list. Then *after* putting all those atom references in a list, you interrogate them? I'm not surprised it leads to weird behavior. Python (and the SWIG interface) can't determine whether the temporary can be free, so it probably frees some of them. Now you're asking for valence on some undefined C++ pointer. What exactly are you trying to do? Then we can probably come up with a safe way to do that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688:709,safe,safe,709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688,1,['safe'],['safe']
Safety,So I think this is safe to close @ghutchis but perhaps you can tell me (us) how to add this particular file for example to the unit tests? :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979:19,safe,safe,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979,1,['safe'],['safe']
Safety,"So all calls to OBConversion::RegisterOptionParam( .. ) are redundant?; Will it always DTRT based on what it finds onthe command line, irrespective; of what's been registered?. Matt. On 6 May 2015 at 21:29, baoilleach notifications@github.com wrote:. > That's exactly it. But what you don't realise is that there is no need to; > register options. If you just remove those lines everything will still; > work.; > ; > On 6 May 2015 at 18:08, M J Harvey notifications@github.com wrote:; > ; > > Certainly in the pointcloud and stl classes I only register those options; > > once, each with one parameter.; > > Are options registered into a single global set, rather than residing; > > within the scope of their format?; > > If so, then these warnings arise from some other format registering the; > > same letter option first, but with a differing # of parameters.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > <https://github.com/openbabel/openbabel/issues/170#issuecomment-99539688; > > .; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/170#issuecomment-99580928. ## . M J Harvey; CTO; Acellera Ltd.; London, Barcelona.; www.acellera.com | m.j.harvey@acellera.com; Follow us on: twitter http://www.twitter.com/acellera, linkedin; http://www.linkedin.com/company/acellera, youtube; http://youtube.com/acelleracom.; Skypename: acellera",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/170#issuecomment-99585381:60,redund,redundant,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/170#issuecomment-99585381,1,['redund'],['redundant']
Safety,"Sorry - I missed Problem 2 first time round... Problem 2 is not a bug, but rather an unsupported feature. Many group contribution methods don't assign values to all atoms so there's no reason to produce an error message. We could add a "";debug"" option, which would print out additional information which would be useful during development, e.g.; atom 1 matches SMARTS string CC[CX4] value 1.0; atom 2 has no match; etc. Regarding contributing to Open Babel, I should really write up a doc or do a video, describing the entire process on Windows (MSVC makes everything easy). Typically I run obabel in the debugger, and set a breakpoint at where I want to inspect, in this case groupcontrib.cpp in Predict. I found the location by searching the codebase for OBGroupContrib. Anyhoo, we're going off-topic for this bug report. I'll implement that ;debug thingy, if you agree... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801452:697,Predict,Predict,697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801452,1,['Predict'],['Predict']
Safety,"Sounds like you might be right.; On 14 Mar 2016 2:44 p.m., ""Marcus D. Hanwell"" notifications@github.com; wrote:. > I spent quite a bit of time debugging obabel on the Mac, and was seeing; > issues with an illegal instruction pretty early on as obabel started up.; > This was a pretty difficult one to debug as everything worked fine on the; > build machine, but I got a very generic error 14 on my laptop when trying; > to use the packaged obabel, in the end I found the answer through searching; > on Google and seeing a similar issue for Docker.; > ; > CMake and the upstream compilers don't enable this by default as the; > binaries can be quite specific for the GPU you are building on. In this; > case it was a pretty new Mac Pro, and trying to run them on an older; > Macbook Pro laptop. The comments seem incorrect too, as they have little to; > do with cross compiling and more to do with optimizations for the specific; > CPU on the build machine.; > ; > I think adding a section on optimization, and advising to turn this on; > there would be great (with a big warning about the binaries being quite CPU; > dependent at that stage) would be great, but please consider turning this; > off by default to avoid having others spend time debugging strange run time; > errors.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/279.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512:1212,avoid,avoid,1212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512,1,['avoid'],['avoid']
Safety,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:228,detect,detected,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,1,['detect'],['detected']
Safety,"Sure, I will post a salt CIF file demonstrating the problem.; Give me 2 days, I am out of office ...,; Generaly the issue is not CIF specific, the Kekulization will probably not work for any aromatic cycle with 1+ charge and protonated aromatic nitrogen.; We need OpenBabel primary as a tool for force field atom type assigment. We are crystallographers = we already implemented our CIF parser + space group handling engine on our side, so we can send to OB any format and molecules already fully completed by symetry operations + with special positions handled on our side. Vincent Favre-Nicolin who hed implemented OB CIF parser was working with me in the past ...; We only need correct handling of charged fragments in OB and posibility to export force field atom types detected (or enough output information so we can assign force fields atom types on our side).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676:773,detect,detected,773,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676,1,['detect'],['detected']
Safety,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:235,avoid,avoid,235,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,1,['avoid'],['avoid']
Safety,"Thank you for your comment. I thought two molecular graphs are isomorphic only when all corresponding atoms are the same, so they are not tie (either of two is not isomorphic). After some googling, I found out that [molecular graphs](https://en.wikipedia.org/wiki/Molecular_graph) are classified as a labeled graph and there are two definitions for [isomorphism of labeled graphs](https://en.wikipedia.org/wiki/Graph_isomorphism#Isomorphism_of_labeled_graphs). I assumed the first definition (both edge-preserving and label-preserving) is used, but it seems to be the second definition (only edge-preserving) is adopted in the current implementation. Maybe we should update documentation to avoid future misunderstanding.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467109989:691,avoid,avoid,691,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467109989,1,['avoid'],['avoid']
Safety,"Thank you for your reply @ghutchis! I have now been able to reproduce this on three different machines, in two cases there were no previous conda installations. This is the output from `otool -L`:; ```; $ otool -L /anaconda/lib/python3.6/site-packages/_openbabel.so; /anaconda/lib/python3.6/site-packages/_openbabel.so:; 	@rpath/libpython3.6m.dylib (compatibility version 3.6.0, current version 3.6.0); 	@rpath/libopenbabel.5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	@rpath/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 104.1.0); ```; I have tried explicitly replacing the paths with absolute ones to the libraries provided by conda (with `install_name_tool`), but I'm getting the same error.; ```; $ which python3; /anaconda/bin/python3; $ python3 --version; Python 3.6.3 :: Anaconda custom (64-bit); $ python3 -c ""import openbabel""; Fatal Python error: PyThreadState_Get: no current thread. zsh: abort python3 -c ""import openbabel""; ```; I don't think my `PYTHONPATH` has any problematic content:; ```; echo $PYTHONPATH; /Users/thomas/opt/openmm-plumed/lib:/Users/thomas/opt/psi4/lib:; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1711#issuecomment-351124248:1099,abort,abort,1099,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1711#issuecomment-351124248,1,['abort'],['abort']
Safety,"Thanks @bbucior. It looks like the code is working as intended. Lazily-evaluated properties (e.g. aromaticity or partial charges) need to be marked as perceived if you want to avoid the lazy evaluation. The ""normal"" situation is that you call GetPartialCharge() on an atom, and if not marked as perceived it triggers the evaluation across the whole molecule, assigns the values via SetPartialCharge() and then marks the property as perceived. If you set values ""manually"", then you also need to mark the molecule as having partial charges already perceived. I'm marking as closed, but feel free to reopen.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1817#issuecomment-383929995:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1817#issuecomment-383929995,1,['avoid'],['avoid']
Safety,"Thanks for helping. The cmake command I used was ""cmake -DPYTHON_BINDINGS=ON -DEIGEN3_INCLUDE_DIR=../eigen3 ../ob-src 2>&1 | tee cmake.out"". This is using openbabel src v 2.3.2 and eigen 3.1.3. The output I get is as follows:. -- The C compiler identification is GNU 4.2.1; -- The CXX compiler identification is Clang 4.2.0; -- Checking whether C compiler has -isysroot; -- Checking whether C compiler has -isysroot - yes; -- Checking whether C compiler supports OSX deployment target flag; -- Checking whether C compiler supports OSX deployment target flag - yes; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:671,Detect,Detecting,671,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,4,['Detect'],['Detecting']
Safety,"Thanks for the reminder - sorry for the very slow review. It looks okay. My last concern is that with the current implementation, there's nothing guaranteeing that a molecule will have a full set of partial charges. I think I'd prefer that the OBPartialCharge class only accept charges as a full vector<double> and checks to make sure it's equal to the number of atoms before storing. The reader should then push_back() into a temporary vector in the gauss format.cpp code. This way, if there's somehow a corrupted file (e.g., it got killed by the queuing software before the job finished) the partial charges are still safe - it won't store a set of ESP charges that are only half the molecule. I realize that's an unlikely case, but I'm trying to think from the library API perspective - you can access a set of vector<double> but set the charges one-by-one. That's asymmetric.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358:620,safe,safe,620,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358,1,['safe'],['safe']
Safety,"Thanks for your interest! This isn't so much of an issue - we have an e-mail list. A successful project would propose a set of filters / transformations similar (or identical to) the MolVS project for RDKit. I'll post a few links / article that can help you get started (e.g., what is standardization):; * https://depth-first.com/articles/2020/07/27/a-guide-to-molecular-standardization/; * MolVS is an example for RDKit - https://molvs.readthedocs.io/en/latest/guide/intro.html; * PubChem standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-018-0293-8; * ChemSpider standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-015-0072-8. The RDKit code is here:; * https://github.com/rdkit/rdkit/pull/2002; * https://github.com/rdkit/rdkit/blob/master/rdkit/Chem/MolStandardize/standardize.py; * https://github.com/rdkit/UGM_2018/blob/master/Presentations/Leung_GSoC_RDKit-MolVS_Integration.pdf. There are a few more recent articles on tautomers (including use of QM calculations to generate micro-pKa predictions):; * https://pubs.acs.org/doi/10.1021/acs.jcim.0c00232; * https://pubs.acs.org/doi/10.1021/acs.jcim.6b00338; * (InChI v2) https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b01080; * https://cactus.nci.nih.gov/tautomerizer/. As a first step, I'd suggest looking at the code in `src/ops` and submit a pull request for an OBOp that provides warnings for some simple things (e.g., carbon atoms beyond 4 bonds, total formal charge on a molecule isn't neutral, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217:1045,predict,predictions,1045,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217,1,['predict'],['predictions']
Safety,"Thanks so much for the heads-up. I know think we use that function, thus the bug. This is patched in SVN trunk (r3661) for 2.3.0 release, and I renamed the parameter to avoid the bug. Thanks again,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/978#issuecomment-281796551:169,avoid,avoid,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/978#issuecomment-281796551,1,['avoid'],['avoid']
Safety,"Thanks, @ghutchis !. I am looking to use openbabel to manipulate the torsion angles as part of a conformer optimization program. . My original thought was to manipulate the internal coordinates directly but, after looking at `OBMol.SetTorsion`, the routes you suggest would probably work better. It both provides a Python-friendly interface and avoids other issues around dealing with the internal coordinates directly (e.g., making sure to rotate neighboring atoms correctly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056:345,avoid,avoids,345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056,1,['avoid'],['avoids']
Safety,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:322,avoid,avoid,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,1,['avoid'],['avoid']
Safety,That's concerning since that is the correct way to import openbabel in openbabel3 (even though it seems redundant). I would be worried you might have multiple versions of openbabel in your path and aren't importing the right one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153:104,redund,redundant,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153,1,['redund'],['redundant']
Safety,"The OpenSMILES spec at http://opensmiles.org/opensmiles.html#hydrogens says ""Question: are more than 9 hydrogens possible? Should they be supported?"". If we take Weininger (1988) as definitive, then he also wrote ""The rule used in the SMILES system is to eliminate all hydrogen atoms except in the following three cases: (1) hydrogens connected to other hydrogens; (2) hydrogens connected to zero or more than one other atom; and (3) in isomeric SMILES, isotopic hydrogen specifications"". [ZnH9][H] fall under none of these three exceptions. I think the most reasonable interpretation is that Weininger didn't think [*H10] would occur, rather than be definitive about avoiding more than one digit. FWIW, the spec and online documentation also say that there's at most one digit of charge, but [some years back](https://sourceforge.net/p/blueobelisk/mailman/message/29130183/) I pointed out the Daylight toolkit accepted even [C+65535] (which it interpreted as [C-]) - that is, just like the CEX example Noel pointed to, Daylight's code accepted a broader range of chemistry than Weininger (1988) or the online documentation. If H10 is chemically possible then I think a wider hcount range should be supported. Which is why I contributed that question to the OpenSMILES spec. ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2344#issuecomment-808473447:668,avoid,avoiding,668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2344#issuecomment-808473447,1,['avoid'],['avoiding']
Safety,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1650,avoid,avoid,1650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,1,['avoid'],['avoid']
Safety,"The idea was just to avoid crash in #1851. Now if the patch is wrong since it causes regression, feel free to revert.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454439569:21,avoid,avoid,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454439569,1,['avoid'],['avoid']
Safety,"The incomplete reading problem reported by Noel was that ALL_READS_BINARY had not been set by CMake build. (It is now done in the code.) Without it, seekg() gave incorrect results with UNIX file endings under MSVC. In revision 3556 in the trunk code the binary read and write of header variables in fs files are done separately, to avoid the possibility that a struct is laid out differently on other platforms. Maybe this will cure the problem on Linux 64 bit systems? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339:332,avoid,avoid,332,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339,1,['avoid'],['avoid']
Safety,"The issue seems to be an invalid fragment in the `data/rigid-fragments.txt` file. The structure in this bug report contains the fragment `OC1COCC1`. The fragment coordinates for this are all zero:; ```; OC1COCC1; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; ```; When the OBBuilder class tries to connect such fragments the coordinates become NaN. This happens because the code tries to find a directional vector for the bond connecting this fragment to other parts. In this process the vector (0, 0, 0) is normalized which results in (NaN, NaN, NaN). Updating the `data/rigid-fragments.txt` file should fix this. In total, there are 12 fragments such fragments in the file:; ```; CC1=CC2=N3C1=Cc1cc(c4n1*13N3=C(C=c5n1c(=C2)cc5C)C(=CC3=C4)C)C; CC1=CC2=Cc3n4*56N2=C1C=c1cc(c(=CC2=N6C(=Cc4cc3C)C=C2C)n51)C; C1=CC2=N3C1=Cc1ccc4n1*13N3=C(C=CC3=C4)C=c3n1c(=C2)cc3; C=C1CCCC2(C1CCC2)C; OC1CC(=CC(C1)(C)C)C; OC1C(O)COCC1O; O=C1NC2C(N1)CSC2; OC1COCC1O; O=C1ccC(=O)N1; OC1COCC1; C1=CC=C[NH2]=C1; [O-]*(=O)(=O)[O-]; ```. Detecting this in `OBBuilder::LoadFragments()` and throwing an error would also make it easier to debug this in the future. Agree?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646:1092,Detect,Detecting,1092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646,1,['Detect'],['Detecting']
Safety,"The point group is different from the graph symmetry, but yes there is a brute-force point group detection code. In C++. ```; OBMol mol;; OBPointGroup pg;. pg.Setup(&mol);; std::cout << ""Point Group: "" << pg.IdentifyPointGroup() << std::endl;; pg.Symmetrize(&mol);; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403:97,detect,detection,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403,1,['detect'],['detection']
Safety,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:226,avoid,avoid,226,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,1,['avoid'],['avoid']
Safety,"The problem is that you specified the output file as geom.xyz, by accident. The input is stdin...that's why babel appears to hang. This used to happen to me too. That's why babel is deprecated in favour of obabel, where we require the output file to be specified with -O to avoid this problem. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800758:274,avoid,avoid,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800758,1,['avoid'],['avoid']
Safety,"The problem isn't in LSSR necessarily, but the Kekule assignment code. This is now fixed in trunk with a timeout and a new analysis path. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025#issuecomment-281797359:105,timeout,timeout,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025#issuecomment-281797359,1,['timeout'],['timeout']
Safety,"The removal of the aromaticity is fixed (or at least with #1576).; ```; >>> mol = pybel.readstring(""smi"", ""Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1 2185720""); >>> print mol.write(""smi""); Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1; ```. I think you're right that the ring attached to the triazole ring shoud not be detected as aromatic. I should file this as a separate bug...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305280439:336,detect,detected,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305280439,1,['detect'],['detected']
Safety,"The silence is getting to me. Why not put everything through unchanged, except for the enum? Readability the same, but avoids the need for casting between enums and unsigned ints.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-363903792:119,avoid,avoids,119,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-363903792,1,['avoid'],['avoids']
Safety,The syntax of `obabel` is different from the old `babel` command. Try:. `obabel file.pdb -O a.pdb -d # obabel can detect file types by their extension`. The -O flag indicates the output filename.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2192#issuecomment-623510281:114,detect,detect,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192#issuecomment-623510281,1,['detect'],['detect']
Safety,The test failure is supposed to be caused by the difference between SMILES generate from the predicted molecule (https://github.com/openbabel/openbabel/blob/18b5248b4aca14a5c9f224df08520cc4819dbcbf/src/distgeom.cpp#L918) and SMILES generated from SDF made by obabel. I'm not sure why such a difference exists.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242:93,predict,predicted,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242,1,['predict'],['predicted']
Safety,"There are a bunch of these reports, but the backtrace is very helpful because I can't reproduce this. Can you use --fastest with the --gen3d option? This will avoid the minimization and conformer search. I want to see where the NaN pops up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-602209945:159,avoid,avoid,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-602209945,1,['avoid'],['avoid']
Safety,"There's a cascade at the moment with SDF (in particular) - it currently calls SSSR for aromaticity. Anyone who wants to take up the task of aromaticity detection from a breadth-first-search after simple ring detection is welcome. I just haven't had the time. Mol2 has fewer cascaded calls, since aromaticity is defined in the bonds (usually). One of the Google Summer of Code proposed projects is to replace Kekulize with a faster graph-based algorithm.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469:152,detect,detection,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469,2,['detect'],['detection']
Safety,"This should be possible and I will have a look at this. A quick look at the code shows that both the algorithm (use orbits of the permutation group) and performance can be improved (e.g. using a small vector optimization for inner loops, avoid dynamic allocated memory in general).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120:238,avoid,avoid,238,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120,1,['avoid'],['avoid']
Safety,"This trivial patch (against OpenBabel 2.3.2 source) will prevent the segmentation fault, and produce what was probably the intended error message all along. It ought to be applicable to later versions and the Debian Jessie version, although the specific line number may differ. Prior to processing the .xml documents retrieved from PubChem (provided they all exist in a dedicated folder), executing this step,; ~~~; mv *.xml *.pc; ~~~; should make everything work fine. It would, of course, be of greater convenience were the .xml document opened (from which any number of heuristics could detect it is of the PubChem schema) and the format determined automatically. There appears an attempt to do something like this in the code, based on Namespace URI, although at the point **obprop** calls ReadMolecule(), the OutFormat is always NULL. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289#issuecomment-281804016:590,detect,detect,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289#issuecomment-281804016,1,['detect'],['detect']
Safety,"This was a ""feature"" when it was deliberately introduced about six years ago. I'm not sure that it is so dangerous that it needs over-hasty reaction just before a release. To have input and output files the same:; - on the command line, you have deliberately typed the same file name twice.; - on the GUI you have been warned when you entered the output file name.; - in a program or a script, and the names are not explicit, maybe the program should be more carefully constructed to avoid unwanted overwriting. There are legitimate uses for having the input and output files the same. Suppose you wanted to add a new molecule from a mol file to an existing cml file. obabel thecmlfile.cml extra.mol -O thecmlfile.cml. does this very nicely, without the tedious file deletion and renaming that would be necessary if you couldn't have the output and input the same. Editors of all kinds routinely read and write to the same file. OB is an editor sometimes: make the hydrogens explicit:. obabel file.mol -O file.mol -h. The command-line is not set up for interactivity; it has be an acceptance or a prohibition. I would favour acceptance. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797492:484,avoid,avoid,484,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797492,1,['avoid'],['avoid']
Safety,This would be nice to fix before 2.3.0 and seems like a non-risky proposition. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797491:60,risk,risky,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797491,1,['risk'],['risky']
Safety,"To be honest, I don't like this. It's what I call automagic. It means that the software is making decisions over which the user has no control and which will only occur in particular circumstances. Either we should always add it, or never add it. This may fix the immediate problem, but I predict that at some point someone is going to regard this behaviour as a bug.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1828#issuecomment-384586603:289,predict,predict,289,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1828#issuecomment-384586603,1,['predict'],['predict']
Safety,"To follow up a little - from what I understand, in both cases (using `-h` and using `-p`) eventually `AddNewHydrogens(HydrogenType whichHydrogen, bool correctForPH, double pH)` [defined in mol.cpp](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/src/mol.cpp#L2116) is called. While with `-h` the option `correctForPH` is set to false, with `-p` it is set to true, triggering the call of `CorrectForPH(pH)`. I assume this is where the residue names and numbers then get messed up. As mentioned, my actual use case is within a Python tool ([PLIP](https://github.com/pharmai/plip)), so I am looking for a solution that does not require additional programs, as I would like to avoid adding further dependencies.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618:710,avoid,avoid,710,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618,1,['avoid'],['avoid']
Safety,"UIFrame::OnConvert(wxCommandEvent&) + 2214; 8 libwx_baseu-3.0.dylib 	0x00000001038d520f wxEvtHandler::ProcessEventIfMatchesId(wxEventTableEntryBase const&, wxEvtHandler*, wxEvent&) + 93; 9 libwx_baseu-3.0.dylib 	0x00000001038d511a wxEventHashTable::HandleEvent(wxEvent&, wxEvtHandler*) + 124; 10 libwx_baseu-3.0.dylib 	0x00000001038d6459 wxEvtHandler::TryHereOnly(wxEvent&) + 73; 11 libwx_baseu-3.0.dylib 	0x00000001038d637c wxEvtHandler::ProcessEventLocally(wxEvent&) + 40; 12 libwx_baseu-3.0.dylib 	0x00000001038d630f wxEvtHandler::ProcessEvent(wxEvent&) + 185; 13 libwx_osx_cocoau_core-3.0.dylib	0x0000000103ba92b4 wxWindowBase::TryAfter(wxEvent&) + 112; 14 libwx_baseu-3.0.dylib 	0x00000001038d634a wxEvtHandler::ProcessEvent(wxEvent&) + 244; 15 libwx_osx_cocoau_core-3.0.dylib	0x0000000103ba92b4 wxWindowBase::TryAfter(wxEvent&) + 112; 16 libwx_baseu-3.0.dylib 	0x00000001038d634a wxEvtHandler::ProcessEvent(wxEvent&) + 244; 17 libwx_baseu-3.0.dylib 	0x00000001038d6553 wxEvtHandler::SafelyProcessEvent(wxEvent&) + 15; 18 libwx_osx_cocoau_core-3.0.dylib	0x0000000103a36dd6 wxButton::OSXHandleClicked(double) + 62; 19 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 20 com.apple.AppKit 	0x00007fffaa567770 -[NSApplication(NSResponder) sendAction:to:from:] + 456; 21 com.apple.AppKit 	0x00007fffaa0500d8 -[NSControl sendAction:to:] + 86; 22 com.apple.AppKit 	0x00007fffaa050000 __26-[NSCell _sendActionFrom:]_block_invoke + 136; 23 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 24 com.apple.AppKit 	0x00007fffaa04ff58 -[NSCell _sendActionFrom:] + 128; 25 com.apple.AppKit 	0x00007fffaa0928d9 -[NSButtonCell _sendActionFrom:] + 98; 26 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 27 com.apple.AppKit 	0x00007fffaa04e83c -[NSCell trackMouse:inRect:ofView:untilMouseUp:] + 2481; 28 com.apple.AppKit 	0x00007fffaa092616 -[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] + 798; 29 com.apple.AppKit 	0x00007fffaa04d1f7 -[NSCont",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:3024,Safe,SafelyProcessEvent,3024,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,1,['Safe'],['SafelyProcessEvent']
Safety,"Ultimately I think the solution is to rewrite that format to avoid this dependency. But in the meanwhile, looks like a reasonable fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853:61,avoid,avoid,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853,1,['avoid'],['avoid']
Safety,"Unassigning, as this was assigned to me in error. (Assignment is done by developers when they start working on a problem to avoid duplication of effort.). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800247:124,avoid,avoid,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800247,1,['avoid'],['avoid']
Safety,"Use obabel instead of babel, which is deprecated. The handling of option parameters is much better and many of the current formats and ops rely on this. (It is also safer and has SMILES input built in.) Your example would be:; ./bin/obabel -:CC -O test.png -xp 300. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522:165,safe,safer,165,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522,1,['safe'],['safer']
Safety,"Using ""sudo"" for anything except the installation step is a mistake. It can lead to all sorts of problems that I am not going to debug. If you start over, avoid sudo, and send us the command-line, the CMakeCache.txt and output of make, we can take it from there. I note in passing that the CMakeCache.txt that you appended does not correspond to the command-line above (e.g. different PATHs).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868#issuecomment-406587069:155,avoid,avoid,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868#issuecomment-406587069,1,['avoid'],['avoid']
Safety,"We should remove this format, as it duplicates smi and I did not update it; in the implicit H rewrite. On Sat, 14 Apr 2018, 12:16 Julien Nabet, <notifications@github.com> wrote:. > With master sources updated today, I could retrieve a bt:; > Error: attempt to subscript container with out-of-bounds index 2147483647,; > but container only holds 24 elements.; >; > Objects involved in the operation:; > sequence ""this"" @ 0x0x7fffffffc910 {; > type = std::__debug::vector<int, std::allocator >;; > }; >; > Program received signal SIGABRT, Aborted.; > __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > 51 ../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; > (gdb) bt; > #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > #1 <https://github.com/openbabel/openbabel/pull/1> 0x00007ffff7a54231 in; > __GI_abort () at abort.c:79; > #2 <https://github.com/openbabel/openbabel/pull/2> 0x00007ffff667e4d5 in; > ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; > #3 <https://github.com/openbabel/openbabel/pull/3> 0x00007ffff730d5d9 in; > std::__debug::vector<int, std::allocator >::operator[]; > (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; > #4 <https://github.com/openbabel/openbabel/pull/4> 0x00007fffe8282bbd in; > OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0,; > chirality=Smiley::AntiClockwise,; > chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at; > /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; > #5 <https://github.com/openbabel/openbabel/pull/5> 0x00007fffe8286e39 in; > Smiley::ParserOpenBabel::OpenBabelCallback::processStereochemistry; > (this=0x7fffffffc7b0); > at /home/julien/projects/openbabel/src/formats/smiley.h:2656; > #6 <https://github.com/openbabel/openbabel/pull/6> 0x00007fffe828475f in; > Smiley::ParserOpenBabel::OpenBabelCallback::parse (this=0x7fffffffc7b0,; > str=""[C@H]1(C@@HO)O\tInositol_trisphosphate"") at;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184:537,Abort,Aborted,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184,2,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,"We won't be changing our own Add/RemoveHydrogens to do this. The functionality you describe is outside the scope of Add/RemoveHydrogens() in a general purpose cheminformatics library. However, the required functionality can easily be implemented client-side by providing wrappers around the required functionality, e.g. NMRDATA::Add/RemoveHydrogens(OBMol*) which would call the relevant OBMol function and then have some extra code to update the sdf field. I should point out that this problem could have been entirely avoided by using a tag that didn't depend on atom order, but rather was based on intrinsic properties of the SDF file format, for example, involving atom labels rather than atom orders. These are invariant to operations on the molecule such as adding/removing hydrogens or rearranging the atoms in any other way.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1935#issuecomment-467479007:519,avoid,avoided,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1935#issuecomment-467479007,1,['avoid'],['avoided']
Safety,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:820,avoid,avoiding,820,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,5,['avoid'],"['avoid', 'avoided', 'avoiding']"
Safety,"Well the list of messages gets larger now that i started from scratch, but still it comes to the same conclusion. cmake -DCMAKE_INSTALL_PREFIX=/home/henritzi/build ~/src/openbabel; -- The C compiler identification is GNU; -- The CXX compiler identification is GNU; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:371,Detect,Detecting,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Detect'],['Detecting']
Safety,"Well, I don't think spglib has the transforms. I don't know completely how it works, but I know it detects symmetry in the crystal and then assigns a space group based off the symmetry. The transforms are usually used for generating a crystal with symmetry (like filling a unit cell). I was using Bilbao to find the transforms. For example, for space group 210, here is one: http://www.cryst.ehu.es/cgi-bin/cryst/programs/nph-getgen?what=text&gnum=210. However, it is somewhat tricky to do. Bilbao only has the space groups organized as the 230 fundamental space group numbers. In Open Babel and spglib, though, we have the space groups organized as 530 hall numbers (several of which are just a different representation of the same space group, which is why there are extra). In some cases, there is only one Hall number that matches an international number, so that is easy to pair. other cases may not be, though. For the tests I did, I was filling a unit cell with Avogadro using the Open Babel transforms, and then I was just detecting the space group with spglib to make sure the right space group was being detected. Anyways, I think it'd be better if we found somewhere else to get the transforms from so it'd be less complicated. I just don't know where yet...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983:99,detect,detects,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983,3,['detect'],"['detected', 'detecting', 'detects']"
Safety,"Well, the PR is in a state where it feels quite safe. I would prefer to rebase it in another branch and clean up the fixup commits. I added a -xS option to output to ball&stick, and the aromatic rendering. Please feel free to comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202#issuecomment-124861251:48,safe,safe,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202#issuecomment-124861251,1,['safe'],['safe']
Safety,"When bond-type 4 is detected, it is changed to 5 for internal storage (see formats/mdlformat.cpp:500). I believe bond-type 5 is a sort of internal ""this might be aromatic"" flag. After parsing, kekulize.cpp changes these to single/double. My guess is that some ""implicit-H-perceived"" flag isn't getting set if the bond-type == 5 during kekulization. It seems right that BOSum() + GetImplicitHydrogenCount() would be constant under normal valence situations ... but ""constant"" is tricky with S, P, N and so forth, e.g. with double-bonded oxygens. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1300#issuecomment-281804205:20,detect,detected,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1300#issuecomment-281804205,1,['detect'],['detected']
Safety,"With master sources updated today, I could retrieve a bt:; Error: attempt to subscript container with out-of-bounds index 2147483647, ; but container only holds 24 elements. Objects involved in the operation:; sequence ""this"" @ 0x0x7fffffffc910 {; type = std::__debug::vector<int, std::allocator<int> >;; }. Program received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7a54231 in __GI_abort () at abort.c:79; #2 0x00007ffff667e4d5 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #3 0x00007ffff730d5d9 in std::__debug::vector<int, std::allocator<int> >::operator[] (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; #4 0x00007fffe8282bbd in OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0, chirality=Smiley::AntiClockwise, ; chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; #5 0x00007fffe8286e39 in Smiley::Parser<OpenBabel::OpenBabelCallback>::processStereochemistry (this=0x7fffffffc7b0); at /home/julien/projects/openbabel/src/formats/smiley.h:2656; #6 0x00007fffe828475f in Smiley::Parser<OpenBabel::OpenBabelCallback>::parse (this=0x7fffffffc7b0, ; str=""[C@H]1([C@@H]([C@H]([C@@H]([C@H]([C@@H]1OP(=O)(O)O)O)OP(=O)(O)O)OP(=O)(O)O)O)O\tInositol_trisphosphate"") at /home/julien/projects/openbabel/src/formats/smiley.h:2717; #7 0x00007fffe827fb4b in OpenBabel::SmileyFormat::ReadMolecule (this=0x7fffe84b6af0 <OpenBabel::theSmileyFormat>, pOb=0x55555579f1f0, pConv=0x7fffffffe470); at /home/julien/projects/openbabel/src/formats/smileyformat.cpp:364; #8 0x00007ffff757896b in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffe470, pFormat=0x7fffe84b6af0 <OpenBabel::theSmileyFormat>); at /home/julien/projects/openb",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381322015:341,Abort,Aborted,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381322015,2,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:1828,ABORT,ABORTING,1828,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,1,['ABORT'],['ABORTING']
Safety,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:971,safe,safeguard,971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,1,['safe'],['safeguard']
Safety,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:631,detect,detected,631,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['detect'],['detected']
Safety,"Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362:35,detect,detect,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362,1,['detect'],['detect']
Safety,"You need to keep a reference to the molecule if you are accessing its; atoms. Otherwise the atom is destroyed when the molecule goes out of scope. On 19 Jul 2017 2:50 a.m., ""Geoff Hutchison"" <notifications@github.com>; wrote:. > Seriously, I'm not sure why anyone would want to do that. Why would you; > want to re-parse the same string repeatedly?; >; > But what you're doing later is just bad code. You're parsing a molecule; > that Python probably treats as a temporary. Then you grab an atom; > reference. That's still probably a temporary. Then you put that into a list.; >; > Then *after* putting all those atom references in a list, you interrogate; > them? I'm not surprised it leads to weird behavior. Python (and the SWIG; > interface) can't determine whether the temporary can be free, so it; > probably frees some of them. Now you're asking for valence on some; > undefined C++ pointer.; >; > What exactly are you trying to do? Then we can probably come up with a; > safe way to do that.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGelHVyH_Q3jXPmhX3bRQYeEp2NDWks5sPWDQgaJpZM4OXSC1>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990:979,safe,safe,979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990,1,['safe'],['safe']
Safety,"Your are right! A user can handle the functionality by himself, that's what I did in my own code to fix the bug. From another side, I think that convenience is important part of any libraries API. Users used to have such functionality: dictionaries in python, boost property tree etc. all of them have get(<default>) methods in API. I hope, that the solution I've proposed can be safe and convenient solution for users of your package (feedback is very welcome).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709:380,safe,safe,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709,1,['safe'],['safe']
Safety,"You’re welcome to make whatever changes you think are necessary, as long as all the tests get included eventually using the standard install procedure. IMO, it’s really really really important to have a suite of tests that _don’t_ fail to avoid unknown regressions. This is a sampling of pdb ligands, which is highly representative of what many people use openbabel for. I’m curious how you are getting such poor times. I just did a clean checkout and the times seem quite reasonable (<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:239,avoid,avoid,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['avoid'],['avoid']
Safety,d:00 30968915 /path/to/local/lib/openbabel/2.2.99/pcmodelformat.so. 2b0db9b06000-2b0db9b07000 rw-p 00006000 fd:00 30968915 /path/to/local/lib/openbabel/2.2.99/pcmodelformat.so. 2b0db9b07000-2b0db9b18000 r-xp 00000000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9b18000-2b0db9d18000 ---p 00011000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9d18000-2b0db9d19000 rw-p 00011000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9d19000-2b0db9d1f000 r-xp 00000000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9d1f000-2b0db9f1e000 ---p 00006000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9f1e000-2b0db9f1f000 rw-p 00005000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9f1f000-2b0db9f2b000 r-xp 00000000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0db9f2b000-2b0dba12b000 ---p 0000c000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0dba12b000-2b0dba12c000 rw-p 0000c000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0dba12c000-2b0dba131000 r-xp 00000000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba131000-2b0dba331000 ---p 00005000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba331000-2b0dba332000 rw-p 00005000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba332000-2b0dba337000 r-xp 00000000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 2b0dba337000-2b0dba537000 ---p 00005000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 2b0dba537000-2b0dba538000 rw-p 00005000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 7ffffc6a4000-7ffffc6c5000 rw-p 7ffffc6a4000 00:00 0 [stack]. ffffffffff600000-fffffff; Aborted. --------------------------------. $ more out.smi ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1. Original comment by: makio323,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:33621,Abort,Aborted,33621,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['Abort'],['Aborted']
Safety,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1455,detect,detection,1455,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,1,['detect'],['detection']
Safety,"ertain atoms are aromatic or not. The -s option can now accept atoms like [#7], meaning aromatic or non-aromatic N. This is used as a SMARTS string in the second stage; for the fastsearch matching these atoms are converted to the non-aromatic form . Also needed is a new fingerprint. I have made a fingerprint FP1 which is the same as FP2 except that aromatic and single bonds are treated as the same. When this is used to make an fs index, example-1 and example-2 can match all the data sets (1 and 6 molecule) ,as ruchemist expects, if the -s string is carefully constructed: [#6]c1nc([#7])[n]c1[#6] , rather than the original Cc1nc(N)[nH]c1C for example-2. Note that it is necessary to remove the H from the [nH] group if side chains to the n are expected to be found. We are lucky that the SMILES conversion still works. The downside of using FP1 is that it is has much poorer discrimination. In a dataset of 120K molecules, querying using Cc1nc(N)[n]c1C on an index made with the default FP2 fingerprint gave 7 candidates from the first stage, and 2 results. Using the FP1 fingerprint and the same query string gave 3537 candidates and the same 2 results. However, using the query [#6]c1nc([#7])[n]c1[#6] there were 263 results, mostly with aromatic rings fused to the query ring. . It seems that if you want to use fastsearch to recover these fused ring compounds from a query which has a single ring, then you have to accept the poor discrimination. I tried the substructure query Cc1nc(N)[nH]c1C on eMolecules and it recovered only molecules which had an unsubstituted [nH] group and where the C,N and C side chains were non-aromatic. So it seems to be behaving similarly to OpenBabel's original method. I will commit the changes in the next few days when I have sorted out some other issues around fastsearch. Any suggestions as to how to do better?. Chris. Apologies Vladimir, for some reason emails to your SourceForge account address did not get through. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795557:1477,recover,recover,1477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795557,2,['recover'],"['recover', 'recovered']"
Safety,"r<int> element;; vector<float> charge;; vector<int> resid;; vector<char> chain;; vector<float> x;; vector<float> y;; vector<float> z;; };. // Convert custom molecule to OBMol; void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); {; mol.Clear();. // map of residues; map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<sel.element.size();++i){. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(sel.element[i]);; oba->SetPartialCharge(sel.charge[i]);; oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);. // Create new residue if needed; if(reslist.count(sel.resid[i])==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(sel.resid[i]);; obr->SetChain(sel.chain[i]);; reslist[sel.resid[i]] = obr;; }. reslist[sel.resid[i]]->AddAtom(oba);; reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; // CreateOBMol; to_obmol(mymol,sample2);. // Work with babel molecule; OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapp",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:1247,avoid,avoid,1247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,1,['avoid'],['avoid']
Safety,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1608,safe,safer,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,1,['safe'],['safer']
Safety,thread-safe smarts matching patch. Original comment by: @dkoes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524#issuecomment-281811218:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524#issuecomment-281811218,1,['safe'],['safe']
Safety,"to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1757,safe,safety,1757,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['safe'],['safety']
Security, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4934,Audit,Audit,4934,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,8,"['Audit', 'audit']","['Audit', 'audit']"
Security," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10412,password,password,10412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['password'],['password']
Security, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1573,Audit,Audit,1573,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,['Audit'],['Audit']
Security, Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-upda,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2844,secur,security,2844,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security, Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2558,Audit,Audit,2558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security, http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [11,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2385,secur,security,2385,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security," in a SMILES string, so far, my assumption was that somewhere an `@`, or `/`, or `\`, was lost, or was used too often. Perhaps the cause is between the keyboard and chair. Here, the request to report (obabel's) canonical SMILES string. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan ; C[C@@H]1CN(C[C@H]1CNCc1nnc(n1C1CC1)C)C(=O)[C@]12CCCC[C@H]2C1	; 1 molecule converted; ```. doesn't help; advancing a step further. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan | obabel -ismi --gen3d -osdf; 1 molecule converted; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1106,access,access,1106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['access'],['access']
Security,"*A single* lone pair is assigned the absolute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:965,Validat,ValidationSuite,965,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Validat'],['ValidationSuite']
Security,.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3902,secur,security,3902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2327,secur,security,2327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/uni,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2114,secur,security,2114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2294,secur,security,2294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3067,secur,security,3067,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building depe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4000,secur,security,4000,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,6 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu foca,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2970,secur,security,2970,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:863,Audit,Audit,863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Audit'],['Audit']
Security,:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3869,secur,security,3869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3268,Audit,Audit,3268,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,:FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3170,Audit,Audit,3170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3660,Audit,Audit,3660,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in Ge,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4150,Audit,Audit,4150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4248,Audit,Audit,4248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4346,Audit,Audit,4346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Aud,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4444,Audit,Audit,4444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ===========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4542,Audit,Audit,4542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ===========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4640,Audit,Audit,4640,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian co,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4738,Audit,Audit,4738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging message,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4836,Audit,Audit,4836,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4190,secur,security,4190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2876,Audit,Audit,2876,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2974,Audit,Audit,2974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"> ; These are exact paths I get through `sys.path`. I was deleting folders for confidentiality. . ['/lrlhps/data/c3tk/dev/virtenv/auto3D/bin',; '/lrlhps/users/<userid>/repo/openbabel-install/build/lib',; '/lrlhps/users/<userid>/repo/openbabel-install/lib',; '',; '/lrlhps/users/<userid>/repo/openbabel-install/lib/python3.8/site-packages',; '/lrlhps/data/c3tk/dev/virtenv/auto3D/lib/python3.8/site-packages',; '/lrlhps/apps/python/python-3.8.5/lib/python38.zip',; '/lrlhps/apps/python/python-3.8.5/lib/python3.8',; '/lrlhps/apps/python/python-3.8.5/lib/python3.8/lib-dynload']",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320256731:79,confidential,confidentiality,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320256731,1,['confidential'],['confidentiality']
Security,"> On Aug 21, 2017, at 9:07 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request.; > ; > . I think this patch only includes the changes related to obthermo. . https://github.com/openbabel/openbabel/pull/1598 <https://github.com/openbabel/openbabel/pull/1598>. > Please create a completely new branch for each change and use git cherry-pick to grab only the specific changes you want, e.g.; > ; > https://guides.github.com/introduction/flow/ <https://guides.github.com/introduction/flow/>; > I'm sorry to be picky, but I'd like to merge the obthermo changes and not the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.); > ; > . I am happy to discuss it. ; Please let me know how the code need to change, then I will do it. Because, it will be very useful to extract different charges from the Gaussian output. . Cheers,; Mohammad; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJNaXfKr9_X5SpRkRNtkUAwCAf2RSks5sadVogaJpZM4OVlnh>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547:809,access,accessing,809,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547,1,['access'],['accessing']
Security,"> Please compare the above structure with the pubchem 2D structure; > > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > > showing, in green, a H which 'protrudes towards the camera'. The same H is; > > depicted as 'protruding' above the ring with the NCH3 group in the; > > wikipedia entry; > > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > > .; > >; > ; > Having a hydrogen protrude above the screen conveys exactly the same; > information as having any one of the three carbons indicated to protrude; > below the screen. And that is what you are seeing, one of the carbons was; > chosen to be depicted protruding below the screen. Openbabel's depiction; > of below-the-plane bonds includes a solid line with the hashed wedged; > superimposed over the solid line, instead of just showing the hashed wedge; > like most software does. You seem to be confusing that superimposition to; > be two different bonds (and further thinking one of them is to a hydrogen,; > despite the lack of 'H'). It is not, it is one bond with two graphical; > elements.; > ; > Personally I find the superimposition of hashed wedge with a solid line; > through it to be unattractive, especially when the solid line is so thick; > as in your image. Maybe there is some option you can give it to turn off; > that solid line running through the hashed wedge. That would make it more; > attractive to me and less confusing for you.; > ; > > The Pubchem 3D shows the hydrogen in more detail.; > >; > ; > Well, you didn't tell Pubchem to delete the hydrogens, like you did; > openbabel.; > ; > Cheers,; > ; > Jeff; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ATTvgvwCTMc6NcHc8gcjXpuhr8lW7Bw2ks5sy9hIgaJpZM4QKtnS>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465:1431,hash,hashed,1431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465,2,['hash'],['hashed']
Security,"> Shouldn’t `bondStrereo` have `atomRefs4` attribute?. I admit I know CML too little to answer that. Nonetheless, the provided CML file validates against CML XML schemas, both v2.3 and v3 (to check that, schema information has to be added to the input file manually, see #2326 for instructions). The bug is that the CML reader should not encounter segmentation faults on any input.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211:136,validat,validates,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211,1,['validat'],['validates']
Security,"> Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`. Just checked, all of these work, and produce meaningful looking SDF output. Let me know should you want me to check anything else on arm64.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685:39,access,access,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685,1,['access'],['access']
Security,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:45,sanitiz,sanitize,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857,2,"['sanitiz', 'validat']","['sanitize', 'validate']"
Security,"@H]2C1	; 1 molecule converted; ```. doesn't help; advancing a step further. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan | obabel -ismi --gen3d -osdf; 1 molecule converted; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1469,validat,validator,1469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['validat'],['validator']
Security,"@SteelDominic I think OpenBabel is not the right tool for this. Before trying to convert batches of molecules for 3D print (similar to NIH's [3d print exchange](https://3d.nih.gov/), or CCDC's [printing contests](https://www.ccdc.cam.ac.uk/discover/blog/2017-10-17-we-have-a-csd3dprint-contest-winner/)), one better would define if one wants a ball-and-stick model, or one of van der Waals-spheres; if the model is about individual molecules, or a packing; if the object should be free and isolated, or on a plinth; if the result is good enough in as a structure (where a .stl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""};",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:716,access,access,716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['access'],['access']
Security,"@baoilleach If someone wants to suggest flags, I'm happy to set up an Ubuntu ""sanitize"" builder. I'm not 100% up - can you add most/all of the sanitize flags together?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625891403:78,sanitiz,sanitize,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625891403,2,['sanitiz'],['sanitize']
Security,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:133,Validat,ValidationSuite,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['Validat'],['ValidationSuite']
Security,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:28,access,accessible,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907,1,['access'],['accessible']
Security,"@ej73.com. > On 4 Nov 2017, at 03:21, Jeff Janes <notifications@github.com> wrote:; > ; > On Fri, Nov 3, 2017 at 7:04 AM, phosphre <notifications@github.com> wrote:; > ; > > Please compare the above structure with the pubchem 2D structure; > > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > > showing, in green, a H which 'protrudes towards the camera'. The same H is; > > depicted as 'protruding' above the ring with the NCH3 group in the; > > wikipedia entry; > > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > > .; > >; > ; > Having a hydrogen protrude above the screen conveys exactly the same; > information as having any one of the three carbons indicated to protrude; > below the screen. And that is what you are seeing, one of the carbons was; > chosen to be depicted protruding below the screen. Openbabel's depiction; > of below-the-plane bonds includes a solid line with the hashed wedged; > superimposed over the solid line, instead of just showing the hashed wedge; > like most software does. You seem to be confusing that superimposition to; > be two different bonds (and further thinking one of them is to a hydrogen,; > despite the lack of 'H'). It is not, it is one bond with two graphical; > elements.; > ; > Personally I find the superimposition of hashed wedge with a solid line; > through it to be unattractive, especially when the solid line is so thick; > as in your image. Maybe there is some option you can give it to turn off; > that solid line running through the hashed wedge. That would make it more; > attractive to me and less confusing for you.; > ; > > The Pubchem 3D shows the hydrogen in more detail.; > >; > ; > Well, you didn't tell Pubchem to delete the hydrogens, like you did; > openbabel.; > ; > Cheers,; > ; > Jeff; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465:1049,hash,hashed,1049,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465,2,['hash'],['hashed']
Security,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:420,validat,validate,420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,2,['validat'],['validate']
Security,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:534,access,accessible,534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941,1,['access'],['accessible']
Security,@ghutchis : Red Hat provides interested developers with access to ppc64(le) VMs running Fedora: https://fit-rhlab.rhcloud.com/powerlinux-openpower-development-hosting/ . Just fill in the Request Form linked there. I've been using a couple of their VMs (ppc64 and ppc64le) for building and debugging my Fedora packages for quite some time now.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-206619489:56,access,access,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-206619489,1,['access'],['access']
Security,"@jajupmochi Would an update of openbabel an option for you? There are might be good reasons to use a LTS from the Ubuntu family instead their intermediate releases published twice a year, as well as against; if you stick to LTS I would recommend to update to 20.04 LTS (and in this summer, to 22.04 LTS). To provide perspective, OpenBabel repackaged by DebiChem for Linux Debian 12/bookworm (branch testing) is at version 3.1.1 by February 6th, 2022 ([tracker](https://tracker.debian.org/pkg/openbabel)). If the generation 0D (the SMILES string) to 3D (the .xyz) fails, an alternative is to generate an intermediate 2D (.xyz) in first place. Sometimes, rewriting the SMILES string into a form more accessible to OpenBabel equally helps/offers additional help. . For the first SMILES string:. ```bash; obabel -:""N1(C=C[C@@H](C=C1C)[C@H]1C=CN(C(=C1)C)CCCl)CCCl"" -ocan | obabel -ismi -h --gen3d -oxyz; ```. yields e.g., . ```; 1 molecule converted; 42. Cl 0.93057 -0.72235 0.11214; C 2.70908 -0.81013 0.17949; C 3.30555 -0.84380 -1.22848; N 4.78308 -0.91157 -1.16078; C 5.50030 0.27828 -1.04781; C 6.79964 0.34655 -0.72869; C 7.58978 -0.90870 -0.42149; C 6.78436 -2.16623 -0.71814; C 5.47659 -2.13574 -1.05238; C 4.75761 -3.43161 -1.33497; C 9.00781 -0.95143 -1.07678; C 9.00304 -0.87328 -2.58644; C 9.84595 -0.06092 -3.23557; N 10.75438 0.79769 -2.61330; C 10.72369 0.90150 -1.20482; C 9.92661 0.09709 -0.46849; C 11.53292 1.93288 -0.45745; C 11.76972 1.46635 -3.46203; C 13.02007 0.59878 -3.60521; Cl 14.17952 1.34836 -4.73549; H 2.97462 -1.70594 0.74913; H 3.06144 0.06210 0.73931; H 3.00196 0.05450 -1.78183; H 2.89782 -1.68767 -1.79530; H 4.92952 1.18267 -1.23133; H 7.29603 1.30611 -0.65422; H 7.74476 -0.91385 0.66839; H 7.30518 -3.11487 -0.62493; H 5.43684 -4.29123 -1.32134; H 4.29997 -3.40647 -2.32943; H 3.97906 -3.61608 -0.58816; H 9.45341 -1.92403 -0.81917; H 8.32012 -1.50882 -3.14057; H 9.85509 -0.03516 -4.32277; H 9.92024 0.18199 0.61507; H 11.99814 2.68502 -1.09382; H 12.32360 1.45087 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989:698,access,accessible,698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989,1,['access'],['accessible']
Security,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:99,access,accessible,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959,1,['access'],['accessible']
Security,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:605,checksum,checksums,605,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,2,"['access', 'checksum']","['access', 'checksums']"
Security,"@nbehrnd Thank you for the suggestion. I see that it works for this particular case, but is it actually retaining the hydrogen atoms or is it still removing them and then readding them using an internal obabel mechnism?. I am trying to use the formula to validate a specific SMILES dataset, so it is quite important that the hydrogen atoms are ingested as is. P.S. I am @vaitkus, not @merkys. :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602:255,validat,validate,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602,1,['validat'],['validate']
Security,"@orex I added atomic numbers to the hash approach, so your cifs should be preserved. Later in the week / this weekend, I'm going to get some speed profile data on old vs this vs even bigger hash (to see how much speed is lost with a bad hash), and maybe the octree thing too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23761437:36,hash,hash,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23761437,3,['hash'],['hash']
Security,"@raulorteg The current documentation about openbabel is [here](https://open-babel.readthedocs.io/en/latest/index.html) (including download as html, pdf, or epub for off-line access). In section [Generating conformers for structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=Generating%20conformers%20for%20structures#generating-conformers-for-structures), it however is MMFF94 which is stated as the default.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577:174,access,access,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577,1,['access'],['access']
Security,"Actually, even without reproducing the segfault, I think I can see the problem. And I don't think it's with OB. You shouldn't put anything inside a Begin/EndModify block that relies on perceived data. The whole point of the block is to postpone the reperception until the final EndModify. Within the block, if the perception code becomes invalid, it is not updated and so you get segfaults if you use it. The specific cause here is either:; (a) the fact that DeleteAtom marks the LSSR and SSSR as needed to be reperceived. This would be reperceived automatically next time the user asks for the SSSR but here you do this within a Modify block, and so the recalculation of the SSSR is suppressed.; or; (b) DeleteAtom contains its Begin/EndModify block, indicating that various perceived information has been invalidated. Since you access the information before the outer EndModify is reached, the vengeful Furies descend. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803482:830,access,access,830,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803482,1,['access'],['access']
Security,"Additional remark: When I use babel from the Avogadro package it seems to work, however this is a different version (2.2.2b1) and it produces the same warning message nevertheless. /Applications/Avogadro.app/Contents/bin/babel; Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39. /Applications/Avogadro.app/Contents/bin/babel -i cif 2aev.cif -o pdb test.pdb ; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; ==============================; *** Open Babel Warning in Find; Unknown space group with incomplete or wrong definition.; 1 molecule converted; 3 warnings 80 audit log messages 1 debugging messages. Original comment by: knollentroll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455:713,audit,audit,713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455,1,['audit'],['audit']
Security,Addressed review comments as part of this hash - 549b182.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/130#issuecomment-78091444:42,hash,hash,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/130#issuecomment-78091444,1,['hash'],['hash']
Security,"Affirmative. Though you still can obtain the executables from the [release page](https://github.com/openbabel/openbabel/releases) on GitHub, and access the latest documentation via [readthedocs](https://open-babel.readthedocs.io/en/latest/). Addition: consult the package manager of your Linux distribution, survey by [repology.org](https://repology.org/project/openbabel/packages):. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288:145,access,access,145,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288,1,['access'],['access']
Security,"After reading the docs, I realise that in the Python interface all global variables are stuck into openbabel.cvar somehow, but dir(openbabel.cvar) doesn't work. However, accessing openbabel.cvar.obErrorLog works fine, e.g.:. >>> dir(openbabel.cvar.obErrorLog); ['ClearLog', 'GetAuditMessageCount', 'GetDebugMessageCount', 'GetErrorMessageCou; nt', 'GetInfoMessageCount', 'GetMaxLogEntries', 'GetMessageSummary', 'GetMessage; sOfLevel', 'GetOutputLevel', 'GetOutputStream', 'GetWarningMessageCount', 'SetMa; xLogEntries', 'SetOutputLevel', 'SetOutputStream', 'StartErrorWrap', 'StartLoggi; ng', 'StopErrorWrap', 'StopLogging', 'ThrowError', '__class__', '__del__', '__de; lattr__', '__dict__', '__doc__', '__getattr__', '__getattribute__', '__hash__',; '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',; '__setattr__', '__str__', '__swig_destroy__', '__swig_getmethods__', '__swig_set; methods__', '__weakref__', 'this']; >>> pybel.ob.cvar.obErrorLog.StopLogging(). It's possible to rename cvar to something more catchy - I vote for 'globals' (see section 30.3.3). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169:170,access,accessing,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169,1,['access'],['accessing']
Security,"Again, that method should be commented out in the bindings, as the atoms should be accessed instead through an interator, OBResidueAtomIter.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1552#issuecomment-289269283:83,access,accessed,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1552#issuecomment-289269283,1,['access'],['accessed']
Security,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:168,access,access,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090,1,['access'],['access']
Security,Also it can be useful to add the testpypi server to your `.pypirc` file to test everything is OK before uploading:. ```; [distutils]; index-servers =; pypi; testpypi. [pypi]; repository: https://pypi.python.org/pypi; username: <un>; password: <pw>. [testpypi]; repository: https://testpypi.python.org/pypi; username: <un>; password: <pw>; ```. So then it's easy to do a quick. ```; python setup.py register -r testpypi; python setup.py sdist upload -r testpypi; ```. then check on http://testpypi.python.org before doing the proper upload with. ```; python setup.py sdist upload -r pypi; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704:233,password,password,233,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704,2,['password'],['password']
Security,"Are there places I can access to debug this? AFAIK, Travis is only x86, so I don't have access to other arch personally.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-206475173:23,access,access,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-206475173,2,['access'],['access']
Security,"As a comment, because it does not aim to solve the issue for Open Babel:. File `example_bad.cif` contains a syntax error because of the missing closing `'`. Note, from the perspective of the syntax of a `.cif` file, there is no need to enclose each of the symmetry equivalent positions by a `'`. However, if you choose to use an opening `'`, you need a closing `'`, too. You may submit any `.cif` to an checker like [checkcif](https://checkcif.iucr.org/) -- doing so for this file (here you need to choose option `Validation of CIF only (no structure factors)`) will both identify the problem as well as its location (line 36). Side notes:; - The _original_ `.cif` from the COD ([card #1011063](http://crystallography.net/cod/1011063.html)) does not use the single quotation marks and a conversion with obabel (3.1.0) works just fine. The same for its sibling entry, [COD 1011024](http://crystallography.net/cod/1011024.html) about ice III.; - One of the references of the `.cif` syntax is IUCr's dedicated [web site](https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax).; - Assuming `example_bad.cif` is the result of an (automated ?) edit of a `.cif` from a database like the [COD](http://crystallography.net/cod/index.php): the checkcif service relies in large part on [Platon](https://www.platonsoft.nl/platon/) and its [validation routines](https://www.platonsoft.nl/platon/pl000601.html). It is possible to install Platon locally, and subsequently perform the checks on a batch of `.cif` files, too.; - Consider updates. If you like to continue with Ubuntu LTS, either change from the old point release of Ubuntu 18.04.1 (Jul 2018) to the current 18.04.4 (Feb 2020), or mark [August 6th](https://wiki.ubuntu.com/FocalFossa/ReleaseSchedule) for an install of the next LTS with the point release 2020.1. The later would at least substitute Open Babel 2.3.2 (first released 2012) by release 3.0 (fall 2019).; Or, compile Open Babel from the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804:514,Validat,Validation,514,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:447,expose,exposed,447,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,1,['expose'],['exposed']
Security,AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3464,Audit,Audit,3464,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:0,Audit,Audit,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316,1,['Audit'],['Audit']
Security,B]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3343,secur,security,3343,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"Based on the «steps to reproduce» shared by you, it seems plausible you missed an explicit space between `-O` (uppercase o) and the file to store the result as permanent record. I.e., try `obabel -icif 1ner.cif -opdb -O 1ner.pdb`. But then (accessing the .cif with vim), there are approx. 35.6 k atoms described, perhaps a bit much for obabel to digest quickly. Is there a particular reason why using the .pdb ready-to-go offered by the database is not an option for you?. ![atRCSBPDB](https://user-images.githubusercontent.com/19709084/167395183-44667694-3438-452b-9219-d2cb27be7df9.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509:241,access,accessing,241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509,1,['access'],['accessing']
Security,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:102,validat,validation,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['validat'],['validation']
Security,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:1016,Validat,ValidationSuite,1016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['Validat'],['ValidationSuite']
Security,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:438,validat,validation,438,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,1,['validat'],['validation']
Security,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:206,validat,validate,206,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470,1,['validat'],['validate']
Security,"Dear Geoff,. The variable ""OBConversion conv;"" is a local function variable. That means, I guess, each time this function is called I got a memory leak? :). If instances of OBConversion class should be accessed via singleton instance, its constructor should not be public. Or please explain, what static instance do you mean. Original comment by: dma_k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880:202,access,accessed,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880,1,['access'],['accessed']
Security,"Fair enough, I swapped in the hash you suggested i.e. the most recent commit hash.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553:30,hash,hash,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553,2,['hash'],['hash']
Security,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:1013,access,access,1013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038,1,['access'],['access']
Security,"Fixed in r4134:; ""Fix for PR#3081474 to correct handling of isotopes in InChI output. I just needed to change isotab.GetExactMass() to etab.GetMass(). The problem was only exposed when converting molecules with isotopes of Br, where the most abundant isotope (79) is not the same as the atomic molecular weight (~80). "". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797436:172,expose,exposed,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797436,1,['expose'],['exposed']
Security,Fixed in r4232 by using Hash/Wedge designations when generating InChIs from 2D data. I'm about to file a follow-on bug report though as the 2D data was not interpreted correctly by OB. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036#issuecomment-281797520:24,Hash,Hash,24,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036#issuecomment-281797520,1,['Hash'],['Hash']
Security,"Good find. Do you still have the test case? I'd like to see where in the code it was accessing the value, as it may be a logic problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984:85,access,accessing,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984,1,['access'],['accessing']
Security,"Good point. I was thinking more along the lines of someone saying ""hey, I have an issue"" but I'd welcome either:; a) a way to provide confidentiality (since we don't have a separate maintainers list); b) re-wording for the text. Not sure of either, although I can take a stab at rewording.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338527989:134,confidential,confidentiality,134,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338527989,1,['confidential'],['confidentiality']
Security,"Hello Raik,. I don't know if Geoff was in touch with you or not, but you've now got SVN access. Welcome to OpenBabel. - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/912#issuecomment-281795474:88,access,access,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/912#issuecomment-281795474,1,['access'],['access']
Security,"Hello, Patrick. I check your implementation of FillUnitCell. I'm using now the function for structures with partial occupancy sites (for example 50% Si and 50% Al). For the structures I have your FillUnitCell implementation will break my code (and not only mine). To solve the problem, I think, will be enough to add an atom label to the hash. Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. But if you want to make the function as fast as possible and little bit more universal I have a few suggestion.; 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. . Best regards,; Kirill.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23718837:338,hash,hash,338,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23718837,2,['hash'],['hash']
Security,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:169,access,access,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,1,['access'],['access']
Security,"Hi Kirill,. > I check your implementation of FillUnitCell. I'm using now the function for structures with partial occupancy sites (for example 50% Si and 50% Al). For the structures I have your FillUnitCell implementation will break my code (and not only mine). To solve the problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:336,hash,hash,336,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,3,['hash'],['hash']
Security,"Hi Noel,. > Otherwise all of the developers get emails for every commit, and don't know when it's finished. I apologize for that. It was a combination of self-review and improvements. > Can you provide a short description of what problem or feature this pull request solves/adds and how it does it. 1. Align space-groups.txt with spglib: in particular (a) ensure that each of the Hall names present in the spglib is present (only once) in the space-groups.txt; (b) Ensure that HM names are group (aliased) to the correct Hall name (this solves issue #1559); (c) ensure that space operators are correct for each Hall name (this fixes space groups that weren't fixed in https://github.com/openbabel/openbabel/pull/367) compared to spglib. 2. Remove overloaded SpaceGroup::SetHMName and SpaceGroup::SetHallName that were expecting const char *name. Now the only signature is const std::string &name for both functions. This is needed to always correctly parse origin by calling SpaceGroup::SetHMName(const std::string &name). Added code to correctly deal with :H origin, needed for rhombohedral groups. 3. Expose -xo option for PDB writer, to set space group setting (if present) in space group label.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302442405:1103,Expose,Expose,1103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302442405,1,['Expose'],['Expose']
Security,"Hi,. My suggestion when working in the conda environment is to use the conda-packages for openbabel that have been supplied by various users. E.g. patrickfuller/openbabel (see below). Otherwise, you really need to make sure that all cmake variables are set correctly to have openbabel compile against the conda python. Kind regards,; Fredrik. [Fredriks-MBP] > anaconda show patrickfuller/openbabel; Using anaconda-server api site https://api.anaconda.org; Name: openbabel; Summary: A chemical toolbox designed to speak the many languages of chemical data; Access: public; Package Types: conda; Versions:; - 2.3.90. To install this package with conda run:; conda install --channel https://conda.anaconda.org/patrickfuller openbabel. > 23 nov. 2015 kl. 09:28 skrev getmolmap notifications@github.com:; > ; > Reproduced both on Intel and AMD pc with LMDE2 in the latest python 3.4 conda environment:; > ; > import pybel; > Segmentation fault; > ; > However, importing opnbabel works fine.; > When I install openbabel and python bindings from packages, it works without problem with the system's python2.7, but not in the conda environments.; > ; > Advice on diagnosis and/or workaround would be appreciated.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/issues/203#issuecomment-158875942.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983:556,Access,Access,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983,1,['Access'],['Access']
Security,"Hi,. This is the perfect solution! Yes, please send the patch. Is there a planned date for release of 3.0?. Thanks a lot!. Regards,; Johan Westin. From: Geoff Hutchison [mailto:notifications@github.com]; Sent: den 17 april 2018 23:01; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Westin, Johan <Johan.Westin@astrazeneca.com>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] Differences in atom coordinates loading CIF using version 2.3.2 and 2.4.1 (#1726). I can confirm that it's the wrapping call. I'm going to revert that behavior by adding a flag to wrap if requested - but the default will be to use the unwrapped coordinates. Do you want a copy of the patch? It'll go into development (3.0) but not 2.4.x. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/1726#issuecomment-382144569>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAyD7nZJZdbf5-Tpv4ozlngznLao757nks5tplgpgaJpZM4RAQGy>. ________________________________. Confidentiality Notice: This message is private and may contain confidential and proprietary information. If you have received this message in error, please notify us and remove it from your system and note that you must not copy, distribute or take any action in reliance on it. Any unauthorized use or disclosure of the contents of this message is not permitted and may be unlawful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659:1092,Confidential,Confidentiality,1092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659,2,"['Confidential', 'confidential']","['Confidentiality', 'confidential']"
Security,"I am not a fan of this. Unless initialising to zero is a requirement of the code logic, all that we're doing here is slowing things down, and papering over potential problems. I would prefer the code to segfault and for us to fix the underlying problem, rather than the code seemingly working fine but actually not. A good example is PR #2038, where the underlying logic problem remains (it's on my TODO) and was only found due to the unitialized memory. . However, I do think it would be good to run our test suite in an environment that could catch such problems (e.g. address-sanitizer). We actually used to do this back in the day when we used CDash for nightly builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584:579,sanitiz,sanitizer,579,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584,1,['sanitiz'],['sanitizer']
Security,"I assume that it will also break for Py2 and filename of unicode type. Maybe an input validation `isinstance(filname, str)` is sufficient? If not throw `ValueError` and let the user bother. The other solution would be more complex and would require casting from bytes to str in Py3 and from unicode to bytes in Py2 with addition of `six` preferably.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1615#issuecomment-338610295:86,validat,validation,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1615#issuecomment-338610295,1,['validat'],['validation']
Security,"I can add a probe radius too, no problem.; On 28 Apr 2015 20:11, ""Geoff Hutchison"" notifications@github.com wrote:. > Looks nice, although I have some questions beyond point clouds.. Many; > people would like solvent-accessible or solvent-excluded surfaces at; > variable probe radii. The ""radius multiplier"" seems like it would be more; > useful from a user perspective as an additive factor (e.g., VdW + 0, +1 +; > 1.5Ang, etc.); > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717:217,access,accessible,217,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717,1,['access'],['accessible']
Security,I cannot find its set of symm. ops in the spglib. I remember there was CIF files with that space group (I don't have access to CCDC to check). Also another website mentions it: https://bruceravel.github.io/demeter/documents/Artemis/atoms/space.html as being 117.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1641#issuecomment-331228523:117,access,access,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1641#issuecomment-331228523,1,['access'],['access']
Security,I changed the GetNewBondVector to handle 2D in the new stereo branch. I also comitted these changes to the 2.2.x branch since this doesn't really require the other stereo code. All hydrogens in the sdf file are now correctly added (position + hash/wedge). Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795088:243,hash,hash,243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795088,1,['hash'],['hash']
Security,"I guess a potential attack vector would be If someone were running a publicly exposed webapp that did conversions, and an attacker combined it with a privilege escalation vulnerability, they would have control of the server.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917:20,attack,attack,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917,3,"['attack', 'expose']","['attack', 'attacker', 'exposed']"
Security,"I have the same problem with version 2.4.1 on Gentoo, reading output from GAMESS-US ver. 11 Nov 2017 (R3). I did some debugging and I found the problem to be in actual part of **gamessformat.cpp** that reads frequencies. Namely in line **515**, before reading reduced mass, it should also read SYMMETRY line:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; Fixed:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // SYMMETRY; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; otherwise lines **549-550** process a blank line instead of an atom - hence the segfault. Patch is attached that fixes the code. Here is a fragment of the GAMESS output where the problem appears:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; > IR INTENSITY: 0.23456 0.34034 0.01209 0.00004 0.00182. The second issue arises at the end of the loop that reads the modes (lines **582-584**):; ```; ifs.getline(buffer, BUFF_SIZE);; tokenize(vs, buffer);; modeCount = vs.size() - 3;; ```; At the end of the modes `buffer` variable contains empty string, so `vs.size()` returns 0. However, `modeCount` is defined as `unsigned int` (in line **544**):; ```; unsigned int modeCount = vs.size() - 3;; ```; therefore line **584** produces a huge positive value instead of -3, and the program does not leave the loop (condition in line **547**), leading to another segfault, which wasn't exposed due to the first one. Again - a fix is proposed in the included patch. [segfault_when_reading_vib.txt](https://github.com/openbabel/openbabel/files/1691481/segfault_when_reading_vib.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531:1528,expose,exposed,1528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531,1,['expose'],['exposed']
Security,"I just compiled 2.2.0 to see if the problem exists there, too.; It's a bit more verbose now, but problem persists. Open Babel 2.2.0 -- Nov 25 2008 -- 17:53:21. Yours,; Steffen. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 249 -l 249 -isdf -omol /tmp/313325.mol; 1 molecule converted; 17 audit log messages. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 250 -l 250 -isdf -omol /tmp/313325.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read atom and bond count; Expected standard 6 character atom and bond count. 0 molecules converted; 1 warnings 2 audit log messages . Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060:300,audit,audit,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060,2,['audit'],['audit']
Security,"I should have attacked this earlier. The problem is that OB correctly types this atom as O-, but then the type translation table says that Sybyl expects O.co2 for O- atoms. The Sybyl atom types list says O.co2 is for:; oxygen in carboxylate and phosphate groups. I note that ZINC types this as O.3. If you think that's fine, I can add some atom typing rules that handle negative SO3 oxygens separately from phosphate and carboxylate. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/806#issuecomment-281793628:14,attack,attacked,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/806#issuecomment-281793628,1,['attack'],['attacked']
Security,"I think (not tested),. https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176. is the problem as this makes the hashing asymetric (trailing bond order)? The rotation to find the max ring hash (in DoRings()) is then different depending on which way round you traverse the path. John",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309:142,hash,hashing,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309,2,['hash'],"['hash', 'hashing']"
Security,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:451,access,accesses,451,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['access'],['accesses']
Security,I'll have a patch later today - there's an index / table of contents for faster access.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470:80,access,access,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470,1,['access'],['access']
Security,"I'm afraid the generation of wedge and hash bonds is incomplete and needs more work, which is why it is labelled ""experimental"". Perhaps it would have been better to have omitted the option completely until it was working properly. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1087#issuecomment-281800195:39,hash,hash,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1087#issuecomment-281800195,1,['hash'],['hash']
Security,"I'm going to merge this for 3.0. I think we probably need to revisit having a separate (larger) test set for cases like this, MMFF94 validation, etc. I'm going to remove bondtyper from the script bindings unless someone can explain why it's crucial.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368:133,validat,validation,133,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368,1,['validat'],['validation']
Security,"I'm not sure if I understood well enough your aim to double the cell and thus come back to you here. It seems possible your aim is 1) to use a the .cif to access the unit cell as such, subsequently 2) to replicate this parallelepiped by translation in one/in multiple directions, and 3) to use these additional atom coordinates of this slab/super cell built elsewhere. And that these manipulations should retain the information of the unit cell (the lattice vectors, etc.). In case this assumption is correct and indeed meets your needs, I would read the «good .cif file» in question e.g., with CCDC's Mercury, and use its option calculate -> packing slicing and use one of the four options to define the inclusion of the atoms, followed by either a) one of the presets (like a 2 x 2 x 2 supercell), or a manual dial along a, b, and c to increase the representation. Starting from yesterday's file 9000071.cif, and opting for an increase to a 2 x 2 x 2 super cell, the new set of data may be exported either as .cif (9000071_222.cif), or as .xyz (9000071_222.xyz). Processing *this* super cell .cif with OpenBabel by. ```bash; obabel -icif 9000071_222.cif -oxyz -O 9000071_222_xyz_by_obabel.xyz; ```; does not report problems back to the CLI. Other than a different formatting tables in the .xyz written and a different number of decimals past the full stop, this OpenBabel generated .xyz does not seem to differ from the one exported by Mercury. For documentation, I attach archive supercell.zip below. [supercell.zip](https://github.com/openbabel/openbabel/files/7328150/supercell.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514:155,access,access,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514,1,['access'],['access']
Security,"I'm still working on the RPM, but I will provide a spec when I am satisfied with it, perhaps as soon as later today. In the meantime, here are the relevant parts of the expansion of the `%cmake` rpm macro of CentOS 8.1 (Fortran flags are omitted, as are CMake options pertaining to specifying installation directories):. ```; CFLAGS=""${CFLAGS:--O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection}"" ; export CFLAGS ;; CXXFLAGS=""${CXXFLAGS:--O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection}"" ; export CXXFLAGS ;; LDFLAGS=""${LDFLAGS:--Wl,-z,relro -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld}"" ; export LDFLAGS ;; /usr/bin/cmake \; -DCMAKE_C_FLAGS_RELEASE:STRING=""-DNDEBUG"" \; -DCMAKE_CXX_FLAGS_RELEASE:STRING=""-DNDEBUG"" \; -DBUILD_SHARED_LIBS:BOOL=ON; ```. That was generated by trimming the output of the command `rpm --eval %cmake`. The various flags do contain one or two things that probably need to be removed or changed for non-RedHat platforms (*i.e.* the ones with ""redhat"" in them).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629446392:378,secur,security,378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629446392,2,['secur'],['security']
Security,"I'm totally fine removing these. I don't want to remove audit-level statements, because I think it's useful to retain a list of anything that possible changes the state of the molecular data. Debugging-level.. that's a different story.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707#issuecomment-347042447:56,audit,audit-level,56,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707#issuecomment-347042447,1,['audit'],['audit-level']
Security,"I've been intrigued by ThreadSanitizer, but don't think it runs on Mac yet:; https://github.com/google/sanitizers/wiki",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206471244:103,sanitiz,sanitizers,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206471244,1,['sanitiz'],['sanitizers']
Security,"I've reversed wedges and hashes in r4334, reverting a change made earlier. There is more work to be done on the depiction of wedges and hashes. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070#issuecomment-281799907:25,hash,hashes,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070#issuecomment-281799907,2,['hash'],['hashes']
Security,"If you think this is the way to go, then go for it. My token question is what happens if the user does not have internet access?. I see that rapidjson appears in Debian, though the version numbers are quite low. I'd be interested to hear what @mbanck thinks of this way of automatically downloading dependencies and whether there are steps we should take to help packagers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776#issuecomment-364789406:121,access,access,121,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776#issuecomment-364789406,1,['access'],['access']
Security,"If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request. Please create a completely new branch for *each* change and use `git cherry-pick` to grab only the specific changes you want, e.g. https://guides.github.com/introduction/flow/. I'm sorry to be picky, but I'd like to merge the obthermo changes and *not* the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612:491,access,accessing,491,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612,1,['access'],['accessing']
Security,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:235,access,accessible,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939,1,['access'],['accessible']
Security,"In the first example, the molecule containing the atoms of interest is destroyed as soon as the find_ligand_rings() function is finished. When the molecule is destroyed, its atoms are destroyed. Accessing the attributes of the atom after this point can cause a segfault. In short, you need to keep the OBMol around if you still want to access any attributes of the molecule at a later point. Feel free to reopen this bug if this explanation is unclear or you have any questions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2000#issuecomment-507326428:195,Access,Accessing,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2000#issuecomment-507326428,2,"['Access', 'access']","['Accessing', 'access']"
Security,"In this case, the file is broken.; ```; CONECT 107 105 105; ```. Indicates there should be a double bond to atom 105. There's probably some merit to a validation filter that reports ""hey, this file has weird bonding"" but I don't know that Open Babel (or PyMol) should over-rule the file itself..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2298#issuecomment-798768417:151,validat,validation,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2298#issuecomment-798768417,1,['validat'],['validation']
Security,"Isn't folding a one way function as hash is? You may loose some data during; folding and there is no way to recover that. ----; Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2017-10-09 14:12 GMT+02:00 John Mayfield <notifications@github.com>:. > Yep, the use of 'folding' to a larger a size is for example with MACCS116; > doesn't fit nicely in 32 or 64 bit words which one would typically use for; > popcount.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1654#issuecomment-335139826>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACN8jSXPD85UREjkhmbiiA3kMGvx3Nphks5sqg3FgaJpZM4PtubR>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583:36,hash,hash,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583,1,['hash'],['hash']
Security,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:566,access,accessing,566,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801,1,['access'],['accessing']
Security,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:405,access,access,405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,1,['access'],['access']
Security,"It is making sense. Thanks for prompt reply.; Just for completeness , also OBAtom.GetVector() seems doesn't work :; <openbabel.vector3; proxy of <Swig Object of type 'OpenBabel::vector3 *' at 0x114085480> >. On the other hand, is true that, the coordinates are accessible via OBAtom.GetX(),OBAtom.GetY(),OBAtom.GetZ(). Original comment by: fabiolol",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805154:261,access,accessible,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805154,1,['access'],['accessible']
Security,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:1241,access,accessing,1241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331,1,['access'],['accessing']
Security,"It looks like the mmcif reader is having problems with the metadata in the first line. I'm not sure of a permanent fix at the moment, but in the meantime you should be able to use this database if you hide the first line within a comment using a hash symbol (`#`). For example, on a copy of the file you could try `sed -i '1s/^/# /' path_to_the_copy_of_cakyaq.cif`, then try obabel/Python on that one. It looks like there's a standard `data_` header in line 2 of these files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1827#issuecomment-385795002:246,hash,hash,246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1827#issuecomment-385795002,1,['hash'],['hash']
Security,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:611,validat,validation,611,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766,2,"['Validat', 'validat']","['ValidationSuite', 'validation']"
Security,"It's gone, dude. Why is it gone? See https://github.com/openbabel/openbabel/pull/1952. If there was functionality in there that you wanted, can you describe it and we can bring it back or suggest an alternative way to do it, or access that info. I'm marking this as closed, but feel free to reopen and comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2077#issuecomment-552076143:228,access,access,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2077#issuecomment-552076143,1,['access'],['access']
Security,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:377,access,access,377,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919,1,['access'],['access']
Security,"Just checked openbabel.cvar on Linux. It gives the following:. Swig global variables (AliasDataType, resdat, chainsparser, atomtyper, aromtyper, isotab, ttab, etab, ElemNo, ResNo, ElemDesc, Residue, obErrorLog, VZ, VY, VX, VZero). (On Windows, ""print openbabel.cvar"" crashes Python - a SWIG error). Is it worthwhile making any of these additional variables accessible? After all, it's easy for the user to instantiate most of them. This is in contrast to obErrorLog, where it is important to be able to access that specific instance. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171:357,access,accessible,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171,2,['access'],"['access', 'accessible']"
Security,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1197,access,access,1197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,1,['access'],['access']
Security,"Just for information with the patch, I got this:; 2 molecules converted; 1 info messages 34 audit log messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094:92,audit,audit,92,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094,1,['audit'],['audit']
Security,"Just make it clear that it's not confidential, but that they can email the lead developer confidentially if they want. I don't think you need to provide an email address - they'll figure it out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653:33,confidential,confidential,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653,2,['confidential'],"['confidential', 'confidentially']"
Security,"Just tested latest dev code on a 64bit Linux system. Seems to work fine:. > babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi; 1 candidates from fingerprint search phase; 1 molecule converted. makeio, could you test the development code and see whether the problem has gone away for you. See the instructions at http://openbabel.org/wiki/CMake; 1 info messages 57 audit log messages. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341:370,audit,audit,370,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341,1,['audit'],['audit']
Security,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:556,Access,Access,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,3,['Access'],['Access']
Security,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:559,Access,Access,559,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,3,['Access'],['Access']
Security,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:231,audit,audit,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398,1,['audit'],['audit']
Security,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:121,hash,hash,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010,1,['hash'],['hash']
Security,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:482,access,access,482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['access'],['access']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:526,audit,audit,526,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:371,audit,audit,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. Openbabel is very close to compiling on your system but it will not do so until some small code changes are made. To make these I need some information that Microsoft does not make easily accessible unless you have bought their product. This would open up Openbabel to other users with VC2008. Could you help with information on the tr1 header files as detailed previously?. Some of the errors you are seeing are new transient ones which are inevitable in development code because of the delay in adjusting the build files when developers using other platforms have made code changes. I can see these and can correct them, but I need help with VC2008. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177:238,access,accessible,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177,1,['access'],['accessible']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:73,hash,hash,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011,1,['hash'],['hash']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. The InChI example files were using the <NAME> property and no title. They were all single line, though. If it is a practice that is in use, then we should support it. . Maybe to prevent errors but minimise information loss, any line break in a title retrieved by OBMol::GetTitle() should be returned with any line break converted to a space or a tab. I don't think the loss of backward compatibility is serious enough to worry about. The function could have a bool parameter whose default has this behaviour, but the inverse would allow access to the raw multiline text if necessary. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126:587,access,access,587,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126,1,['access'],['access']
Security,"Logged In: YES ; user_id=1189615; Originator: YES. Input [CH4] crashes on line 2878 because the vector canonical_order, which has a size of 1 is being accessed with an index of 1. That is nbr1->GetIdx() returned 2. This is with the default _canonicalOutput=false, so I guess it is using your new code. It works ok when _canonicalOutput=true. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122:151,access,accessed,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122,1,['access'],['accessed']
Security,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:493,access,access,493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326,2,['access'],['access']
Security,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:226,audit,audit,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407,2,['audit'],['audit']
Security,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:303,audit,audit,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404,1,['audit'],['audit']
Security,Logged In: YES ; user_id=196016; Originator: NO. I can reproduce the problem with the provided input:. crease~$ babel water.gzmat water.xyz; 1 molecule converted; 11 audit log messages; crease~$ cat water.xyz; 3; water.gzmat; O 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H nan nan nan; crease~$ cat water.gzmat; #. water. 0 1; O; H 1 r; H 1 r 2 a. r 0.9572; a 104.52. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679:166,audit,audit,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:65,audit,audit,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,13,"['Audit', 'audit']","['Audit', 'audit']"
Security,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:869,access,access,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,2,['access'],['access']
Security,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:366,confidential,confidential,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433,1,['confidential'],['confidential']
Security,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:136,access,access,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728,3,['access'],['access']
Security,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:442,access,access,442,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461,1,['access'],['access']
Security,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:519,access,accessing,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:844,confidential,confidential,844,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,1,['confidential'],['confidential']
Security,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:107,expose,exposed,107,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797,1,['expose'],['exposed']
Security,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:53,audit,audit,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405,2,['audit'],['audit']
Security,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:215,hash,hash,215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,2,['hash'],['hash']
Security,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:130,access,access,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021,1,['access'],['access']
Security,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:408,validat,validate,408,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267,1,['validat'],['validate']
Security,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:182,hash,hash,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015,1,['hash'],['hash']
Security,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:67,audit,audit,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314,1,['audit'],['audit']
Security,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:97,access,accessing,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:440,access,access,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['access'],['access']
Security,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:349,audit,audit,349,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:322,audit,audit,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:98,confidential,confidentiality,98,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467,1,['confidential'],['confidentiality']
Security,"Logged In: YES ; user_id=850620; Originator: NO. I find it difficult to sort out this problem because:; (a) I don't have a dependency chart of OB header files; (b) I don't have access to a ppc64, and so I don't know how much I have to squeeze the file size down. If I can get (a) + (b), then we can make some progress I hope. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566:177,access,access,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: NO. I'm afraid not. Regular objects also need to be wrapped in the same interface file. For example, OBConversion returns OBMols and these aren't wrapped. So the current situation is that you can read in molecules from a file, but you can't access any of the methods or attributes of the molecules. I'm going to revert these recent changes (if no-one objects today) except for the changes to the SWIG command line. I would appreciate if someone could then check whether the changes to the command line are enough to allow compilation. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578:286,access,access,286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:566,audit,audit,566,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:50,Access,Accessing,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194,3,"['Access', 'access']","['Accessing', 'access']"
Security,"Logged In: YES ; user_id=850620; Originator: YES. Good news first?. The good news is that it's working for BFS (I can access CurrentDepth fine). The other good news is that BFS is really the one we want it to work for (e.g. in the case of circular fingerprints), as the user might terminate the iteration after a certain depth. The bad news is that the BFS iterator in OpenBabel doesn't accept an atom as a starting point (the DFS iterator does though), and so this iterator can't be used for the use cases I imagine. Let me know if you want me to resubmit this feature request under a different title: ""BFS iterator with OBAtom as starting point"" or so. This would really be a killer feature. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911:118,access,access,118,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:690,expose,exposed,690,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976,1,['expose'],['exposed']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:447,access,accessing,447,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:215,access,access,215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,2,['access'],"['access', 'accessed']"
Security,"Logged In: YES ; user_id=850620; Originator: YES. This works, but I need to add a small bit of code to the interface file to make it easier to access this in the BFSIterator. I will return to close the bug when done. Thanks!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914:143,access,access,143,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914,1,['access'],['access']
Security,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:153,expose,exposed,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449,1,['expose'],['exposed']
Security,"Looks nice, although I have some questions beyond point clouds.. Many people would like solvent-accessible or solvent-excluded surfaces at variable probe radii. The ""radius multiplier"" seems like it would be more useful from a user perspective as an additive factor (e.g., VdW + 0, +1 + 1.5Ang, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062:96,access,accessible,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062,1,['access'],['accessible']
Security,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:250,access,access,250,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858,1,['access'],['access']
Security,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:877,secur,security,877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"No, we're not going to grab `master`. For consistency and security, it's much better to grab a specific commit hash. That's immutable. I'd rather see a new release of rapidjson, but in the meantime, I'd prefer something like `7c73dd7de7c4f14379b781418c6e947ad464c818`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997:58,secur,security,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997,2,"['hash', 'secur']","['hash', 'security']"
Security,"OK, no worries I can wait until tomorrow. I just wondered if there was something simple I could do, but this sounds like it would be more complicated than that. -----------------------------------------------------------------------------------------------------; Hubertus van Dam, 631-344-6020, hvandam@bnl.gov<mailto:hvandam@bnl.gov>; Brookhaven National Laboratory. From: Geoff Hutchison <notifications@github.com>; Reply-To: openbabel/openbabel <reply@reply.github.com>; Date: Friday, March 27, 2020 at 10:26; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: ""Van Dam, Hubertus"" <hvandam@bnl.gov>, Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). I'll have a patch later today - there's an index / table of contents for faster access. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HXOQA2SW2DZWDXSI5DRJSZPXANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119:819,access,access,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119,1,['access'],['access']
Security,"OK, so that is not an option then. The only remaining viable option that I can see is to create a new manipulator class that contains all the functionality (in a consistent way) whilst leaving the current API unchanged. Access to the functionality already part of OBMol could be realized via wrapper methods in the new class. That way, the current API remains fully intact while avoiding an arbitrary separation of functionality. One might add a ""warning"" (possibly in comment-form) to the manipulation methods that are currently part of OBMol to tell the users not to use them anymore if it can be avoided. Obviously, whether or not to introduce such a warning is not for me to decide. Also, I did not mean that SetDihedralAngle should replace SetTorsion, but rather that it be provided as an alternative to SetTorsion as the latter is a bit awkward to use via the language bindings, IMHO. It could be provided within the new class if that route is taken.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716:220,Access,Access,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716,1,['Access'],['Access']
Security,"OMG... I embarrassed myself! segfaults is because I did not use ""make install"". Without root access, ""make install"" gives an error at the final step to link to /usr/local/bin. But the binary at openbabel/build/bin works fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/194#issuecomment-117933728:93,access,access,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/194#issuecomment-117933728,1,['access'],['access']
Security,"Ok. I've reenabled size(). This seems to be enough for the basic vector access:. #!/usr/bin/perl. use Chemistry::OpenBabel;. my $noel = new Chemistry::OpenBabel::VectorDouble(4);; print $noel->size().""\n"";; print $noel->get(0).""\n"";; $noel->set(0, 3);; print $noel->get(0).""\n"";. my $obMol = new Chemistry::OpenBabel::OBMol;; my $obConversion = new Chemistry::OpenBabel::OBConversion;; $obConversion->SetInFormat(""smi"");; $obConversion->ReadString($obMol, ""c1ccccc1C2CCC2"");. my $vec = $obMol->GetSSSR();; print $vec->size().""\n"";; for ($i = 0; $i<$vec->size(); $i++) {; $ring = $vec->get($i);; if ($ring->IsAromatic()) {; print ""Aromatic!\n"";; }; else {; print ""Not aromatic!\n"";; }; }. Now I'll look at the specific question. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1198#issuecomment-281802094:72,access,access,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1198#issuecomment-281802094,1,['access'],['access']
Security,"On Fri, Nov 3, 2017 at 7:04 AM, phosphre <notifications@github.com> wrote:. > Please compare the above structure with the pubchem 2D structure; > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > showing, in green, a H which 'protrudes towards the camera'. The same H is; > depicted as 'protruding' above the ring with the NCH3 group in the; > wikipedia entry; > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > .; >. Having a hydrogen protrude above the screen conveys exactly the same; information as having any one of the three carbons indicated to protrude; below the screen. And that is what you are seeing, one of the carbons was; chosen to be depicted protruding below the screen. Openbabel's depiction; of below-the-plane bonds includes a solid line with the hashed wedged; superimposed over the solid line, instead of just showing the hashed wedge; like most software does. You seem to be confusing that superimposition to; be two different bonds (and further thinking one of them is to a hydrogen,; despite the lack of 'H'). It is not, it is one bond with two graphical; elements. Personally I find the superimposition of hashed wedge with a solid line; through it to be unattractive, especially when the solid line is so thick; as in your image. Maybe there is some option you can give it to turn off; that solid line running through the hashed wedge. That would make it more; attractive to me and less confusing for you. > The Pubchem 3D shows the hydrogen in more detail.; >. Well, you didn't tell Pubchem to delete the hydrogens, like you did; openbabel. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270:858,hash,hashed,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270,4,['hash'],['hashed']
Security,"On Mon, Aug 3, 2015 at 8:02 AM, John May notifications@github.com wrote:. > I think (not tested),; > ; > https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176; > ; > is the problem as this makes the hashing asymetric (trailing bond order)?; > The rotation to find the max ring hash (in DoRings()) is then different; > depending on which way round you traverse the path. In the case here, the missing (or extra) fingerprint bit is not part of a; ring-fingerprint (there is a ring, but the closure of the ring is not part; of the fingerprint path. The 7th atom closes back to the 2nd one, not back; to the 1st one), so I don't think that that alone can be the answer. Also,; if the rotation algorithm was broken, I think that would lead much less; subtle problems than this one seems to be. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227:230,hash,hashing,230,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227,2,['hash'],"['hash', 'hashing']"
Security,"On occasion, I sometimes embark a route like. ```bash; obabel -:""c1ccncc1"" -can | obabel -ismi -h --gen2d -osdf | obabel; -isdf --gen3d -osdf; ```; for «difficult» cases. Because, the more conformational flexible; (number of one may rotate) a molecule is, especially with stereogenic; centres, the more computational demanding the provision of /a/; conformation by OpenBabel is. For a rigid molecule like pyridine; above, this has no benefit. I do not possess a one-fits-all scale; to anticipate ahead of time when this extended route is necessary. Note, by documentation (incl. a reference to an open-access; publication), `--gen3d` is only one out of five levels to provide you; /one/ starting conformation. And though it does not aim to compete; with protein folding programs, OpenBabel's `--conformer` flag allows; you to generate conformers, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212:602,access,access,602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212,1,['access'],['access']
Security,"On pc Debian x86-64 with master sources updated today, I tried to reproduce the original pb.; Here what I got:; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.smi -ofs`; `This will prepare an index of ../../bugs/ten.smi and may take some time...`; `It contains 10 molecules`; ` It took 0.077262 seconds`; `6 molecules converted`; `5 audit log messages `; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.fs -ifs `-sNc2nc(c1ccccc1)nc3ccccc23' out.smi`; `1 candidates from fingerprint search phase`; `1 molecule converted`; `12 audit log messages `; So I don't reproduce the pb.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823:356,audit,audit,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823,2,['audit'],['audit']
Security,Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2778,Audit,Audit,2778,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"Openbabel v2.4.1 [is already in Debian experimental release](https://packages.qa.debian.org/o/openbabel.html), thus AFAIK, it should appear in the nearest Debian and Ubuntu releases. As per Debian policy, non-security updates are not backported in the stable releases. I have no experience with RPM packaging and inclusion of RPM packages by their package managers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1766#issuecomment-361281635:209,secur,security,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1766#issuecomment-361281635,1,['secur'],['security']
Security,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:166,Audit,Audit,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,5,['Audit'],['Audit']
Security,Paging @jiahao - is there any way to validate against the published data set?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1865#issuecomment-401922140:37,validat,validate,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1865#issuecomment-401922140,1,['validat'],['validate']
Security,Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3366,Audit,Audit,3366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:389,access,accessing,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045,1,['access'],['accessing']
Security,"Running under gdb... Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000000; 0x00007fff8facbc9f in strncasecmp_l (). Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1214#issuecomment-281802805:71,access,access,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214#issuecomment-281802805,1,['access'],['access']
Security,See below in my case:; ```shell; werner@X10DAi:~$ ls /usr/local/lib/python3.10/site-packages; ls: cannot access '/usr/local/lib/python3.10/site-packages': No such file or directory; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802:105,access,access,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802,1,['access'],['access']
Security,"So far, I used MOPAC's `.out` files for a conversion to, e.g., a `.pdb`; however, your suggestion to access the more compact `.arc` files instead of the former rises the question if your interest is for the coordinates, or / and (which?) of the parameters should be understood by openbabel. May you detail which ones are of interest for you?. One of the differences between the output files, beside the representation of the geometries (e.g., presence / absence of an atom number count), is `.arc`'s entry `HEAT OF FORMATION` which equates `.out`'s entry `FINAL HEAT OF FORMATION`. To ease your discussion with the developers, I add an archive including a MOPAC `.mop` input, as well as `.out` and `.arc` output files of a recent computation of mine. The equally present `.pdb` was generated on the fly by. `obabel -imopout comp434+_1-0.out -opdb -O probe.pdb`. with an installation of open babel (3.1.0) as offered in the repositories of Linux Debian 10 / branch «testing». [test_conversion.zip](https://github.com/openbabel/openbabel/files/5012332/test_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045:101,access,access,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045,1,['access'],['access']
Security,"Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check; `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541:37,access,access,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541,1,['access'],['access']
Security,"Sorry it's taking me a while to respond. Could energyToKcal be implemented instead of a set of consts in the header file (e.g. ""const double JOULE_TO_CAL = whatever"")? This wouldn't need any API changes though we could expose it if useful. We have something similar for DEG_TO_RAD I think. The nice thing about a const is that the IDE will fill in the name of the variable, though I guess a function taking an enum would do the same. I'll do the necessary work for extract_thermochemistry tomorrow. Hopefully I can send you a pull request directly, and then you get to hassle me about my patch! :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407:219,expose,expose,219,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407,1,['expose'],['expose']
Security,"Sorry, what is the particular site you're trying to access with curl, and how does it connect to openbabel? Can you be a bit more specific?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614:52,access,access,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614,1,['access'],['access']
Security,"Suggestion: If the content of the .pdb is not confidential, copy-paste the file into a folder and attach the then generated .zip archive to your question. This allows to replicate your operation, and to narrow down what's going on here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-786190281:46,confidential,confidential,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-786190281,1,['confidential'],['confidential']
Security,"Sure. I note though that it's not going to be confidential if sent to openbabel-devel@lists.sf.net, but the text gives that impression.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338505884:46,confidential,confidential,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338505884,1,['confidential'],['confidential']
Security,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:530,hash,hash,530,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,3,['hash'],['hash']
Security,Thanks for commenting @baoilleach :). As long as the functions are exposed (or there is another clever way to easily calculate what I need) then I see no problem with where things are stored in the C++ API. I used to use the `GetImplicitValence()` method on atoms in combination with `GetValence()` to figure out whether or not an atom needed to be given a hydrogen. Such a situation can arise if one needed to cut (in openbabel technically remove) a bond between a QM region and MM region with FragIt. I found an old blogpost of mine on the subject from almost 6 years ago (http://pythonchem.blogspot.dk/2012/01/adding-hydrogen-atoms-is-no-mean-feat.html) which explains it with a slightly different angle. The code I used has barely changed. The updated code (see https://github.com/FragIt/fragit-main/blob/develop/src/qmmm.py#L139) needs to know how many bonds really would like to be present and the following code apparently satisfies my testcases. Hope that explains how I used the old (and new) functionality.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770:67,expose,exposed,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770,1,['expose'],['exposed']
Security,"Thanks for finding this. Fixed in r4959. The commit message is below and may explain why it started to go wrong. Fix #3544142 crash when reading some datafiles for FP3 and FP4 fingerprints.; There was a bug - accessing after the end of a std::string. This was tolerated in VC9 but not VC10. Since the bug has been there for 5 years I guess other compilers have become stricter too. Incidentally, in bug.mol shouldn't the charge on the Cl be negative? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1195#issuecomment-281802063:209,access,accessing,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1195#issuecomment-281802063,1,['access'],['accessing']
Security,"Thanks for the reminder - sorry for the very slow review. It looks okay. My last concern is that with the current implementation, there's nothing guaranteeing that a molecule will have a full set of partial charges. I think I'd prefer that the OBPartialCharge class only accept charges as a full vector<double> and checks to make sure it's equal to the number of atoms before storing. The reader should then push_back() into a temporary vector in the gauss format.cpp code. This way, if there's somehow a corrupted file (e.g., it got killed by the queuing software before the job finished) the partial charges are still safe - it won't store a set of ESP charges that are only half the molecule. I realize that's an unlikely case, but I'm trying to think from the library API perspective - you can access a set of vector<double> but set the charges one-by-one. That's asymmetric.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358:798,access,access,798,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358,1,['access'],['access']
Security,The 'smi' output format doesn't canonicalize the SMILES.; 'can' should be used instead. echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 34 audit log messages. echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 1 info messages 33 audit log messages. Original comment by: georgetu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662:202,audit,audit,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662,2,['audit'],['audit']
Security,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1019,access,accessing,1019,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,1,['access'],['accessing']
Security,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:375,access,access,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101,1,['access'],['access']
Security,The documentation on the website is outdated. I submitted some requests (below) to update it but no response. The main site doesn`t even mention the 2.3.2 release. If you give me access to the wiki I can try to update some issues. ; https://sourceforge.net/p/openbabel/feature-requests/165/; https://sourceforge.net/p/openbabel/feature-requests/164/. Original comment by: witekmo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803525:179,access,access,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803525,1,['access'],['access']
Security,The problem here is that GetNewBondVector isn't designed to handle 2D molecules with wedge/hash indications. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795087:91,hash,hash,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795087,1,['hash'],['hash']
Security,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:60,expose,exposed,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,4,['expose'],"['expose', 'exposed']"
Security,"The structure record is about a sample in solution characterized by solution NMR. Thus, though there is the provision of a .cif by the database, it isn't a .cif like from CCDC's CSD file, because there are only _place holders_ about the unit cell parameters. Instead of a typical unit cell, the parallelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.ed",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:957,access,accessible,957,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['access'],['accessible']
Security,"There are security issues with that, but some Google searching indicates that Travis and Coverity are trying to integrate them.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/63#issuecomment-32475482:10,secur,security,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/63#issuecomment-32475482,1,['secur'],['security']
Security,"There are two issues here: the enum and IsElement. I don't either of these changes should be made to the API. Regarding the function, IsElement(), we should be removing convenience functions, not adding them. This convenience function is trivially implementable in terms of the existing API. The atomic number is get/set via a Get/SetAtomicNum() function. Adding a duplicate function adds nothing to the API, but confuses users. There should only be one way to do it. Furthermore, this function will likely give rise to inefficient code, where a user/developer chooses IsElement() in favor of GetAtomicNum(). Obviously, to begin with, there are two function lookups instead of one. But rather than accessing the atomic number once, storing it and then switching on it, one could image accessing it multiple times via if IsElement(x) ; else IsElement(y); etc. I have seen examples like this in the OB codebase relating to IsCarbon() and friends. Regarding the enum, the Get/SetAtomicNum() do not use an enum, nor is the element number stored internally using an enums. Enums and unsigned ints should not be combined as they are intended to be distinct (for example, at some level of warnings, GCC complains). So getting the atomic number via GetAtomicNum() and then passing it to IsElement() currently compiles, but may also be flagged as a warning by the compiler. Sure, the user can cast it, but at that point why isn't it an unsigned int in the first place? More esoterically, I would argue that atomic number is not an enumerated type conceptually; it's an integer. Enumerated types are typically for assigning integers to non-integer items (e.g. days of the week).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357610951:698,access,accessing,698,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357610951,2,['access'],['accessing']
Security,"There might be some more profound issue here, perhaps obabel does not access all information of a .cdxml file. + I let [ChemDrawJS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) generate the structure formula of adenosine. The structure exported (structure -> get cdxml) and processed with obabel 3.1.1 to yield a .png. But hydrogen atoms (furanose alcohols and adenine) seem to be missing:. ![CD_obabel](https://user-images.githubusercontent.com/60490931/190619165-2ef61861-d765-49cd-b3b1-bbd0afbdd5bb.png). + I redrew the phosphorylated adenosine in ChemDraw (for better compatibility with version 12) as a .cdxml file, which works reasonably well on ChemDrawJS (behind the ""customize"" button is a pulldown menu to toogle on/off the red warnings). Still in ChemDrawPro12 for Windows, I exported the drawing as .svg with styles by ACS1996, Helvetica, Synthesis and one used e.g., in the Baran group at Scripps; compiled in the archive attached. (There too, .cdxml exported and processed by obabel 3.1.1 to .png loose hydrogens and add ""dots"".). [adenosineP3.zip](https://github.com/openbabel/openbabel/files/9583249/adenosineP3.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1249209336:70,access,access,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1249209336,1,['access'],['access']
Security,This has been brought up by the Debian security team as well: https://bugs.debian.org/1059277,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491:39,secur,security,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491,1,['secur'],['security']
Security,"This is correct, but as the coordinates are accessible via OBAtom.GetVector(), I don't plan to implement access to this. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805152:44,access,accessible,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805152,2,['access'],"['access', 'accessible']"
Security,"This isn't a problem with trunk, although the file exposes another bug:. #0 0x0000000100195610 in OpenBabel::OBTetrahedralStereo::IsValid (this=0x0) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:114; #1 0x0000000100195877 in OpenBabel::OBTetrahedralStereo::GetConfig (this=0x0, winding=OpenBabel::OBStereo::Clockwise, view=OpenBabel::OBStereo::ViewFrom) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:152; #2 0x00000001001a66f4 in OpenBabel::OBStereoFacade::InitMaps (this=0x7fff5fbfb210) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:84; #3 0x00000001001a6c22 in OpenBabel::OBStereoFacade::EnsureInit (this=0x7fff5fbfb210) at stereo.h:404; #4 0x000000010131fa81 in OpenBabel::OBStereoFacade::HasTetrahedralStereo (this=0x7fff5fbfb210, atomId=48) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:44; #5 0x0000000101227130 in OpenBabel::OBGraphSym::BreakChiralTies (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:541; #6 0x0000000101228805 in OpenBabel::OBGraphSym::ExtendInvariants (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1003; #7 0x0000000101229435 in OpenBabel::OBGraphSym::CalculateSymmetry (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1058; #8 0x000000010122988c in OpenBabel::OBGraphSym::GetSymmetry (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1094. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794:51,expose,exposes,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794,1,['expose'],['exposes']
Security,"This seems to happen in ConnectTheDots, see below when running with --errorlevel 4, within valgrind. Kekulize is called 126 times, and EndModify complains about being called once too many.. Vincent. valgrind babel ---errorlevel 4 Open_babel_crash.cif Open_babel_crash.xyz . *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule Crystallographic Information File ; ============================== ; *** Open Babel Audit Log in ConnectTheDots ; Ran OpenBabel::ConnectTheDots ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize . [SNIP: call to Kekulize a total number of 126 times]. ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence ; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Debugging Message in EndModify ; _mod is negative - EndModify() called too many times ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format ; 1 molecule converted . Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168:289,Audit,Audit,289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168,9,['Audit'],['Audit']
Security,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:274,captcha,captcha,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850,1,['captcha'],['captcha']
Security,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:730,audit,audit,730,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,2,['audit'],['audit']
Security,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:179,access,access,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,1,['access'],['access']
Security,"While you're at it, is it possible to expose this function to a python API? I think most of us would like to use it to get a list.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466:38,expose,expose,38,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466,1,['expose'],['expose']
Security,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:319,access,access,319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,1,['access'],['access']
Security,"Works fine on 64-bit Windows. Strangely though, only 2 molecules are converted either with 32-bit or 64-bit:. C:\Tools\openbabel\trunk\windows-vc2008\build64\Release>babel ten.smi -ofs; This will prepare an index of ten.smi and may take some time...; It contains 10 molecules; It took 0 seconds; 2 molecules converted; 31 audit log messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335:322,audit,audit,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335,1,['audit'],['audit']
Security,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:883,access,access,883,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,1,['access'],['access']
Security,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:600,audit,audit,600,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['audit'],['audit']
Security,"Yes. I tried with a subset of the large SDF file containing only 10 ligands, and processed them as I explained it last comment. ; The files can be accessed in the Google drive link, [https://drive.google.com/drive/folders/19tDdzlWhIfmRpBGNMW1mINjm9RF0LBR3?usp=drive_link]. I have also uploaded docking output from autodock vina of two ligand, emem8 and emem9 respectively.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067:147,access,accessed,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067,1,['access'],['accessed']
Security,"Yes. It looks like the problem is on Matplotlib, I just changed; ""from PIL import Image"" to ""import Image"" in matplotlib/backend_bases.py; following the recommendation from this blog post:; http://jaredforsyth.com/blog/2010/apr/28/accessinit-hash-collision-3-both-1-and-1/#the-solution; and I can load pybel and matplotlib together now. It also looks like Matplotlib loads PIL ""the wrong way"" in other modules, should I report it to them?. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148:231,access,accessinit-hash-collision-,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148,1,['access'],['accessinit-hash-collision-']
Security,"You mean, instead of the string? Data can only be returned via; obgenericdata. On 28 Nov 2017 21:10, ""Maciej Wójcikowski"" <notifications@github.com> wrote:. > While you're at it, is it possible to expose this function to a python; > API? I think most of us would like to use it to get a list.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeeQp32g1gUYbD4EHQ22pCjnBf4Vks5s7HazgaJpZM4Qt58A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347902435:197,expose,expose,197,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347902435,1,['expose'],['expose']
Security,"You need to keep a reference to the molecule if you are accessing its; atoms. Otherwise the atom is destroyed when the molecule goes out of scope. On 19 Jul 2017 2:50 a.m., ""Geoff Hutchison"" <notifications@github.com>; wrote:. > Seriously, I'm not sure why anyone would want to do that. Why would you; > want to re-parse the same string repeatedly?; >; > But what you're doing later is just bad code. You're parsing a molecule; > that Python probably treats as a temporary. Then you grab an atom; > reference. That's still probably a temporary. Then you put that into a list.; >; > Then *after* putting all those atom references in a list, you interrogate; > them? I'm not surprised it leads to weird behavior. Python (and the SWIG; > interface) can't determine whether the temporary can be free, so it; > probably frees some of them. Now you're asking for valence on some; > undefined C++ pointer.; >; > What exactly are you trying to do? Then we can probably come up with a; > safe way to do that.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGelHVyH_Q3jXPmhX3bRQYeEp2NDWks5sPWDQgaJpZM4OXSC1>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990:56,access,accessing,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990,1,['access'],['accessing']
Security,]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be inst,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4095,secur,security,4095,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,ain DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2418,secur,security,2418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,al-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 ope,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4254,secur,security,4254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-1,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2937,secur,security,2937,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;, filetype=2,; bSave=false, pDoc=0x0) at file.cc:198. Origin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:1104,access,access,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,1,['access'],['access']
Security,buntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiver,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3310,secur,security,3310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,ckages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2601,secur,security,2601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4540,hash,hash,4540,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['hash'],['hash']
Security,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1379,hash,hash,1379,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,3,['hash'],['hash']
Security,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1715,access,access,1715,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['access'],['access']
Security,"e(OpenBabel::OBBase*, std::string) (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D21D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7); ==7186== ; ==7186== Invalid read of size 4; ==7186== at 0x4FB79FB: std::locale::~locale() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FB49E0: std::ios_base::~ios_base() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FCD872: std::basic_istream<char, std::char_traits<char> >::~basic_istream() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x40FC03A: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x723B420: OpenBabel::XMLConversion::~XMLConversion() (in /usr/lib/openbabel/2.2.3/cmlformat.so); ==7186== by 0x40FBE27: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D57D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7); ==7186== Address 0x0 is not stack'd, malloc'd or (recently) free'd; ==7186== ; ==7186== ; ==7186== Process terminating with default action of signal 11 (SIGSEGV); ==7186== Access not within mapped region at address 0x0; ==7186== at 0x4FB79FB: std::locale::~locale() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FB49E0: std::ios_base::~ios_base() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FCD872: std::basic_istream<char, std::char_traits<char> >::~basic_istream() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x40FC03A: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x723B420: OpenBabel::XMLConversion::~XMLConversion() (in /usr/lib/openbabel/2.2.3/cmlformat.so); ==7186== by 0x40FBE27: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D57D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7). Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797963:2338,Access,Access,2338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797963,1,['Access'],['Access']
Security,es/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2233,secur,security,2233,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,etadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2509,secur,security,2509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2656,audit,audit,2656,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,2,['audit'],['audit']
Security,idization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3072,Audit,Audit,3072,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2680,Audit,Audit,2680,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"k the time to figure out which commit started causing the issue that I've been having. You're probably going to think it's strange, but believe it or not, it's this one:. ac2a135eb8560d5d8246eee2abdb5d266ad9ab17. It's that line of white space that was deleted at the end of the file. I'm really not sure why this has been causing an issue for OpenBabel::SpaceGroup::GetSpaceGroup(), but it has. . The function that is having the problem is ""const SpaceGroup \* SpaceGroup::GetSpaceGroup (const string &name_in)"" src/math/spacegroup.cpp. The match isn't being found when ""_SpaceGroups.sgbn.find(name)!=_SpaceGroups.sgbn.end()"" is being called on line 381. I looped through the map ""sgbn"" that the string is being compared to in the code, and the correct spacegroup ""-I 4bd 2c 3"" is in there. I don't know why it isn't being found. It must be some kind of iterator issue or something. But that's the last one in data/space-groups.txt, so the extra line at the end of the file must have something to do with it. Anyways, adding that extra line of whitespace at the end of data/space-groups.txt fixes the issue for me. In addition, I had another issue come up with some recent commits. ""SpaceGroup::GetSpaceGroup(""-P 1"")"" fails because of the function ""RemoveWhiteSpaceUnderscore(name_in)"" added to line 351 of this recent commit: d5de951d606735b61d1686a0ea2321066956e085. It fails because it ends up trying to compare ""-P 1"" with ""-P1"" (removing the space in the middle), and that doesn't work. Unfortunately, he says that this fixes the issues for him with PDB, so he probably wants to keep it. Maybe if I move it after match line on the next line?. Anyways, do you want me to send a pull request? The reason I need this to work is because avogadro's 'setSpaceGroup()' function crashes every time it's called because of these issues. So I can't set a spacegroup and I can't get access to features like ""fillUnitCell()"" and ""symmetrize()"" (and of course, neither can other people, too). Thanks,; Patrick",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/242#issuecomment-195695904:1892,access,access,1892,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242#issuecomment-195695904,1,['access'],['access']
Security,"l-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; N",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4347,secur,security,4347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"llelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1302,access,access,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['access'],['access']
Security,"lls as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1070,secur,security,1070,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"molecule crystallography -- and your ligand, if crystallized once, may fit into this category -- _typically_ the non-hydrogen atoms are identified first. Completing the structure solution, hydrogens are taken into consideration, too. Depending on the programs used (maybe [ShelX](https://shelx.uni-goettingen.de/) and [Olex2](https://www.olexsys.org/olex2/) are staples for you), and the quality of the experimental data available, this may be easy, because there are templates to start with. E.g., for a methyl group around a (sp^3) carbon, the program knows that three hydrogens in this tetrahedral arrangement at a certain (temperature dependent) distance to C usually is a good _initial_ guess. And hence labels these hydrogens bound to `C1` as `H1A`, `H1B`, `H1C`, too. This automatism to add hydrogens _and_ to label them according to their rooting atom _apparently_ is not / yet (completely) included by OpenBabel; worth a feature request. This suggest of the three hydrogens, as well as their labels is a mere _optional suggestion_ by the program to the user. S/He may decide to attribute experimental data to the hydrogens without this help, s/he may decide to label these as `H1`, `H52`, `H365`, too; the model is not better, or worse because of this, only less accessible to the next user deposit in the .cif format. As shown in the example attached below, even if these labels _initially_ were organized well, the direct conversion `obabel -icif example.cif -opdb -O example.pdb` may render this attribution invisible. A light-weight alternative thus may be, as shown, to read the initial .cif by Jmol, to write by Jmol an intermediate .pdb and to convert this file by OpenBabel into an eventually complete .pdb with header and detailed label information. (Here, there was no explicit ligand attribution, though). Or to try CCDC's Mercury program instead (reads both .cif and .pdb, may export .pdb, too). [test_case.zip](https://github.com/openbabel/openbabel/files/6057253/test_case.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787481988:1496,access,accessible,1496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787481988,1,['access'],['accessible']
Security,"ntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4571,secur,security,4571,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"ntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ub",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4472,secur,security,4472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,ocal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maepar,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4157,secur,security,4157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,og in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3562,Audit,Audit,3562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"olFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chirality is conserved with InChI output ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+ ). It's a funky structure; it has a plane of symmetry through the hydroxyl, so I suppose it's a structural stereoisomer rather than specifically chiral, but I'm not sure given that the ring is constrained (? - would it be able to invert back-and-forth?). For that matter, I'm not sure that the stereochemistry describing the bonds",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:1482,access,accessible,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559,1,['access'],['accessible']
Security,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1430,access,access,1430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,3,['access'],['access']
Security,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3280,certificate,certificate,3280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['certificate'],['certificate']
Security,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1105,hash,hash,1105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,7,['hash'],['hash']
Security,ranslation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/univer,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2147,secur,security,2147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1576,hash,hashes,1576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['hash'],['hashes']
Security,"red_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__pac",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3936,hash,hash,3936,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['hash'],['hash']
Security,rse amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2877,secur,security,2877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:848,Audit,Audit,848,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,16,['Audit'],['Audit']
Security,"solute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1031,Validat,ValidationSuite,1031,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Validat'],['ValidationSuite']
Security,"t:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly inst",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4287,secur,security,4287,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1037,secur,security,1037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"tom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's branch *unstable* (or sid) for about 5 days; if accepted, they then percolate into *testing*.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:2683,secur,security,2683,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['secur'],['security']
Security,ttp://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [692,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2476,secur,security,2476,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,tu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-open,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3967,secur,security,3967,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"tu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubunt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4665,secur,security,4665,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,untu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... D,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4062,secur,security,4062,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4761,secur,security,4761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"ve.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4380,secur,security,4380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:265,Audit,Audit,265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,9,"['Audit', 'audit']","['Audit', 'audit']"
Security,"y seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are plenty of examples in the `tools` directory... Yes, I am learning how to use the library from the `/tools` directory and from other programs using the library, like Avogadro. Thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:2214,access,access,2214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['access'],['access']
Testability," (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization aga",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1119,test,tested,1119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,1,['test'],['tested']
Testability, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4842,Log,Log,4842,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,"['Log', 'log']","['Log', 'log']"
Testability," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:1818,test,test,1818,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159,2,['test'],['test']
Testability," -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1315,Test,Test,1315,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5051,log,log,5051,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability," 0 0; 3 9 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check obabel for Python; xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> print(openbabel.__version__); 3.0.0; >>> ; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No su",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9204,test,testing,9204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['test'],['testing']
Testability," 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3413,Test,Test,3413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability, 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFa,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2557,Test,Test,2557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9867,test,testing,9867,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['test'],['testing']
Testability, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1579,Log,Log,1579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,['Log'],['Log']
Testability," > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Python bindings will be compiled; > Configuring done; > CMake Warning (dev):; > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > set the policy and suppress this warning.; > ; > MACOSX_RPATH is not specified for the following targets:; > ; > inchi; > openbabel; > ; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Generating done; > ; > Need help! Thank you~; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:21601,test,test,21601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability," > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:18942,test,test,18942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability," > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:21854,test,test,21854,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testexample']"
Testability, AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3568,Log,Log,3568,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2564,Log,Log,2564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2515,log,logical,2515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,1,['log'],['logical']
Testability," CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1689,test,test,1689,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3666,Log,Log,3666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4156,Log,Log,4156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clea,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4254,Log,Log,4254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in A,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4352,Log,Log,4352,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Lo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4450,Log,Log,4450,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4548,Log,Log,4548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4646,Log,Log,4646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordin,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4744,Log,Log,4744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability," SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9158,test,test,9158,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testfastsearch']"
Testability, Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2083,Test,Test,2083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability, Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2366,Test,Test,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:7775,test,test,7775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testfastsearch']"
Testability," YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1033,log,log,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['log'],['log']
Testability," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1141,test,test,1141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['test'],['test']
Testability," babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:1796,log,log,1796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability," chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; th",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11508,log,log,11508,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability," newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1222,Test,Test,1222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/mod",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1033,test,test,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability," plain single lines. The entry in IUPAC's Gold Book[2] with the example about the complex of ammonia and borane however uses the arrow; possibly the delta in the electronegativities in this example is larger, than in your example of the carbene complex. However, Gold Book equally features an entry coordination[2b] with the statement. «The synonym 'dative bond' is obsolete. (The origin of the bonding electrons has by itself no bearing on the character of the bond formed. Thus, the formation of methyl chloride from a methyl cation and a chloride ion involves coordination; the resultant bond obviously differs in no way from the C–Cl bond in methyl chloride formed by any other path, e.g. by colligation of a methyl radical and a chlorine atom.)». which is more similar to your argument ""use a plain line"". I don't know why then IUPAC's Gold Book (still) retains an entry about dative bonds. The test site of ChemDraw JS[3] -- which should be the easiest for the owner to update (once CambridgeSoft -- Brecher's affiliation 2008 -- meanwhile acquired by Perkin), uses dative bonds and again the arrow. A query of PubChem for ZnPc[4] yields a 2D model which does not deploy arrows to the more electropositive metal, but instead dotted lines. It seems to be their pattern adopted, based on the 2018 publication «PubChem chemical structure standardization»[5] by authors involved in PubChem's work (figs 13, 20b, 29b, 29c). Et3N -> BH3: Pauling electronegativity N: 3.04, B: 2.04, delta: 1.00; in case of ZnPc with bonds between Zn and N: Zn: 1.65, delta: 1.39; CuPc Cu: 1.90, delta: 1.50; but; imidazole ./. Pt (your carbene complex) C: 2.55, Pt: 2.28, delta: 0.27; (values by https://en.wikipedia.org/wiki/Electronegativity, version 2023-12-07). [1] Graphical representation standards for chemical structure diagrams (IUPAC Recommendations 2008), https://doi.org/10.1351/pac200880020277; [2] https://goldbook.iupac.org/terms/view/D01523, revision February 24, 2014; [2b] https://goldbook.iupac.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613:1387,test,test,1387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613,1,['test'],['test']
Testability," python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molecule twice, or even four times negative may be indicative that an automated approach requires supervision and critical inspection. + molecule passing `-c 2`:. ![out_-2](https://github.com/openbabel/openbabel/assets/19709084/a3311e12-0e81-4739-a8c5-03662ea5ea00). + molecule passing `-c 4`. ![out_-4](https://github.com/openbabel/openbabel/assets/19709084/758aa090-2349-4515-8014-6a802d23ab7b). [out_-2.sdf.zip](https://github.com/openbabel/openbabel/files/12467477/out_-2.sdf.zip); [out_-4.sdf.zip](https://github.com/openbabel/openbabel/files/12467478/out_-4.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1915,test,tested,1915,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605,1,['test'],['tested']
Testability," warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:8437,test,test,8437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testfastsearch']"
Testability,"""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:16141,test,test,16141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbindings']"
Testability,"""int charge = 0;"" perhaps? Is there some reason the BIG_ENDIAN test was removed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/330#issuecomment-234736238:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/330#issuecomment-234736238,1,['test'],['test']
Testability,"### Hi tpfto,. - Have you looked at the error messages? The identical error message I assume you receive when running this command is also below. - Have you tried to generate canonical smiles also? I was having issues with my allenes when converting smiles->to canonical smiles, so that's how I got here. test:; ==============================; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream ar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:305,test,test,305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['test']
Testability,#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1762,test,test,1762,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2091,test,test,2091,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2420,test,test,2420,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2749,test,test,2749,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3078,test,test,3078,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,(Mostly) fixed version of logp.txt. Original comment by: bentsm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1115#issuecomment-281800669:26,log,logp,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115#issuecomment-281800669,1,['log'],['logp']
Testability,"(Note to self: add to docs). # Add a small number of tests; 1. For each test you want to add, add a new switch statement target (the ""test ID"") at the bottom of regressions.cpp. To avoid merge problems it may be a good idea to choose test IDs in a particular unique range, e.g. values starting at 6200, rather than the next available integer.; 2. The switch statement should call a function that actually carries out the test. Appropriate code is described below.; 3. Edit the line starting with ""set (regression_parts"" in :file:`tests/CMakeLists.txt` to include your new test target integers.; 4. Rebuild the project. Now it should be possible to run your test directly with ""testrunner regression NN"" where NN is the test ID. It should also be run automatically by ""make test"". # Test code. Need to write this up. For the moment, check out existing tests. You can use OB_ASSERT, or printf(""Fail\n""), to fail a test. The best tests fail without the patch, and pass afterwards. Even better tests will cover a larger range of behaviour to ensure that it keeps working.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473:53,test,tests,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473,16,"['Test', 'test']","['Test', 'test', 'testrunner', 'tests']"
Testability,"(That is so cool. It would be great if there was some way to run this on our own servers for every commit and so can immediately see when someone breaks ABI. We find it almost impossible to manage this otherwise.). As well as testing the SVN trunk, can you test against the 2.3.1 branch. It's at http://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/branches/openbabel-2-3-x/. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800978:226,test,testing,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800978,2,['test'],"['test', 'testing']"
Testability,"(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16091,test,test,16091,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; matrix3x3.cpp; matrix.cpp; kekulize.cpp; griddata.cpp; Gene",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:1152,log,log,1152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,"); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14092,test,test,14092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testkekule']"
Testability,"); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:11627,test,test,11627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testunique']"
Testability,"*bump* - can you see if this solves John's problems. It looks okay to me, but I don't have his test file.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099:95,test,test,95,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099,1,['test'],['test']
Testability,", this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfully:. ```bash; $ awk -f filter.awk check01.smi ; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; c1cccnc1	; CC	; CCC	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:2418,test,test,2418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,2,"['Test', 'test']","['Test', 'test']"
Testability,"- 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chemkinformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cdxmlformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBXMLFormats\Release\BuildLog.htm""; OBXMLFormats - 5 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:13370,log,log,13370,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"-- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Could NOT find Eigen2; -- checking for module 'cairo'; -- found cairo, version 1.6.4; -- Found Cairo: /usr/lib/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python2.5; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:1890,Test,Test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Test'],['Test']
Testability,"-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: C",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:12079,log,log,12079,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,". ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returne",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:4549,log,log,4549,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2176,Test,Test,2176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: Se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2271,Test,Test,2271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"..... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 - phmodel_Test (SEGFAULT). 	 33 - smilesmatch_Test (SEGFAULT). 	 35 - pytest_babel (Failed). 	 37 - pytest_fastsearch (Failed). Makio. Original comment by: makio323",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3896,Test,Test,3896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,9,"['Test', 'test']","['Test', 'tests']"
Testability,........ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test ....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2740,Test,Test,2740,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,.................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . ------------------------------------------------------------------------------,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2498,benchmark,benchmark,2498,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,......................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1351,benchmark,benchmark,1351,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,"....and it would be great to have a test case (e.g. in testbindings.py) for; each of the formats supported. Actually, I was going to suggest merging yours first. But either way :-). On 13 July 2017 at 14:17, Matt Swain <notifications@github.com> wrote:. > Yeah, makes sense, just a little more work!; >; > I'll wait until Noel's new element handling code is merged first,; > otherwise there will be a clash.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1596#issuecomment-315074903>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGSHXO--H1lTOs2Jjog3ul8eFE1DAks5sNhkCgaJpZM4OO2xn>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1596#issuecomment-315080216:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1596#issuecomment-315080216,2,['test'],"['test', 'testbindings']"
Testability,"./obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1762,log,log,1762,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,".01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAUL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3505,Test,Test,3505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1601,test,test,1601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1615,test,test,1615,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3; -DRUN_SWIG=ON -DBOOST_ROOT=/usr/include/boost169 -DBOOST_,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1890,test,test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,/Users/felixgrun/Desktop/TestFormats/PDBQT_outputs.txt. Original comment by: fgrun,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1088#issuecomment-281800204:25,Test,TestFormats,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088#issuecomment-281800204,1,['Test'],['TestFormats']
Testability,/home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1234,test,test,1234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1312,test,test,1312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:16917,test,test,16917,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbindings']"
Testability,00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym .....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3221,Test,Test,3221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel ...................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3128,Test,Test,3128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"2 CIF files, 2 python scripts, error log. Original comment by: stewenner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800792:37,log,log,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800792,1,['log'],['log']
Testability,"21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1257,test,test,1257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for libc-bin (2.31-0ubuntu9.2) ...; Processing triggers for man-db (2.9.1-1) ...; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # test OpenBabel ; xubuntu@xubuntu:~$ cd Desktop/; xubuntu@xubuntu:~/Desktop$ obabel -:""c1ccncc1"" -h --gen3d -O pyridine.sdf; 1 molecule converted; xubuntu@xubuntu:~/Desktop$ cat pyridine.sdf . OpenBabel01162216093D. 11 11 0 0 0 0 0 0 0 0999 V2000; 1.4330 0.0516 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.6880 1.2260 0.0015 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.6942 1.1256 0.0022 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3624 -0.0485 0.0055 N 0 0 0 0 0 0 0 0 0 0 0 0; -0.6120 -1.1719 0.0069 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.7738 -1.1733 0.0033 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.5185 0.0904 -0.0011 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.1715 2.1963 0.0013 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.3198 2.0134 0.0001 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.1726 -2.1023 0.0114 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.3254 -2.1063 0.0027 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 6 2 0 0 0 0; 1 7 1 0 0 0 0; 2 3 2 0 0 0 0; 2 8 1 0 0 0 0; 3 4 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 5 10 1 0 0 0 0; 6 11 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check openbabe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:2436,test,test,2436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161,1,['test'],['test']
Testability,33 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2602,benchmark,benchmark,2602,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,"4 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1945,test,test,1945,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"4 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1959,test,test,1959,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"41) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 1 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obconv.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. File Added: ConfigurationManager_05 Jun. 05 23.14.gif. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:4418,log,log,4418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,2,['log'],['log']
Testability,42.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; .........................................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1455,benchmark,benchmark,1455,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,"44 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.80510 H_ 1 0 0.06091; HETATM 13 H13 RES A 444 -2.38340 8.44830 11.29190 H_ 1 0 0.06091; HETATM 14 H14 RES A 444 -3.67620 6.90350 13.29250 H_ 1 0 0.06248; HETATM 15 H15 RES A 444 -3.39390 4.67230 14.28870 H_ 1 0 0.06767; HETATM 16 H16 RES A 444 -2.39890 2.87120 12.93810 H_ 1 0 0.13754; FORMAT CONECT (a6,12i6). CONECT 1 2 8 9; ORDER 1 2 1 1; CONECT 2 1 3 11; ORDER 2 2 1 1; CONECT 3 2 4 6; ORDER 3 1 1 2; CONECT 4 3 5 12 13; ORDER 4 1 1 1 1; CONECT 5 4 10; ORDER 5 1 1; CONECT 6 3 7 14; ORDER 6 2 1 1; CONECT 7 6 8 15; ORDER 7 1 2 1; CONECT 8 7 1 16; ORDER 8 2 1 1; CONECT 9 1; ORDER 9 1; CONECT 10 5; ORDER 10 1; CONECT 11 2; ORDER 11 1; CONECT 12 4; ORDER 12 1; CONECT 13 4; ORDER 13 1; CONECT 14 6; ORDER 14 1; CONECT 15 7; ORDER 15 1; CONECT 16 8; ORDER 16 1; END; ```. The intermediate .sdf carries three double bonds, the visualization in Jmol now carries the cyclic array of \pi electrons:. ![cation_jmol](https://github.com/openbabel/openbabel/assets/19709084/fa3d98f4-c747-4f98-9837-a78d65134bce). (While reading the .sdf, the computation of bonds by Jmol was disabled.). The labeling of `N1` as `N_R` in the .bgf file now matches your requirement, too. However, does the modification improve the file *over all*? For ease of replication, the files used/obtained in this limited test are attached in the .zip archive below. [2024-05-02_test_case_cation.zip](https://github.com/openbabel/openbabel/files/15189528/2024-05-02_test_case_cation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:3288,test,test,3288,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['test'],['test']
Testability,"45852 -0.45523; H 0.47738 0.04083 1.04048; H -0.82678 1.21794 -1.47098; H 0.41625 3.05512 -0.51673; H 0.03859 2.54279 1.14727; H -2.85296 5.45082 1.09341; H -4.30676 6.12747 0.40030; H -2.88334 7.93042 -0.02392; H -1.44507 6.93572 0.03427; H -1.31169 6.63066 -2.20266; H -2.18051 8.12576 -2.25049; H -4.04330 7.15049 -3.16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.smi --gen3d -O converged3d.sdf; ==============================; *** Open Babel Warning in Corre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2358,test,test,2358,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['test'],['test']
Testability,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:869,Log,Log,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Log'],['Log']
Testability,7 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Excep,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2936,Test,Test,2936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,8.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomAtomIter 100 8 1.332 ms ; 1.75625 us 1.73897 us 1.78088 us ; 105.282 ns 78.5718 ns 131.181 ns ; ; BeginNbr / NextNbr 100 13 1.4313 ms ; 1.12652 us 1.11472 us 1.14416 us ; 72.6578 ns 53.7948 ns 93.3306 ns ; ; FOR_NBORS_OF_ATOM 100 63 1.3356 ms ; 224.037 ns 221.28 ns 227.784 ns ; 16.3251 ns 13.0803 ns 19.7404 ns ; ; GetNbrs 100 60 1.344 ms ; 238.905 ns 235.938 ns 242.825 ns ; 17.3301 ns 13.9846 ns 20.3396 ns ; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:3530,benchmark,benchmark,3530,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,2,['benchmark'],['benchmark']
Testability,"85 -1.82921 -0.80748; H 1.19877 -2.22364 0.72465; H -0.09393 -1.05871 -1.63704; H 1.32780 0.45852 -0.45523; H 0.47738 0.04083 1.04048; H -0.82678 1.21794 -1.47098; H 0.41625 3.05512 -0.51673; H 0.03859 2.54279 1.14727; H -2.85296 5.45082 1.09341; H -4.30676 6.12747 0.40030; H -2.88334 7.93042 -0.02392; H -1.44507 6.93572 0.03427; H -1.31169 6.63066 -2.20266; H -2.18051 8.12576 -2.25049; H -4.04330 7.15049 -3.16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.sm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2319,test,test,2319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['test'],['test']
Testability,": internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 - phmodel_Test (SEGFAULT). 	 33 - smilesmatch_Test (SEGFAULT). 	 35 - pytest_babel (Failed). 	 37",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3800,Test,Test,3800,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. S,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1988,Test,Test,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(E",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1361,test,test,1361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 6 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:3493,log,log,3493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,2,['log'],['log']
Testability,"=======; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I added the hydroxy groups, but it managed. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)C(C(CC(C)C)CC(C)O)C(CC(C)C)CC",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:1317,test,test,1317,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['test']
Testability,============= ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2882,Log,Log,2882,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,========================= ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2980,Log,Log,2980,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"> @ricrogz - I can't merge something that fails tests. If `master` is needed for that, no problem. I just want to make sure that we can freeze versions for e.g openbabel-3.1.0. Yeah, sorry, I forgot that the switch to disable the test was only in maeparser's master. I'll restore the ""master"" versions for now. I didn't really answer your question: the APIs to maeparser and coordgen are rather stable (we don't make many changes that require updates to calling code, and I'm happy to assist when that happens), so it should be ok to keep it set to ""master"", and change it to whatever version is the current one when you prepare for a release. > I'm aware of the annoying GitHub tar/zip variance. Happy to work on that. I gave it a try already, using `find_path` to search for the directory in which maeparser/coordgen's CMakeLists.txt lives. That seemed to work fine in the CI builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-553073459:48,test,tests,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-553073459,2,['test'],"['test', 'tests']"
Testability,"> @schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach. Thank you very much for pointing me to this additional line of discussion - will take a look there",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720:303,benchmark,benchmark,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720,1,['benchmark'],['benchmark']
Testability,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792,1,['test'],['test']
Testability,"> @timvdm - if we un-comment the smiles at the end of `test/testdistgeom.py` do they work as well?. Yes, but it will take longer for the test to run (more than 1 minute on my machine). I'm not sure if this is an issue? The other tests run quickly so I didn't want to add a test which takes much longer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609968401:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609968401,5,['test'],"['test', 'testdistgeom', 'tests']"
Testability,"> As well as testing the SVN trunk, can you test against the 2.3.1 branch. Several branches are not supported yet. So, you need to wait for the 2.3.1.tar.gz to be released, which will appear in the tracker on the next day after the release. However, you can add the basic tool to the ""make test-abi"" step in your buld system:; 1) svn co http://forge.ispras.ru/svn/abi-compliance-checker; 2) cd abi-compliance-checker/trunk/; 3) sudo perl Makefile.pl -install --prefix=/usr; 4) abi-compliance-checker -lib openbabel -d1 OLD.xml -d2 NEW.xml. The basic OLD.xml is the library XML-descriptor:. <version>; 2.3.0; </version>. <headers>; openbabel-2.3.0/include/; </headers>. <libs>; openbabel-2.3.0/lib/; </libs>. you might also want to add some extra sections (like in our tracker) to fix some non-self compiled headers in your project:. <include_preamble>; string.h; limits.h; typeinfo; mol.h; </include_preamble>. <skip_headers>; include/inchi/; </skip_headers>. <skip_constants>; OBFPRT; IF_OBFF_LOGLVL_HIGH; BABEL_DATADIR; IF_OBFF_LOGLVL_MEDIUM; OBERROR; OBAPI; OBCOMMON; EXTERN; IF_OBFF_LOGLVL_LOW; OBCONV; </skip_constants>. 5) Also you can make a snapshot of the stable ABI (""reference implementation""):; $> abi-compliance-checker -lib openbabel -dump OLD.xml; will create the openbabel-OLD.abi.tar.gz and then compare it with a new version:; $> abi-compliance-checker -lib openbabel -d1 openbabel-OLD.abi.tar.gz -d2 NEW.xml. > It would be great if there was some way to run this on; our own servers for every commit and so can immediately see when someone; breaks ABI. It's possible if you have any continuous integration system. Just add this checker as a new custom test. Original comment by: andrey-moscow",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800980:13,test,testing,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800980,4,['test'],"['test', 'test-abi', 'testing']"
Testability,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:137,test,tests,137,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,1,['test'],['tests']
Testability,"> Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. Sorry, I didn't understand this. The change; ```; - if(LoadLibrary( lib_name.c_str() )); + if(LoadLibrary( (PTCHAR) lib_name.c_str() )); ```; did work on my machine. > Can you try the following change and see whether the build completes for you too?; > ; > ```; > --- a/CMakeLists.txt; > +++ b/CMakeLists.txt; > @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); > CACHE STRING ""Binary build output directory""); > endif(); > if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); > - if(UNIX); > + if(UNIX OR MINGW); > set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; > CACHE STRING ""Library build output directory""); > else() # This is preferable on WIndows for example - bin = lib directory.; > ```. The new `cmake` with the change from `if(UNIX)` to `if(UNIX OR MINGW)`, keeping the original `dlhandler_unix.cpp`, does not prevent the subsequent compilation error to occur. It still tries to compile `dlhandler_unix.cpp` without success.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404:71,test,tested,71,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404,1,['test'],['tested']
Testability,"> I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. Same issue here, I have also tried manually specifying the locations by downloading the python part of the repository and running:; python setup.py build_ext -I ""C:\Program Files\OpenBabel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old vers",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:434,test,testenv,434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,3,['test'],['testenv']
Testability,"> I haven't tested and I don't do minimizations that often but you could try with `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better. This seems to be working fine. Thank you!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199:12,test,tested,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199,1,['test'],['tested']
Testability,"> I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp. That's interesting. I guess though, that with an incorrect sdf file the routine is not used either, or could you try that, e.g. by removing the double bonds or the charge?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831528089:135,log,log,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831528089,1,['log'],['log']
Testability,"> I removed the charge from the SDF file. The routine is not called neither (I put the same breakpoint). However, the output is wrong, which means that carbons and nitrogens of the imidazole ring are considered to be aliphatic:; > IDX TYPE RING; > 1 c2 AL; > 2 c2 AL; > 3 n3 AL; > 4 c3 AL; > 5 n3 AL; > 6 c3 NO; > 7 c3 NO. > > I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp.; > ; > That's interesting. I guess though, that with an incorrect sdf file the routine is not used either, or could you try that, e.g. by removing the double bonds or the charge?. There is a boolean flag to check if is needed most *format*.cpp files but gaussformat.cpp. For example, you can find it in cofformat.cp, maeformat.cpp, mdlformat.cpp, mol2format, smilesformat.cpp. . In all these files, needs_kekulization is false but it becomes true based on different criteria: . for example in mol2format.cpp:. 449 if (str == ""ar"" || str == ""AR"" || str == ""Ar"") {; 450 order = 1;; 451 flags = OB_AROMATIC_BOND;; 452 needs_kekulization = true;; 453 }. but in mdlformat:; 545 if (order == 4) {; 546 flag |= OBBond::Aromatic;; 547 order = 1;; 548 needs_kekulization = true;; 549 }. And finally there is not needs_kekulization in gauss format.cpp at all.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831546666:460,log,log,460,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831546666,1,['log'],['log']
Testability,"> I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay).; > ; > If you can't see any alternative, is it okay if I take a look?. Sure it's OK - please feel free to look. I am an old user of Openbabel, but this is my first participation in the project. I already have code that solves the issue without copying (should I post another pull request for it, or how should it be handled to show it to you? It is very minimalistic change, two lines from master branch). After a match (it seems to work in the cases that I tested), I just check whether atom idx in match is not higher than count of atoms in the starting molecule. Only H atoms from SMARTS have higher idx, so I ignore them and it seems to work. I am however unsure it will work all the time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741:384,benchmark,benchmark,384,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741,2,"['benchmark', 'test']","['benchmark', 'tested']"
Testability,"> I'll sort it out asap. thanks for the quick reply. We can arrange to send you the build log, if that can be of any help. just let me know, in case. ciao; gabriele",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1962#issuecomment-482605071:90,log,log,90,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1962#issuecomment-482605071,1,['log'],['log']
Testability,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:1357,log,logic,1357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796,1,['log'],['logic']
Testability,"> If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`. I believe this issue is specific to arm64 architecture.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034:63,test,testing,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034,1,['test'],['testing']
Testability,"> MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIAB",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:16026,test,test,16026,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbindings']"
Testability,"> Ok, now I realise the difference between the two options.; > I will confirm by comparing coordinates generated by both methods. If the initial conformation as well as the modified one are exported; into the .xyz format, e.g. by. ```; obabel -isdf input_file.sdf -oxyz -O output_file.xyz; ```. a rapid quantifying comparison of the two may be achieved by a Kabsch; test. Jimmy Charnley initiated a lightweight implementation for; Python, which is shared on GitHub (https://github.com/charnley/rmsd); under the permissive BSD license.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434:366,test,test,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434,1,['test'],['test']
Testability,"> Thanks. The fix makes sense - can you add a unit test. Otherwise, I'm sure this will creep back again. Will definitely do that. I am not familiar with cmake yet, trying to figure out how to do it. BTW is there any documentation how to write tests? README in /test contains a todo list...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561156090:51,test,test,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561156090,3,['test'],"['test', 'tests']"
Testability,> What changed so much with the `tests/CMakeLists.txt` file?. Line ending seems to be changed from LF to CRLF.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167:33,test,tests,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167,1,['test'],['tests']
Testability,"> Why are there RDKit related files in there?. I intended to do a comparison in protonation predictions between the toolkits so we could at least have tests for the unambiguous cases, but haven't been able to find the time to do so.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590:151,test,tests,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590,1,['test'],['tests']
Testability,"> `conda install -c conda-forge openbabel`, this command is quite dangerous as it also upgrade python version. fwiw, I haven't seen that behaviour, I was using python 3.7.x in my environment and the newest version of python at the time was 3.9.x. Python's version was not changed by running this command. Regardless, conda will tell you its update plan before it does anything, so, future reader, please check the update plan to make sure it isn't going to force a bad update before hitting [y]. And you can always test it out in a copy of your environment if you're worried. And of course there's always the option to revert the changes if it breaks things!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-949921203:515,test,test,515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-949921203,1,['test'],['test']
Testability,"@BJWiley233 Would the use of obabel from a .deb for Ubuntu ([their index](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all) mentions version 3.0.0 for LTS release 20.04/focal, and 3.1.1 for 22.04/jammy)) be suitable for you? If so, are you able to generate a 2D structure, a 3D conformer, respectively?. To ease potential replication, I attach the results with obabel (Open Babel 3.1.1 -- Oct 20 2022 -- 17:31:22) as currently provided by Linux Debian 12/bookworm as a .zip archive. There might be slight *numeric* differences for the conformer (`diff --brief` will spot them) when you generate a conformer on your computer (indeed, there may be variations from run to run). Often, they are not *this much* important from a chemical point of view if obabel is used to provide a starting point for ongoing further work in Gaussian/MOPAC at higher level of theory, but can be quantified e.g., by a Kabsch test (an implementation in Python by [Charnley et al.](https://github.com/charnley/rmsd)). [2022-11-25_comparison.zip](https://github.com/openbabel/openbabel/files/10090283/2022-11-25_comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1327198403:945,test,test,945,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1327198403,1,['test'],['test']
Testability,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:585,test,test,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071,2,['test'],['test']
Testability,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:1461,test,testat,1461,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394,1,['test'],['testat']
Testability,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:462,test,test,462,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699,1,['test'],['test']
Testability,"@Surluson . For testing, I organized this script from #54:. ```python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring('cif', m); mol.calccharges('eqeq'); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type='list'). # Compare average and max differences; diff = [abs(c - o) for c, o in zip(charges, out)]; print(sum(diff) / len(diff)); print(max(diff)); ```. The numat/EQeq only works in python 2 due to its ctypes usage, and the charges are slightly different due to #60 and rounding errors, but my tests only show ~10<sup>-4</sup> average difference and ~10<sup>-3</sup> max difference.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401914391:16,test,testing,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401914391,3,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability,@afonari you can run `ctest -V -R pdbread` the -R will match tests with specified regex.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646:61,test,tests,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646,1,['test'],['tests']
Testability,"@baoilleach - did you have a chance to test this? I'd like to merge for 3.1 - even if it needs further improvement, it's a big step forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150,1,['test'],['test']
Testability,"@baoilleach : Thank you for your feedback, I added the modified test",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619,1,['test'],['test']
Testability,@baoilleach I have made @ginggs the owner of https://launchpad.net/openbabel . I created that stuff back in the day when there was a push to get at least stub Launchpad projects for all upstreams.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338197116:154,stub,stub,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338197116,1,['stub'],['stub']
Testability,"@baoilleach I want to remove the hydrogen atoms attach with SP3 C atom. Firstly I test if the C is SP3, find the neighbors, test if they are hydrogens, and then delete them.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269859144:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269859144,2,['test'],['test']
Testability,@baoilleach thanks. Then what should I do to delete hydrogens implicitly? I tested that DeleteAtom can do the work.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269716103:76,test,tested,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269716103,1,['test'],['tested']
Testability,"@cassguff Based on the [documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/XYZ_cartesian_coordinates_format.html) flag `-b` is an option (`-xb`) of reading. Your input is a SMILES string and eventually you want to write .xyz coordinates only (i.e., the file has no information about bonds). An command like. ```; obabel -:""c1ccncc1"" -h --gen3d -O test.xyz; ```. is sufficient for (this example) to generate a conformer of pyridine (including protons for pH 7.4) written into file `test.xyz`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982:367,test,test,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982,2,['test'],['test']
Testability,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024,5,['test'],"['test', 'testSegname', 'testpdbformat']"
Testability,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:626,test,test,626,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['test'],['test']
Testability,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1123,test,test,1123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905,1,['test'],['test']
Testability,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1635,test,testing,1635,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607,1,['test'],['testing']
Testability,"@fredrikw Based on your comment, I run. ```bash; obabel -:'c1ccncc1' -osmi -h; obabel -:'c1ccncc1' -osmi -xh; obabel -:'c1ccncc1' -ocan -h; obabel -:'c1ccncc1' -ocan -xh; ```; with OpenBabel 3.1.1. as provided by Linux Debian 12/bookworm, branch testing. None of them added explicit hydrogens around the pyridine, nor a form like `C1=CN=CC=C1` e.g. said ChemDraw JS suggests as a plausible solution. Since ```obabel -:'c1ccncc1' -oxyz -h``` did add them (and ```obabel -:'c1ccncc1' -oxyz -xh``` did not), I probably misunderstand the manual (section 18.1.7). Or do I?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557:246,test,testing,246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557,1,['test'],['testing']
Testability,"@fredrikw So far, I understood *standardization* as an advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:451,test,test,451,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,1,['test'],['test']
Testability,"@ghutchis , as promised, I am attaching two RPM spec files. `openbabel.spec` is the one I am using to build my RPMs, whereas `openbabel-ci.spec` is a modified version intended for use in a CI role. The most significant difference between the two is that the latter does not designate any patches (which I haven't provided anyway), since I imagine that it would be used to test the actual contents of the repository at various points. There is more that could be done to tune and trim the -ci spec for the role I imagine for it, but I think it would be better to base further changes on what you *actually* need instead of on what I guess you might need. [openbabel.spec.txt](https://github.com/openbabel/openbabel/files/4650857/openbabel.spec.txt); [openbabel-ci.spec.txt](https://github.com/openbabel/openbabel/files/4650858/openbabel-ci.spec.txt). ("".txt"" was appended to the file names to persuade GitHub to accept them.). If you would prefer to receive one or both of these in the form of a PR, then I would be happy to oblige -- just give me the details of what you want, where.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110:372,test,test,372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110,1,['test'],['test']
Testability,@ghutchis - just wanted to ping to see if you've had a chance to think about the ideal way to test this?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-516413330:94,test,test,94,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-516413330,1,['test'],['test']
Testability,"@ghutchis - this is now ""building"" in your CI with my latest commit, but only because it sees no Boost and then skips building maeparser and its tests. Not sure if that's what you want to do here, but if you want me to make any changes just let me know.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500932639:145,test,tests,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500932639,1,['test'],['tests']
Testability,"@ghutchis . Here are files for testings. [mol_n_cdxml.zip](https://github.com/openbabel/openbabel/files/1998747/mol_n_cdxml.zip). I would like to contribute some testings, but have questions. 1. Is it necessary to re-run `make install` and `make test` after changing something in test files?; It takes a lot of time to re-run them.; Maybe you could share tips to write tests. 2. Could I run one specific test? ; What I know is to run `make test` after `make install`, and this runs all tests. 3. Is there any test example for similar formatting tests which could be a reference to write a test?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388644054:31,test,testings,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388644054,11,['test'],"['test', 'testings', 'tests']"
Testability,@ghutchis @baoilleach . Test added.; Please check it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-391598858:24,Test,Test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-391598858,2,['Test'],['Test']
Testability,"@ghutchis Here are some more details regarding the testing I have been doing. I'm running the same smi-sdf-can roundtrip test from `test/testdistgeom.py` on a large dataset (eMolecules SMILES database, only considering chiral molecules). So far, **17670 molecules** have been processed **without any segfaults or wrong stereochemistry**. There is only a minor cosmetic issue which should be fixed I think. For some structures, the number of iterations in `OBDistanceGeometry` is not enough to generate a valid structure. This results in a warning message:; ```; ==============================; *** Open Babel Warning in AddConformer; Distance Geometry failed.; ```; The full roundtrip still produces the correct geometry since we now have an additional loop in Gen3D. However, seeing this message is confusing if the whole process actually worked. Ideally, `AddConformer()` would return a boolean to indicate success. This would change the API/ABI. Some possible workarounds:; 1. Increase the number of iterations (currently equal to the number of atoms).; 2. Add function and member variable (in `OBDistanceGeometryPrivate`) to silence this message.; 3. Remove message and add function to check succes/failure. For the 17670 molecules, there were only 7 such cases. These are listed below together with the number of times OBDistanceGeometry failed. ```; O\C=C1\CCCCC1=O 1 iteration failed; C[C@H]1CCC\C=C\[C@@H]2C[C@H](O)C[C@H]2[C@H](O)\C=C\C(=O)O1 5 iterations failed; Cl\C=C\Cl 1 iteration failed; CO[C@H]1[C@H](O)CC(=O)O[C@H](C)C\C=C\C=C\[C@H](OC2CCC(C(C)O2)N(C)C)[C@H](C)C[C@H](CC=O)[C@@H]1OC1OC(C)C(OC2CC(C)(O)C(O)C(C)O2)C(C1O)N(C)C 3 iterations failed; C\C1=C/CC(C)(C)\C=C\C\C(C)=C\CC1 1 iteration failed; CCO\C=C\CC 1 iteration failed; CO[C@H]1[C@@H](CC(=O)O[C@H](C)C\C=C\C=C\[C@H](O)[C@H](C)C[C@H](CC=O)[C@@H]1O[C@@H]1O[C@H](C)[C@@H](O[C@H]2C[C@@](C)(O)[C@@H](OC(=O)CC(C)C)[C@H](C)O2)[C@@H]([C@H]1O)N(C)C)OC(C)=O 5 iterations failed; ```; In any case, it might be a good idea to have a minim",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981:51,test,testing,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981,4,['test'],"['test', 'testdistgeom', 'testing']"
Testability,"@ghutchis I think it's work that needs to be done to the `calccharges` function I'm proposing, not to the lower-level code. The C++ charge models generally print to an OBErrorLog and then return false. What I'd like to do is grab the contents of that log if this fails and print it as the exception in Python, rather than what it's currently doing. (That being said, my EQeq implementation could do a better job at throwing relevant errors...). I'm also open to more opinions on the error throwing vs boolean argument. The error throwing is personal preference, but, if I'm in the minority, I'll happily remove it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32376053:251,log,log,251,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32376053,1,['log'],['log']
Testability,@ghutchis this most recent commit appears to do what I was saying re: error messages (tested on benzene and a MOF w/ qeq and qtpie by removing data files),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32380833:86,test,tested,86,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32380833,1,['test'],['tested']
Testability,"@gregcouch If I understood you correctly, you request an extension of OpenBabel's features. Because the .cif you indicate contains multiple model blocks, it may be easier to start with a single model. Thus, using CCDC's viewer Mercury, the first model in your test file was saved it both as .cif and .pdb. The .pdb as second (additional) format was considered because there are programs written for a conversion of .pdb into .mmcif (e.g., [cif2pdb](https://www.iucr.org/resources/cif/software/cif2pdb) on IUCr's software list, or a post on [bioinformatics.stackexchange](https://bioinformatics.stackexchange.com/questions/10896/how-to-quickly-and-robustly-convert-between-mmcif-and-pdb) about an other program) for a comparison with openbabel's record written (said Mercury does not offer an export to .mmcif; I'm not aware if there is a plausibility/syntax checker for .mmcif as there is with [checkcif](https://checkcif.iucr.org/) for .cif files). At least one of the models of your reference data set equally is available as .cif on the COD (entry card [2103886](https://www.crystallography.net/cod/2103886.html)), too. [2022-10-27_single_model.zip](https://github.com/openbabel/openbabel/files/9877491/2022-10-27_single_model.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196:260,test,test,260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196,1,['test'],['test']
Testability,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:857,test,tested,857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['test'],['tested']
Testability,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:117,log,log,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642,1,['log'],['log']
Testability,"@jajupmochi Would an update of openbabel an option for you? There are might be good reasons to use a LTS from the Ubuntu family instead their intermediate releases published twice a year, as well as against; if you stick to LTS I would recommend to update to 20.04 LTS (and in this summer, to 22.04 LTS). To provide perspective, OpenBabel repackaged by DebiChem for Linux Debian 12/bookworm (branch testing) is at version 3.1.1 by February 6th, 2022 ([tracker](https://tracker.debian.org/pkg/openbabel)). If the generation 0D (the SMILES string) to 3D (the .xyz) fails, an alternative is to generate an intermediate 2D (.xyz) in first place. Sometimes, rewriting the SMILES string into a form more accessible to OpenBabel equally helps/offers additional help. . For the first SMILES string:. ```bash; obabel -:""N1(C=C[C@@H](C=C1C)[C@H]1C=CN(C(=C1)C)CCCl)CCCl"" -ocan | obabel -ismi -h --gen3d -oxyz; ```. yields e.g., . ```; 1 molecule converted; 42. Cl 0.93057 -0.72235 0.11214; C 2.70908 -0.81013 0.17949; C 3.30555 -0.84380 -1.22848; N 4.78308 -0.91157 -1.16078; C 5.50030 0.27828 -1.04781; C 6.79964 0.34655 -0.72869; C 7.58978 -0.90870 -0.42149; C 6.78436 -2.16623 -0.71814; C 5.47659 -2.13574 -1.05238; C 4.75761 -3.43161 -1.33497; C 9.00781 -0.95143 -1.07678; C 9.00304 -0.87328 -2.58644; C 9.84595 -0.06092 -3.23557; N 10.75438 0.79769 -2.61330; C 10.72369 0.90150 -1.20482; C 9.92661 0.09709 -0.46849; C 11.53292 1.93288 -0.45745; C 11.76972 1.46635 -3.46203; C 13.02007 0.59878 -3.60521; Cl 14.17952 1.34836 -4.73549; H 2.97462 -1.70594 0.74913; H 3.06144 0.06210 0.73931; H 3.00196 0.05450 -1.78183; H 2.89782 -1.68767 -1.79530; H 4.92952 1.18267 -1.23133; H 7.29603 1.30611 -0.65422; H 7.74476 -0.91385 0.66839; H 7.30518 -3.11487 -0.62493; H 5.43684 -4.29123 -1.32134; H 4.29997 -3.40647 -2.32943; H 3.97906 -3.61608 -0.58816; H 9.45341 -1.92403 -0.81917; H 8.32012 -1.50882 -3.14057; H 9.85509 -0.03516 -4.32277; H 9.92024 0.18199 0.61507; H 11.99814 2.68502 -1.09382; H 12.32360 1.45087 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989:399,test,testing,399,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989,1,['test'],['testing']
Testability,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:707,log,logic,707,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975,1,['log'],['logic']
Testability,"@johnmay has taken a look and come to a similar conclusion. It's missing the atom test, probably as the first line of matchCandidate. More problematic is that the built-in test is fairly simplistic and is not strictly speaking testing isomorphism exactly. Still, it'll be better than the current. I'll make the change and test it against @johnmay's VF2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723,4,['test'],"['test', 'testing']"
Testability,"@johnmay unfortunately I do not know how SMARTS matching is implemented - need this to discuss efficiency vs SMILES matching. It is a deeper layer of OpenBabel that makes this job. I guess that some extra work is needed in your approach to cope with stereochemistry and isotopes. Here I wrote a test for alias feature, and also removed copy construction of OBMol in AliasData::AddAliases, just checking if atom exists. Appreciate team members to take a look when you have time. @baoilleach BTW just figured out that. > bool OBSmartsPattern::Match(OBMol &mol,bool single). makes a copy of OBMol to add hydrogens. This function is called for each and every SMARTS in the alias table from superatom.txt. So probably performance was not that badly hit by my original commit. If we add hydrogens once and mark molecule as hydrogenated, it might in fact have improved performance of aliasing by a factor of N where N is number of SMARTS ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028:295,test,test,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028,1,['test'],['test']
Testability,"@mainguyenanhvu There is too little information shared by you, i.e. what is; the input structure you provide to OpenBabel to replicate your observation?; Is the warning ""can not correct stereochemistry"" equally issued while; converting your input SMILES into a canonical one (`-ocan`)? Did you stay; with the default force field (MMFF94), or tried an other one implemented? Are; all atoms of your input structures covered by the force field? Did you you; test `--gen3d` with optional `--fast` or `--fastest` (computationally more; affordable, because it leaves out some of the default optimization which could; be still reasonable in your workflow)?. The identification of a reasonable conformer from scratch can already be; demanding for small non-protein molecules (just because today's Nobel prizes; for chemistry). If there only is one particular structure / only a few, a; bypass can be the generation of a flat 2D sdf. ```; obabel -:""c1ccncc1"" --gen2d -h -O 2dstructure.sdf; ```. with OpenBabel which then is read -- explicitly as a 2D structure -- e.g. by; Jmol for a minimization to 3D from the program's console. ```; load ""2dstructure.sdf"" filter ""2D"";; ```. Or right away from a SMILES string itself, e.g. ```; load ""$c1ccncc1"" filter ""2D""; ```. (A call by `java -jar Jmol.jar -h` shows that Jmol can be launched from the; CLI, process data without a GUI, act according to a script to digest batches; of models, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223:455,test,test,455,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223,1,['test'],['test']
Testability,"@merkys I just submitted same intermediate `reconstruct.sdf` to RDKit (currently 2020.09.5 for Debian 12/bookworm [testing]):. ```python; import rdkit; from rdkit import Chem. m = Chem.MolFromMolFile(""reconstruct.sdf""); print(Chem.MolToSmiles(m)); ```; This assigns `COC(=O)/C=C1\CN(S(=O)(=O)c2ccc(C)cc2)C\C1=C/c1ccccc1` as SMILES string with (*Z*,*Z*)-configuration. It is not the one COD currently states on the landing page of the entry, but leads to an equivalent representation in e.g., CDK Depict and OpenBabel.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622:115,test,testing,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622,1,['test'],['testing']
Testability,"@miracle1111111 - please create separate threads for different questions. (In answer to your question, no there is not a descriptor model for logS at the moment.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-822687553:142,log,logS,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-822687553,1,['log'],['logS']
Testability,@mwojcikowski I can add PHP if you test it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25003485:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25003485,1,['test'],['test']
Testability,@n-yoshikawa - you read my mind- last night I was thinking 'let's just have easier tests for now and work on improving',MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557647846:83,test,tests,83,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557647846,1,['test'],['tests']
Testability,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:616,test,test,616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,1,['test'],['test']
Testability,"@nbehrnd Thanks for the helpful comment; I wasn't aware of `checkcif` or `platon`. I'll admit that `example_bad.cif` was generated by [`afl-fuzz`](https://lcamtuf.coredump.cx/afl/) and then hand-edited to isolate the relevant line, so it wasn't a CIF that I found in the ""wild"". (I've been experimenting with fuzzing scientific libraries as they don't seem to have been widely tested in this manner, although OpenBabel's SMILES format parser [was fuzzed in 2018](https://github.com/openbabel/openbabel/pull/1770) by @baoilleach.). The original `example_good.cif` was a data file included in Avogadro:. https://github.com/cryos/avogadro/blob/79d22168cb8c5a874189bebf16f7270871f3c469/crystals/ice/H2O-Ice-II.cif. As for updates, I did compile OpenBabel from source and check that the bug was replicable on the [latest git revision](https://github.com/openbabel/openbabel/commit/4709b0752109db593f1bee6298ef3bfa718d260d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666743407:377,test,tested,377,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666743407,1,['test'],['tested']
Testability,"@nbehrnd There are functions to add and remove hydrogens with Pybel: `.addh()` does the same as `.AddHydrogens()` in OpenBabel and `.removeh()` does the same as `.DeleteHydrogens()`. However, getting the `.formula` attribute calls `GetFormula()`, which calls `GetSpacedFormula(1, """")`, forcing explicit hydrogens, so the output should be the same regardless of the state of Hydrogens. [The third parameter is a boolean for implicit hydrogens, but it defaults to True.]. However, there is a deficiency when deciding to use implicit hydrogens. When you make `C.[Ru]` a molecule, there are no proper bonds (`mol.OBMol.NumBonds()` gives 0). Therefore, the below line turns off the implicit hydrogen mode.; https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/src/mol.cpp#L1015. Perhaps this logic needs to be adjusted for the SMILES ""non-bond"" type?. If you add H before calling `.formula`, it will work as expected. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2363#issuecomment-828675814:819,log,logic,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2363#issuecomment-828675814,1,['log'],['logic']
Testability,"@nbehrnd Yes, the issue also occurs under Ubuntu 20.04.3. issue: https://github.com/hackingmaterials/atomate/pull/734; [logs](https://github.com/hackingmaterials/atomate/runs/4808065787?check_suite_focus=true). I tried installing with `apt`, `snap` and `conda`. All have the same issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460:120,log,logs,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460,1,['log'],['logs']
Testability,@nbehrnd thanks for your comment. I do not really get how confab is related to the problem here? . The SetTorsion function works in the vast majority of cases as intended and just rotates the specifc dihedral (here chi1). In maybe 2 of 100 cases I will produce faulty structures (with systems that only differ in the coordinates and residues/atoms being equal). I double checked that the atoms we are choosing are correct and I also reversed the order of atoms for SetTorsion but nothing gives me a satisfactory result. . I also tested this in openbabel 2.4.1 and the problem exists there too. . I am not an openbabel expert but upon reading [ObRotorList Documentation](https://openbabel.org/dev-api/classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014) there is an argument for fixed atoms but I am not sure how to use it. Any pointers on how to use this? Perhaps if the bb_nitrogen atom is fixed the rotation would work correctly by rotating the sidechain and not the backbone atoms.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185:529,test,tested,529,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185,1,['test'],['tested']
Testability,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:354,assert,assert,354,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886,1,['assert'],['assert']
Testability,@rathann I'm wondering if the -march=native call is the cause of your failures. (I'm guessing that some of the tests are done with cross-compilation.),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-193881243:111,test,tests,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-193881243,1,['test'],['tests']
Testability,"@ricrogz - I can't merge something that fails tests. If `master` is needed for that, no problem. I just want to make sure that we can freeze versions for e.g openbabel-3.1.0. I'm aware of the annoying GitHub tar/zip variance. Happy to work on that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552988102:46,test,tests,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552988102,1,['test'],['tests']
Testability,"@schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211:301,benchmark,benchmark,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211,1,['benchmark'],['benchmark']
Testability,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655,3,['test'],"['test', 'testing']"
Testability,@timvdm - if we un-comment the smiles at the end of `test/testdistgeom.py` do they work as well?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609965521:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609965521,2,['test'],"['test', 'testdistgeom']"
Testability,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:753,test,test,753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505,1,['test'],['test']
Testability,"@wojdyr are you sure? This was never merged as-is and looking at commits, 7534c4626f1c72187472cada055b3176048040a5 *may* solve the issues I noticed with group 210, but for the rest, I can't tell with a quick glance. For example, 445afcb1428c80d98fce5f03fb9a8ae763a170ff touches group 222, but only changes the group's header. From what I can remember, I noticed a problem while fixing `avogadro`, so I decided to systematically compare `openbabel` to `spglib`, yielding this bug report. Sadly, I don't have the test program after all these years, and ATM, I don't have the time to write it again. Perhaps later, although I hope someone beats me to it :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331460100:511,test,test,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331460100,1,['test'],['test']
Testability,A better test case (because the Mol file above is messed up by the email) is:. Success:; obabel -:C((=O)O)[C@](I)(Br)Cl -omol --gen2d | obabel -imol -osmi; C(=O)(O)[C@](I)(Br)Cl. Fail:; obabel -:C((=O)O)[C@](I)(Br)Cl --genalias -omol -xA --gen2d | obabel -imol -osmi; C(I)(Br)(Cl)C(=O)O. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1155#issuecomment-281801387:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1155#issuecomment-281801387,1,['test'],['test']
Testability,"A better test case is simply:. >>> import pybel; >>> mol = pybel.ob.OBMol(); >>> pybel.Molecule(mol).write(""inchi""). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785,1,['test'],['test']
Testability,"A mol file is attached. I am not sure how to test the aromatic - Kekule conversion by command line, since mol file already contains Kekule bonds. It might be the problem is related to the aromatic SMILES parsing, as it was first reported. . Original comment by: vedina",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794873:45,test,test,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794873,1,['test'],['test']
Testability,"A patch that fixes this without using six would be great. On Fri, 3 Apr 2020, 19:07 Maksim Rakitin, <notifications@github.com> wrote:. > While following the example at; > https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation,; > noticed that the mol.draw() step fails on importing of Tkinter in Python; > 3.7. The module was renamed to tkinter in Python 3+ versions, and the six; > library supports the proper handling of the change:; > https://six.readthedocs.io/#module-six.moves. I added six as the install; > requirement.; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/2157; > Commit Summary; >; > - Fix the import of Tkinter in Python 3+; >; > File Changes; >; > - *M* scripts/python/openbabel/pybel.py; > <https://github.com/openbabel/openbabel/pull/2157/files#diff-863e0301a7472d65e3d8a16069b84301>; > (2); > - *M* scripts/python/setup.py; > <https://github.com/openbabel/openbabel/pull/2157/files#diff-4e89b66ccedac44670411667ec0b727d>; > (1); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/2157.patch; > - https://github.com/openbabel/openbabel/pull/2157.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2157>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKKOEUDARWBSS5GEUDRKYQV7ANCNFSM4L4LAHWQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609051007:248,test,test-the-installation,248,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609051007,1,['test'],['test-the-installation']
Testability,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631,7,['test'],"['test', 'tested', 'testpdbformat']"
Testability,"A test run by. `obabel -ipdb test.pdb -opng -O test.png -xd`. with the data attached just worked fine (i.e., no display of the file name) with the more recent release of Open Babel 3.1.0. Given this observation, I suggest either a new compilation from the [sources](https://github.com/openbabel/openbabel/releases), or substitution of the executables. Note there equally is a [snap](https://snapcraft.io/install/openbabel/mint) dedicated to Open Babel, too. Then probe again if the issue is present. [test.zip](https://github.com/openbabel/openbabel/files/5000406/test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2257#issuecomment-666276566:2,test,test,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2257#issuecomment-666276566,5,['test'],['test']
Testability,"ARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:23131,test,test,23131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"About 002RPD.log from andersbiceps, this one does not have the ""nosym"" keyword and includes a ""standard orientation"" block. However, it does not include the second one the code is looking for, maybe because it is a single-point calculation?. As noted in #3495545, this will trash the ifs object and the subsequent rewind (ifs.seekg(0)) will have no effect, resulting in an empty outgoing molecule. I suggest fixing that by checking for the line ""Normal termination of Gaussian"" which is usually the last line and breaking out of the while loop then (so the rewind can still take effect). About the cclib test case - this one seems to crash while pushing back orbital data, I get the segfault here:. #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742. 742	 betaSymmetries.push_back(symmetries[i]);. Noel, can you confirm that? It looks like a different bug to me. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259:13,log,log,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259,2,"['log', 'test']","['log', 'test']"
Testability,"About the test case, you can check the attachment of #1768. Without the patch it indeed segfaults, with it it's ok. Now I recognize that it may not be the right fix (perhaps I'm just hidding the pb).; Also, I checked the existing test cases but I didn't found something enough similar to copy cat it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375660966:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375660966,2,['test'],['test']
Testability,"According to @mcs07 above, this should already be working. Is there any blocker here, besides uploading? I'm willing to test the package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2067#issuecomment-556901152:120,test,test,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2067#issuecomment-556901152,1,['test'],['test']
Testability,"According to the documentation, not all elements are covered yet. To quote:. > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter. source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html. Let's say I generate a .gro about diethyl ether by. ```shell; $ obabel -:""CCOCC"" -h --gen3d -ogro. 15; 1UNL C 1 0.095 -0.007 0.005; 1UNL C 2 0.247 -0.010 0.002; 1UNL O 3 0.297 0.089 0.093; 1UNL C 4 0.439 0.091 0.094; 1UNL C 5 0.486 0.197 0.191; 1UNL H 6 0.054 -0.082 -0.063; 1UNL H 7 0.058 0.092 -0.024; 1UNL H 8 0.058 -0.027 0.106; 1UNL H 9 0.283 0.012 -0.099; 1UNL H 10 0.283 -0.109 0.033; 1UNL H 11 0.477 0.113 -0.006; 1UNL H 12 0.477 -0.007 0.126; 1UNL H 13 0.448 0.296 0.162; 1UNL H 14 0.595 0.201 0.195; 1UNL H 15 0.448 0.177 0.292; 0.00000 0.00000 0.00000; 1 molecule converted; ```. As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields. ```shell; $ obabel ether_modified.gro -oxyz; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```. equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24). [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt); [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131:1608,test,testing,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131,1,['test'],['testing']
Testability,"Actually, if that's the case, we can bring back the log statements I removed in an earlier PR, and just put them in an 'if'. Just say the word.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714#issuecomment-349093308:52,log,log,52,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714#issuecomment-349093308,1,['log'],['log']
Testability,"Actually, the README also refers to how to build the Java bindings, but that is taken care of via CMake now. The instructions didn't seem to work either, but admittedly I only tried a few times because of curiosity. Maybe the README should only contain the information regarding LD_LIBRARY_PATH and LD_PRELOAD as well as the Mac OS equivalent. I will try and test on Mac OS soon. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800542:359,test,test,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800542,1,['test'],['test']
Testability,"Actually, the valgrind failures were with invalidsmiles, not invalidsmarts, so I have no idea what the problem might be. In my checkout I have more tests, is it possible the auto-tester is running something different for this test?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122428418:148,test,tests,148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122428418,3,['test'],"['test', 'tester', 'tests']"
Testability,"Actually, what we can do is to select a subset of molecules (e.x 30 molecules) and generate their atom types to be used as the reference. Then, we can add a new test to compare the atom types of these compounds with those used as the reference. Therefore, if someone changes gaff.prm or anything related, the test will fail if the changes cause a mismatch. . > On Mar 14, 2016, at 5:14 PM, Geoff Hutchison notifications@github.com wrote:; > ; > Is there some way we can add a unit test for the correct GAFF atom types (i.e., beyond the current energy evaluations)? This way, if some future commit accidentally breaks GAFF typing, we would know.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/278#issuecomment-196529960:161,test,test,161,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/278#issuecomment-196529960,3,['test'],['test']
Testability,"Added a test at the start of parsing, throw an error if the string is longer than BUFF_SIZE. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1181#issuecomment-281801818:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1181#issuecomment-281801818,1,['test'],['test']
Testability,"Added a test for this to the test suite (testfastsearch.py). It passes on a variety of 64-bit and 32-bit systems (http://my.cdash.org/testSummary.php?project=57&name=pytest_fastsearch&date=2010-03-01), so I'm marking this as pending. The failures are the systems where all of the tests fail and are not specific to this test. This will close automatically in 2 weeks unless reopened by the original submitter. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796342:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796342,6,['test'],"['test', 'testSummary', 'testfastsearch', 'tests']"
Testability,"Added a unit test. For my education, can you tell me how to run a certain unit test (for example test_pdbreadfile_4) not all of them using `make test`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612030682:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612030682,3,['test'],['test']
Testability,Added test in testsym.py in r3594. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793820:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793820,2,['test'],"['test', 'testsym']"
Testability,Added tests.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-297484638:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-297484638,1,['test'],['tests']
Testability,"Additional remark: When I use babel from the Avogadro package it seems to work, however this is a different version (2.2.2b1) and it produces the same warning message nevertheless. /Applications/Avogadro.app/Contents/bin/babel; Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39. /Applications/Avogadro.app/Contents/bin/babel -i cif 2aev.cif -o pdb test.pdb ; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; ==============================; *** Open Babel Warning in Find; Unknown space group with incomplete or wrong definition.; 1 molecule converted; 3 warnings 80 audit log messages 1 debugging messages. Original comment by: knollentroll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455:343,test,test,343,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455,2,"['log', 'test']","['log', 'test']"
Testability,"After a reboot, the Windows tests did fail - this does happen occassionally where Windows refuses to believe the dlls have changed. Anyway, dumb mistake - now fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351713732:28,test,tests,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351713732,1,['test'],['tests']
Testability,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:244,test,tested,244,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956,1,['test'],['tested']
Testability,"Ah yes - of course there are issues with the tests - that's what I get when I do a late-night pull request. Regarding the flavors, for sure. It's just a different set of switch statements, or same switch statements with different electron contributions. What the API should be needs a small bit of thought, for example what's expected if you apply a different model and then write out a SMILES? Does the library need to remember which model has been applied? Could I write up a proposal separate to this pull request?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329385804:45,test,tests,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329385804,1,['test'],['tests']
Testability,"Ah, I see. You may need to add a special option that writes everything to one file for testing purposes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225592356:87,test,testing,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225592356,1,['test'],['testing']
Testability,"Ah...your log is referring to Python3 but you say you are using Python2. On Sat, 2 Jun 2018, 08:17 Brandonnogithub, <notifications@github.com> wrote:. > I complied openbabel bymeself. And I can import it in python2, it works; > fine.; > But when I install another package (ENeN, you can find it in github),; > which requires openbabel, it can't be find.; > Here is the message when I install it:; > ###############################################################; > Requirement already satisfied: dill in; > ./.local/lib/python3.6/site-packages (from eden==0.2) (0.2.7.1); > Requirement already satisfied: esmre in; > /usr/local/lib/python2.7/dist-packages (from eden==0.2) (0.3.1); > Collecting openbabel (from eden==0.2); > Downloading; > https://mirrors.aliyun.com/pypi/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; > (74kB); > ###############################################################; >; > so it downloads openbabel and try to install it, errors:; > ###############################################################; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /usr/bin/python3 -u -c ""import setuptools,; > tokenize;*file*='/tmp/pip-install-vokwsrny/openbabel/setup.py';f=getattr(tokenize,; > 'open', open)(*file*);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, *file*, 'exec'))"" bdist_wheel -d; > /tmp/pip-wheel-4bdr_2wn --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > - include_dirs: ['/usr/include/python3.6m',; > '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar; > -I/usr/include/python3.6m -I/usr/local/include/openbabel-2.0 -o; > openbabel-python_wrap.cpp openbabel-python.i; > unable to ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891:10,log,log,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891,1,['log'],['log']
Testability,Aha - now it's failing in the tests. So I need to make @fredrikw's change after all. :-),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612847226:30,test,tests,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612847226,1,['test'],['tests']
Testability,"Aha! ; 1. The InChI format Is adding each bond twice, once from A->B and once from B->A.; 2. This wouldn't have been a problem except that the logic in AddBond was not adding up. It was adding virtual bonds in this case instead of just returning false immediately. I've avoided adding the bond twice in 1, and solved the logic in 2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306:143,log,logic,143,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306,2,['log'],['logic']
Testability,"All done, related tests run and pass:; ```; Start 30: test_cifspacegroup_1; 29/168 Test #30: test_cifspacegroup_1 ............. Passed 0.70 sec; Start 31: test_cifspacegroup_2; 30/168 Test #31: test_cifspacegroup_2 ............. Passed 0.61 sec; Start 32: test_cifspacegroup_3; 31/168 Test #32: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 33: test_cifspacegroup_4; 32/168 Test #33: test_cifspacegroup_4 ............. Passed 0.62 sec; Start 34: test_cifspacegroup_5; 33/168 Test #34: test_cifspacegroup_5 ............. Passed 0.61 sec; Start 35: test_cifspacegroup_6; 34/168 Test #35: test_cifspacegroup_6 ............. Passed 0.61 sec; Start 36: test_cifspacegroup_7; 35/168 Test #36: test_cifspacegroup_7 ............. Passed 0.61 sec; Start 37: test_cifspacegroup_8; 36/168 Test #37: test_cifspacegroup_8 ............. Passed 0.66 sec; Start 38: test_cifspacegroup_9; 37/168 Test #38: test_cifspacegroup_9 ............. Passed 0.61 sec; Start 39: test_cifspacegroup_10; 38/168 Test #39: test_cifspacegroup_10 ............ Passed 0.61 sec; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302876157:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302876157,11,"['Test', 'test']","['Test', 'tests']"
Testability,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,3,['test'],['test']
Testability,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:241,test,test,241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090,1,['test'],['test']
Testability,"Alright, I'll fix the pdb format and add a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326549058:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326549058,1,['test'],['test']
Testability,Also it can be useful to add the testpypi server to your `.pypirc` file to test everything is OK before uploading:. ```; [distutils]; index-servers =; pypi; testpypi. [pypi]; repository: https://pypi.python.org/pypi; username: <un>; password: <pw>. [testpypi]; repository: https://testpypi.python.org/pypi; username: <un>; password: <pw>; ```. So then it's easy to do a quick. ```; python setup.py register -r testpypi; python setup.py sdist upload -r testpypi; ```. then check on http://testpypi.python.org before doing the proper upload with. ```; python setup.py sdist upload -r pypi; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704:33,test,testpypi,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704,8,['test'],"['test', 'testpypi']"
Testability,"Also, I noticed that depictor tests do not pass on debian/testing (seems due to bad check of the ouput of compare).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/220#issuecomment-131952604:30,test,tests,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/220#issuecomment-131952604,2,['test'],"['testing', 'tests']"
Testability,"Also, now for the last few days the mmff94 charges tests:; http://my.cdash.org/testDetails.php?test=3050513&build=101540. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797138:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797138,3,['test'],"['test', 'testDetails', 'tests']"
Testability,"Alternatively the following describes how to run a specific test directly.; Especially useful if you are using a debugger:; https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html#running-tests. On Fri, 10 Apr 2020, 15:16 Geoff Hutchison, <notifications@github.com>; wrote:. > @afonari <https://github.com/afonari> you can run ctest -V -R pdbread the; > -R will match tests with specified regex.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGIQEQOMWC7F75VDCPTRL4S3LANCNFSM4MFNRV6A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612194516:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612194516,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"An option sounds good, but which should be the default? If this is; unexpected, then presumably adding the number should be the default. On 26 April 2018 at 09:30, Maciej Wójcikowski <notifications@github.com>; wrote:. > Dup of #1283 <https://github.com/openbabel/openbabel/issues/1283>.; >; > Currently there is no option not to append the number of residue during; > molecule. Maybe the quickest solution would be to add such option?; >; > As a workaround in Python would be to remove the residue number from the; > end of residue name before writing to mol2.; >; > import reimport pybel; >; > mol = next(pybel.readfile('mol2', 'test.mol2')); > for res in mol.residues:; > new_resname = re.sub('[0-9]+$', '', res.name); > res.OBResidue.SetName(new_resname); > print(res.name); > print(mol.write('mol2')); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGbOW513nlSi1O61UqgnRRQpvaIlyks5tsYWegaJpZM4TVYDn>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384560609:631,test,test,631,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384560609,1,['test'],['test']
Testability,"And if you comfortable with compiling from master yourself, it is available to test right away.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841,1,['test'],['test']
Testability,And one more test case:; CC(CCC[C@H]([C@H]1CC[C@@H]2[C@]1(C)CC[C@H]1[C@H]2CC2([C@@H]3[C@]1(C)CC[C@@H](C3)Br)S(=O)(=O)CCS2(=O)=O)C)C. Original comment by: sdvb,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800833:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800833,1,['test'],['test']
Testability,"And regarding the issue on DNA/Peptide. The code is trying to guess on sequence type based on the content, but it is rather naïve in its efforts. It works better on longer sequences though. You could add a hint in the comment line though that would help. ```; > test; AR; ```; would give a DNA molecule while; ```; > test Peptide; AR; ```; would give a peptide.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-844225144:262,test,test,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-844225144,2,['test'],['test']
Testability,"Another example: ; obabel -:""C1C=C2COC[C@]32[C@H](C1)[C@]1(CCC3)CCOC1"" -o sdf -O test.sdf --gen3d. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800828:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800828,1,['test'],['test']
Testability,"Another piece of the puzzle: As zou may already have noticed, the original files I reported the problem for are 'special', i.e. the compounds contained therein are actually different structures for the same sum formula. Now, just out of curiosity, I re-ran the test with two completely unrelated compounds (vanilin and morphine). And what can I say? The programs perform as they should, i.e. the results do not differ if the calculations are performed on the individual MOL files or an SD file containing both compounds. Maybe this hints you in the correct direction. Original comment by: timoreiss",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643:261,test,test,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643,1,['test'],['test']
Testability,Any suggestions on how to debug the appveyor build failure? The test passes for me..,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122091067:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122091067,1,['test'],['test']
Testability,"Are either of you interested in having a go at this?. On 7 November 2017 at 08:18, Andrius Merkys <notifications@github.com>; wrote:. > I confirm the bug:; >; > andrius@tasmanijos-velnias ~ $ obabel ~/src/openbabel-2.4.1/test/files/filterset.sdf -osmi --filter ""title<'129'""; > 0 molecules converted; > andrius@tasmanijos-velnias ~ $ obabel --version; > No input file or format spec or possibly a misplaced option.; > Most options must come after the input files. (-i -o -O -m can be anywhwere.); >; > Open Babel 2.4.1 -- Oct 24 2017 -- 16:08:06; > Usage:; > obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; > Try -H option for more information.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeLa_HpzA8kfeaymFNmyhwHYn7gxks5s0BJigaJpZM4QTg3N>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-344595757:221,test,test,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-344595757,1,['test'],['test']
Testability,"Are you saying that you can build the entirety of Open Babel, and for example, run the test (via ""make tests"") after the LoadLibrary change? I also had to do the second step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261:87,test,test,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261,2,['test'],"['test', 'tests']"
Testability,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:868,test,test,868,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181,2,['test'],['test']
Testability,"As an aside, I see hybridization as a type of atom typing, so it'd be great to move away from hybridization altogether and just test the structure for whatever feature we are actually looking for. It's not the case so much in the builder, but I think we end up with code where people favor checking the hybridization (which triggers SMARTS patterns running over the entire molecule) rather than what they really want, like does it have a double bond.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1801#issuecomment-375207276:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1801#issuecomment-375207276,1,['test'],['test']
Testability,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:120,test,tested,120,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,6,['test'],"['test', 'testable', 'tested', 'tests']"
Testability,"At least for pdbqtformat.cpp, part of the problem seems to be a difference between clang and gcc in how clang handles a decrement of an iterator. In clang (at least on Yosemite) a decrement of an iterator already at .begin() can produce a segfault on subsequent use, so you have to add lots of extra tests. What I have tried so far in pdbqtformat.cpp that seems to work (at least for 4dui.pdb) at line 499 ff in pdbqtformat.cpp is. ```; multimap <unsigned int, unsigned int>::iterator it=how_many_atoms_move.begin();; if ((!moves_many) && !how_many_atoms_move.empty()) {it=how_many_atoms_move.end();; if (it!=how_many_atoms_move.begin())--it;}; for (unsigned int i = 1; i <= depth; i++); {; free_bonds.insert((*it).second);; if (!moves_many) {if (it!=how_many_atoms_move.begin())--it;}; else{if (it!=how_many_atoms_move.end())++it;}; }; ```. This would suggest are review of all cases of --it or it-- in all iterator uses to make sure they are protected for use with clang. ALternatively one could report it as a clang bug, but I am not sure how productive that would be.; -- H. J. Bernstein",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-186284645:300,test,tests,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-186284645,1,['test'],['tests']
Testability,"Atom aromaticity in SMILES is determined by the case of the characters, not; by the nature of the attached bonds. Here is the SMILES for benzene:; c1ccccc1; The bond between two atoms marked as aromatic is implicitly an aromatic; bond. So, equivalently:; c:1:c:c:c:c:c:1. If this is benzene, then your question boils down to the following.; ""What is the meaning of C:1:C:C:C:C:C:1?"". In short, the meaning is undefined. No toolkit should be writing values; like this if they care about other tools interpreting this 'correctly'. I actually included this example in the SMILES benchmark (; https://github.com/nextmovesoftware/smilesreading/tree/master/3-results); though I see that I didn't check in the results. I think I was wary of; distracting people from problems with defined behaviour. Regards,; Noel. On Tue, 18 May 2021 at 02:48, craldaz ***@***.***> wrote:. > I've also posted the answer on Matter Modeling Stack exchange with a; > bounty if you want to gain some points there.; >; > https://mattermodeling.stackexchange.com/q/4981/52; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2368#issuecomment-842761119>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGM6JDB5SYYVUAUCVQLTOHBPNANCNFSM44ZVU7BA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2368#issuecomment-843053926:576,benchmark,benchmark,576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2368#issuecomment-843053926,1,['benchmark'],['benchmark']
Testability,Attaching test file from original bug report from @mkmatlock; [2185720_1.sdf.txt](https://github.com/openbabel/openbabel/files/1042550/2185720_1.sdf.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305278525:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305278525,1,['test'],['test']
Testability,"Attempting to replicate your observation with `obabel` from the CLI, I notice `obabel -:'C' --gen3d -oxyz` reports -- like in your example -- about five atoms. The omission of the `--gen3d` parameter yields a report about one atom (C) only. Equally, I observe an output equivalent to the sum formula `CH4Ru` for SMILES string `C.[Ru]` only if either `--gen3d`, or `-h` for the explicit notation of hydrogens is deployed. From the .pdf documentation (about version 3.0, by Jul 14, 2020), I did not identify yet an example about an equivalent to the explicit `-h` parameter in pybel. Does it exist?. (Observations within OpenBabel 3.1.0 as offered by Debian 11 / bullseye, branch testing.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2363#issuecomment-827465119:678,test,testing,678,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2363#issuecomment-827465119,1,['test'],['testing']
Testability,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:6,Log,Log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316,1,['Log'],['Log']
Testability,Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2784,Log,Log,2784,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"Babel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old version and did not fix the problems I was having with the whl I obtained from https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel (severely incomplete list of input and output formats). For anyone who stumbles upon this in the future, the problem was fixed with `conda install -c conda-forge openbabel` *smacks forehead*",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:1439,test,testenv,1439,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,2,['test'],['testenv']
Testability,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:79,log,log,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533,1,['log'],['log']
Testability,"Because SDF is sensitive to spaces, which get modified in HTML, it is better to attach a file. I cannot read your example but the attached Test.sdf :; Test; OpenBabel11241011002D. 2 1 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; A 1; OR; M END; $$$$. is read ok by OpenBabel and is output as TestOut.sdf :; Test; OpenBabel11241011102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$. which is reasonable. The Alias OR means the structure cannot be completely determined. Perhaps you could make another comment here (not in a new bug) and attach the problem file. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1064#issuecomment-281798015:139,Test,Test,139,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1064#issuecomment-281798015,4,['Test'],"['Test', 'TestOut']"
Testability,Before copying unit test to build/test I get:; Start 1: unittest; ```; Could not find executable /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,13,['test'],['test']
Testability,"Besides the assert, please re-merge with master to resolve the minor conflicts, and I'll be happy to merge this! Thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/17#issuecomment-29997102:12,assert,assert,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/17#issuecomment-29997102,1,['assert'],['assert']
Testability,"Brilliant. I'll test it out - I have a set of tautomers somewhere I've pulled out from ChEMBL. Regarding keto-enol, if you do add this in, could you put it within an option just in case it leads to weird results? I have the impression from others that this may be the case.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-612885818:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-612885818,1,['test'],['test']
Testability,Broken test is unrelated- I'll fix that this weekend.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655,1,['test'],['test']
Testability,Buggy log. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334:6,log,log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334,1,['log'],['log']
Testability,Build log from Fedora ppc64 build system. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801225:6,log,log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801225,1,['log'],['log']
Testability,Buildroot setup log - includes installed packages versions. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801227:16,log,log,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801227,1,['log'],['log']
Testability,"By guessing, I think it should be; -a ""$win_dlhandler"" = ""yes""); instead of ; test ""$win_dlhandler"" = ""yes""). in configure.in. I'm afraid of checking it in though, as I don't have an autobuild toolchain. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369:78,test,test,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369,1,['test'],['test']
Testability,"By syntax, the SMILES string is fine. What the SMILES string describes, however, represents a hurdle for OpenBabel. If you paste the SMILES string into an other structure2picture converter, e.g., [CDK Depict](https://www.simolecule.com/cdkdepict/depict.html), one of the double bonds of the pyrrolidine is resolved as a double bond without explicitly assigned configuration. For me, it looks related to observations about the isomers of 2-butene filed earlier ([here](https://github.com/openbabel/openbabel/issues/2429)). With the information shared by you, I aimed for a replication with a pristine copy of the `.cif` from COD, which was translated into a `.sdf` with cod-tools, and submitted to OpenBabel to assign a SMILES string. ```bash; codcif2sdf ./4021153.cif > reconstruct.sdf; obabel reconstruct.sdf -osmi ; ```. Not anticipated by mine, the result is not; `C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; but; `C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; In other words, the then other double bond is «wavy». While the intermediate `.sdf` follows the v2000 dialect, it may be read by e.g., by [DataWarrior](https://openmolecules.org/datawarrior/index.html); ```bash; datawarrior ./reconstruct.sdf; ```; which promptly identifies both double bonds as (*Z*) configured (which indeed is .true.). No surprise, CDK Depict converts SMILES string; `Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O`; into a structure without a wavy bond. Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing]. ![CDK_depict](https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png). [cod_cif_EZ_issue.zip](https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797:1606,test,testing,1606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797,1,['test'],['testing']
Testability,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:66,test,tests,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['test'],['tests']
Testability,"CESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20014,test,test,20014,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"CTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9548,test,test,9548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"Can we get some layout tests? I'm not sure quite how we'd test this, but it seems like a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29030719:23,test,tests,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29030719,2,['test'],"['test', 'tests']"
Testability,Can you add the file the OP provided as a test case to prevent future regressions?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612020331:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612020331,1,['test'],['test']
Testability,"Can you email me a test file and associated command-line. I've tried a few files, but nothing I have seems to trigger the code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738,1,['test'],['test']
Testability,Can you give me a bit more on this? I guess Jeff's change broke zts? Can we have a test file?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338059692:83,test,test,83,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338059692,1,['test'],['test']
Testability,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,4,['test'],['test']
Testability,Can you provide a test file?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049#issuecomment-281797852:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049#issuecomment-281797852,1,['test'],['test']
Testability,Can you provide test.mol? This might help if I cannot reproduce it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643#issuecomment-338211426:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643#issuecomment-338211426,1,['test'],['test']
Testability,"Can you run the test from the command-line and give me the output on MSVC?. Thanks very much,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797132:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797132,1,['test'],['test']
Testability,"Can you show me your test output before and after? With OB3, there's no 'unittest' - everything is done through a test runner program.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034495:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034495,2,['test'],['test']
Testability,Can you try copying them all into a smi file - then you can test them all at once.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1280#issuecomment-381524139:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1280#issuecomment-381524139,1,['test'],['test']
Testability,"Can you use these updated test results: test/files/uffresults.txt. [uffresults.txt](https://github.com/openbabel/openbabel/files/628708/uffresults.txt). The CI checks will then pass and I can merge your change, thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/355#issuecomment-264619223:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/355#issuecomment-264619223,2,['test'],['test']
Testability,"Configuration now fails. This is the error:. ```bash; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:224 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:266 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. ```. this is with 2.4.1. I tried applying that patch but it makes no difference to this issue. Oh no I was wrong it does build after.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329:68,Test,Test,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329,4,['Test'],['Test']
Testability,Confirmed - sorry tested on wrong install.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/222#issuecomment-133038116:18,test,tested,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/222#issuecomment-133038116,1,['test'],['tested']
Testability,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:748,benchmark,benchmark,748,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['benchmark'],['benchmark']
Testability,"Contains: swig.log, mkmf.log, and build.log. Original comment by: jballanc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779976:15,log,log,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779976,3,['log'],['log']
Testability,Could you convert that file to SMILES on MSVC?. babel.exe test/files/forcefield.sdf -osmi. I'm curious if the C60 only has aromatic carbons. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797139:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797139,1,['test'],['test']
Testability,"D'oh! That was a bad mistake. When I have a chance, I'll see if I can sneak in a triangle-smoothing unit test. Both that code, and `distgeom.cpp` had weird copy/paste errors there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1735#issuecomment-354183347:105,test,test,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1735#issuecomment-354183347,1,['test'],['test']
Testability,"DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14478,test,test,14478,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:12013,test,test,12013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"Dear Chris,; Thanks for your updating and working. I will be happy to test a new version of OpenBabel. Unfortunately I don't know how I can help you. Original comment by: ruchemist",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795559:70,test,test,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795559,1,['test'],['test']
Testability,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:66,test,testing,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,5,"['Test', 'test']","['TestToolkit', 'testRFmissingfile', 'testing', 'testpybel']"
Testability,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:237,test,testing,237,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470,8,"['Test', 'assert', 'test']","['Test', 'assert', 'assertRaises', 'testRFformaterror', 'testing', 'testpybel']"
Testability,"Dear baoilleach,; Did you test my files? Are you able to resolve this problem?. Original comment by: ruchemist",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795543:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795543,1,['test'],['test']
Testability,Debian provides [build logs for all architectures](https://buildd.debian.org/status/package.php?p=openbabel) if this is of any help in this case. To me the logs for arm64 do not seem to contain anything strange around `mcdlutil.cpp`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332:23,log,logs,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332,2,['log'],['logs']
Testability,Did you figure it out? I'm getting almost the same exact failed tests as you did.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069:64,test,tests,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069,1,['test'],['tests']
Testability,"Did you give [cairosvg](https://cairosvg.org/) a shoot? It is based on Python3, does not require inkscape, and may run from the CLI. The files attached in the archive were obtained by . `obabel -ipdb test.pdb -osvg -O probe.svg -xd`; `cairosvg probe.svg -o probe.png`; `cairosvg probe.svg -o probe.pdf`; `cairosvg probe.svg -o probe.ps`; `ps2eps probe.ps`. in Linux Debian 10 / branch «testing». Obviously, there is this additional step to convert the `.ps` into a `.eps` with [ps2eps](http://tm.uka.de/~bless/ps2eps). However both this later file as well as the `.pdf` written by `cariosvg` are true vector format files ready for further edit in an editor like inkscape (successfully tested with version 1.0). Yet I agree, a direct export from openbabel would be welcome. [example.zip](https://github.com/openbabel/openbabel/files/5012395/example.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2251#issuecomment-667692391:200,test,test,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2251#issuecomment-667692391,3,['test'],"['test', 'tested', 'testing']"
Testability,"Difficult to say what may be the problem there without the files. Some questions:; * Have you tried adding the `-m` flag to the first command? (`obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e -m`; * I think you may have entered the filename wrong on your ""-m-command"" it should probably be something like `obabel -isdf target.sdf -osdf -O target_split.sdf -m` to give files like 'target_split1.sdf', 'target_split2.sdf' etc.; * If the above doesn't help, could you try with a subset of molecules? E.g. the first 10 or so and attach the file so that we can test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292:577,test,test,577,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292,1,['test'],['test']
Testability,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:180,test,testing,180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828,1,['test'],['testing']
Testability,Do the tests pass? Or at least does the number of failing tests not increase?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22381690:7,test,tests,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22381690,2,['test'],['tests']
Testability,Do you have the test file available?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1769#issuecomment-362195079:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1769#issuecomment-362195079,1,['test'],['test']
Testability,"Do you need the python bindings? Otherwise, I would say that you can move on with the install step. According to your linked bug report the pdformat test fails due to a Python error as well so that one could be ignored.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250#issuecomment-643936104:149,test,test,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250#issuecomment-643936104,1,['test'],['test']
Testability,"Do you want to add a command-line switch to set the seed? This seems like it's a fairly simple way tweak the randomness (e.g., for unit tests).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685:136,test,tests,136,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685,1,['test'],['tests']
Testability,"Doh! Snaps run in a sandboxed environment, and don't have permissions unless the creator grants them. I'll have to redo the snap. In the meanwhile you can still pipe stuff through obabel and pipe the output to a file, e.g.; cat tmpfile.cif | openbabel.obabel -icif -opdb > tmpfile.pdb; (I've confirmed this works with your test file). When I've done it, I'll update this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570:20,sandbox,sandboxed,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570,2,"['sandbox', 'test']","['sandboxed', 'test']"
Testability,"Done, I initially wrote an automorphism test but that seemed fine so replicated exactly Noel's test case and confirmed if failed without the change to ``ismorphism.cpp``.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467618842:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467618842,2,['test'],['test']
Testability,"Drat - I merged but should have changed the title. Not to worry. It looks like this was something I added when I rewrote the test suite, but it wasn't needed in the end.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1757#issuecomment-358567778:125,test,test,125,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1757#issuecomment-358567778,1,['test'],['test']
Testability,"Drat. I don't understand. Right now, I can only assume it's a quirk of the Appveyor infrastructure, and I do note that they recently changed something or other. Of course, it could be a real bug, but even if so, it's not related to your patch and we can't reproduce it. Apologies for the inconvenience. I'll tell Appveyor to skip that particular test and rebuild.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122809148:346,test,test,346,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122809148,1,['test'],['test']
Testability,"Dup of #1283. Currently there is no option not to append the number of residue during molecule. Maybe the quickest solution would be to add such option?. As a workaround in Python would be to remove the residue number from the end of residue name before writing to mol2. ```python; import re; import pybel. mol = next(pybel.readfile('mol2', 'test.mol2')). for res in mol.residues:; new_resname = re.sub('[0-9]+$', '', res.name); res.OBResidue.SetName(new_resname); print(res.name). print(mol.write('mol2')); ```; Also if you want to save small molecules (ligands) there is an `l` option to ignore residue information.; ```; obabel -imol2 1.mol2 -omol2 2.mol2 -xl # <1> in output; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893:342,test,test,342,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893,1,['test'],['test']
Testability,"E.g. `obabel -:""c1ccncn1"" -O test.png --append MW`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426,1,['test'],['test']
Testability,"ESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:22974,test,test,22974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testexample']"
Testability,"Each time one wants to report an issue about openbabel here on GitHub, the interface provides you with a template. This is to help you to organize your observation(s), and others to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1040,test,test,1040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,1,['test'],['test']
Testability,Ensured that tests actually run (https://s3.amazonaws.com/archive.travis-ci.org/jobs/109369516/log.txt):. ```; Start 29: test_cifspacegroup_1; 28/155 Test #29: test_cifspacegroup_1 ............. Passed 0.48 sec; Start 30: test_cifspacegroup_2; 29/155 Test #30: test_cifspacegroup_2 ............. Passed 0.48 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/264#issuecomment-184253529:13,test,tests,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/264#issuecomment-184253529,4,"['Test', 'log', 'test']","['Test', 'log', 'tests']"
Testability,Ensured that tests related to CIF pass:. ```; Start 29: test_cifspacegroup_1; 28/158 Test #29: test_cifspacegroup_1 ............. Passed 0.53 sec; Start 30: test_cifspacegroup_2; 29/158 Test #30: test_cifspacegroup_2 ............. Passed 0.53 sec; Start 31: test_cifspacegroup_3; 30/158 Test #31: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 32: test_cifspacegroup_4; 31/158 Test #32: test_cifspacegroup_4 ............. Passed 0.55 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/267#issuecomment-188342224:13,test,tests,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/267#issuecomment-188342224,5,"['Test', 'test']","['Test', 'tests']"
Testability,"Except it would be good with a test or two as well, to show that it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2283#issuecomment-700278938:31,test,test,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2283#issuecomment-700278938,1,['test'],['test']
Testability,"FOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:6692,test,test,6692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testsym']"
Testability,Failure is in the cifwriter test #2170,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2184#issuecomment-622494061:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2184#issuecomment-622494061,1,['test'],['test']
Testability,Fault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2458,Test,Test,2458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574,1,['test'],['test']
Testability,"First, all the credit for the conda binary goes to @rwest and @connie (discussion [here](https://github.com/conda/conda-recipes/pull/310)). All I did was run a more recent git commit through their build script. There's a note [hidden on binstar](https://anaconda.org/patrickfuller/openbabel):. > Tested on Python 2 and 3, Mac and Ubuntu. Requires adding asmeurer and rwest to your ~/.condarc channels. These channels allow the installer to grab the `pkg-config` and `cairo` dependencies. @rwest had to patch directly into openbabel's source to resolve certain dependency paths (the goal was to have _all_ dependencies managed through conda). If you don't use their channels for pulling dependencies, the links are going to be incorrect. For replication's sake, my `~/.condarc` is:. ```; channels:; - defaults; - asmeurer; - rwest; - rmg; - patrickfuller; ```. The binary should work. If it doesn't, my pre-conda workflow used a whole lot of `install_name_tool` commands. ```; install_name_tool -change libpython3.4m.dylib ~/miniconda3/lib/libpython3.4m.dylib ~/miniconda3/lib/python3.4/site-packages/_openbabel.so; for l in xmlformat pubchem cmlreactformat cmlformat cdxmlformat; do install_name_tool -change libxml2.2.dylib ~/miniconda3/lib/libxml2.dylib ~/miniconda3/lib/openbabel/2.3.90/$l.so; done; ```. It's a mess and really not recommended. Let me know if this helps!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248:296,Test,Tested,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248,1,['Test'],['Tested']
Testability,"Following discussion with WDI on shapado (http://blueobelisk.shapado.com/questions/has-anyone-got-experience-of-round-tripping-2d-sdf-smiles-sdf-and-its-effect-on-stereochemistry) and testing with Isis/Draw and Symyx Draw, it seems that both explicit and implicit hydrogens should always be considered the highest priority atoms if present. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1073#issuecomment-281799974:184,test,testing,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1073#issuecomment-281799974,1,['test'],['testing']
Testability,"Following your email, I started writing the docs, and had a similar problem. After checking the code, and looking at logp.txt, I see that you need to put "";heavy"" at the start (see logp.txt), and then it works. I don't yet understand how this works but I'm getting there... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801445:117,log,logp,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801445,2,['log'],['logp']
Testability,"For my part, if anyone creates a setup.py that is good to go against the; current release, I am happy to upload it. There is a test pypi server where; things can be tested. On Sat, 9 Nov 2019 at 23:11, Matt Swain <notifications@github.com> wrote:. > Sorry for the slow reply. It's not too much trouble to put a new 3.0; > package onto PyPI. @e-kwsm <https://github.com/e-kwsm> has already done; > most of the hard work in updating the setup.py script in #2060; > <https://github.com/openbabel/openbabel/pull/2060>. Someone just needs to; > run python setup.py sdist in the scripts/python directory, then upload; > the result with twine.; >; > However... there is a bug in the 3.0 release that means that the pip; > install process will fail to find the OB include directory. This has since; > been fixed (#2059 <https://github.com/openbabel/openbabel/pull/2059>,; > @e-kwsm <https://github.com/e-kwsm> again, thanks!) but I would recommend; > against uploading the sdist until this fix is released (in 3.0.1?),; > otherwise it will just break pip install... for everyone who hasn't; > compiled the latest master from source.; >; > Honestly, this is just the latest example of how unreliable it is to; > install via pip with a sdist that relies on pkgconfig to find OB and then; > run swig at install time. I would strongly recommend people use conda; > instead, which has none of these problems. If people are really keen on; > pip, a better solution would probably be to create binary wheel files like; > Noel does for Windows, but I have no experience with this.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2067?email_source=notifications&email_token=AAALCGJHUR2C6MYZ5435RLLQS47S3A5CNFSM4JFL3CQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDURJJY#issuecomment-552146087>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKFCDMIEUW4MP7K",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2067#issuecomment-553360004:127,test,test,127,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2067#issuecomment-553360004,2,['test'],"['test', 'tested']"
Testability,For testing purposes which yielded this bug. I reckon the title shouldn't be *****,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459:4,test,testing,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459,1,['test'],['testing']
Testability,"For the record, I now have the following SMILES and InChI for the two test cases, OB01_DoubleRing/mol and OB02_FusedRing.mol respectively:. CN1CC[C@]2(CO[C@@H](C)O2)C1; InChI=1S/C8H15NO2/c1-7-10-6-8(11-7)3-4-9(2)5-8/h7H,3-6H2,1-2H3/t7-,8-/m1/s1. O[C@H]1C[C@H]2CC[C@@H](C1)N2C; InChI=1S/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575:70,test,test,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575,1,['test'],['test']
Testability,"Forgot to tell, I don't reproduce this with master sources, as expected (see my previous comment), here's the result:. > `julien@debian:~/projects/openbabel/build/bin$` ./obprop ../../bugs/; CID_2519.xml mol1opt.log mol1test_freq.log patch-909.txt ; julien@debian:~/projects/openbabel/build/bin$ ./obprop ../../bugs/CID_2519.xml ; ==============================; *** Open Babel Error in XML Format; Need to specify the input XML format more `precisely`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289#issuecomment-381324590:212,log,log,212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289#issuecomment-381324590,2,['log'],['log']
Testability,"From the perspective of small molecules:. Does `diff` reveal differences on these hydrogens only? Do the heavy atoms (CNOPS) move a little, too?. If these structures are not too big (criterion: counting the number of atoms), I suggest to export the newly generated `.pdb` for each run into an `.xyz` and then compare a Kabsch test. E.g., [Jimmy Charnley](https://github.com/charnley/rmsd) initiated a handy Python based implementation to superimpose two structures and to quantify the difference when aligning them as much as possible. Since the two forms you generate have the same number of atoms, and are more similar than just constitutional isomers, a check could possibly were quick. (You equally may put two `.pdb` files into a `.zip`, and attach this archive to document your observations in this thread, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970:326,test,test,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970,1,['test'],['test']
Testability,Gaussian Log file which causes bad conversion. Original comment by: mirari,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105#issuecomment-281800580:9,Log,Log,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105#issuecomment-281800580,1,['Log'],['Log']
Testability,Ghemical Forcefield Test Case (Multiple Atoms Same Location). Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549:20,Test,Test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549,1,['Test'],['Test']
Testability,"Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. So, let's put this on-hold until all of the MinGW problems are fixed. I'll try and find time to figure it out...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311903459:69,test,tested,69,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311903459,1,['test'],['tested']
Testability,"Going to merge now, and sort out the test failures found after merging #1656",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1660#issuecomment-335401643:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1660#issuecomment-335401643,1,['test'],['test']
Testability,"Good find. Do you still have the test case? I'd like to see where in the code it was accessing the value, as it may be a logic problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984,2,"['log', 'test']","['logic', 'test']"
Testability,"Good to go, @ghutchis. The codacy warnings about subprocess refer to debug code that Andrew was using. And just to add that I commented out the problematic pointcloud test mentioned by @fredrikw in the original PR. It uses a random number generator. *sigh*",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612876615:167,test,test,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612876615,1,['test'],['test']
Testability,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:424,test,test,424,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575,2,['test'],['test']
Testability,"Gotcha. I'll tell you what - with this info, I'll put together the test; with the testfiles from the original bug report. - Noel. On Mon, 24 Sep 2018 at 13:27, fredrikw <notifications@github.com> wrote:. > Yeah, I know ther are no tests, I did this on my Windows machine at work; > and I'm not in complete agreement with the build system... I'll try to add; > a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make; > sure that all atoms have unique x- and y-positions (that is the real; > problem, the long bonds are just a symptom). Before the change I get the; > molfile (notice the coordinates for the last three atoms):; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > After the change I got:; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUgwxlZxsfb83ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968,4,['test'],"['test', 'testfiles', 'tests']"
Testability,Great - do you have a sample hin file for testing?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358062636:42,test,testing,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358062636,1,['test'],['testing']
Testability,Great news! Many thanks! ; I found your https://github.com/openbabel/openbabel/tree/master/test directory and will somehow manage :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257#issuecomment-183683946:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257#issuecomment-183683946,1,['test'],['test']
Testability,Great testcase. The problem is caused at mol.AssignSpinMultiplicity() in MDLFormat::ReadMolecule. I'll look into it tomorrow hopefully... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1194#issuecomment-281802058:6,test,testcase,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1194#issuecomment-281802058,1,['test'],['testcase']
Testability,Happy to test a patch if needed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624#issuecomment-325835264:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624#issuecomment-325835264,1,['test'],['test']
Testability,Has this been tested over a larger dataset?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367369364:14,test,tested,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367369364,1,['test'],['tested']
Testability,"Have you been doing any performance testing ([g]perf, profiling, sampling, etc.). It would be interesting to see where the hot-spots are in the unit tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516:36,test,testing,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516,2,['test'],"['testing', 'tests']"
Testability,"Have you tested with the latest SVN? I'd like to close this bug. If you haven't tested, please try the 2.2.0b1 snapshot:; https://sourceforge.net/project/platformdownload.php?group_id=40728. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781172:9,test,tested,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781172,2,['test'],['tested']
Testability,"Hello all,. I'm updating Open Babel to version 3.1.1 for the GNU Guix package manager, and I can reproduce this same test failure by using the 32-bit x86 version of GCC 7.5.0. The test passes when building for and executing on 64-bit x86, 32-bit ARM hard float, and 64-bit ARM. Hope this helps somehow!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2041#issuecomment-770950573:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041#issuecomment-770950573,2,['test'],['test']
Testability,Hello!. The warning is not an error but it is saying that OpenBabel cannot assign kekulized bonds (i.e. alternating single and double bonds) to the structure. It's most likely not a problem but could indicate that the input molecule has problems in rare cases so the best option is to double check the input and output structures (easiest to do graphically) to assert that they are the same and correct.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392:361,assert,assert,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392,1,['assert'],['assert']
Testability,"Hello,. Could you please attach an example file with this problem for testing?; And also, please shorten the title of the issue and move the text to the description. It is very difficult to read now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2181#issuecomment-619841542:70,test,testing,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2181#issuecomment-619841542,1,['test'],['testing']
Testability,"Hello,does openbabel have a function to calculate the logS (Water solubility) of SMILES?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-821814955:54,log,logS,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-821814955,1,['log'],['logS']
Testability,"Hello. I would like to create a pull request, but I'm extremely busy this week. I don't' want to create it w/o testing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2125#issuecomment-590873825:111,test,testing,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2125#issuecomment-590873825,1,['test'],['testing']
Testability,"Here are some console logs:; Error: attempt to subscript container with out-of-bounds index -350469331, ; but container only holds 3 elements. Objects involved in the operation:; sequence ""this"" @ 0x0x5555557fbaf0 {; type = std::__debug::vector<double, std::allocator<double> >;; }. Here's part of the bt:; #3 0x00007ffff73bd363 in std::__debug::vector<double, std::allocator<double> >::operator[] (this=0x5555557fbaf0, __n=18446744073359082285); at /usr/include/c++/7/debug/vector:417; #4 0x00007ffff75472e9 in OpenBabel::OBRotamerList::SetCurrentCoordinates (this=0x7fffffffb290, mol=..., arr=std::__debug::vector of length 7, capacity 7 = {...}); at /home/julien/projects/openbabel/src/rotamer.cpp:562; #5 0x00007ffff73ea3c5 in OpenBabel::OBForceField::FastRotorSearch (this=0x7fffe8234200 <OpenBabel::theForceFieldUFF>, permute=false); at /home/julien/projects/openbabel/src/forcefield.cpp:1376; #6 0x00007fffe9c0a1ad in OpenBabel::OpGen3D::Do (this=0x7fffe9e90ae0 <OpenBabel::theOpGen3D>, pOb=0x5555557f7a00, OptionText=0x5555557fa2f0 """", pOptions=0x7fffffffe6a8, ; pConv=0x7fffffffe540) at /home/julien/projects/openbabel/src/ops/gen3d.cpp:164. and now rotorKey from frame 5:; (gdb) p rotorKey; $5 = std::__debug::vector of length 7, capacity 7 = {0, -350469331, 0, 0, 0, 0, 0}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694#issuecomment-374054530:22,log,logs,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694#issuecomment-374054530,1,['log'],['logs']
Testability,"Here are some tests, using this script:. ``` python; import pybel; import os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:14,test,tests,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,Here is a smaller test set that produces the same issue. . test_maccs.smi: ; [test_maccs.smi.tar.gz](https://github.com/openbabel/openbabel/files/10179954/test_maccs.smi.tar.gz). test_maccs.fs: ; [test_maccs.fs.tar.gz](https://github.com/openbabel/openbabel/files/10179955/test_maccs.fs.tar.gz). the fast search file was created using this command:; obabel -ofs test_maccs.smi -xfMACCS. the structure within test_maccs.smi titled lead_compound was compared to the complete database using this command:; obabel test_maccs.smi -ofpt -s'Nc1ccc2c(c1)nc([nH]2)c1ccc(cc1)C(=O)O' -at0.5,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691,1,['test'],['test']
Testability,Here's a simpler test case presumably stemming from the same problem:. <pre>; >obabel -:O[C@@H](C)N -oinchi | obabel -iinchi -osmi -h; C1[C@H](N)(O)[H]1; </pre>,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971,1,['test'],['test']
Testability,Here's a test file from cclib:; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802247:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802247,1,['test'],['test']
Testability,"Hi ; I also encounter similar situation when converting a bunch of Zinc15-biogenic compounds in smile strings to generate 3D structure using --gen3D to output as mol2 format in my Ubuntu machine (16.04 LTS) using openbabel 3.0.0. Screen freeze, process killed itself in the middle after freeze and many output with no 3D coordinate like above occur very frequently. Since there is no crash output in /var/crash and error information in auth.log in /var/log. Is there anything I could do to resolve this question, Your kindly help will be highly appreciated. sincerely. Jrhau",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2117#issuecomment-598192962:441,log,log,441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2117#issuecomment-598192962,2,['log'],['log']
Testability,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:659,test,tested,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983,1,['test'],['tested']
Testability,"Hi @dkoes. Can you comment on this? This PR causes your PDBQT test case in testbabel.py to fail as follows. The test case has as output the following:; ```; REMARK 1 A between atoms: _1 and _2; REMARK 2 A between atoms: _2 and _3; ```; This PR causes this output to change to:; ```; REMARK 1 A between atoms: N_1 and CA_2; REMARK 2 A between atoms: CA_2 and C_3; ```; Looks like an improvement to me, but I just want to doublecheck before I edit the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-397959688:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-397959688,4,['test'],"['test', 'testbabel']"
Testability,"Hi @nbehrnd ; Thanks so much for your kind reply. We have [a newer method for covalent docking](https://github.com/forlilab/Meeko/?tab=readme-ov-file#reactive-docking), supported by a set of new tools (and python3 packages). . The inquired covalent docking is a relatively old method. But it should still work with the designated python2.7 interpreter, which is complemented by a set of Python2 packages, including a specific (older) version of obabel. . The reported issues might be caused by a version change or by the fact that the Win11 platform wasn't tested when the tutorial was written.. We appreciate the report and all of your kind support. @Brett628 If you have any further questions, please do not hesitate to reach out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865:557,test,tested,557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865,1,['test'],['tested']
Testability,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:164,test,testing,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613,1,['test'],['testing']
Testability,"Hi @timvdm, apart from a logical error in my own code (which I need to think about), the OB code still had trouble with the following pairs:. ```; *=Nc1[nH]cc2-c(c1)c1ccccc1n2,*=Nc1ncc2c(c1)c1ccccc1[nH]2; *=Nc1ccc(cc1)NC(Nc1ccccc1)=S,*=Nc1ccc(cc1)N=C(Nc1ccccc1)S; *=Nc1cccc(c1)NC(N*)=S,*=Nc1cccc(c1)NC(=N*)S; *=Nc1ccc(cc1)NC(=N*)S,*=Nc1ccc(cc1)NC(N*)=S; ```; It also had trouble with protonated nitrogens, which hopefully is a simple atom-typing issue:; ```; *N=CC(c1[nH]ncn1)=CN=[N+](c1ccccc1)*,*N=CC(c1n[nH]cn1)=CN=[N+](c1ccccc1)*; *NC(c1ccc[n+](c1)*)=O,*N=C(c1ccc[n+](c1)*)O; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059:25,log,logical,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059,1,['log'],['logical']
Testability,"Hi Geof,. I updated Openbabel and saw nothing. However, I noticed you merged the ; patch for Avogadro. julien@julienPC:~/avogadro/avogadro$ git pull -r && git log -1; Current branch master is up to date.; commit 07060934342ab621d42b77d0aa5e7b2387a46f3a; Author: Julien Nabet <serval2412@yahoo.fr>; Date: Tue Sep 24 22:59:38 2013 +0200. Coverity: fix some memory leaks. Change-Id: I7a1ca207ace6a5d89cf447551619c11849d93c6a. julien@julienPC:~/openbabel$ git pull -r && git log -1; Current branch master is up to date.; commit 4bdca389075d90fe25d59708a7034a4c578d431c; Merge: 63fe928 3ca6aa3; Author: Geoff Hutchison <geoff.hutchison@gmail.com>; Date: Wed Sep 25 08:13:54 2013 -0700. Merge pull request #29 from Reinis/bindings_scala. scala: Add an example program in Scala using Java bindings. Am I missing something?; Thanks anyway! :-). Julien. On 30/09/2013 21:07, Geoff Hutchison wrote:; >; > Merged. Thanks! (Feel free to use GitHub and make pull requests for ; > easier merges and code-review.); >; > ------------------------------------------------------------------------; >; > *[bugs:#893] <http://sourceforge.net/p/openbabel/bugs/893/> cppcheck: ; > Prefer prefix ++/-- operators for non-primitive types (patch attached)*; >; > *Status:* closed; > *Labels:* cppcheck; > *Created:* Thu Sep 26, 2013 04:54 AM UTC by serval24; > *Last Updated:* Thu Sep 26, 2013 04:54 AM UTC; > *Owner:* nobody; >; > Hello,; >; > Cppcheck reported several times (about 100) this:; > Prefer prefix ++/-- operators for non-primitive types; >; > I attached a patch to fix them + some 2 or 3 assert; >; > Julien; >; > ------------------------------------------------------------------------; >; > Sent from sourceforge.net because you indicated interest in ; > https://sourceforge.net/p/openbabel/bugs/893/; >; > To unsubscribe from further messages, please visit ; > https://sourceforge.net/auth/subscriptions/; >. Original comment by: serval2412",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1273#issuecomment-281803754:159,log,log,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273#issuecomment-281803754,3,"['assert', 'log']","['assert', 'log']"
Testability,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:449,test,test,449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,1,['test'],['test']
Testability,"Hi! I've run into an issue that I believe is the same except that I'm encountering it in Pybel rather than the command-line interface. I installed Openbabel/Pybel with Conda and the output of `conda list ""openbabel""` is shown below:; ```; # packages in environment at /home/james/miniconda3/envs/dbale:; #; # Name Version Build Channel; openbabel 1!2.4.1 py35_2 omnia; ```. I tested all available force fields and got the same error for them all. Here is a minimal example of the error:. ```python; import pybel. cases = [""F[Zn]F"", ""F[Ti](F)F""]; ffs = [""gaff"", ""ghemical"", ""mmff94"", ""mmff94s"", ""uff""]; for case in cases:; for ff in ffs:; m = pybel.readstring(""smi"", case); m.make3D(forcefield=ff). print(""Force Field ="", ff); print(m.write(""xyz"")); ```; ```; Force Field = gaff; 4. F 1.07585 0.02711 0.05926; Ti 3.24585 0.02711 0.05926; F -nan -nan -nan; F -nan -nan -nan. Force Field = ghemical; 4. F 1.02247 0.07565 0.06142; Ti 3.19247 0.07565 0.06142; F -nan -nan -nan; F -nan -nan -nan. Force Field = mmff94; 4. F 1.04019 0.07609 0.05095; Ti 3.21019 0.07609 0.05095; F -nan -nan -nan; F -nan -nan -nan. Force Field = mmff94s; 4. F 0.97489 0.09279 -0.02756; Ti 3.14489 0.09279 -0.02756; F -nan -nan -nan; F -nan -nan -nan. Force Field = uff; 4. F 0.92952 -0.06106 -0.03611; Ti 3.09952 -0.06106 -0.03611; F -nan -nan -nan; F -nan -nan -nan; ```. Any advice would be appreciated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1213#issuecomment-541377306:376,test,tested,376,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1213#issuecomment-541377306,1,['test'],['tested']
Testability,"Hi, . To help fixing the Bug I wanted to add a Unit test, ; and realised that I just have to add them to test/files/validsmarts.txt. tail validsmarts.txt; [oX2r5]; [r;!r3;!r4;!r5;!r6;!r7]; [sX2r5]; # Trigger Bug #3065756; Nc1ncnc2c1ncn2C1C=C=CO1 ; C1=CC(n2cnc3c(N)ncnc23)OC=1. will result in . ...; ok 224; ok 225; ok 226; not ok 227 failed on C1=CC(n2cnc3c(N)ncnc23)OC=1; 1..227; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; C1=CC(n2cnc3c(N)ncnc23)OC=1; ^. Hope that helped. I am still unsure whether this is a valid bug, ; but IIRC all SMILES should be valid SMARTS. And it works with the ; canonical SMILES as input. Yours,; Steffen. Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021#issuecomment-281797270:52,test,test,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021#issuecomment-281797270,2,['test'],['test']
Testability,"Hi, I just added a comment line. No tests for now, unfortunately.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1663#issuecomment-337355953:36,test,tests,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1663#issuecomment-337355953,1,['test'],['tests']
Testability,"Hi,. I am not familiar enough with CML spec to reply to your question. See below for more explanations. I am doing molecular simulations with empirical force fields (e.g. OPLSAA or other). In order to do a molecular simulation, I must assign a force field type to each atom in a molecule. Recently, I decided to use the AtomClass number as a force field type. I found that CML is the only output format that use the AtomClass number but I would like to output this information directly in tinker xyz file (instead of MM2 force field). My work flow for a molecular simulation is then: create a SMILE code for molecules including AtomClass number (or equivalently force field type), use obabel to output a tinker xyz file (with coordinates and connectivity informations) and a cml file (with force field information) from which as script creates input files for my molecular dynamics code…. This is just a second-choice route! Ideally, I would like obabel to do atom typing (associate force field to atoms from element names and connectivity using rules) just like aten does using NETA langage. I will be happy to help or test!; Bernard. > Le 23 déc. 2017 à 22:16, baoilleach <notifications@github.com> a écrit :; > ; > I was just looking at this code this week, and I can imagine the problem. Can I ask what do you use this CML for? What I've been thinking about is whether it would be better to write out the atomclass information in some other way if this is allowed by the CML spec.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-353773802:1120,test,test,1120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-353773802,1,['test'],['test']
Testability,"Hi,. Yeah I never opened a pull request for this because I wasn't confident enough that it didn't break anything - especially considering it makes fairly significant changes to the reading and writing of MDL Molfiles. In particular:; - I'm not really sure how Open Babel handles zero-order bonds internally in general. Do any other changes have to be made to accommodate that?; - I had to change AddHydrogens so it doesn't reset the ImplicitValencePerceived flag (just like it doesn't reset the ChiralityPerceived flag). Hopefully that doesn't cause any problems elsewhere.; - I haven't extensively tested the implementation of the algorithm. Everything seems fine, but I just tested it on some of the structures in the supplementary information for the paper. Alex Clark may be the best person to check it over, if he is able to. . The paper - http://pubs.acs.org/doi/abs/10.1021/ci200488k; Supplementary information - http://pubs.acs.org/doi/suppl/10.1021/ci200488k/suppl_file/ci200488k_si_001.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22380480:599,test,tested,599,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22380480,2,['test'],['tested']
Testability,"Hi,; i write a quick fix : see attached file 2527225.patch (more checking on values of columns 79/80). Do you think that a warning should be displayed ?; I attach 6 pdb files :; 1CRN.pdb / dipep.pdb (input test files); 1CRN2.2.0.pdb / dipep2.2.0.pdb : babel -ipdb 1CRN.pdb -opdb 1CRN2.2.0.pdb (babel 2.2.0 06/13/2008); 1CRNFixed.pdb / dipepFixed.pdb : babel -ipdb 1CRN.pdb -opdb 1CRNFixed.pdb (babel 2.2.X with new attached patch). Original comment by: lleell00",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/846#issuecomment-281794316:206,test,test,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/846#issuecomment-281794316,1,['test'],['test']
Testability,Hi. The test file from cclib you gave me is not read correctly when using openbabel 2.3.1_0 with the command:; babel -ig09 dvb_un_sp.out -oxyz aaa.xyz; 0 molecules converted. while it is converted correctly using openbabel 2.2.3_0. I forgot to mention that i'm working on mac os x mountain lion with openbabel installed from macport. Do you have the same problem for this file with your version of open babel?. Best regards. Vincent. Original comment by: vliegeois,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802249:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802249,1,['test'],['test']
Testability,Hi. You can find information on running and adding a test at:; http://open-babel.readthedocs.io/en/latest/Contributing/Testing.html,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388866388:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388866388,2,"['Test', 'test']","['Testing', 'test']"
Testability,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:77,test,test,77,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372,6,['test'],"['test', 'testgauss']"
Testability,"Hm, the test failure seems to be related to code I haven't touched. Any suggestion on how to debug this?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412,1,['test'],['test']
Testability,"Hmmm...it works for me on Windows. Here's what I did. I took a SMILES file:; ```; C 18; CC 123; CCC 124; CCCC 125; ```; I converted it to an SDF file. Then:; ```; C:\Tools\openbabel\baoilleach\2017build\bin\Release>obabel test.sdf -osmi --filter ""title<'129'""; CC 123; CCC 124; CCCC 125. C:\Tools\openbabel\baoilleach\2017build\bin\Release>obabel test.sdf -osmi --filter ""title<129""; C 18; CC 123; CCC 124; CCCC 125; ```; Can you doublecheck just to be sure, to be sure?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342398444:222,test,test,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342398444,2,['test'],['test']
Testability,"Hmmm...seems to work fine on Windows (Travis doesn't run the Windows tests, but I've just done them here). I'll check it out on Linux...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351517687:69,test,tests,69,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351517687,1,['test'],['tests']
Testability,Hold off merging this.. it looks like it is buggy (despite passing make test),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94899362:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94899362,1,['test'],['test']
Testability,"Hopefully fixed in r4081. I set OBJ_DIR in the CMakeLists.txt. Also, I don't rely on LD_LIBRARY_PATH. . Geoff, can you test this on Mac? (Marked as pending...) . Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797231:119,test,test,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797231,1,['test'],['test']
Testability,"How are you doing the compilation? Is that cross-compilation from a different platform for example? Which ARM device exactly are you using/targeting? I have an old Raspberry Pi that I can possibly use to test. The reason I ask is that while the compilation error can be made to disappear, I would still be worried that the other uses of char in those functions may be silently affected and so I'd like to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345510647:204,test,test,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345510647,2,['test'],['test']
Testability,"Huh, why might that be? I'm importing pybel with `from testbindings import pybel` which is what other test files do. The test passes on my workstation and on CI.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319:55,test,testbindings,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319,3,['test'],"['test', 'testbindings']"
Testability,I *think* the problem is that somehow C60 isn't becoming completely aromatic on these systems. I'll see if I can come up with a test for that. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797136:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797136,1,['test'],['test']
Testability,"I agree with all of this, and I'd like to merge as soon as possible to winkle out any remaining issues asap and to draw a line under this part. I'll see @chrismorl on 22 June at a meeting, and I'll look into the issues surrounding radicals in the run up to that (I don't think it's really going to be a problem). Appveyor is being annoying though. I'll have to skip another test - there's something not right about their system.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983:374,test,test,374,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983,1,['test'],['test']
Testability,"I also don't think there is likely to be a problem with identifying ; radicals. I'll try to look at the modified code before 22 June, but ; don't depend on this. Chris. On 03/06/2017 17:17, baoilleach wrote:; > I agree with all of this, and I'd like to merge as soon as possible to; > winkle out any remaining issues asap and to draw a line under this part.; > I'll see @chrismorl <https://github.com/chrismorl> on 22 June at a; > meeting, and I'll look into the issues surrounding radicals in the run; > up to that (I don't think it's really going to be a problem).; >; > Appveyor is being annoying though. I'll have to skip another test -; > there's something not right about their system.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAGFdakjYHBGAYodovrp1Vntm7kQnwTJks5sAYcFgaJpZM4NkO25>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305986338:634,test,test,634,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305986338,1,['test'],['test']
Testability,"I also want to submit a test case for this, but the problem is, that I don't know the appropriate way to get a temporary folder files store within the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225562422:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225562422,2,['test'],['test']
Testability,"I am not a fan of this. Unless initialising to zero is a requirement of the code logic, all that we're doing here is slowing things down, and papering over potential problems. I would prefer the code to segfault and for us to fix the underlying problem, rather than the code seemingly working fine but actually not. A good example is PR #2038, where the underlying logic problem remains (it's on my TODO) and was only found due to the unitialized memory. . However, I do think it would be good to run our test suite in an environment that could catch such problems (e.g. address-sanitizer). We actually used to do this back in the day when we used CDash for nightly builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584:81,log,logic,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584,3,"['log', 'test']","['logic', 'test']"
Testability,"I am seeing the same test failures, plus a few others, for the 2.3.0 source release of OpenBabel on CentOS 5.5 / i386:. 3 - builder_Test (Failed); 22 - inchiSamples_Test (Failed); 28 - charge-mmff94_Test (Failed); 32 - ffgaff_Test (Failed); 33 - ffghemical_Test (Failed); 35 - ffuff_Test (Failed); 43 - logp_psa_Test (Failed); 53 - pytest_babel (Failed); 54 - pytest_sym (Failed); 55 - pytest_fastsearch (Failed); 56 - pytest_unique (Failed); 57 - pytest_kekule (Failed); 58 - pybindtest_bindings (Failed); 59 - pybindtest__pybel (Failed); 60 - pybindtest_example (Failed). I assume the test numbers differ from the OP's because of different CMake options. Specifically, I configured CMake (version 2.6.4) this way:. JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0 \; /usr/bin/cmake ../openbabel-2.3.0 \; -DCMAKE_INSTALL_PREFIX=/usr \; -DJAVA_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_INCLUDE_PATH=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE \; -DPERL_LIBRARY=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE/libperl.so \; -DPYTHON_BINDINGS=ON -DRUBY_BINDINGS=ON. No OpenBabel binaries, libraries, or environment configuration was yet installed on the build system. This is significant at least because I had to patch a bug in the Ruby bindings' build configuration to build successfully (I will report that bug separately), but it may also affect the tests. I ran ""make"" with no additional options or environment variables, then ""make test"" to produce the test failures. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801,5,['test'],"['test', 'tests']"
Testability,"I am sorry for the timing of this report. I know you have all put a lot of work in the code and especially the canonicalization code works very smooth now and I could process the 9.6 million compounds within our Simosa database without any problem using the 2.3.0rc2. ; But these tests were on neutral compounds and it was only yesterday when I started working on the output of the pKa calculator of ChemAxon that I discovered this discrepancy. ; The given ring system is also one of those cases where different programs behave differently. For instance with the ChemAxon tools there are multiple models and in one model the ring is being considered as aromatic while with the other it is not. So I guess this one of those rather particular cases when several rules coincide when using kekulize,cpp on this ring. Original comment by: @gertthijs",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042#issuecomment-281797753:280,test,tests,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042#issuecomment-281797753,1,['test'],['tests']
Testability,"I am using Mac osx 10.9.5. Do you offer a 2.3.2 open babel for mac?; Thanks a lot!. On Tue, Mar 10, 2015 at 5:03 AM, baoilleach notifications@github.com; wrote:. > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Sy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:689,Log,Log,689,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,"['Log', 'test']","['Log', 'test']"
Testability,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:963,test,test,963,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,1,['test'],['test']
Testability,"I assumed so. :-/ Just disappointed that it wasn't covered by the test; suite. On 3 May 2018 at 21:02, Geoff Hutchison <notifications@github.com> wrote:. > It's probably worth doing a git blame to find out when / how this warning; > was introduced:; > https://github.com/openbabel/openbabel/blame/; > 6c576995969b048186232970ef1b630400544b31/src/formats/smilesformat.cpp#L614; >; > BTW looks like @baoilleach <https://github.com/baoilleach> is the; > culprit. 😉; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1830#issuecomment-386418572>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGSnMHLxcUiTQhSWkUC0YXVAXY4VZks5tu2I8gaJpZM4TvFhz>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1830#issuecomment-386430953:66,test,test,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1830#issuecomment-386430953,1,['test'],['test']
Testability,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:175,test,test,175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['test'],['test']
Testability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:146,test,testing,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,1,['test'],['testing']
Testability,"I bumped in this bug report while trying to understand why I couldn't generate the proper protonation state even for simple molecules. I've tried to identify the source of the problem with the version I'm using, v2.3.2 (Ubuntu).; I hope I'm not missing something trivial in my tests... ; Hopefully it can be useful to debugging, I apologize for the long post (and the horrible formatting... blame Markdown).; I've tried the test case Noel reported, and while the charge issue seems to be fixed, protonation state and atom typing are still wrong. Besides, I found the following behavior to be rather puzzling:; <pre><code>obabel -:""OC(=O)c1ccccc1"" -omol2 --gen3D -p 7.4 -O obabel_firstpass.mol2; obabel -imol2 obabel_firstpass.mol2 -omol2 -p 7.4 -O obabel_secondpass.mol2; </code></pre>The molecule obabel_secondpass.mol2 has correct typing and charge (~-1).; The following code replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.Cor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:277,test,tests,277,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,3,['test'],"['test', 'tests']"
Testability,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:111,test,testing,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,2,"['log', 'test']","['log', 'testing']"
Testability,I can't merge this with the Windows compile fail:; ```; C:\openbabel\tools\obrms.cpp(90): error C2057: expected constant expression [C:\openbabel\build\tools\obrms.vcxproj]; 613C:\openbabel\tools\obrms.cpp(90): error C2466: cannot allocate an array of constant size 0 [C:\openbabel\build\tools\obrms.vcxproj]; 614C:\openbabel\tools\obrms.cpp(90): error C2133: 'refcoord' : unknown size [C:\openbabel\build\tools\obrms.vcxproj]; 615C:\openbabel\tools\obrms.cpp(91): error C2057: expected constant expression [C:\openbabel\build\tools\obrms.vcxproj]; 616C:\openbabel\tools\obrms.cpp(91): error C2466: cannot allocate an array of constant size 0 [C:\openbabel\build\tools\obrms.vcxproj]; 617C:\openbabel\tools\obrms.cpp(91): error C2133: 'testcoord' : unknown size [C:\openbabel\build\tools\obrms.vcxproj]; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-482173817:736,test,testcoord,736,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-482173817,1,['test'],['testcoord']
Testability,"I cannot reproduce this with the latest version of Clang (2.7) or the Clang SVN snapshots. I use the latter to test OB development code. Clang's C++ code is only recently matured. If you're not using Clang 2.7, they do not recommend using it to compile C++. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/999#issuecomment-281796910:111,test,test,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/999#issuecomment-281796910,1,['test'],['test']
Testability,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:179,log,log,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,4,['log'],['log']
Testability,"I confirm the bug:; ```; andrius@tasmanijos-velnias ~ $ obabel ~/src/openbabel-2.4.1/test/files/filterset.sdf -osmi --filter ""title<'129'""; 0 molecules converted; andrius@tasmanijos-velnias ~ $ obabel --version; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 2.4.1 -- Oct 24 2017 -- 16:08:06; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778,1,['test'],['test']
Testability,I continued testing to almost 31k molecules. There were several molecules for which the number of iterations was not enough. I have increased this and improved the error handling as discussed above. I'm now running the test again with these changes and will report the results later.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611502088:12,test,testing,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611502088,2,['test'],"['test', 'testing']"
Testability,"I created a CDX file from ChemDraw and tested it. It could not get what I want with `border` attribute and this fix my issue (with my current version of ChemDraw). ; Technically, I am pretty sure about this ""bug"". Thing makes me confused is that this file is the header from ChemDraw themself so it just a little bit weird.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1743#issuecomment-362992751:39,test,tested,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1743#issuecomment-362992751,1,['test'],['tested']
Testability,"I didn't. But I see no reason not to merge. On Sun, 3 May 2020, 15:46 Geoff Hutchison, <notifications@github.com> wrote:. > @baoilleach <https://github.com/baoilleach> - did you have a chance to; > test this? I'd like to merge for 3.1 - even if it needs further; > improvement, it's a big step forward.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGPVEZ4EXJIPKABWQADRPV7UDANCNFSM4MFORPFA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623162498:198,test,test,198,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623162498,1,['test'],['test']
Testability,"I don't know if the patch will be accepted since it may need an associated test case.; As a workaround, waiting for a fix, I think that just adding a blank line before ""DDI:"" line.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1768#issuecomment-375078479:75,test,test,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1768#issuecomment-375078479,1,['test'],['test']
Testability,I don't know what to do about the 2 of 3 Travis CI build failures. The output says:; ```; 181/181 Test #181: pybindtest_obconv_writers ........***Failed Error regular expression found in output. Regex=[ERROR] 1.54 sec; ```; How do I have it report the actual error(s)?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455637149:98,Test,Test,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455637149,1,['Test'],['Test']
Testability,"I don't know where it came from, but it was probably from ZINC. Daylight's Depict draws it but gives an error message about the stereo. So regard it as a test of error handling. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796859:154,test,test,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796859,1,['test'],['test']
Testability,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147,1,['test'],['test']
Testability,I don't think that the error in the test file you provide (0.00001 Ang) is sufficient to be classified as a bug. That seems to be an acceptable rounding error. You said that you earlier found a bigger error. We really need a test file that shows a larger error to verify and fix any problem. I'm marking this as pending. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008#issuecomment-281797069:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008#issuecomment-281797069,2,['test'],['test']
Testability,"I don't think you could silence only that warning, but you can silence all warnings with `ob.obErrorLog.SetOutputLevel(0)` (see https://stackoverflow.com/questions/50419371/how-to-disable-logged-warnings-in-pybel and https://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930:188,log,logged-warnings-in-pybel,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930,1,['log'],['logged-warnings-in-pybel']
Testability,I downloaded the package from https://sourceforge.net/projects/openbabel/?source=typ_redirect and had some pyc files:; ./test/testbindings.pyc; ./test/testbabel.pyc; ./scripts/python/examples/testpybel.pyc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/354#issuecomment-388572535:121,test,test,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/354#issuecomment-388572535,5,['test'],"['test', 'testbabel', 'testbindings', 'testpybel']"
Testability,"I downloaded the source code from:; https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1. I tried both: openbabel-3.1.1-source.tar.bz2; <https://github.com/openbabel/openbabel/releases/download/openbabel-3-1-1/openbabel-3.1.1-source.tar.bz2>; and Source code; <https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.zip>; (zip); <https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.zip>; . Both of their openbabel3.1.1/test/testdistgeom.py files were still in their; ""pre-fix"" version according to the bug journal; <https://github.com/openbabel/openbabel/pull/2218/commits/7de27f309db5f7ec026ef5c5235e5b33bf7d1a85#diff-b0c1c91ef890aac128d98b666512172136a7b4d49ec74b5bf7f5f3922b0837d4L50>.; I manually changed line 45-51 according to the journal and that then fixed; my failed test ""test_distgeom"". On Tue, 19 Mar 2024 at 04:45, fredrikw ***@***.***> wrote:. > As mentioned in my comment in #2578; > <https://github.com/openbabel/openbabel/issues/2578>, this was fixed; > after the release of 3.1.1 so the question is if you use the trunk version?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2217#issuecomment-2006341435>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE3HCUALMKVWZT5EBA3XF4LYY73MJAVCNFSM4NAXAKSKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TEMBQGYZTIMJUGM2Q>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217#issuecomment-2007593262:473,test,test,473,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217#issuecomment-2007593262,3,['test'],"['test', 'testdistgeom']"
Testability,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:207,log,log,207,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,1,['log'],['log']
Testability,"I encounter another problem during working the developmental code on March 1st. I follow the instruction of the CMake (http://openbabel.org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cml",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:703,test,test,703,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,6,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,I filed the cclib test case as #3565280. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802264:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802264,1,['test'],['test']
Testability,"I for one cannot judge the beauty of the fixes or solutions, but #1902 fixes the problem (just tested it), does not unfix the problem fixed by #1852, and it adds tests to prevent future regression on this problem, so as far as I am concerned it would be great to merge it. thanks to you all @baoilleach @fredrikw and @serval2412 for developing and maintaining this library.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454539921:95,test,tested,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454539921,2,['test'],"['tested', 'tests']"
Testability,"I forgot to say that this bug is highlighted by testsym.py, which is failing since May 8th (see the build dashboard). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/983#issuecomment-281796616:48,test,testsym,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/983#issuecomment-281796616,1,['test'],['testsym']
Testability,"I found a Linux system that I could set up for testing, so I added a test. It's a Python test that relies on itertools.combinations, is that ok?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-424643667:47,test,testing,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-424643667,3,['test'],"['test', 'testing']"
Testability,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:86,test,tests,86,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659,2,['test'],"['test', 'tests']"
Testability,"I found that too but that's not quite good enough as a description. Let me chase this up a bit with the CCDC. If I can't find anything, we can assume that Zeo++ is correct and use that as a test file. We can make the numbers optional as you suggest - it's choosing the default that's the difficult part.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1648#issuecomment-338244564:190,test,test,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1648#issuecomment-338244564,1,['test'],['test']
Testability,I found the problem to the failing canonical test. There was a bug in my new code when there were multiple ring systems in the molecule. It is now fixed and thereby I could also revert the changes to the canonstable file meaning that there are no longer any changes to the canonicalization.; So I think I am done with this now!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724:45,test,test,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724,1,['test'],['test']
Testability,"I got the same on SL5, either a segfault appears of (after commenting some of the code), or the test run displays: ""Canonical SMILES: The molecular weight is 0.0"" (which is obviously incorrect) and nothing more.; Usually the segfault appears in case of the code throwing an exception, but not only then, I guess.; Is this planned to be fixed somehow?. Original comment by: joannakocot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1012#issuecomment-281797119:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1012#issuecomment-281797119,1,['test'],['test']
Testability,I guess since it can take a while it may be nice to log which iteration it is at to stdout.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1333334223:52,log,log,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1333334223,1,['log'],['log']
Testability,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:519,test,tests,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['test'],['tests']
Testability,"I have attached a patch, which fixes the following three things:. 1. Starts intensities parsing at the third token (i.e. after ""IR INTENSITIES""). 2. Keeps on reading displacements if there is at least one mode, not only if there are at least two modes. 3. Rewrote the displacement logic with respect to translational/rotational modes. numDisp is abused a bit now, but should have the correct value at the end of each mode block. Geoff, can you check the above for some GAMESS files? I only ever saw the attached ""C6H6_631++_631_B3LYP5.gamout"" file. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/881#issuecomment-281795119:281,log,logic,281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/881#issuecomment-281795119,1,['log'],['logic']
Testability,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:12,test,tested,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,1,['test'],['tested']
Testability,"I haven't tested and I don't do minimizations that often but you could try with; `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317:10,test,tested,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317,1,['test'],['tested']
Testability,"I just compiled 2.2.0 to see if the problem exists there, too.; It's a bit more verbose now, but problem persists. Open Babel 2.2.0 -- Nov 25 2008 -- 17:53:21. Yours,; Steffen. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 249 -l 249 -isdf -omol /tmp/313325.mol; 1 molecule converted; 17 audit log messages. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 250 -l 250 -isdf -omol /tmp/313325.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read atom and bond count; Expected standard 6 character atom and bond count. 0 molecules converted; 1 warnings 2 audit log messages . Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060:306,log,log,306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060,2,['log'],['log']
Testability,"I just did a short test: it works :). Thanks. > Le 27 déc. 2017 à 22:56, Geoff Hutchison <notifications@github.com> a écrit :; > ; > This should work in master, using -otxyz -xc to use atom classes as atom types directly, no CML required.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1732#issuecomment-354255717:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1732#issuecomment-354255717,1,['test'],['test']
Testability,"I just don't understand it because it doesn't cause any problems on any of our test systems (see http://my.cdash.org/index.php?project=Open+Babel&display=project). The only thing I can suggest is to repeat the whole thing from scratch. Remove all of the folders, and check it out from subversion again, and so forth. Maybe it didn't checkout correctly the first time. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800644:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800644,1,['test'],['test']
Testability,I just used the HIN file provided from @tulebaev in #1569 as the sample file for testing. It is available here: https://github.com/openbabel/openbabel/files/1008391/H2O2_min.hin.txt,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358119657:81,test,testing,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358119657,1,['test'],['testing']
Testability,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:736,test,tested,736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380,1,['test'],['tested']
Testability,"I looked at the test failures briefly and it looks like there are two problems. No1 is with the pointcloud format where the coordinates are different than expected. I guess that this might be due to how the actual vdW surface is generated. The other problem I get is with testFPS.test_multimol_default where there is a ValueError due to a mix of iteration and f.read() (ValueError: Mixing iteration and read methods would lose data).; The latter I fixed by changing the relevant code to:; ```; with open(filename) as f:; # Ensure there is a header; line = f.readline(); self.assertEqual(line[:5], ""#FPS1"", line); # Skip the rest of the header; ids = []; inheader = True; for line in f:; if line[:1] != ""#"":; inheader = False; self.assertEqual(line.count(""\t""), 1, ""Wrong number of fields?: %r"" % (line,)); hex_fp, id = line.rstrip(""\n"").split(""\t"", 1); ids.append(id); elif not inheader:; self.fail(""Second header?: %r"" % (line,)); if inheader:; self.fail(""Reached end of file too early, after: %r"" % (line,)); ```. I think that the logic would be unchanged by this. With this change and removing the pointcloud-test I could get it to pass all tests locally at least...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-472416430:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-472416430,7,"['assert', 'log', 'test']","['assertEqual', 'logic', 'test', 'testFPS', 'tests']"
Testability,"I made the test case easier to pass the test for now. I think it is allowed as distance geometry is [described as ""unstable"" in the document](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#specify-speed). I want to improve distance geometry anyway and I want to have advice about how to implement `CheckStereoConstraints()`. I'm currently comparing input SMILES and output SMILES, but it does not seem to be working...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557651006:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557651006,2,['test'],['test']
Testability,"I mean, I think we should still add a unit test for ""no, there is not a hydrogen at the origin"". Let's take the hydrogens as a separate issue / pull request. @baoilleach - there's a weird valence issue with this file -- the azide is getting a hydrogen in the middle and at the end. I suspect the problem is that the SDF is mal-formed (i.e., even ChemDraw puts an ""h"" on the terminal N). However, =N= should never be protonated.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719,1,['test'],['test']
Testability,"I misunderstood the meaning of `SetChiralityPerceived()`. I intended to set chirality based on the current 3D structure instead of cached one, but it was opposite. I replaced it to `StereoFrom3D()`, but the test still fails. Maybe SMILES generation is not dependent on these settings?. In addition to distance geometry related test failures, there are many tests failing. I'm not sure rebase was successful. Closing this pull request and branching from the current master may make problem easier. https://github.com/openbabel/openbabel/blob/2f51910df2aebbfd1258a2c1100d50a3e1ec7d9e/src/distgeom.cpp#L915",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978:207,test,test,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978,3,['test'],"['test', 'tests']"
Testability,I need the static compiled library in order to statically link it to another program. I'm getting ready to do a little benchmark with the smina docking program developed by Dr. Koes and am compiling two static copies of it so both computers I'm benchmarking (Core i5 laptop vs. Raspberry Pi 4 B+) have the same program. Open Babel 3 is required for compiling it. I'm compiling the i386 version and ARM version in the same Docker container using Debian Buster since it is most similar to Raspberry Pi OS (Raspbian).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377#issuecomment-857353697:119,benchmark,benchmark,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-857353697,2,['benchmark'],"['benchmark', 'benchmarking']"
Testability,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:361,test,test,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145,5,['test'],['test']
Testability,I opened up #167 but I'm seeing issues with tests (MMFF94 and Gasteiger). Can you take a look? I don't have time tonight to see what's happening.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/166#issuecomment-97972694:44,test,tests,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/166#issuecomment-97972694,1,['test'],['tests']
Testability,"I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831515578:133,log,log,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831515578,1,['log'],['log']
Testability,"I see no problem moving to (signed) int unless we can find an example of a string being used here. It's an API change, but we're in the process of making several at the moment, so now's the time and it sounds like it's necessary. We should make sure to add a test case to make it clear that this is the desired behaviour. By the way, in your Python, you might prefer to use the triple quote ("""""") for multi-line strings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121:259,test,test,259,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121,1,['test'],['test']
Testability,"I should add, all testing of this was done on Linux. And you can contact me (David Hall) at david (at) acpharis.com if you have questions or push fixes. Original comment by: @cowsandmilk",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1277#issuecomment-281803802:18,test,testing,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1277#issuecomment-281803802,1,['test'],['testing']
Testability,"I solved the chiral center problem, but some of tests failed. This is possibly because convergence check by `OBDistanceGeometry::CheckStereoConstraints()` does not always agree with the check by canonical SMILES.; Convergence check is another serious problem on coordinate generation, which is discussed before: https://sourceforge.net/p/openbabel/mailman/message/36699127/. I will try canonical SMILES based convergence check and see how it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-527657305:48,test,tests,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-527657305,1,['test'],['tests']
Testability,"I speculate there could be a bug because of the following two different outcomes. 0) generation of the aromatic.cml (bond orders marked by A). ```shell; $ obabel -:""c1ccccc1"" -ocml --gen3d -xA > ~/Desktop/test.cml; 1 molecule converted; $ cat ~/Desktop/test.cml; $ cat ~/Desktop/test.cml ; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""1"" x3=""1.382807"" y3=""-0.221802"" z3=""0.005621""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""1"" x3=""0.506827"" y3=""-1.306766"" z3=""-0.007235""/>; <atom id=""a3"" elementType=""C"" hydrogenCount=""1"" x3=""-0.871185"" y3=""-1.090814"" z3=""-0.015111""/>; <atom id=""a4"" elementType=""C"" hydrogenCount=""1"" x3=""-1.372721"" y3=""0.210822"" z3=""-0.004526""/>; <atom id=""a5"" elementType=""C"" hydrogenCount=""1"" x3=""-0.496795"" y3=""1.296205"" z3=""0.011557""/>; <atom id=""a6"" elementType=""C"" hydrogenCount=""1"" x3=""0.881190"" y3=""1.080097"" z3=""0.012965""/>; <atom id=""a7"" elementType=""H"" hydrogenCount=""0"" x3=""2.456430"" y3=""-0.390211"" z3=""0.009514""/>; <atom id=""a8"" elementType=""H"" hydrogenCount=""0"" x3=""0.897545"" y3=""-2.320834"" z3=""-0.010961""/>; <atom id=""a9"" elementType=""H"" hydrogenCount=""0"" x3=""-1.553723"" y3=""-1.935967"" z3=""-0.029527""/>; <atom id=""a10"" elementType=""H"" hydrogenCount=""0"" x3=""-2.446585"" y3=""0.379351"" z3=""-0.008513""/>; <atom id=""a11"" elementType=""H"" hydrogenCount=""0"" x3=""-0.887676"" y3=""2.310028"" z3=""0.022209""/>; <atom id=""a12"" elementType=""H"" hydrogenCount=""0"" x3=""1.563844"" y3=""1.925102"" z3=""0.020756""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""A""/>; <bond atomRefs2=""a2 a3"" order=""A""/>; <bond atomRefs2=""a3 a4"" order=""A""/>; <bond atomRefs2=""a4 a5"" order=""A""/>; <bond atomRefs2=""a5 a6"" order=""A""/>; <bond atomRefs2=""a1 a6"" order=""A""/>; <bond atomRefs2=""a1 a7"" order=""1""/>; <bond atomRefs2=""a2 a8"" order=""1""/>; <bond atomRefs2=""a3 a9"" order=""1""/>; <bond atomRefs2=""a4 a10"" order=""1""/>; <bond atomRefs2=""a5 a11"" order=""1""/>; <bond atomRefs2=""a6 a12"" order=""1""/>; </bondArray>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642:205,test,test,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642,3,['test'],['test']
Testability,"I started to convert your `.sdf` test files into `.pdb` by `obabel -isdf <ligand_name>.sdf -opdb -O <ligand_name>.pdb` with Open Babel (version 3.1.0 in Linux Debian, I suggest you check if you equally may update to this) and displayed them pairwise in an elder installation of Jmol (14.6.4_2016.11.05). Only the conversion about `PEMETREXED_1.sdb` yielded a reasonable display of the `.pdb` with different atom colors for C, H, N, O. You know that Open Babel may read and write `.sdf` and `.pdb` files. I knew there are multiple ways an `.xyz` or a `.pdb` file may be written and occasionally -- just for the sake of consistency -- I use Open Babel to «correct» these prior to further processing. Thanks to your test files, I learn that this apparently equally is the case for `.sdf` files and I thus issued conversions in pattern of `obabel -isdf NATEGLINIDE_1.sdf -osdf -O NATEGLINIDE_1_rewritten.sdf` for both `NATEGLINIDE` and `PEMETREXED`, and then converted these by e.g., `obabel -isdf NATEGLINIDE_1_rewritten.sdf -opdb NATEGLINIDE_1_rewritten.pdb`. The visualizations by Jmol then look considerably better. Could such an edit equally be helpful for you?. The obvious question is about the difference between the original and the modified `.sdf` files. According to a difference view with `vimdiff` (an extension of the vim editor) or [meld](http://meldmerge.org/) (version 3.20.2) is that both the number of columns in the upper part of the connectivity table increase, as well as the connectivities are in part defined differently. Archive `format_problem.zip` contains the files mentioned and some screen photos taken along to address the issue. [format_problem.zip](https://github.com/openbabel/openbabel/files/5673926/format_problem.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516,2,['test'],['test']
Testability,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:2,test,tested,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706,1,['test'],['tested']
Testability,"I think (not tested),. https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176. is the problem as this makes the hashing asymetric (trailing bond order)? The rotation to find the max ring hash (in DoRings()) is then different depending on which way round you traverse the path. John",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309:13,test,tested,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309,1,['test'],['tested']
Testability,"I think I have discovered the problem. File test/CMakeLists.txt includes this command that appears aimed, in part, at controlling the relevant environment variables when the tests are run:. set_tests_properties(${test}_Test PROPERTIES; FAIL_REGULAR_EXPRESSION ""ERROR;FAIL;Test failed""; ENVIRONMENT ""BABEL_LIBDIR=${CMAKE_BINARY_DIR}/lib""; ENVIRONMENT ""BABEL_DATADIR=${CMAKE_SOURCE_DIR}/data""). ""ENVIRONMENT"" is a documented test property in CMake 2.8, but not in CMake 2.6. For what it's worth, the build requirements at http://openbabel.org/docs/2.3.0/Installation/install.html specify CMake 2.4 as a minimum requirement. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"I think I have not been specific enough, sorry for that.; No, not entirely indeed. In my last attemps I was building only `openbabel` with; ```; mingw32-make openbabel; ```; because, I thought, the problem comes from there. The latter command successfully (or, should I say more correctly ""without errors"") builds what it has to build with the `(PTCHAR)` change . Actually, I am not using any of the optional libraries: Eigen 3.0 (even though I have it), libxml2, zlib, wxWidgets 2.8 (even though I have it, but I don't want the GUI). In fact, I just want to use the C++ library API for my in-house developments... Now, I tried the following (still with the (PTCHAR) change):; ```; C:\OpenBabel\build2>cmake ..\openbabel-2-4-1 -G""MinGW Makefiles"" -DBUILD_GUI=OFF; ```; the displayed information is enclosed in [cmake.txt](https://github.com/openbabel/openbabel/files/1116542/cmake.txt).; ```; C:\OpenBabel\build2>mingw32-make -j4; ```; this builds all it has to build without giving errors.; ```; C:\OpenBabel\build2>mingw32-make test; ```; with only 34% tests passed, 95 tests failed out of 144. The details are in the enclosed [tests.txt](https://github.com/openbabel/openbabel/files/1116543/tests.txt). (I had to shut test 124 down manually because it was stuck there for very long, see elapsed time). I have the feeling I am doing it totally wrong... :(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312383027:1030,test,test,1030,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312383027,6,['test'],"['test', 'tests']"
Testability,I think I'd two minor pieces:; - a check in GetNewBondVector() and/or OBBuilder::Connect() to look for invalid connection vectors; - Something like this for tests: https://gist.github.com/ghutchis/381adeba95b5d9923757c159757857e8,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2149#issuecomment-606780700:157,test,tests,157,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2149#issuecomment-606780700,1,['test'],['tests']
Testability,"I think one way to integrate this cleanly into open babel would; be to have a new option, for example --dump-logP-per-HA [filename]; in which case what I wrote to stdout should go to the given file.; I guess users won't be very happy if each time they ask for; cLogP to be appended to a molecule their stdout is polluted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39281686:109,log,logP-per-HA,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39281686,1,['log'],['logP-per-HA']
Testability,I think something happened here -- I can't run the InChI test anymore. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797437:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797437,1,['test'],['test']
Testability,I think the change should be on line 57 from:. if(UNIX); to ; if(NOT MSVC). but I cannot test this at the moment. Will the MinGW build still work if the lib is in a different folder than the executables?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797939:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797939,1,['test'],['test']
Testability,"I think the logic is right:. ```; for j=0; if str[j] == integer and str[j+1] == '/' then; compute the fraction; else; do nothing, since str[j] is just integer and should be removed (hopefully no CIF will have something like 4*x); ```. There should also be check j+1 < str.length() && j+2 < str.length()",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184406525:12,log,logic,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184406525,1,['log'],['logic']
Testability,"I think the main thing would be to have a test to ensure this doesn't happen again. If you attach some test files (e.g., an MDL file and the expected ChemDraw version - perhaps as saved by ChemDraw itself) I'm willing to write the testing code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388236455:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388236455,3,['test'],"['test', 'testing']"
Testability,"I think the one thing I'd really like is a unit test for this (e.g., an example PDB file and then the FASTA sequence check). That way if someone breaks the insertion codes with a commit, it won't pass the unit tests. Otherwise, the code looks OK.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257#issuecomment-183398777:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257#issuecomment-183398777,2,['test'],"['test', 'tests']"
Testability,I think the problem is about your coulombtest.cpp. See line 675-679 in the log: https://ci.appveyor.com/project/baoilleach/openbabel/build/1.0.928#L675; Maybe the way of linking is different in the Windows environment. But I am not familiar with it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401433225:75,log,log,75,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401433225,1,['log'],['log']
Testability,"I think this is ready for review, I included modified space-groups.txt from #1560 in here for testing purposes (it could be merged from here to close #1560 also).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-298682220:94,test,testing,94,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-298682220,1,['test'],['testing']
Testability,I think you forgot to attach the test files. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1094#issuecomment-281800466:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1094#issuecomment-281800466,1,['test'],['test']
Testability,"I tried rebase, but the test still failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-550496887:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-550496887,1,['test'],['test']
Testability,"I tried the following `test.py` in the current master,; ```python; from openbabel import openbabel; ; print(openbabel.OBElements.GetSymbol(6)); ```; but it yielded the followng error.; ```; $ python3 test.py ; Traceback (most recent call last):; File ""test.py"", line 3, in <module>; print(openbabel.OBElements.GetSymbol(6)); AttributeError: module 'openbabel.openbabel' has no attribute 'OBElements'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500198589:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500198589,3,['test'],['test']
Testability,"I tried with the attached patch ; [patch.txt](https://github.com/openbabel/openbabel/files/1993251/patch.txt) but it doesn't seem to be taken into account.; Indeed, with initial sources (without the fix), I don't see the segfault. Moreover, I noticed this:; Start 25: test_canonstable_1; 25/179 Test #25: test_canonstable_1 ...............***Failed Error regular expression found in output. Regex=[FAIL]331.65 sec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388190321:295,Test,Test,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388190321,1,['Test'],['Test']
Testability,I understand but it's another step to do and I don't want to dive in this part.; Don't hesitate to refuse and close the patch if you think it can't be accepted with a test case.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375077897:167,test,test,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375077897,1,['test'],['test']
Testability,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:202,test,testing,202,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['test'],['testing']
Testability,"I was aware of the ""priority"" of the sequence issue, which is why I said you could also just change the test. The modified version looks fine. . I'll double-check the build tests, but this looks good to merge.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029,2,['test'],"['test', 'tests']"
Testability,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:29,log,logs,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437,1,['log'],['logs']
Testability,"I will look at it asap. Where's the original from @dkoes?. On Sat, 4 May 2019, 14:36 Geoff Hutchison, <notifications@github.com> wrote:. > I mean, I think we should still add a unit test for ""no, there is not a; > hydrogen at the origin"".; >; > Let's take the hydrogens as a separate issue / pull request.; >; > @baoilleach <https://github.com/baoilleach> - there's a weird valence; > issue with this file -- the azide is getting a hydrogen in the middle and; > at the end. I suspect the problem is that the SDF is mal-formed (i.e., even; > ChemDraw puts an ""h"" on the terminal N). However, =N= should never be; > protonated.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGKCJ4RPE3BAB7NS2R3PTWGMRANCNFSM4HKXRYNA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489447612:182,test,test,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489447612,1,['test'],['test']
Testability,"I will test a little bit more, will update here once I'm sure it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/252#issuecomment-177009217:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/252#issuecomment-177009217,1,['test'],['test']
Testability,"I wonder why such many files are added to this repo. I don't know where they come from, but how about something like; ```sh; wget somewhere/archive; tar -xf archive; # test; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535329449:168,test,test,168,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535329449,1,['test'],['test']
Testability,"I would highly suggest migrating to Python3 ASAP. While you can currently install OB bindings for 2.7, they will not be tested or supported going forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2151#issuecomment-607368993:120,test,tested,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2151#issuecomment-607368993,1,['test'],['tested']
Testability,"I'd be happy to have the GitHub actions test RPM builds so we can provide initial release binaries too. Can you give me the full set of flags?. I've been looking at, e.g. https://github.com/marketplace/actions/build-an-rpm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629375047:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629375047,1,['test'],['test']
Testability,"I'd like to merge this, but I'm not sure what to do about the test failures.. Any ideas?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547009798:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547009798,1,['test'],['test']
Testability,"I'd still really love a unit test to make sure when reading multiple molecules the -f and -l flags are handled by the Python bindings, for example.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/52#issuecomment-31183991:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/52#issuecomment-31183991,1,['test'],['test']
Testability,I'd strongly suggest moving away from Python 2.7. I doubt any future versions of Open Babel will test against this.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2194#issuecomment-624732166:97,test,test,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194#issuecomment-624732166,1,['test'],['test']
Testability,I'll file a separate bug so for the cclib test case... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802263:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802263,1,['test'],['test']
Testability,"I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay). If you can't see any alternative, is it okay if I take a look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339:382,benchmark,benchmark,382,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339,1,['benchmark'],['benchmark']
Testability,I'll have to think carefully about the unit cell cases - and probably derive some test cases for them.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609463040:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609463040,1,['test'],['test']
Testability,"I'll look into it. On 10 October 2017 at 15:25, Geoff Hutchison <notifications@github.com>; wrote:. > *bump* - can you see if this solves John's problems. It looks okay to me,; > but I don't have his test file.; >; > —; > You are receiving this because your review was requested.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGYJhXyGGiAZzrIpZn_xBBXDF0mvyks5sq35YgaJpZM4Px6RB>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335492752:200,test,test,200,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335492752,1,['test'],['test']
Testability,"I'll take down the other page so. On 28 January 2014 10:57, Matt Swain notifications@github.com wrote:. > OK I left the package name as 'openbabel' and updated the README to; > explain more clearly that this is just the python bindings along with a; > link to the main Open Babel site.; > ; > Here's what it will look like (on the test PyPI site):; > https://testpypi.python.org/pypi/openbabel; > ; > ## ; > ; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/65#issuecomment-33468494; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586:331,test,test,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586,2,['test'],"['test', 'testpypi']"
Testability,I'm going to come down pretty strongly on the default including bond orders. Messing up molecules is never desirable. I put in an option - if needed it can be reversed and set during testing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514301821:183,test,testing,183,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514301821,1,['test'],['testing']
Testability,I'm going to commit this to master - hopefully the merge was successful. (We'll find out once it re-runs tests.),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-531506476:105,test,tests,105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-531506476,1,['test'],['tests']
Testability,"I'm going to mark this as closed at this stage. Based on John's comment, it looks like CMake 2.8 is required for running the tests correctly, otherwise the environment variables need to be set manually. I guess it's more of a documentation problem than a bug. We should bump up our requirements for CMake version perhaps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803:125,test,tests,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803,1,['test'],['tests']
Testability,"I'm going to merge this for 3.0. I think we probably need to revisit having a separate (larger) test set for cases like this, MMFF94 validation, etc. I'm going to remove bondtyper from the script bindings unless someone can explain why it's crucial.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368,1,['test'],['test']
Testability,"I'm going to merge this, since the test was in #2150",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2149#issuecomment-608509623:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2149#issuecomment-608509623,1,['test'],['test']
Testability,I'm going to revisit once I cut the 2.4 release. I suspect the test failure is minor.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-218898845:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-218898845,1,['test'],['test']
Testability,"I'm going to squash, merge, and fix the Python test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738,1,['test'],['test']
Testability,"I'm happy to merge - this looks fine, but a regression test would be ideal. Thanks!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/332#issuecomment-238618766:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/332#issuecomment-238618766,1,['test'],['test']
Testability,"I'm having similar problems ... Works in 2.3.0, though. Example of an offending file:; https://dl.dropbox.com/u/17435887/002RPD.log. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802252:128,log,log,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802252,1,['log'],['log']
Testability,"I'm honestly not sure why we went with dynamic_bitset, I'll check with the original developer who made this call probably will have some good reason we didn't use std::vector<bool>. That said - we also use boost for quite a few various things, like effortless gzip fstreams, parsing doubles efficiently, common string manipulations, their very nice unit test package, etc. These would be relatively annoying to have to gut out, not impossible, but pretty annoying. Are you committed at this point to not having boost be a requirement? I can't imagine you have many users who don't have boost either already installed or trivially available through their package manager.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500175457:354,test,test,354,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500175457,1,['test'],['test']
Testability,I'm not able to reproduce it either. I'm turning on verbose tests and rebuilding the original commit on Appveyor...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122538911:60,test,tests,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122538911,1,['test'],['tests']
Testability,"I'm not going to merge until you write the test case. Either way, I'm cherry-picking fixes for 2.4, so I'll merge when you're ready.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329#issuecomment-234315246:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329#issuecomment-234315246,1,['test'],['test']
Testability,"I'm not sure how that can happen - it built with both Travis and Appveyor continuous testing. Can you do a ""make clean; make"" for me?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191559254:85,test,testing,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191559254,1,['test'],['testing']
Testability,I'm not sure that I'll be able to make such stub. Thank you for your help anyway!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420966873:44,stub,stub,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420966873,1,['stub'],['stub']
Testability,"I'm now attaching a patch that improves the rendering of charged structures. It removes the (unjustified?) 2x scaling for the charge text and uses U+22C5: DOT OPERATOR instead of ASCII dot symbol for the radical. The patch works for me: see the attached test.mol and test-orig.svg/test.svg. Please review the patch and tell if it's the work in right direction. Although the rendering seems better now, it's still not ideal: the charge is overlapped with the bond and is hard to see. Ideally, bond line should stop before charge. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801568:254,test,test,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801568,3,['test'],"['test', 'test-orig']"
Testability,"I'm passing the buck here. I revisited this bug using SVN trunk:. babel ~/Downloads/smivscan.mol2 -osmi; C[C@@H]1C[NH](C[C@@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883383; C[C@H]1C[NH](C[C@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883386. babel ~/Downloads/smivscan.mol2 -ocan; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883383; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883386. That is, the stereo looks different for SMI, but not CAN. If this isn't a bug (i.e., given the input order, the SMI output is correct), let's make a testcase for the CAN example. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171:527,test,testcase,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171,1,['test'],['testcase']
Testability,I've added a static build to the Travis CI tests in #284. Hopefully this type of build will be fixed now.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/283#issuecomment-197979318:43,test,tests,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/283#issuecomment-197979318,1,['test'],['tests']
Testability,I've added some more safety logic. Should be fixed now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063:28,log,logic,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063,1,['log'],['logic']
Testability,"I've added the test, but now the previous ones fail on (surprise) disconnected smiles...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338213524:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338213524,1,['test'],['test']
Testability,"I've been testing this version for loading CIF files and converting them to PDB, seems to work well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481:10,test,testing,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481,1,['test'],['testing']
Testability,"I've changed the behavior to preserve atom order. It's just a couple of lines change in mol.cpp which you can make yourself based on the pull request link above, or else check out the latest development code from the git repo. Your test case is included as a unit test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1763#issuecomment-363563889:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1763#issuecomment-363563889,2,['test'],['test']
Testability,I've just come across abicompat on Linux. Available on Ubuntu 18.04 for instance. Haven't had a chance to test it. What I have tested is whether the new openbabel-3.dll on Windows is a drop-in replacement for the openbabel-3.dll of OB3.0 without causing the old obabel to segfault or otherwise complain. And it works fine.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2190#issuecomment-624871109:106,test,test,106,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2190#issuecomment-624871109,2,['test'],"['test', 'tested']"
Testability,"I've just tested this and it seems that a couple of files were not included in the windows release. If you go to :. http://openbabel.svn.sf.net/viewvc/openbabel/openbabel/tags/openbabel-2-2-0/data/. and download the following missing files, it should work:; mmff94.ff; mmff94s.ff; mmffs_oop.par; mmffs_tor.par. HTH. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/822#issuecomment-281793906:10,test,tested,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/822#issuecomment-281793906,1,['test'],['tested']
Testability,I've tested it on Anaconda build and it truly fix #325,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233586604:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233586604,1,['test'],['tested']
Testability,"I've tested this on Linux and it works well for me. The hardware support is correctly used on a more modern hardware and correctly not attempted on the older one. Thanks. As you noted, it fails to make use of the hardware popcount support on VirtualBox instances, but if compiled with -mpopcnt flag anyway it will actually use it. Should an option be added for turning this on in cases such that as that? Something like ""-DFORCE_POPCNT=ON"". I don't know how common VirtualBox is, but apparently both of us use it so it can't be too rare. VMWare instances work correctly. So does whatever Amazon uses for their t2.small Amazon Linux instances.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/186#issuecomment-107211378:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/186#issuecomment-107211378,1,['test'],['tested']
Testability,"I've updated the patch, and updated the title of this patch to better reflect what it does. The problem was that OBConversion::Write() always set SetOneObjectOnly() so there was no way it could be used to generate CML output. The CML writer looked at Index and IsLast to see if it was a single-molecule or multi-molecule output. If the former, it wrote <molecule> element. If the latter it wrote a <cml> element containing 2 or more <molecule> elements. Another problem was that it needs to Index++ before calling WriteMolecule(), as that's the only way for the initialization code check (Index==1) to be correct *and* for GetOutputIndex() to reflect the number of molecules written. That in turn means that WriteFile() and WriteString() need to set Index=0 before calling Write(). In addition, I updated WriteString() so it saves/restores more state, and I added the new testobconversion_writers.py test program to the list of test cases for ""make test"". Finally, I include a 2-molecule CML test case, to ensure that it is possible to use the updated Writer API implementation to create the correct output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455598175:900,test,test,900,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455598175,4,['test'],['test']
Testability,"I've uploaded the test output. Search for ""not ok"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797135:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797135,1,['test'],['test']
Testability,"I've written some code. Just need to test it on Linux, and then I'll submit a pull request...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-106910388:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-106910388,1,['test'],['test']
Testability,"IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:18845,test,test,18845,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"IMO, this PR is untestable within the current codebase. For example, I can't get the test to pass on a Linux system where Open Babel is already installed. Unless you have another suggestion, I think we should just merge without the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-396024793:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-396024793,2,['test'],['test']
Testability,"If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420:61,test,testing,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420,1,['test'],['testing']
Testability,"If you can, it's best to avoid this problem by writing to a string instead of disk. You can just imagine people running the tests with ""sudo"" and creating all sorts of permissions problems. Could you describe the problem exactly - maybe I can help...?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152:124,test,tests,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152,1,['test'],['tests']
Testability,"If you make the sulfur trioxide bond pattern a bit more specific (specifying hybridization) that fixes the issue:; ```; --- a/data/bondtyp.txt; +++ b/data/bondtyp.txt; @@ -47,7 +47,7 @@; # Sulfite; [#16D3]([#8D1])([#8D1-])([#8D1-]) 0 1 2 0 2 1 0 3 1; # Sulfur trioxide; -[#16D3]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; +[#16D3^2]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; # Sulfites; [#16D3]([#8D1])([#8])([#8]) 0 1 2 0 2 1 0 3 1; # Disulfur monoxide; ```. I would also change `import openbabel as ob` to `from openbabel import openbabel as ob` in `testgauss.py` and would consider adding AssignTotalChargeToAtoms to the Gaussian reader (it seems reasonable for the atomic formal charge to add up to the molecular):; ```; --- a/src/formats/gaussformat.cpp; +++ b/src/formats/gaussformat.cpp; @@ -1391,6 +1391,7 @@ namespace OpenBabel; dp->SetOrigin(fileformatInput);; mol.SetData(dp);; }; + mol.AssignTotalChargeToAtoms(total_charge);; mol.SetTotalCharge(total_charge);; mol.SetTotalSpinMultiplicity(spin_multiplicity);; ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988:553,test,testgauss,553,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988,1,['test'],['testgauss']
Testability,"If you use CMake 2.8, and rerun the configure step, ""make test"" should work better now. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353,1,['test'],['test']
Testability,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:146,log,log,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939,1,['log'],['log']
Testability,"In cifs with no `_atom_site_symbol`, the old logic attempted to use `_atom_site_label`. Issue is that most labels are symbol + a number, e.g. `Na1`. New logic strips numbers before attempting to use symbol. Still not perfect, but much better. ![output](https://cloud.githubusercontent.com/assets/1449833/3997616/e2a1babc-2940-11e4-975c-aedc5b5f0543.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/88#issuecomment-52929087:45,log,logic,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/88#issuecomment-52929087,2,['log'],['logic']
Testability,"In fact, this patch completely breaks any svg output for multiple molecules. I'm planning to fix point 2 an 3 by making this an option, and reworking the seperation of roles between svgformat and depictor/svgpainter. . More input files for test are needed. The quinin mol2 file provided at http://pqr.pitt.edu/ can not be read. Where can I find files containing more than one molecule?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202#issuecomment-122782965:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202#issuecomment-122782965,1,['test'],['test']
Testability,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:54,log,log,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743,1,['log'],['log']
Testability,"In that case, I'll check out old versions and see whether I can pinpoint the breaking commit, because that would save me a lot of trouble. (And I note the failing test.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411042337:163,test,test,163,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411042337,1,['test'],['test']
Testability,"In this highly simplified case, I would expect the output to be just one line, C=COC=C, both with and without the -c flag. In the general case, the line returned with the -c option must be a member of the set of lines which are returned without the -c option. Also, your prior patch has gotten mangled by the markdown. Is the only change to reverse the sense of the 'if' test? If so, doing that causes the 'make test' test suite to fail, but without a useful error message.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506:371,test,test,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506,3,['test'],['test']
Testability,"In your test case, you attempt to delete the same atoms twice. The first time, the number of atoms goes from 20 to 17. The second time, it doesn't change. This is because they have already been suppressed. It's true that DeleteHydrogens doesn't actually delete anything. It suppresses the explicit representation of hydrogen atoms in the molecular graph.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269607349:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269607349,1,['test'],['test']
Testability,"Indeed, I got this:; The following tests FAILED:; 	 25 - test_canonstable_1 (Failed); 	113 - test_tautomer_2 (Failed); Then I used test_runner and had this:; julien@debian:~/projects/openbabel/build/bin$ ./test_runner tautomertest 2; /home/julien/projects/openbabel/test/tautomertest.cpp:74: canonicalTautomers.size() == unsigned(1) [15 == 1] (FAIL)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388644216:35,test,tests,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388644216,2,['test'],"['test', 'tests']"
Testability,Is it possible to add a test case? E.g. a test for a weirdly long bond. Would be great. Details at https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html but feel free to ask me any questions.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423955527:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423955527,3,"['Test', 'test']","['Testing', 'test']"
Testability,"Is there some way we can add a unit test for the correct GAFF atom types (i.e., beyond the current energy evaluations)? This way, if some future commit accidentally breaks GAFF typing, we would know.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370,1,['test'],['test']
Testability,"Is this a problem with 2.2.3? If not, I'm going to mark this bug as pending. Please reopen if still a problem. Part of the problem here is that we are not responsible for the versions of OpenBabel in the various distributions. They would have generated the Python bindings themselves, and it is likely that they didn't use the recommended version of SWIG (instead, they would have used the ancient SWIG provided by their own distribution). A possible solution going forward is that I should include the Python test suite as part of the standard OpenBabel test suite. Then they would know it wasn't working. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/972#issuecomment-281796422:510,test,test,510,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/972#issuecomment-281796422,2,['test'],['test']
Testability,"It all looks good to me. A minor fix to the test code is that as there is no stdin, you just pass a single argument to run_exec. See docs at https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. Here's what I've got - it segfaults before the patch, but passes after.; ```; def testNoInput(self):; """"""Ensure that this does not segfault (PR#1818)""""""; self.canFindExecutable(""obabel""); output, error = run_exec(""obabel -i""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388581660:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388581660,3,"['Test', 'test']","['Testing', 'test', 'testNoInput']"
Testability,"It can be accepted but it'll just slow down the review, because I'll have to actually look and see what you've done. With a test case, I can just go ""fine"". :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375657629:124,test,test,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375657629,1,['test'],['test']
Testability,"It could be a difference in the Python versions we are testing. Python 3 seems to be more strict about tabs vs. spaces than Python 2 was. According to http://stackoverflow.com/a/28326024/5828163:. > Python 3 disallows mixing the use of tabs and spaces for indentation.; >; > Python 2 code indented with a mixture of tabs and spaces should be converted to using spaces exclusively.; >; > When invoking the Python 2 command line interpreter with the -t option, it issues warnings about code that illegally mixes tabs and spaces. When using -tt these warnings become errors. These options are highly recommended!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302161981:55,test,testing,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302161981,1,['test'],['testing']
Testability,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:81,log,logs,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,4,"['log', 'test']","['logs', 'test', 'testTemplates']"
Testability,"It equally might be a question how bond order is (re)calculated and eventually visualized. From the colour scheme applied and the representation of single/double/aromatic bonds, it is possible you used a different molecule viewer than [Jmol](http://jmol.sourceforge.net/). Based on the reference file you mention, and the test conversion of the .sdf into a .mol2 (same instruction, OpenBabel 3.1.1 as provided by the repositories in Linux Debian 12/bookworm, branch testing), I submitted both files to . + the version provided via debichem/Debian's repository (a bit old, version 14.6.4 by 2016); + version 14.31.47 by June 2021, fetched from sourceforge. In both cases, the distinct representation of the keto-enol form shown in your representation of the .sdf is retained. ![comparison_new](https://user-images.githubusercontent.com/19709084/136707788-ff0ace1d-475b-4ac2-ae13-251085a08016.png). Reference data sets and the .png screen photos of the two tests are attached in the .zip below. [comparison.zip](https://github.com/openbabel/openbabel/files/7317947/comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298:322,test,test,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298,3,['test'],"['test', 'testing', 'tests']"
Testability,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:128,test,testing,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746,1,['test'],['testing']
Testability,"It looks like the change that caused this is bond typing. I initially expected something in kekulize.cpp and narrowed it down to a change in commit f97eb3f4, since triazine successfully roundtrips in the parent commit. However, only the changes in bondtyp.txt are necessary to cause this regression, so it's probably an effect from this line:. ```; # NR2 in ring with hybridized carbon neighbors; [#7D2R][#6D3^2] 0 1 2; ```. In case it helps, I started looking through the aromatics.smi from the testing suite to see if there were other examples of the failed roundtripping ([code attached](https://github.com/openbabel/openbabel/files/1095251/test_aromatic_roundtrip.sh.txt)). These are the changes between 2.3.2 and 2.4.1:. ```; CHECK c1ncno1 C1=[N]=C[N]O1 1,2,4-oxadiazole; CHECK c1ncns1 [CH]1N=C[N]S1 1,2,4-thiadiazole; CHECK c1cncnn1 C1=N[N]C=N[CH]1 1,2,4-triazine; CHECK c1ncncn1 C1=[N]=CN=C[N]1 s-triazine; CHECK n1cnnnc1 [N]1=CN=N[N]C=1 1,2,3,5-tetrazine; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1360#issuecomment-310413163:496,test,testing,496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1360#issuecomment-310413163,1,['test'],['testing']
Testability,"It looks to me as if it's pulled in as part of maeparser. Unittest is added as a target in external/maeparser-1.1/CMakeLists.txt when ENABLE_TESTS is on, I can see it built during make, and it's included in CTestTestfile.cmake in my build directory. Build log (make.log) and bziped src directory attached. [src.zip](https://github.com/openbabel/openbabel/files/4523846/src.zip); [make.log](https://github.com/openbabel/openbabel/files/4523832/make.log)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-618501603:256,log,log,256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-618501603,4,['log'],['log']
Testability,"It seems I fixed half the bug (the XML part), but just by accident!. It still fails if zlib is missing though. I've changed the title of the bug to reflect this. (For my reference, to test the bug, I need to rename /usr/lib/zlib.a to /usr/lib/backup_zlib.a and maybe also zlib.so). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961#issuecomment-281796227:184,test,test,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961#issuecomment-281796227,1,['test'],['test']
Testability,"It seems to be working now, so it's reasonable to keep it working. I'm not really familiar with it though, so if I get stuck on how to test it I might be back to you...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-472961677:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-472961677,1,['test'],['test']
Testability,"It works fine for me under MSVC. I've checked it in as a test case - if it fails on Linux tonight, we can follow it up. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797865:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797865,1,['test'],['test']
Testability,"It would be great if you could file a separate bug with a testcase. On Thu, 9 Aug 2018, 17:02 Fedor Golishevskiy, <notifications@github.com>; wrote:. > While we are at it, I'm pretty sure the handling of kCDXProp_Name; > <https://github.com/openbabel/openbabel/blob/c9c500388dac1469364f778f4f4aa3a6ff7cc7c5/src/formats/chemdrawcdx.cpp#L777>; > is incorrect, as I have discovered while writing my own little CDX parser; > built with Kaitai Struct in Python.; >; > The spec makes a sneaky exception; > <https://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/properties/Name.htm>; > for the Name prop inside an ObjectTag such that the nStyleRuns field is; > completely missing, and the prop contains just raw text data. Thus, the; > code in question will misinterpret the first 2 bytes of text as nStyleRuns; > when the prop is inside the ObjectTag; > <https://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/ObjectTag.htm>; > object.; > This has caused my parser to crash and I don't see any special casing in; > C++ here either.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1878#issuecomment-411809453>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUf3wQN7zmOiAJHUGsGlj2GdkbtBks5uPF0JgaJpZM4Vw_WZ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-412298916:58,test,testcase,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-412298916,1,['test'],['testcase']
Testability,"It's been a while since Wilmer and I wrote these, but I'll brush up on my math and discuss with him in the coming weeks!. I do remember that I ran this implementation against the original code (at [numat/EQeq](https://github.com/numat/eqeq)) and believe I got the same values for a test series of MOFs. If you can provide an example where the results are different, that'd provide us with a useful starting point.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401575124:282,test,test,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401575124,1,['test'],['test']
Testability,"It's failing on Mac - maybe that's an old Python version?. ```; 218/227 Test #218: pytest_babel .....................***Failed 0.23 sec; /Users/runner/work/openbabel/openbabel/scripts/python:/Users/runner/work/openbabel/build/lib; File ""/Users/runner/work/openbabel/openbabel/test/testbabel.py"", line 528; output, err = run_exec( f""obrms -t 10 {sdffile} {sdffile}""); ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704:72,Test,Test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704,3,"['Test', 'test']","['Test', 'test', 'testbabel']"
Testability,"It's not standard, it's an extension. The example testcase I provide is a real-life SMILES string that contains more than 99 open rings. We don't have control over what SMILES strings other tools generate. (Rereading this, I sound grumpy - I'm not :-) - by the way, just checked your papers - would be good to get some of your xtallography stuff into Open Babel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339599656:50,test,testcase,50,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339599656,1,['test'],['testcase']
Testability,"Just GetSymbol will work without the OBElements. On Sun, 9 Jun 2019, 10:30 Naruki Yoshikawa, <notifications@github.com>; wrote:. > I tried the following test.py in the current master,; >; > from openbabel import openbabel; >; > print(openbabel.OBElements.GetSymbol(6)); >; > but it yielded the followng error.; >; > $ python3 test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > print(openbabel.OBElements.GetSymbol(6)); > AttributeError: module 'openbabel.openbabel' has no attribute 'OBElements'; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1601?email_source=notifications&email_token=AAALCGIMJBQYZF7WH4HAFBLPZTETHA5CNFSM4DS2IKEKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODXIGZPI#issuecomment-500198589>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGODS2U3OMT37K6KUVTPZTETHANCNFSM4DS2IKEA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500201752:153,test,test,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500201752,3,['test'],['test']
Testability,"Just a note. The test framework on master is new and improved so you will; have to make some edits to your test file. If it's not obvious I can help; once it's checked in.; - Noel. On 11 September 2013 15:09, Geoff Hutchison notifications@github.comwrote:. > This looks fine, but I'm not going to merge directly into openbabel-2-3-x.; > Can you re-submit this as a patch to master? (I'll almost certainly merge; > into openbabel-2-3-x soon, but I'd prefer to merge into master, make sure; > everything is happy for a few weeks before going into stable.); > ; > Thanks!; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/25#issuecomment-24242503; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/25#issuecomment-24254165:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/25#issuecomment-24254165,2,['test'],['test']
Testability,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1060,log,logical,1060,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,3,['log'],"['log', 'logical']"
Testability,"Just for information with the patch, I got this:; 2 molecules converted; 1 info messages 34 audit log messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094:98,log,log,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094,1,['log'],['log']
Testability,"Just found old Visual C++ 2005 x86 runtimes. They DO run silently using ""/q:a.."" switch. But it seems that newer versions do not use it.; Example:; VC++ 2005 x86 runtime:; vcredist_x86.exe /q:a /c:""msiexec /i vcredist.msi /qn /l* %temp%\vcredist_x86.log"". Original comment by: romanzhv",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1291#issuecomment-281804063:250,log,log,250,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291#issuecomment-281804063,1,['log'],['log']
Testability,"Just tested latest dev code on a 64bit Linux system. Seems to work fine:. > babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi; 1 candidates from fingerprint search phase; 1 molecule converted. makeio, could you test the development code and see whether the problem has gone away for you. See the instructions at http://openbabel.org/wiki/CMake; 1 info messages 57 audit log messages. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341,3,"['log', 'test']","['log', 'test', 'tested']"
Testability,"Just to follow-up (only a year too late). The new code is much improved indeed. However, I'm still able to find some test failures, e.g. S=c1[nH]c(c([nH]1)c1ccccc1)c1ccccc1 and Sc1[nH]c(c(n1)c1ccccc1)c1ccccc1 don't resolve to the same form. I can provide a longer list if @timvdm or anyone else is interested. A separate issue is that it's not possible to use the functor from the Python API. I know that OEChem have solved this by somehow enabling Python functions to be passed in. An alternative would be to do as Tim did previously for automorphisms (I think), where there is an API function that either has a default functor or acts as a convenience function to just return a vector<OBMol*> of results (perhaps with an optional maxsize argument?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-913157043:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-913157043,1,['test'],['test']
Testability,"Just to illustrate what this issue is about, here's a test CMakeLists.txt; ```; find_package(OpenBabel3); add_library(lib lib.cpp); target_link_libraries(lib openbabel); ```; If you run it (with 3.1.0), you will get an error; ```; Target ""lib"" links to target ""Boost::system"" but the target was not found.; Perhaps a find_package() call is missing for an IMPORTED target, or an; ALIAS target is missing?; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625322890:54,test,test,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625322890,1,['test'],['test']
Testability,"KING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14389,test,test,14389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"KING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:11939,test,test,11939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"Let me first answer the question you are trying to answer. With the current master (not 2.4.1):; ```; import pybel; ob = pybel.ob; for element in [ob.Fluorine, ob.Oxygen, ob.Nitrogen, ob.Carbon, ob.Boron, ob.Beryllium, ob.Lithium]:; print(ob.GetTypicalValence(element, 0, 0)); ```; Output is:; ```; >py test.py; 1; 2; 3; 4; 3; 2; 1; ```; Note that guessing the valence in this manner is imprecise - you can't always get it right when you start moving down the periodic table. If you are writing cheminformatics code relying on these values, you will run into problems at some point. Regarding the GetImplicitValence function, let's just say that it's likely to be removed or somehow fixed/changed in the near future, as the way Open Babel handles implicit hydrogens has changed, and the name of the functions doesn't correspond to what they actually do. I'm going to mark this bug as closed, but feel free to continue the conversation if anything is unclear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1874#issuecomment-409136482:303,test,test,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1874#issuecomment-409136482,1,['test'],['test']
Testability,"Let me know if #2208 does it for you. If you know a way to test via GitHub actions, I'd be happy to add to the builds - I guess a Dockerfile build?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2206#issuecomment-625564142:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206#issuecomment-625564142,1,['test'],['test']
Testability,Log of failed build due to missing OBGUI.rc file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273:0,Log,Log,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273,1,['Log'],['Log']
Testability,"Logged In: NO . ##########################################################; ***** Error not resolved even if fragment.txt is found ***; ##########################################################; Hi,; the erro still exists in SMI to SDF with the option ; ""create 3D coordinates"" in OB 2.2.0 GUI (WIN); Here are the SMILES (one or two generate the error with illeagal SDF options). S=S=S; S1SSSS1; S1SSSSS1; S1SSSSSS1; S1SSSSSSS1; S; SS; SSS; SSSS; C=S; CS; CCS; CCCS; CC(C)S; CCCCS; SC1CCCCC1; SCCS; CC(S)CS; SCCCCS; CSC; CSSC; CSSSC; CCSCC; CCSSCC; C1CS1; C1SCC=C1; C1CCSC1; s1cccc1; O=C1SCCS1; O=C1SC=CS1; S=C1SCCS1; S=C1SC=CS1; Sc1ccccc1; S(c1ccccc1)c1ccccc1; S(Sc1ccccc1)c1ccccc1; OSO; CC(S)=O; CCSC(C)=O; CSC#N; FSF; FSSF; CSCl; CSSCl; ClSc1ccccc1; ClSSc1ccccc1; ClSCl; ClSSCl; BrSBr; BrSSBr; O=S=O; O=S(=O)=O; OS(O)(=O)=O; CS(C)=O; CCS(=O)CC; O=S(c1ccccc1)c1ccccc1; COS(=O)OC; CCOS(=O)OC; CCOS(=O)OCC; CS(C)(=O)=O; CCS(C)(=O)=O; CCS(=O)(=O)CC; O=S(=O)(c1ccccc1)c1ccccc1; COS(=O)(=O)OC; CCOS(=O)(=O)OCC; CS(C)=S; OS(F)(=O)=O; FS(F)(=O)=O; FS(F)=S; FS(F)(F)F; OS(Cl)(=O)=O; ClS(Cl)=O; ClS(Cl)(=O)=O; N#CSSC#N; SCCCCCS; SCc1ccccc1; CSc1ccccc1; CC1CS1; CC(C)(C)SC(C)(C)C; SCCCS; CC(C)(C)SSC(C)(C)C; CCCCCS; CCCCCCS; C1CC=CS1; s1c2ccccc2c2ccccc12; CCSC(C)(C)C; CCCCCCCCCCS; CC(C)CSSCC(C)C; CSC(C)C; C1CCSCC1; S1SC(=CC=C1c1ccccc1)c1ccccc1; CCCC(C)(C)S; CC(C)C(C)(C)S; CCCCCCCS; SC1CCCC1; CC(C)(C)CS; CCC(C)(C)S; CCCCCSC; S=C1SCCCS1; CC1CCCS1; CCC(C)CS; CC(C)C(C)S; C1CSC1; CC(C)(C)SCC=C; CCCSCC; CCSCSCC; CC1CCSC1; CC(C)CS; CCC(C)S; CCSC(C)C; CCSCC=C; C(SCc1ccccc1)c1ccccc1; CCSCCSCC; CC(C)CCS; CC(C)CCSCCC(C)C; Cc1sccc1; CC(C)CSCC(C)C; CSC(C)(C)C; Cc1cscc1; CCSc1ccccc1; CCSC; CC(C)SC(C)C; CCSCc1ccccc1; C=CSC=C; CCCCSC; CCCSSCCC; CCCCSSCCCC; CCCCSCC; CSC1CCCC1; S=C=S; CC(C)(C)S; CSCc1ccccc1; CCCCCSCCCCC; S=C1Sc2ccccc2S1; s1ccc2ccccc12; CCSSC(C)(C)C; CCSSC; CSC(=S)SC; S=C1SSc2ccccc12; S=C1SSC(=C1)c1ccccc1; CSSC(C)(C)C; CSSC(C)C; SC(c1ccccc1)c1ccccc1; CC(C)SSC(C)(C)C; O=C1CCSC1; O=C1CCCS1; CC(C)C",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793434:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793434,1,['Log'],['Logged']
Testability,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,1,['Log'],['Logged']
Testability,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,1,['Log'],['Logged']
Testability,Logged In: NO . /bin/sh ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../src -I../../include -I../../src -I../../include -g -O2 -MT optransform.lo -MD -MP -MF .deps/optransform.Tpo -c; -o optransform.lo optransform.cpp; g++ -DHAVE_CONFIG_H -I. -I../../src -I../../include -I../../src -I../../include -g -O2 -MT optransform.lo -MD -MP -MF .deps/optransform.Tpo -c optransform.cpp -fPIC -DPIC -o .libs/optransform.; o; optransform.cpp:19:35: error: openbabel/optransform.h: No such file or directory; optransform.cpp:25: error: 'OpTransform' has not been declared; optransform.cpp: In function 'const char* OpenBabel::Description()':; optransform.cpp:28: error: aggregate 'std::string txt' has incomplete type and cannot be defined; optransform.cpp:29: error: '_descr' was not declared in this scope; optransform.cpp:31: error: '_filename' was not declared in this scope; optransform.cpp: At global scope:; optransform.cpp:36: error: 'OpTransform' has not been declared. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780239:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780239,1,['Log'],['Logged']
Testability,"Logged In: NO . /usr/local/include/openbabel-2.0/openbabel/generic.h: In instantiation of ‘OpenBabel::OBPairTemplate<int>’:; When trying to compile the little program above, I get:. test.cc:4: instantiated from here; /usr/local/include/openbabel-2.0/openbabel/generic.h:304: erreur: conflicting return type specified for ‘const ValueT& OpenBabel::OBPairTemplate<ValueT>::GetValue() const [with ValueT = int]’; /usr/local/include/openbabel-2.0/openbabel/generic.h:203: erreur: overriding ‘virtual const std::string& OpenBabel::OBGenericData::GetValue() const’; /usr/local/include/openbabel-2.0/openbabel/generic.h: In constructor ‘OpenBabel::OBPairTemplate<ValueT>::OBPairTemplate() [with ValueT = int]’:; test.cc:4: instantiated from here; /usr/local/include/openbabel-2.0/openbabel/generic.h:302: erreur: type ‘int’ is not a direct base of ‘OpenBabel::OBPairTemplate<int>’. We need to change the name of one of OBGenericData::GetValue and OBPairTemplate<ValueT>::GetValue. As the OBGeneric version retruns a string, we might recall it GetString. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779765:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779765,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . > This is a duplicate report and has been fixed in the 2.1 SVN code. The; > 2.1.1 release will come out shortly. In the meantime, I suggest trying the; > 2.1.1 snapshot:; > ; > http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. Great, thanks ghutchis and chrismorl! I will try the snapshot. -john (john_sullivan@hms.harvard.edu). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122,1,['Log'],['Logged']
Testability,"Logged In: NO . >Whether or not the file has 3D coordinates, the undefined; >stereochemistry should be respected (e.g., a racemic mixture, the 3D ; >coordinates are unreliable, etc.). Yes, that's the behaviour I would expect. Sometimes you have an SD file ; with one 3D structure stored per compound, well knowing that this is just ; one of two or more stereoisomers in the (racemic) mixture, and just one ; of many reasonable low energy conformations... Christian. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883,1,['Log'],['Logged']
Testability,"Logged In: NO . A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. In particular, please note the fourth point. What didn't work? We need a bit more information here before we know what the problem is. . Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793678:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793678,1,['Log'],['Logged']
Testability,Logged In: NO . Asking Frog to unambiguate. CC1OC(C[NH](C1)CC(C(F)(F)F)O)C; you get ; ...; C[C@@H]1O[C@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; C[C@H]1O[C@@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; ...; i.e. both solutions as well. So I wonder: what is correct?. Gerd . Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166,1,['Log'],['Logged']
Testability,Logged In: NO . Can you confirm that the problem is with the Perl bindings and not the Python bindings? Looking at the build log it seems that the error only starts when Fedora starts building the Python bindings. - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780561:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780561,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Can you provide me with some example files? For example, could you provide ; me with an example Sybyl file (saved from Sybyl) that doesn't work after going ; through Babel?. It's easy enough to change things in the output, but I'd like to make sure we ; match the Sybyl file exactly. Thanks,; -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218,1,['Log'],['Logged']
Testability,Logged In: NO . Chris - could you take a look at this when you have a chance. I'd like to rerelease Pybel once this is fixed...not being able to write SMI fouls up a lot of the basic functionality... Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793477,1,['Log'],['Logged']
Testability,"Logged In: NO . Correction to last note: PRO residues are actually fine, it; was my graphics; code at fault. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472,1,['Log'],['Logged']
Testability,"Logged In: NO . For the record, cclib uses the following to find charge and multiplicity:. if line[1:7] == 'Charge' and line.find(""Multiplicity"")>=0:. regex = "".*=(.*)Mul.*=\s*(\d+).*""; match = re.match(regex, line); assert match, ""Something unusual about the line: '%s'"" % line; ; self.charge = int(match.groups()[0]); self.mult = int(match.groups()[1]). - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780807:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780807,2,"['Log', 'assert']","['Logged', 'assert']"
Testability,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550,1,['Log'],['Logged']
Testability,Logged In: NO . Great! Thank you very Much! :). Reinis. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780488,1,['Log'],['Logged']
Testability,"Logged In: NO . Great, this is already helpful !; I noticed it works in 2.1.x version, not in 2.0 though - not a showstopper, just something to note.; Also, I noticed that OB_HASH_BOND and OB_WEDGE_BOND flags seem to be interchanged - when I use; the former I get the wedge bond and vice-versa. Thank you,; Igor. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012,1,['Log'],['Logged']
Testability,"Logged In: NO . Hello, I'm working on a tcl script which will translate le Log file to xyz file. Another path is an option in Gaussian : Punch=(coord) will copy in a text files optimized coordinates in atomic units, which is easier to translate in .xyz file than a log file.; I will inform you... thanks. Enguerran Vanquelef. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647,3,"['Log', 'log']","['Log', 'Logged', 'log']"
Testability,"Logged In: NO . Hello,. I have wrote a smal Tcl script. When Gaussian uses Bq atoms, it generates a coordinate table with center number starting ""2"" instead of ""1"". Maybe this is the origin of the bug. regards. PS : The Tcl script if you are interessting :. #!/usr/bin/tclsh. set path [pwd]; puts $path. set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :. for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""\nnom du fichier en cours :[file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]].xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts ""coorodos:""; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; #puts ""[lindex $ligne 1]\t [lindex $ligne 3]\t [lindex $ligne 4]\t [lindex $ligne 5]""; set ligne [gets $log_courant]; incr i; }; pu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780648:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780648,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Hello,. a problem occurs with my tcl script with another Gaussian 98 output file which contain a Bq atom.; I have found a small solution but not very ""regular"" :; I had to replace ""Input orientation"" by ""Standrad orientation"" few lines under ""Stationary point found"" and I have modified the Tcl script (find it below, I have added Bq case in the switch block). regards. Enguerran Vanquelef. #!/usr/bin/tclsh. set path [pwd]; puts $path; set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :; for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""nom du fichier en cours : [file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]]_opt.xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; 0 {set tab(nom,$i) ""Bq""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; set ligne [gets $log_courant]; incr i; }; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Hi Christoph,; I am not a great programmer. I just use Daylight, Openeye; and OpenBabel to make some tools and work with them. I have; developed a database cartridge from OpenBabel as a experiment.; www.unm.edu/~tharun/smdb.html. My email address is tharun@unm.edu please contact me and I; will be willing to work on the fingerprinter for OpenBabel. . I dont know what standards is OpenBabel using. If you can; direct me then I will be happy to contribute for this project. Thanks; Tharun; tharun@unm.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434,9,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,. I have been exploring the memory usage of the windows; version of openbabel described above. I have used the; Windows task manager to follow the memory usage when; openbabel is working on the example file I posted earlier. The results are listed at the end of this post. As you can; see, the memory used by open babel increases steadily over; time. When fitting a linear regression line through the cpu; time/memory usage points you obtain the following line:. memory usage [k] = 5622 + 1198*(CPU Time[s]). As babel took about 113s to work through the 40k smiles,; i.e. ~354 molecules/s and the regression graph shows that; 1198k additional memory is used per sec, this implies that; each molecule uses an additional 1198/354 = 3.4k of memory. I have repeated this using other output formats (in case it; was only the fingerprint format causing this). For example:. babel example.smi -osdf example.sdf. The same results apply, i.e. the amount of memory used by; openbabel is contantly increased. I have also tried this with files containing more smiles,; and found that this continues as long as there is memory; available. eg after 15 minutes, the VM size is 1,391,720k. Surely this counts as a memory leak?. Regards. Ian. I_P_S@hotmail.com. openbabel-2.0.0awins memory usage on example.smi:. CPU [s]	Mem usage	Peak mem	VM size; 6	11860	11860	10424; 10	16408	16408	14980; 17	25620	26008	24528; 24	34328	34328	32916; 27	38116	38116	37196; 34	46612	46612	45380; 41	55336	55440	54696; 44	59436	59436	58628; 51	67328	67328	66236; 58	75872	76308	74516; 61	79776	81384	79632; 68	87220	87220	86780; 75	95728	95728	94644; 79	99756	99756	98856; 86	107812	107812	106584; 89	112328	112952	110948; 96	120176	102176	120520; 103	128400	128400	128416; 106	132172	132172	132036; 113	134432	139936	132820. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,. Sorry for the duplicate bug report, I managed to hit F5 in wrong browser tab and page was resubmitted. Anyway, new version of the code seems to work OK with cml. Thanks for noticing this. Tapani Kinnunen; takinnun at hotmail.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,; maybe this is due the error reported before (fragment.txt missing). ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Tobias. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428,1,['Log'],['Logged']
Testability,Logged In: NO . I agree. PLEASE do this soon. A lot of people will really use ; this. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512,1,['Log'],['Logged']
Testability,"Logged In: NO . I can't reproduce this. Whether simultaneous or in any order, adding explicit hydrogens and coordinates ends up correctly for me with 14 atoms, 14 bonds. Could you say exactly what you did to get the error? Did you copy the molecule at any stage?. Chris. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793405:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793405,1,['Log'],['Logged']
Testability,Logged In: NO . I did some investigating and discovered a source of these sort ; of seg; fautls. I'm not sure if it is the same source you discovered. MY OBESERVATION:; parsing an invalid smile string which starts with a digit e.g.; '2CCCC3' seg faults with assertion notice. THE PROBLEM:; the digit cues the ParseSmiles function to reference an atom ; in the; molecule when there are none. Any ideas?. Josh. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156,2,"['Log', 'assert']","['Logged', 'assertion']"
Testability,Logged In: NO . I don't know where your tr1 header files are stored and what they are called. Try looking for; a file called shared_ptr or shared_ptr.h If these can't found try looking for shared_ptr is any header file. Then I'll be able to change reaction.h or babelconfig.h. You need to update all the SVN files (up to the folder which containd the file ChangeLog. One of the errors was probabley due to that. Chris (c.morley AT gaseq.co.uk). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786169,1,['Log'],['Logged']
Testability,Logged In: NO . I downloaded the 2.0.0b5-20051015 version today and that worked fine. ; Must be down to differences between this version and the one I used ; earlier (2.0.0b5-20051001). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916,1,['Log'],['Logged']
Testability,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406,1,['Log'],['Logged']
Testability,Logged In: NO . I have added OBCommonFormats to FastSearch's dependencies - it somehow seems to have been removed. I hope we are nearly there?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781149:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781149,1,['Log'],['Logged']
Testability,"Logged In: NO . I tried the code you suggested Chris, but it seems its not ; actually implemented (unless this is on the CVS rather than ; the lastest snapshot?). Compiler said:; no matching function for call to `OpenBabel::OBConversion::; SetOneObjectOnly(bool)'; ../src/obconversion.h:298: candidates are: void; OpenBabel::OBConversion::SetOneObjectOnly(). and the only function I could find for SetOneObejctOnly is ; this:; void OBConversion::SetOneObjectOnly(); {; OneObjectOnly=true;; m_IsLast=true;; }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336,1,['Log'],['Logged']
Testability,Logged In: NO . Interesting decision by the Tracker System. I responded with detailed evidence on 2006-03-16 following; the comments posted on 2006-03-14. Why was this ignored?. Ian. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401,1,['Log'],['Logged']
Testability,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . It's an XML or BOOST error (are you using GCC 3.x by any chance?). You should leave your email address if you want someone to fix this bug, as they will probably need to ask you some questions... Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780977:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780977,1,['Log'],['Logged']
Testability,"Logged In: NO . Like I said, this is still best dealt with on the mailing list. I note you are compiling in Debug Mode, not Release. Have you tried copying the boost dir to openbabeltrunk/include? I find this an easier way to 'install' boost. If you do this, there should be a file openbabeltrunk/include/boost/shared_ptr.hpp.; - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786163,1,['Log'],['Logged']
Testability,Logged In: NO . Looks fine now - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253,1,['Log'],['Logged']
Testability,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . One of the disadvantages of compiling from the HEAD code is that people keep changing it. The errors about _finite are due somebody's changes which necessitates including float.h in mol.h. Revision 2528 and later have this. Do another Update. I not entirely sure what odbccp32.libi is and it is not in the VC2005 Express distribution I have, so I can be of limited help. odbccp32.lib appears in the list of Additional Dependencies in \VC\VCProjectDefaults\CoreWin.vsprops but not in my express version. You could try removing it and restarting Visual Studio (or maybe there is something in your version's IDE to do this), but this may affect some of your other programs. Alternatively, you could add odbccp32.lib to each project's Properties Configuration Properties/Linker/Input/Ignore Specific Library. The other warnings can be ignored. (There are fewer than there were.). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143,1,['Log'],['Logged']
Testability,Logged In: NO . Original bug report still valid. Rev 2509. However I had to revert Makefile.PL to Rev 2301. Otherwise I got:; Can't build and link to 'openbabel'. - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780268,1,['Log'],['Logged']
Testability,Logged In: NO . Please attach an input file exhibiting the bug... Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781072:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781072,1,['Log'],['Logged']
Testability,"Logged In: NO . Presumably this is the same as bug [ 1497456 ] InChI 0D stereo descriptor wrong, although this has a nice test case. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: NO . Probably this is caused by selection in file. Openbabel converts this file when the selection is removed. selection PLANE 3; selectatom 34 molecule 1; selectatom 28 molecule 1; selectatom 29 molecule 1; endselection PLANE. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780880:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780880,1,['Log'],['Logged']
Testability,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138,1,['Log'],['Logged']
Testability,"Logged In: NO . Should component-level grouping be functional in the current ; SMARTS implementation, or is it still in development?; I'm asking because if I search an sd file with a pattern like ; '([#6]).([#6])' (=2 carbons which are part of different ; components) obgrep will also return methane (obviously ; hitting the same carbon atom twice). Christian . Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151,1,['Log'],['Logged']
Testability,"Logged In: NO . Similarly a ""\n"" is added to the end of an InChI. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263,1,['Log'],['Logged']
Testability,Logged In: NO . Thanks for looking into this. Sorry if it's been a red herring. It's possible that I could be getting a bit mixed up as the cinfony Pybel and the openbabel Pybel are a bit out of synch (the cinfony one is a week older than the release). I will download and test the released openbabel Pybel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793479:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793479,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: NO . The SWIG interface file (openbabel-ruby.i) seems to come from that of perl. OBFingerprint may have been omitted as it caused compilation error. (Perl interface also seems to lack the support of OBFingerprint, though I can't confirm) When I tried compiling uncommented file, it failed. This problem is obviously not from ruby scripts, but from SWIG interface file. Although I can't help you correcting this bug as I don't know about SWIG, I can eagerly do the testing-related stuffs, etc. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793411:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793411,2,"['Log', 'test']","['Logged', 'testing-related']"
Testability,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026,1,['Log'],['Logged']
Testability,"Logged In: NO . The resolution was simply ""nothing to fix"". At the time I felt strongly they should be identical to Daylight. Now I realise this isn't so important. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788,1,['Log'],['Logged']
Testability,"Logged In: NO . The same segfault occurs here. The same problem occured for torsions. The problem is that the atoms and bonds are changed, but the AngleData and TorsionData is not.; To fix this I added. DeleteData(OBGenericDataType::AngleData);; DeleteData(OBGenericDataType::TorsionData);. to the end of OBMol::operator=. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205,1,['Log'],['Logged']
Testability,"Logged In: NO . There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599,1,['Log'],['Logged']
Testability,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870,1,['Log'],['Logged']
Testability,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010,1,['Log'],['Logged']
Testability,"Logged In: NO . These 'extra' functions are in the Boost header library, AFAIK. They must be included with GCC4. Could one of the C++ gurus please explain update the Configure and Makefile if Boost is required with GCC3.4.x? Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199,1,['Log'],['Logged']
Testability,"Logged In: NO . This happens quite commonly, actually for nearly 25% of the smiles strings i try to convert . Nc1ccc(cc1)OCC(O)C[n+]1ccccc1. john_sullivan@hms.harvard.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118,1,['Log'],['Logged']
Testability,Logged In: NO . Two quick suggestions that might help us to help you... (1) Does this also occur for the latest development snapshot of OpenBabel 2.1.0?...(available under downloads from http://sf.net/projects/openbabel); (2) Can you attach the input file?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879,1,['Log'],['Logged']
Testability,"Logged In: NO . Um, actually, perhaps buffer[BUFF_SIZE-1] = '\0'; would; be rather better. MJR. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876,1,['Log'],['Logged']
Testability,"Logged In: NO . Update: the 1/10/03 CVS version seems to correctly protonate; all; standard amino acid residues except:. HIS: missing a proton on 5-membered ring; TRP: missing a proton on 5-membered ring; PRO: missing all bonds in 5-membered ring, protons correct; ARG: C=N double bond in wrong place. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471,1,['Log'],['Logged']
Testability,"Logged In: NO . Using OpenBabelGUI under Windows XP. In the box underneath the text ""Output below"" (where it normally says the number of molecules converted) - lots of text flashed in this box and then it stopped but left part of the SMARTS string in this box. Then the screen went white, and could only close by opening task manager, and using End now (about three times as OpenBabel wasn't responding) The input file was huge 168meg.; Thanks for your quick response,; Mandy. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255,1,['Log'],['Logged']
Testability,"Logged In: NO . What's the equivalent C++ code?. And shouldn't map.front() return NULL if there are no; elements or better still, raise an Exception, rather than; segfaulting?. Python uses an Easier to Ask Forgiveness Than Permission; philosophy rather than Look Before You Leap. So catching; exceptions is seen as better than using if statements, which; may/may not catch the problem. Regards,; Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828,1,['Log'],['Logged']
Testability,"Logged In: NO . Whoops. Sorry, I pressed Submit too early. ; Anyway, the xyz file, attached to the bug report, gives the following ; output for direct conversion to bgf: . BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 HC 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O3 1 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 HC 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 HC 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O3 1 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C3 1 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86071 HC 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 4 5 3; ORDER 6 1 1 1 1; CONECT 7 2; ORDER 7 1; END. Note that the types (i.e. C3 HC O3) are NOT correct. ; When I first convert the xyz to sdf and then from sdf to bgf I get the ; correct output:. BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 H_ 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O_3 2 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 H_ 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 H_ 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O_3 2 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C_3 4 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86070 H_ 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 3 4 5; ORDER 6 1 1 1 1; CONECT 7 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911,1,['Log'],['Logged']
Testability,"Logged In: NO . Yes - you're absolutely right. I recently resolved this in Jybel, but didn't think there was any need to put it into Pybel. Turns out I was wrong. I will do as soon as possible, but I am away until Tuesday. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875,1,['Log'],['Logged']
Testability,"Logged In: NO . build it today without problems, must have been some kind of ; stability issues on friday, since i also had some problems ; with open office crashing later that evening. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970,1,['Log'],['Logged']
Testability,"Logged In: NO . diff -ur openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp openbabel-2.2.0b4/src/formats/mopacformat.cpp; --- openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp	2008-05-28 10:32:53.000000000 +0400; +++ openbabel-2.2.0b4/src/formats/mopacformat.cpp	2008-05-30 01:16:37.000000000 +0400; @@ -80,7 +80,7 @@; mol.BeginModify();; while	(ifs.getline(buffer,BUFF_SIZE)); {; - if(strstr(buffer,""CARTESIAN COORDINATES"") != NULL); + if(strstr(buffer,"" CARTESIAN COORDINATES"") != NULL); {; // mol.EndModify();; mol.Clear();. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087,1,['Log'],['Logged']
Testability,Logged In: NO . ernst-georg.schmid@bayerbbs.com. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086,1,['Log'],['Logged']
Testability,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,1,['Log'],['Logged']
Testability,Logged In: NO . submitted by Richard Gillilan. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439,1,['Log'],['Logged']
Testability,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035,6,"['Log', 'Test', 'test']","['Logged', 'Test', 'test']"
Testability,Logged In: NO . try to do /bin/sh obgrep '!c' then the negation operator ; shouldn't be overrided by the system. Fabien. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108,1,['Log'],['Logged']
Testability,"Logged In: NO . update: have found fixes to all problems in this report,; none involved ; changes in code. In phmodel.txt:. HIS: can add missing hydrogen via; TRANSFORM [nD2:1]1c[nD2]cc1 &gt;&gt; [n+:1]1c[nD2]cc1; The real root of the problem here is that HIS in; nonionized form has; two tautomers (the proton may be on either nitrogen). ; Both occur in; nature though one is favored. . TRP: can add missing hydrogen via; TRANSFORM [nD2:1]1cccc1 &gt;&gt; [n+:1]1cccc1; (this last fix is not fully general and may mess up other; assignments,; so I have not checked it in). ARG: bond orders in resdata.txt are incorrect for RES ARG. Richard Gillilan. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1031385. I have tried to build the Fingerprinter in OpenBabel. I came; up with a version how should I post the code for testing ?. What should I do next to submit the code?. Thanks; Tharun. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850,2,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=1031385. Is any work being done on creating Canonical Smiles using; OpenBabel. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1031385. The current version of the fingerprinter will accept; canonical smiles to generate finger prints. As I did not see; OpenBabel has any feature to get canonical smiles, This work; will be incomplete until the canonicalization is done. Original comment by: tallu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=104300; Originator: NO. Confirmed the weird Makefile issue. I don't know if this is a bug in make (or a feature :>) but removing the weird file helps. There are some other files like that as well:; $ find . -name ""._*"" | xargs file; ./src/math/._matrix3x3.cpp: AppleDouble encoded Macintosh file; ./src/math/._spacegroup.cpp: AppleDouble encoded Macintosh file; ./src/math/._transform3d.cpp: AppleDouble encoded Macintosh file; ./src/fingerprints/._finger3.cpp: AppleDouble encoded Macintosh file; ./src/forcefields/._Makefile.am: AppleDouble encoded Macintosh file; ./src/._fingerprint.cpp: AppleDouble encoded Macintosh file; ./src/._mol.cpp: AppleDouble encoded Macintosh file; ./src/formats/._Makefile.am: AppleDouble encoded Macintosh file; ./src/formats/xml/._Makefile.am: AppleDouble encoded Macintosh file; ./src/._obiter.cpp: AppleDouble encoded Macintosh file; ./data/._aromatic.txt: AppleDouble encoded Macintosh file; ./data/._types.txt: AppleDouble encoded Macintosh file; ./data/._psa.txt: AppleDouble encoded Macintosh file; ./data/._fragments.txt: AppleDouble encoded Macintosh file; ./data/._logp.txt: AppleDouble encoded Macintosh file; ./data/._space-groups.txt: AppleDouble encoded Macintosh file; ./data/._isotope-small.txt: AppleDouble encoded Macintosh file; ./data/._element.txt: AppleDouble encoded Macintosh file; ./data/._SMARTS_InteLigand.txt: AppleDouble encoded Macintosh file; ./data/._isotope.txt: AppleDouble encoded Macintosh file; ./data/._UFF.prm: AppleDouble encoded Macintosh file; ./data/._resdata.txt: AppleDouble encoded Macintosh file; ./data/._torlib.txt: AppleDouble encoded Macintosh file; ./data/._ringtyp.txt: AppleDouble encoded Macintosh file; ./data/._bondtyp.txt: AppleDouble encoded Macintosh file; ./data/._patterns.txt: AppleDouble encoded Macintosh file; ./scripts/._openbabel-java.i: AppleDouble encoded Macintosh file; ./scripts/perl/._Makefile.PL: AppleDouble encoded Macintosh file; ./scripts/._openbabel-perl.i: Appl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: NO. beta4 doesn't crash anymore. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780418:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780418,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: YES. My mistake. Obviously it's python bindings. Sorry. Summary fixed. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780562:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780562,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: YES. Relevant Fedora bugreport:. https://bugzilla.redhat.com/show_bug.cgi?id=427700. Relevant gcc bugreport:. http://gcc.gnu.org/PR34708. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780560:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780560,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: NO. Similar problem on m68k autobuilders of the Debian project. If this file could be split, this would help a lot:; http://buildd.debian.org/fetch.cgi?pkg=openbabel;ver=2.1.1-1;arch=m68k;stamp=1193495674. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780567:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780567,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1102637; Originator: NO. This has already been fixed in SVN. Original comment by: dleidert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780591:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780591,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1102637; Originator: NO. This has been fixed in the SVN (to my knowledge). Should be closed. Original comment by: dleidert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: YES. I don't know if hardcoding the binary name is a good idea. One can change the binary name via the configure options --program-prefix, --program-suffix or --program-transform-name. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: YES. The good news: You already have man-pages for obminimize, obenergy and obrotamer in your SVN. The bad news: You don't ship nor install them :) They are not part of man_MANS in doc/Makefile.am. The fix is pretty simple and I attach it. However, a man-page for rountrip is missing and it would be nice, if you could ship one.; File Added: 1900675_patch.diff. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1155272. Besides its beta anyway. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1155272. Thank You, I tried doing a yahoo search for it and could not; figure out where I could get it. Sometimes these things happen. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1155272. more specifically libinchi.dll when I run it. Original comment by: ilikesci,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. A possible solution to this is to give OBGenericData a; virtual GetValue function returning a std::string. Calling; GetValue on a OBGenericData pointer to a OBPairData object; would use the OBPairData function. The base class version; actually returns the Attribute, which was easier than making; it return an empty string, which would look neater, but it; should never be called. This solution is not very elegant, making OBGenericData just; a little bit less generic. But it isn't too bad - lots of; classes might find returning a string value useful - and I; hope gets the job done. (OBCommentData has a GetData; function - I'll make its virtual GetValue do the same.) . I've added the required code to generic.h in SVN. I can't; test with Python since we still lack a Windows version. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615. Are you going to attach the file?. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Attached file!. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Corrected in HEAD code in Jan 2006. Example file now; converted ok.; Status made pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I agree but would go further. There is little point in; storing data which is easily computed. The contamination of; OBGenericData was one reason why I bypassed GetFormula(); with GetSpacedFormula(). . I would propose to change the code so that RingData and ; Formula do not store here. Chiral data should also not be; stored here (as I keep saying without doing anything) and; maybe not z-matrix stuff either. . Broadly, OBGenericData should contain:; meta-data comments, IDs, sources, methods, etc.; extra chemical information - e.g crystal properties,; energies, spectra and all those comp chem things I don't; uderstand.; and, if really necessary, any data which takes more than a; second to calculate or requires an external program. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615. I have committed code to smilesformat.cpp in the SVN HEAD; (will be v2.1) to give a warning with the illegal aromatic; elements b [si] [ge] [sb] [bi] [te] [sn] but accept them.; The resulting molecule may or may not be what be what was; expected (caveat emptor). . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I'm afraid I don't understand what std::map<> you mean. The; call to OBMol::Center I was observing to be successful is at; line 70 of transform.cpp. ; babel some2Dmolecule.mol -omol -c; will exercise it.; Is your OBMol fully constructed? I have found this to be a; cause for strange failures of API functions in other cases. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I'm sorry about the missing file; I attach it here. It ; being Windows only it seems to have slipped through the ; cracks; I'm sure Geoff will make sure it is included in ; the next release of source code. Visual C++ 2005 Express (the free version) can update VC6 ; dsp files ok, but I haven't tried the intermediate 2002 ; and 2003 versions. It would be helpful if you could ; provide the build files for these versions when you ; succeed in building them. If you can manage with the command line version, there are ; fewer things to go wrong when building OBabel, the ; standalone exe project. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I've reopened this. Only preliminary work in 2.1.0 HEAD; files has been done as yet. I'll try to finish the job so; that all the OBGeneric data is copied with an OBMol. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. If all the atoms (or even all the non-H atoms) have 3D ; coordinates surely the stereochemistry *is* defined, so that ; this isn't a bug. If it were a 2D molecule, stereo centres could ; or could not be be defined which would be relected in ; theSMILES output. So what seems to be required is to be ; able to input a molecule with 3D coordinates *and* 2D stereo ; specifications, and to ignore the z coordinates. This is a ; feature request. . Many parts of the sdf/mol format (including I think undefined ; stereo) are concerned with molecular querying, and at ; present OpenBabel doesn't convert molecules of this kind ; (with defined uncertainties). For example it converts mol to ; SMILES not SMARTS. To do this would be another ; reasonable feature request.; ; Having said all this, there does seem to be a bug with ; SMILES sometimes generating spurious stereo centres from ; 2D molecules. This occurs with the attached file (posted by ; Reinhard Dunkel on the InChI form for another purpose). Is the original problem file similar to this? It would be helpful if ; it was posted. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Now corrected in CVS. I found it necessary to include a ; third place (in FullConvert()) where the zip/unzip streams ; are made. It's a pity that all these elegant features ; interact! . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. OBMol::Center() is working with the SVN HEAD code for me, at; least when called from OBMol::DoTransformations as part of; the normal conversion process (-c option). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303,1,['Log'],['Logged']
